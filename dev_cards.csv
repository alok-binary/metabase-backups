archived,cache_ttl,collection,collection_id,collection_position,created_at,creator,creator_id,database_id,dataset_query,description,display,embedding_params,enable_embedding,favorite,id,made_public_by_id,name,public_uuid,query_type,read_permissions,result_metadata,table_id,updated_at,visualization_settings
False,,"{'id': 188, 'name': '-- Japan', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': '___japan'}",188.0,,2019-04-09 09:40:22.709,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Japan > Failed Trades\nWITH param as (\n    SELECT\n      '2016-10-15 06:00'::TIMESTAMP as start_time,\n\t    '2016-10-21 06:00'::TIMESTAMP as end_time,\n      null as client_loginid\n      --'JP1030'::TEXT as client_loginid\n)\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM fdw.japan_rejected_trades((SELECT start_time FROM param)::TIMESTAMP, (SELECT end_time FROM param)::TIMESTAMP, (SELECT client_loginid FROM param)::TEXT)""}}",Japan > Failed Trades,table,,False,False,861,,-- Japan Failed Trades,,native,,,,2019-04-09 09:40:22.709,{}
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:12:52.160,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"", Count(Distinct(users.""Login"")) AS Number_of_CLients\nfrom mt5_users users\nJOIN mt5_deals_2019 deals ON deals.""Login"" = users.""Login""\nwhere users.""Group"" LIKE \'%maltainves%\' -- Change this for the Group you want (in case of MF something like malta_invest)""\nand deals.""Action"" = 2 and deals.""Profit"" > 0 -- Actions for a deposit\ngroup by users.""Country"", to_char(deals.""Time"",\'Mon\')\n'}}",,bar,,False,False,299,42.0,1) Total number of funded client accounts,8b1aa605-434c-4f71-9b50-e0c60276adb7,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.666666666666667}}}}, {'name': 'number_of_clients', 'display_name': 'Number Of Clients', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 8.0, 'avg': 2.333333333333333, 'sd': 2.38683256575942, 'q1': 1.0, 'q3': 3.0}}}}]",,2019-02-05 15:40:52.185,"{'graph.dimensions': ['Country', 'month'], 'graph.metrics': ['number_of_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-25 13:32:17.454,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"", Count(Distinct(users.""Login"")) AS Number_of_CLients\nfrom mt5_users users\nJOIN mt5_deals_2018 deals ON deals.""Login"" = users.""Login""\nwhere users.""Group"" LIKE \'%maltainves%\' -- Change this for the Group you want (in case of MF something like malta_invest)""\nand deals.""Action"" = 2 and deals.""Profit"" > 0 -- Actions for a deposit\ngroup by users.""Country"", to_char(deals.""Time"",\'Mon\')\n'}}","Please report numbers for all funded client accounts (accounts with a balance) on the last day of the month in question, even if the funding on the account is too low to support a new position. If an account is not funded on the last day of the month in question, it should not be included in the total.",bar,,False,False,241,42.0,1) Total number of funded client accounts ,29d030ba-90b0-49f5-a602-17eb3449ceb7,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.816326530612245}}}}, {'name': 'number_of_clients', 'display_name': 'Number Of Clients', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 18.0, 'avg': 2.3469387755102042, 'sd': 2.8471551620884323, 'q1': 1.0, 'q3': 2.775255128608411}}}}]",,2019-04-10 09:01:36.932,"{'graph.dimensions': ['Country', 'month'], 'graph.metrics': ['number_of_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:14:25.986,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(to_timestamp (M::text, \'MM\'), \'TMmon\') as M,\n       Country,\n       SUM(ProfitEquity) \n  FROM\n(SELECT\n  date_part(\'year\', to_timestamp(daily.""Datetime"")) as Y\n  ,date_part(\'month\',to_timestamp(daily.""Datetime"")) as M\n  ,users.""Country"" as Country\n  ,daily.""ProfitEquity"" as ProfitEquity\n  ,rank() OVER (PARTITION BY date_part(\'year\',to_timestamp(daily.""Datetime"")),date_part(\'month\',to_timestamp(daily.""Datetime"")) ORDER BY to_timestamp(daily.""Datetime"") DESC) as is_day_in_month\nFROM mt5_daily_2019 daily\nJOIN mt5_users users ON daily.""Login"" = users.""Login""\nWHERE  users.""Group"" LIKE \'%maltainves%\') a\nWHERE a.is_day_in_month =1\nGROUP BY a.M, a.Country\nORDER BY 3\n'}}",,bar,,False,False,300,42.0,2) Total net client equity - in EURO (â‚¬) equivalent - for the accounts reported at Q.1.,2788a01a-7f4b-4018-ac2e-21f5be00cc1d,native,,"[{'name': 'm', 'display_name': 'M', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.791666666666667}}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 33, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 3996.45, 'avg': 259.50208333333336, 'sd': 659.8254691704626, 'q1': 0.007725358565632, 'q3': 117.45518411812776}}}}]",,2019-03-11 07:40:52.192,"{'graph.dimensions': ['country', 'm'], 'graph.metrics': ['sum']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-25 15:56:10.559,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(to_timestamp (M::text, \'MM\'), \'TMmon\') as M,\n       Country,\n       SUM(ProfitEquity) \n  FROM\n(SELECT\n  date_part(\'year\', to_timestamp(daily.""Datetime"")) as Y\n  ,date_part(\'month\',to_timestamp(daily.""Datetime"")) as M\n  ,users.""Country"" as Country\n  ,daily.""ProfitEquity"" as ProfitEquity\n  ,rank() OVER (PARTITION BY date_part(\'year\',to_timestamp(daily.""Datetime"")),date_part(\'month\',to_timestamp(daily.""Datetime"")) ORDER BY to_timestamp(daily.""Datetime"") DESC) as is_day_in_month\nFROM mt5_daily_2018 daily\nJOIN mt5_users users ON daily.""Login"" = users.""Login""\nWHERE  users.""Group"" LIKE \'%maltainves%\') a\nWHERE a.is_day_in_month =1\nGROUP BY a.M, a.Country\nORDER BY 3\n'}}","Figures should be for the last day of the month in question. The total should include all money held as cash as well as equity in open CFD positions. This should be based on 'marked-to-market' valuations i.e. what would be the client's cash position if all CFDs were liquidated on the last trading day of that month. If your records are in another currency, please convert to â‚¬ using the relevant month end marked-to-market FX rates (see ECB FX Reference Rates).",bar,,False,False,242,42.0,2) Total net client equity - in EURO (â‚¬) equivalent - for the accounts reported at Q.1.,add5c99b-42da-462d-ae7b-64a9652f6053,native,,"[{'name': 'm', 'display_name': 'M', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.773584905660377}}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 44, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1921.11, 'avg': 112.11103773584907, 'sd': 282.4976956768362, 'q1': 0.0, 'q3': 50.28}}}}]",,2019-02-06 10:38:07.190,"{'graph.metrics': ['sum'], 'graph.dimensions': ['country', 'm'], 'table.column_widths': [None, 38], 'stackable.stack_type': None}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:15:16.425,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"", Count(Distinct(users.""Login"")) AS Number_of_CLients\r\nfrom mt5_users users\r\nJOIN mt5_deals_2019 deals ON deals.""Login"" = users.""Login""\r\nand users.""Group"" LIKE \'%maltainves%\' -- Change this for the Group you want (in case of MF something like malta_invest)""""\r\nand deals.""Action"" IN (0,1)\r\ngroup by users.""Country"", to_char(deals.""Time"",\'Mon\')'}}",,bar,,False,False,301,42.0,3) Number of active client accounts during period,10ae6ff3-27b6-489b-9769-f9862bc39729,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.666666666666667}}}}, {'name': 'number_of_clients', 'display_name': 'Number Of Clients', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 7.0, 'avg': 2.111111111111111, 'sd': 1.711170527785994, 'q1': 1.0, 'q3': 2.76393202250021}}}}]",,2019-02-22 11:16:12.423,"{'graph.dimensions': ['Country', 'month'], 'graph.metrics': ['number_of_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-28 14:33:17.908,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"", Count(Distinct(users.""Login"")) AS Number_of_CLients\r\nfrom mt5_users users\r\nJOIN mt5_deals_2018 deals ON deals.""Login"" = users.""Login""\r\nand users.""Group"" LIKE \'%maltainves%\' -- Change this for the Group you want (in case of MF something like malta_invest)""""\r\nand deals.""Action"" IN (0,1)\r\ngroup by users.""Country"", to_char(deals.""Time"",\'Mon\')'}}",Please insert the number of client accounts in which at least one trade was executed or an open position was revalued during the relevant period. Funded client accounts where there are no trades or 'marked-to-market' revaluation of an open position during the relevant period should not be taken into account.,bar,,False,False,251,42.0,3) Number of active client accounts during period,e8dfcf15-f72e-4b12-9021-dbf291c350db,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'number_of_clients', 'display_name': 'Number Of Clients', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 6.0, 'avg': 1.90625, 'sd': 1.227622275625895, 'q1': 1.0, 'q3': 2.666666666666666}}}}]",,2019-02-22 05:38:14.766,"{'stackable.stack_type': None, 'graph.dimensions': ['Country', 'month'], 'graph.metrics': ['number_of_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:17:57.462,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select to_char(users.""Registration"",\'Mon\') AS Month, users.""Country"", Count(Distinct(users.""Login"")) AS Number_of_CLients\r\nfrom mt5_users users\r\nwhere users.""Group"" LIKE \'%maltainves%\' -- Change this for the Group you want (in case of MF something like malta_invest)""\r\nand date(users.""Registration"") >= \'2019-01-01\'\r\ngroup by users.""Country"", to_char(users.""Registration"",\'Mon\')'}}",,bar,,False,False,302,,4) Number of client accounts opened during period.,,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.518518518518518}}}}, {'name': 'number_of_clients', 'display_name': 'Number Of Clients', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 36.0, 'avg': 3.814814814814815, 'sd': 6.878265865066667, 'q1': 1.0, 'q3': 3.361508017525783}}}}]",,2019-02-14 06:12:41.490,"{'graph.dimensions': ['Country', 'month'], 'graph.metrics': ['number_of_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-28 15:42:21.535,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select to_char(users.""Registration"",\'Mon\') AS Month, users.""Country"", Count(Distinct(users.""Login"")) AS Number_of_CLients\r\nfrom mt5_users users\r\nwhere users.""Group"" LIKE \'%maltainves%\' -- Change this for the Group you want (in case of MF something like malta_invest)""\r\nand date(users.""Registration"") < \'2019-01-01\'\r\ngroup by users.""Country"", to_char(users.""Registration"",\'Mon\')'}}",Number of new client accounts opened during period. Please ignore the opening of client accounts of clients due to the introduction of the measures (e.g. closure of an account and re-opening of a new account subsequently),bar,,False,False,252,42.0,4) Number of client accounts opened during period.,fb8b9b55-e95f-4ada-a79b-7c60c3a36bc8,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.611111111111111}}}}, {'name': 'number_of_clients', 'display_name': 'Number Of Clients', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 47.0, 'avg': 4.402777777777778, 'sd': 7.218247070225787, 'q1': 1.046265333752747, 'q3': 4.522774424948339}}}}]",,2019-02-05 13:41:49.809,"{'stackable.stack_type': None, 'graph.dimensions': ['Country', 'month'], 'graph.metrics': ['number_of_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:24:08.952,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select to_char(users.""Registration"",\'Mon\') AS Month, users.""Country"", Count(Distinct(users.""Login"")) AS Number_of_CLients\nfrom mt5_users users\nwhere users.""Group"" LIKE \'%maltainves%\' -- Change this for the Group you want (in case of MF something like malta_invest)""\nand date(users.""Registration"") >= \'2019-01-01\'\nand date(users.""Registration"") < \'2020-01-01\'\ngroup by users.""Country"", to_char(users.""Registration"",\'Mon\')\n'}}",,bar,,False,False,304,42.0,4) Number of client accounts opened during period.,98a7bb06-f40e-4f86-adad-1a6ec9e5b522,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.518518518518518}}}}, {'name': 'number_of_clients', 'display_name': 'Number Of Clients', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 36.0, 'avg': 3.814814814814815, 'sd': 6.878265865066667, 'q1': 1.0, 'q3': 3.361508017525783}}}}]",,2019-02-14 06:12:39.533,"{'graph.dimensions': ['Country', 'month'], 'graph.metrics': ['number_of_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-29 11:26:19.554,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select to_char(users.""Registration"",\'Mon\') AS Month, users.""Country"", Count(Distinct(users.""Login"")) AS Number_of_CLients\r\nfrom mt5_users users\r\nwhere (users.""Rights""::integer & 40 ) = 0 --  If result = 0 then the Account is disabled\r\nand users.""Group"" LIKE \'%maltainves%\' -- Change this for the Group you want (in case of MF something like malta_invest)""\r\nand date(users.""Registration"") < \'2019-01-01\'\r\ngroup by users.""Country"", to_char(users.""Registration"",\'Mon\')'}}",Number of client accounts closed during period (this does not refer to transactions but to the actual trading accounts themselves),bar,,False,False,259,42.0,5) Number of client accounts closed during period.,de1b9f59-964d-48a8-87a4-fb11350fdf3c,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'number_of_clients', 'display_name': 'Number Of Clients', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-05 13:53:04.951,"{'graph.dimensions': [None], 'graph.metrics': [None]}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:22:44.795,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select to_char(users.""Registration"",\'Mon\') AS Month, users.""Country"", Count(Distinct(users.""Login"")) AS Number_of_CLients\r\nfrom mt5_users users\r\nwhere (users.""Rights""::integer & 40 ) = 0 --  If result = 0 then the Account is disabled\r\nand users.""Group"" LIKE \'%maltainves%\' -- Change this for the Group you want (in case of MF something like malta_invest)""\r\nand date(users.""Registration"") >= \'2019-01-01\'\r\nand date(users.""Registration"") < \'2020-01-01\'\r\ngroup by users.""Country"", to_char(users.""Registration"",\'Mon\')'}}",,bar,,False,False,303,42.0,5) Number of client accounts closed during period.,6e65674f-4263-4eaf-a128-6e1cbef9651a,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'number_of_clients', 'display_name': 'Number Of Clients', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-01 13:26:38.062,"{'graph.dimensions': [None], 'graph.metrics': [None]}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:27:42.986,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""\r\n\r\n'}}",,bar,,False,False,305,42.0,"6) Total volume of trades by clients, for CFDs of any underlying asset class (all CFDs) in EURO (â‚¬).",26611770-0958-4e9e-bdc2-b04a912a3958,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.666666666666667}}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0.0}, 'type': {'type/Number': {'min': 521.3682789111746, 'max': 262747.19973756286, 'avg': 41391.812883980536, 'sd': 68553.32411019855, 'q1': 3161.8931653961486, 'q3': 23126.760522681812}}}}]",,2019-02-12 14:05:54.387,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['exposure']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-29 11:19:44.775,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2018 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""\r\n\r\n'}}","The gross notional volume of all CFD orders (across all asset types, including cryptocurrencies) opened by clients within the relevant period. In other words, please give the sum of the total exposure of all CFDs opened by clients during the relevant period. Only the opening of CFDs should be taken into account, not the closure of CFDs i.e. a gross figure is asked for. Please provide a numeric answer based on â‚¬ notional. If your firm records are in another base currency please provide convert basis month end 'marked-to-market' exchange rates in order to provide a â‚¬ equivalent numeric response.",bar,,False,False,258,42.0,"6) Total volume of trades by clients, for CFDs of any underlying asset class (all CFDs) in EURO (â‚¬).",76d71ed3-e80b-4279-bd8a-111708b32f24,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.03225806451613}}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 31, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.014334627603247002, 'max': 381758.16535253683, 'avg': 67800.790292993, 'sd': 95993.97716030326, 'q1': 3679.941931827181, 'q3': 74989.09014937055}}}}]",,2019-02-06 10:44:51.173,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['exposure']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-29 11:36:39.558,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2018 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" in (\'AUDCAD\',\'AUDCHF\',\'AUDJPY\',\'AUDNZD\',\'AUDUSD\',\'EURAUD\',\'EURCAD\',\'EURCHF\',\'EURGBP\',\'EURJPY\',\'EURNZD\',\'EURUSD\',\'GBPCHF\',\'GBPJPY\',\'GBPUSD\',\'NZDUSD\',\'USDCAD\',\'USDCHF\',\'USDJPY\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",,bar,,False,False,260,42.0,"7) Total volume of trades by clients, major FX CFDs",de38a17b-083f-4361-98f9-a47445a17a8e,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.142857142857142}}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1114.305453410889, 'max': 367188.58775144175, 'avg': 70000.20655365058, 'sd': 94507.2698259657, 'q1': 5541.267773813008, 'q3': 73819.8822023161}}}}]",,2019-02-22 05:38:44.163,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['exposure']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:28:17.685,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" in (\'AUDCAD\',\'AUDCHF\',\'AUDJPY\',\'AUDNZD\',\'AUDUSD\',\'EURAUD\',\'EURCAD\',\'EURCHF\',\'EURGBP\',\'EURJPY\',\'EURNZD\',\'EURUSD\',\'GBPCHF\',\'GBPJPY\',\'GBPUSD\',\'NZDUSD\',\'USDCAD\',\'USDCHF\',\'USDJPY\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",,bar,,False,False,306,42.0,"7) Total volume of trades by clients, major FX CFDs",1ec5dbb1-69db-4e75-91e7-0f3b9cbbda2e,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.555555555555555}}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1758.7133329809458, 'max': 261014.5662229201, 'avg': 64840.08987658481, 'sd': 90876.75716042273, 'q1': 7108.5248774235615, 'q3': 124167.42831500682}}}}]",,2019-02-01 14:20:30.333,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['exposure']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:28:56.077,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" in (\'CADCHF\',\'CADJPY\',\'EURNOK\',\'EURPLN\',\'EURSEK\',\'GBPAUD\',\'GBPCAD\',\'GBPNOK\',\'GBPNZD\',\'GBPSEK\',\'NZDCAD\',\'NZDJPY\',\'USDCNH\',\'USDMXN\',\'USDNOK\',\'USDPLN\',\'USDSEK\',\'USDZAR\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",,bar,,False,False,307,42.0,"8) Total volume of trades by clients, minor FX CFDs",0ca4ddad-07a8-426e-89d4-7ac4a1da1081,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.333333333333333}}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 587.4336200009399, 'max': 6888.319653231236, 'avg': 3147.5352107835693, 'sd': 3312.2198293744136, 'q1': 932.2883047803375, 'q3': 5657.952829703059}}}}]",,2019-02-01 14:21:29.261,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['exposure']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-29 11:41:26.395,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2018 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" in (\'CADCHF\',\'CADJPY\',\'EURNOK\',\'EURPLN\',\'EURSEK\',\'GBPAUD\',\'GBPCAD\',\'GBPNOK\',\'GBPNZD\',\'GBPSEK\',\'NZDCAD\',\'NZDJPY\',\'USDCNH\',\'USDMXN\',\'USDNOK\',\'USDPLN\',\'USDSEK\',\'USDZAR\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",,bar,,False,False,261,42.0,"8) Total volume of trades by clients, minor FX CFDs",734279b4-ac28-4dc4-9441-fd3bc608c98d,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.416666666666667}}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Number': {'min': 857.5299706724751, 'max': 28669.185197520506, 'avg': 8285.124193714299, 'sd': 8605.15714583233, 'q1': 1539.1432772841454, 'q3': 14679.648893169344}}}}]",,2019-02-06 10:55:47.597,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['exposure']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-29 11:44:13.580,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2018 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" in (\'DAX_30\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",We have just one major - DAX_30,bar,,False,False,262,42.0,"9) Total volume of trades by clients, major indices CFDs",954c2a83-a0de-4e1c-aac9-7e4d9f6bda4d,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-05 14:02:33.391,"{'table.pivot_column': 'month', 'graph.dimensions': [None], 'graph.metrics': [None]}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:29:46.189,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" in (\'DAX_30\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",,bar,,False,False,308,42.0,"9) Total volume of trades by clients, major indices CFDs",02cac174-8d33-4fc7-b39c-78f739a79d1e,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-01 13:29:56.304,"{'graph.dimensions': [None], 'graph.metrics': [None]}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:30:20.686,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" in (\'NONE\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",,bar,,False,False,309,42.0,"_10) Total volume of trades by clients, minor indices CFDs",8d7fd7ff-7d57-4cc1-93b7-1a6b1d7f79aa,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-01 13:30:05.219,"{'table.pivot_column': 'month', 'graph.dimensions': [None], 'graph.metrics': [None]}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-29 11:45:05.256,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2018 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" in (\'NONE\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",We have no minor indices,bar,,False,False,263,42.0,"_10) Total volume of trades by clients, minor indices CFDs",ce7f63e4-c54d-4804-86e7-ee5ecdeaea8b,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-05 14:02:51.017,"{'table.pivot_column': 'month', 'graph.dimensions': [None], 'graph.metrics': [None]}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-29 11:46:17.875,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2018 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" in (\'XAUUSD\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",XAUUSD is the only symbol for gold,bar,,False,False,264,42.0,"_11) Total volume of trades by clients, gold CFDs",9660d400-f7ce-4cf8-8b9f-e13585eb1e19,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.2}}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1039.3260867676322, 'max': 19854.954638902665, 'avg': 5378.283376910556, 'sd': 8125.957270490289, 'q1': 1089.5317582315702, 'q3': 7073.8089676072705}}}}]",,2019-02-06 10:57:43.601,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['exposure']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:31:28.073,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" in (\'XAUUSD\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",,bar,,False,False,310,42.0,"_11) Total volume of trades by clients, gold CFDs",e8a4bdc0-1cd6-4117-8e56-51bd067c5c70,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-01 13:30:10.451,"{'graph.dimensions': [None], 'graph.metrics': [None]}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-29 11:48:03.468,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2018 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" in (\'CL_BRENT\',\'WTI_OIL\',\'XAGUSD\',\'XPTUSD\',\'XPDUSD\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",,bar,,False,False,265,42.0,"_12) Total volume of trades by clients, commodities (other than gold) CFDs",48d087ed-24d1-42b0-a300-0ce90de00ed8,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.375}}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 37.55843662740569, 'max': 1370.1505868709253, 'avg': 536.6052795435455, 'sd': 482.2854862748424, 'q1': 63.27203152383633, 'q3': 839.5410185424239}}}}]",,2019-03-04 05:55:23.743,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['exposure']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:32:01.650,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" in (\'CL_BRENT\',\'WTI_OIL\',\'XAGUSD\',\'XPTUSD\',\'XPDUSD\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",,bar,,False,False,311,42.0,"_12) Total volume of trades by clients, commodities (other than gold) CFDs",244c6be6-f950-4f1d-93bd-afb5da149e9d,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-01 13:30:18.506,"{'graph.dimensions': [None], 'graph.metrics': [None]}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-29 11:49:01.509,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2018 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",,bar,,False,False,266,42.0,"_13) Total volume of trades by clients, cryptocurrency CFDs",ad56ded9-6387-4390-8921-904399eb5163,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.818181818181818}}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.014334627603247002, 'max': 5927.017110797789, 'avg': 1019.3534091649111, 'sd': 1802.4347587806067, 'q1': 43.74646342333587, 'q3': 1357.5979509499489}}}}]",,2019-02-06 11:04:51.125,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['exposure']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:32:34.826,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",,bar,,False,False,312,42.0,"_13) Total volume of trades by clients, cryptocurrency CFDs",6c6b0cb9-970c-4351-9583-47d2b9d604e2,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.5}}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3.5957338243604893, 'max': 965.5833494598545, 'avg': 484.5895416421075, 'sd': 680.2279664333358, 'q1': 3.5957338243604893, 'q3': 965.5833494598545}}}}]",,2019-02-01 14:21:45.710,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['exposure']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-29 11:49:54.644,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2018 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" in (\'NONE\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",So far we have NONE,bar,,False,False,267,42.0,"_14) Total volume of trades by clients, other CFDs",3da5cba8-b1ab-4e46-835b-a9c18176c7d2,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-05 14:03:42.111,"{'graph.dimensions': [None], 'graph.metrics': [None]}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:33:23.297,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, \r\n       SUM(CASE WHEN ""Symbol"" LIKE \'EUR%\' and users.""Group"" LIKE \'%maltainvest%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000)\r\n           WHEN ""Symbol"" LIKE \'GBP%\' and users.""Group"" LIKE \'%maltainvest_GBP%\'\r\n           THEN (deals.""ContractSize"")*(1/deals.""Price"")*(""Volume""/10000) \r\n           WHEN ""Symbol"" IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\r\n           THEN (deals.""ContractSize"")*(deals.""Price"")*(""Volume""/10000)*deals.""RateMargin""\r\n           ELSE (deals.""ContractSize"")*(""Volume""/10000)*deals.""RateMargin"" END) AS EXPOSURE\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Entry"" = 0 -- In Trades only\r\nand  ""Symbol"" in (\'NONE\')\r\nand ""Action"" IN (0,1)\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\nGroup by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",,bar,,False,False,313,42.0,"_14) Total volume of trades by clients, other CFDs",b1a45417-7bef-4437-9b55-8b141bc790b3,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-01 13:32:02.297,"{'graph.dimensions': [None], 'graph.metrics': [None]}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:36:53.953,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"", COUNT(deals.""Deal"")\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nwhere deals.""Action"" IN (0,1)\r\nand deals.""Entry"" = 0 -- only the Opening of a trade is considered\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\ngroup by to_char(deals.""Time"",\'Mon\'), users.""Country""\r\n  '}}",,bar,,False,False,314,42.0,"_15) Number of trades by clients, for CFDs of any underlying asset class (TOTAL).",4de976f1-f95b-4a6e-93e3-a52ac6e7528e,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.555555555555555}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 314.0, 'avg': 67.11111111111111, 'sd': 103.02966131707467, 'q1': 2.775255128608411, 'q3': 112.75}}}}]",,2019-02-01 13:32:29.669,"{'graph.dimensions': ['Country', 'month'], 'graph.metrics': ['count']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-29 11:59:26.306,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"", COUNT(deals.""Deal"")\r\nFROM mt5_deals_2018 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nwhere deals.""Action"" IN (0,1)\r\nand deals.""Entry"" = 0 -- only the Opening of a trade is considered\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\ngroup by to_char(deals.""Time"",\'Mon\'), users.""Country""\r\n  '}}",A trade is the opening of a CFD. Do not count the closing side.,bar,,False,False,268,42.0,"_15) Number of trades by clients, for CFDs of any underlying asset class (TOTAL).",c8fe8520-eba0-410e-9398-f26733e9f4f2,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.03225806451613}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 22, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 508.0, 'avg': 72.03225806451613, 'sd': 116.88697785210229, 'q1': 6.252451216018039, 'q3': 71.55051025721683}}}}]",,2019-02-05 13:44:45.181,"{'graph.dimensions': ['Country', 'month'], 'graph.metrics': ['count']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-29 12:00:29.597,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"", COUNT(deals.""Deal"")\r\nFROM mt5_deals_2018 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nwhere deals.""Action"" IN (0,1)\r\nand deals.""Entry"" = 0 -- only the Opening of a trade is considered\r\nand deals.""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\ngroup by to_char(deals.""Time"",\'Mon\'), users.""Country""\r\n  '}}",A trade is the opening of a CFD. Do not count the closing side.,bar,,False,False,269,42.0,_16) Number of trades by clients in CRYPTOCURRENCY CFDS ONLY (TOTAL).,e8ede63f-ba78-4216-b91b-af1a95a8cc2b,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.818181818181818}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 22.0, 'avg': 6.454545454545454, 'sd': 7.724812442559837, 'q1': 1.05104211917182, 'q3': 10.25}}}}]",,2019-02-05 13:46:07.286,"{'graph.dimensions': ['Country', 'month'], 'graph.metrics': ['count']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:38:15.244,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"", COUNT(deals.""Deal"")\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nwhere deals.""Action"" IN (0,1)\r\nand deals.""Entry"" = 0 -- only the Opening of a trade is considered\r\nand deals.""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\nand users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\ngroup by to_char(deals.""Time"",\'Mon\'), users.""Country""\r\n  '}}",,bar,,False,False,315,42.0,_16) Number of trades by clients in CRYPTOCURRENCY CFDS ONLY (TOTAL).,49850296-4879-4340-bcc2-72d680169b4a,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.5}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4.0, 'max': 13.0, 'avg': 8.5, 'sd': 6.363961030678928, 'q1': 4.0, 'q3': 13.0}}}}]",,2019-02-01 13:32:58.983,"{'graph.dimensions': ['Country', 'month'], 'graph.metrics': ['count']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:39:50.774,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select  open_positions.country As Country, \n       SUM(CASE WHEN open_positions.symbol_open LIKE \'EUR%\' and open_positions.group_open LIKE \'%maltainvest%\'\n           THEN (open_positions.ContractSize_open)*(1/open_positions.price_open)*(open_positions.volume_open/10000)\n           WHEN open_positions.symbol_open LIKE \'GBP%\' and open_positions.group_open LIKE \'%maltainvest_GBP%\'\n           THEN (open_positions.ContractSize_open)*(1/open_positions.price_open)*(open_positions.volume_open/10000) \n           WHEN open_positions.symbol_open IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\n           THEN (open_positions.ContractSize_open)*(open_positions.price_open)*(open_positions.volume_open/10000)*open_positions.RateMargin_open\n           ELSE (open_positions.ContractSize_open)*(open_positions.volume_open/10000)*open_positions.RateMargin_open END) AS EXPOSURE\nFROM (\n      Select date_part(\'year\',deals.""Time"") as Year_Open, to_char(deals.""Time"",\'Mon\') month_open, deals.""Time"" AS Time_Open, deals.""Login"" AS login, users.""Group"" group_open, deals.""Price"" AS price_open,\n      deals.""ContractSize"" AS ContractSize_open, users.""Country"" As Country, deals.""Volume"" AS volume_open, \n      deals.""RateMargin"" AS RateMargin_open, deals.""Symbol"" AS symbol_open, deals.""PositionID"" AS Poistion_ID_Open\n      From mt5_deals_2018 deals\n      JOIN mt5_users users ON deals.""Login"" = users.""Login""\n      where deals.""Action"" IN (0,1) \n      and deals.""Entry"" = 0\n      and users.""Group"" LIKE \'%maltainvest%\'\n      and date(deals.""Time"") < {{Time}}\n      UNION\n      Select date_part(\'year\',deals.""Time"") as Year_Open, to_char(deals.""Time"",\'Mon\') month_open, deals.""Time"" AS Time_Open, deals.""Login"" AS login, users.""Group"" group_open, deals.""Price"" AS price_open,\n      deals.""ContractSize"" AS ContractSize_open, users.""Country"" As Country, deals.""Volume"" AS volume_open, \n      deals.""RateMargin"" AS RateMargin_open, deals.""Symbol"" AS symbol_open, deals.""PositionID"" AS Poistion_ID_Open\n      From mt5_deals_2019 deals\n      JOIN mt5_users users ON deals.""Login"" = users.""Login""\n      where deals.""Action"" IN (0,1) \n      and deals.""Entry"" = 0\n      and users.""Group"" LIKE \'%maltainvest%\'\n      and date(deals.""Time"") < {{Time}}\n    ) open_positions-- These are all the open positions of Maltainvest\nLEFT JOIN ( Select date_part(\'year\',deals.""Time"") as Year_Close, to_char(deals.""Time"",\'Mon\') month_close, deals.""Time"" AS Time_Close, deals.""Login"" AS login, users.""Group"" group_close, deals.""Price"" AS price_close,\n        deals.""ContractSize"" AS ContractSize_close, deals.""Volume"" AS volume_close, \n        deals.""RateMargin"" AS RateMargin_close, users.""Country"" As Country, deals.""Symbol"" AS symbol_close, deals.""PositionID"" AS Poistion_ID_Close\n        From mt5_deals_2018 deals\n        JOIN mt5_users users ON deals.""Login"" = users.""Login""\n        where deals.""Action"" IN (0,1) \n        and deals.""Entry"" = 1\n        and users.""Group"" LIKE \'%maltainvest%\'\n        and date(deals.""Time"") < {{Time}}\n        UNION\n        Select date_part(\'year\',deals.""Time"") as Year_Close, to_char(deals.""Time"",\'Mon\') month_close, deals.""Time"" AS Time_Close, deals.""Login"" AS login, users.""Group"" group_close, deals.""Price"" AS price_close,\n        deals.""ContractSize"" AS ContractSize_close, deals.""Volume"" AS volume_close, \n        deals.""RateMargin"" AS RateMargin_close, users.""Country"" As Country, deals.""Symbol"" AS symbol_close, deals.""PositionID"" AS Poistion_ID_Close\n        From mt5_deals_2019 deals\n        JOIN mt5_users users ON deals.""Login"" = users.""Login""\n        where deals.""Action"" IN (0,1) \n        and deals.""Entry"" = 1\n        and date(deals.""Time"") < {{Time}}\n        and users.""Group"" LIKE \'%maltainvest%\') close_positions\n    ON open_positions.""poistion_id_open"" = close_positions.""poistion_id_close""\n    Where close_positions.login IS NULL \n    Group by open_positions.country', 'template-tags': {'Time': {'id': '86bf8cfa-876d-881e-7011-fb85e535b9e6', 'name': 'Time', 'display-name': 'Open Positions Up to', 'type': 'date', 'required': True, 'default': '2019-01-31'}}}}",,bar,,False,False,316,42.0,"_17) Total GROSS exposure of all client accounts on the last trading day of the month, for CFDs of any underlying asset class (TOTAL) in EURO (â‚¬)",d86cb0b2-670c-4cb6-a488-1d4c694f459f,native,,"[{'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.166666666666666}}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Number': {'min': 871.1787920234871, 'max': 10418.731219565458, 'avg': 4609.330341587297, 'sd': 3468.5317385236226, 'q1': 2548.881346435743, 'q3': 6828.083765304219}}}}]",,2019-03-15 03:26:35.798,"{'graph.dimensions': ['country'], 'graph.metrics': ['exposure']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 14:01:41.160,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select  open_positions.country As Country, \n       SUM(CASE WHEN open_positions.symbol_open LIKE \'EUR%\' and open_positions.group_open LIKE \'%maltainvest%\'\n           THEN (open_positions.ContractSize_open)*(1/open_positions.price_open)*(open_positions.volume_open/10000)\n           WHEN open_positions.symbol_open LIKE \'GBP%\' and open_positions.group_open LIKE \'%maltainvest_GBP%\'\n           THEN (open_positions.ContractSize_open)*(1/open_positions.price_open)*(open_positions.volume_open/10000) \n           WHEN open_positions.symbol_open IN (\'CL_BRENT\',\'WTI_OIL\',\'DAX_30\',\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\n           THEN (open_positions.ContractSize_open)*(open_positions.price_open)*(open_positions.volume_open/10000)*open_positions.RateMargin_open\n           ELSE (open_positions.ContractSize_open)*(open_positions.volume_open/10000)*open_positions.RateMargin_open END) AS EXPOSURE\nFROM (\n      Select date_part(\'year\',deals.""Time"") as Year_Open, to_char(deals.""Time"",\'Mon\') month_open, deals.""Time"" AS Time_Open, deals.""Login"" AS login, users.""Group"" group_open, deals.""Price"" AS price_open,\n      deals.""ContractSize"" AS ContractSize_open, users.""Country"" As Country, deals.""Volume"" AS volume_open, \n      deals.""RateMargin"" AS RateMargin_open, deals.""Symbol"" AS symbol_open, deals.""PositionID"" AS Poistion_ID_Open\n      From mt5_deals_2018 deals\n      JOIN mt5_users users ON deals.""Login"" = users.""Login""\n      where deals.""Action"" IN (0,1) \n      and deals.""Entry"" = 0\n      and users.""Group"" LIKE \'%maltainvest%\'\n      and date(deals.""Time"") < {{Time}}\n      UNION\n      Select date_part(\'year\',deals.""Time"") as Year_Open, to_char(deals.""Time"",\'Mon\') month_open, deals.""Time"" AS Time_Open, deals.""Login"" AS login, users.""Group"" group_open, deals.""Price"" AS price_open,\n      deals.""ContractSize"" AS ContractSize_open, users.""Country"" As Country, deals.""Volume"" AS volume_open, \n      deals.""RateMargin"" AS RateMargin_open, deals.""Symbol"" AS symbol_open, deals.""PositionID"" AS Poistion_ID_Open\n      From mt5_deals_2019 deals\n      JOIN mt5_users users ON deals.""Login"" = users.""Login""\n      where deals.""Action"" IN (0,1) \n      and deals.""Entry"" = 0\n      and users.""Group"" LIKE \'%maltainvest%\'\n      and date(deals.""Time"") < {{Time}}\n    ) open_positions-- These are all the open positions of Maltainvest\nLEFT JOIN ( Select date_part(\'year\',deals.""Time"") as Year_Close, to_char(deals.""Time"",\'Mon\') month_close, deals.""Time"" AS Time_Close, deals.""Login"" AS login, users.""Group"" group_close, deals.""Price"" AS price_close,\n        deals.""ContractSize"" AS ContractSize_close, deals.""Volume"" AS volume_close, \n        deals.""RateMargin"" AS RateMargin_close, users.""Country"" As Country, deals.""Symbol"" AS symbol_close, deals.""PositionID"" AS Poistion_ID_Close\n        From mt5_deals_2018 deals\n        JOIN mt5_users users ON deals.""Login"" = users.""Login""\n        where deals.""Action"" IN (0,1) \n        and deals.""Entry"" = 1\n        and users.""Group"" LIKE \'%maltainvest%\'\n        and date(deals.""Time"") < {{Time}}\n        UNION\n        Select date_part(\'year\',deals.""Time"") as Year_Close, to_char(deals.""Time"",\'Mon\') month_close, deals.""Time"" AS Time_Close, deals.""Login"" AS login, users.""Group"" group_close, deals.""Price"" AS price_close,\n        deals.""ContractSize"" AS ContractSize_close, deals.""Volume"" AS volume_close, \n        deals.""RateMargin"" AS RateMargin_close, users.""Country"" As Country, deals.""Symbol"" AS symbol_close, deals.""PositionID"" AS Poistion_ID_Close\n        From mt5_deals_2019 deals\n        JOIN mt5_users users ON deals.""Login"" = users.""Login""\n        where deals.""Action"" IN (0,1) \n        and deals.""Entry"" = 1\n        and date(deals.""Time"") < {{Time}}\n        and users.""Group"" LIKE \'%maltainvest%\') close_positions\n    ON open_positions.""poistion_id_open"" = close_positions.""poistion_id_close""\n    Where close_positions.login IS NULL \n    Group by open_positions.country', 'template-tags': {'Time': {'id': '5a38a295-0401-7a5d-ccce-91ccf50a745d', 'name': 'Time', 'display-name': 'Open Positions up to', 'type': 'date', 'required': True, 'default': '2018-08-01'}}}}","""Total (leveraged) GROSS exposure of all open CFDs across all retail client accounts i.e. absolute sum of total consideration (notional values) of all open client positions for all asset classes.
For example, suppose a client is long EUR 1,000 (notional value) in a given equity, short EUR 2,500 in a major index and long USD 10,000 in an FX CFD (e.g. USDJPY). The calculation would first convert the USD exposure into EUR (suppose the result is EUR 8,500). The total gross exposure in this case would then be the absolute sum of the individual position exposures, i.e. EUR 12,000 (= 1,000 + 2,500 + 8,500)""",bar,,False,False,295,42.0,"_17) Total GROSS exposure of all client accounts on the last trading day of the month, for CFDs of any underlying asset class (TOTAL) in EURO (â‚¬).",096de567-bae3-444a-a8ee-addb5942fee2,native,,"[{'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.8}}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 51.78821817149146, 'max': 3995.376141947956, 'avg': 1518.7882012931545, 'sd': 1484.0198039006145, 'q1': 669.8679349920315, 'q3': 2110.5723562580197}}}}]",,2019-02-06 11:15:12.587,"{'graph.dimensions': ['country'], 'graph.metrics': ['exposure']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:40:55.017,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select open_positions.country As Country, \n       SUM(CASE WHEN open_positions.symbol_open IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\n           THEN (open_positions.ContractSize_open)*(open_positions.price_open)*(open_positions.volume_open/10000)*open_positions.RateMargin_open\n           ELSE 0 END) AS EXPOSURE\nFROM (\n      Select date_part(\'year\',deals.""Time"") as Year_Open, to_char(deals.""Time"",\'Mon\') month_open, deals.""Time"" AS Time_Open, deals.""Login"" AS login, users.""Group"" group_open, deals.""Price"" AS price_open,\n      deals.""ContractSize"" AS ContractSize_open, users.""Country"" As Country, deals.""Volume"" AS volume_open, \n      deals.""RateMargin"" AS RateMargin_open, deals.""Symbol"" AS symbol_open, deals.""PositionID"" AS Poistion_ID_Open\n      From mt5_deals_2018 deals\n      JOIN mt5_users users ON deals.""Login"" = users.""Login""\n      where deals.""Action"" IN (0,1) \n      and deals.""Entry"" = 0\n      and users.""Group"" LIKE \'%maltainvest%\'\n      and date(deals.""Time"") < {{Time}}\n      UNION\n      Select date_part(\'year\',deals.""Time"") as Year_Open, to_char(deals.""Time"",\'Mon\') month_open, deals.""Time"" AS Time_Open, deals.""Login"" AS login, users.""Group"" group_open, deals.""Price"" AS price_open,\n      deals.""ContractSize"" AS ContractSize_open, users.""Country"" As Country, deals.""Volume"" AS volume_open, \n      deals.""RateMargin"" AS RateMargin_open, deals.""Symbol"" AS symbol_open, deals.""PositionID"" AS Poistion_ID_Open\n      From mt5_deals_2019 deals\n      JOIN mt5_users users ON deals.""Login"" = users.""Login""\n      where deals.""Action"" IN (0,1) \n      and deals.""Entry"" = 0\n      and users.""Group"" LIKE \'%maltainvest%\'\n      and date(deals.""Time"") < {{Time}}\n    ) open_positions-- These are all the open positions of Maltainvest\nLEFT JOIN ( Select date_part(\'year\',deals.""Time"") as Year_Close, to_char(deals.""Time"",\'Mon\') month_close, deals.""Time"" AS Time_Close, deals.""Login"" AS login, users.""Group"" group_close, deals.""Price"" AS price_close,\n        deals.""ContractSize"" AS ContractSize_close, deals.""Volume"" AS volume_close, \n        deals.""RateMargin"" AS RateMargin_close, users.""Country"" As Country, deals.""Symbol"" AS symbol_close, deals.""PositionID"" AS Poistion_ID_Close\n        From mt5_deals_2018 deals\n        JOIN mt5_users users ON deals.""Login"" = users.""Login""\n        where deals.""Action"" IN (0,1) \n        and deals.""Entry"" = 1\n        and users.""Group"" LIKE \'%maltainvest%\'\n        and date(deals.""Time"") < {{Time}}\n        UNION\n        Select date_part(\'year\',deals.""Time"") as Year_Close, to_char(deals.""Time"",\'Mon\') month_close, deals.""Time"" AS Time_Close, deals.""Login"" AS login, users.""Group"" group_close, deals.""Price"" AS price_close,\n        deals.""ContractSize"" AS ContractSize_close, deals.""Volume"" AS volume_close, \n        deals.""RateMargin"" AS RateMargin_close, users.""Country"" As Country, deals.""Symbol"" AS symbol_close, deals.""PositionID"" AS Poistion_ID_Close\n        From mt5_deals_2019 deals\n        JOIN mt5_users users ON deals.""Login"" = users.""Login""\n        where deals.""Action"" IN (0,1) \n        and deals.""Entry"" = 1\n        and date(deals.""Time"") < {{Time}}\n        and users.""Group"" LIKE \'%maltainvest%\') close_positions\n    ON open_positions.""poistion_id_open"" = close_positions.""poistion_id_close""\n    Where close_positions.login IS NULL\n    Group by open_positions.country', 'template-tags': {'Time': {'id': '34258f74-625d-ca1c-3c27-34949a92de06', 'name': 'Time', 'display-name': 'Open Positions up to', 'type': 'date', 'required': True, 'default': '2019-01-31'}}}}",,bar,,False,False,317,42.0,_18) Total exposure of all client positions in CRYPTOCURRENCY CFDS ONLY (TOTAL) in EURO (â‚¬).,4ace78ef-6c92-42b1-ad40-924922cab280,native,,"[{'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.166666666666666}}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 96.81701557978104, 'avg': 16.13616926329684, 'sd': 39.525381098258805, 'q1': 0.0, 'q3': 48.40850778989052}}}}]",,2019-02-01 14:24:42.508,"{'graph.dimensions': ['country'], 'graph.metrics': ['exposure']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 14:48:47.717,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select open_positions.country As Country, \n       SUM(CASE WHEN open_positions.symbol_open IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'XRPUSDmf\',\'DSHUSDmf\',\'EMCUSDmf\',\'EOSUSDmf\')\n           THEN (open_positions.ContractSize_open)*(open_positions.price_open)*(open_positions.volume_open/10000)*open_positions.RateMargin_open\n           ELSE 0 END) AS EXPOSURE\nFROM (\n      Select date_part(\'year\',deals.""Time"") as Year_Open, to_char(deals.""Time"",\'Mon\') month_open, deals.""Time"" AS Time_Open, deals.""Login"" AS login, users.""Group"" group_open, deals.""Price"" AS price_open,\n      deals.""ContractSize"" AS ContractSize_open, users.""Country"" As Country, deals.""Volume"" AS volume_open, \n      deals.""RateMargin"" AS RateMargin_open, deals.""Symbol"" AS symbol_open, deals.""PositionID"" AS Poistion_ID_Open\n      From mt5_deals_2018 deals\n      JOIN mt5_users users ON deals.""Login"" = users.""Login""\n      where deals.""Action"" IN (0,1) \n      and deals.""Entry"" = 0\n      and users.""Group"" LIKE \'%maltainvest%\'\n      and date(deals.""Time"") < {{Time}}\n      UNION\n      Select date_part(\'year\',deals.""Time"") as Year_Open, to_char(deals.""Time"",\'Mon\') month_open, deals.""Time"" AS Time_Open, deals.""Login"" AS login, users.""Group"" group_open, deals.""Price"" AS price_open,\n      deals.""ContractSize"" AS ContractSize_open, users.""Country"" As Country, deals.""Volume"" AS volume_open, \n      deals.""RateMargin"" AS RateMargin_open, deals.""Symbol"" AS symbol_open, deals.""PositionID"" AS Poistion_ID_Open\n      From mt5_deals_2019 deals\n      JOIN mt5_users users ON deals.""Login"" = users.""Login""\n      where deals.""Action"" IN (0,1) \n      and deals.""Entry"" = 0\n      and users.""Group"" LIKE \'%maltainvest%\'\n      and date(deals.""Time"") < {{Time}}\n    ) open_positions-- These are all the open positions of Maltainvest\nLEFT JOIN ( Select date_part(\'year\',deals.""Time"") as Year_Close, to_char(deals.""Time"",\'Mon\') month_close, deals.""Time"" AS Time_Close, deals.""Login"" AS login, users.""Group"" group_close, deals.""Price"" AS price_close,\n        deals.""ContractSize"" AS ContractSize_close, deals.""Volume"" AS volume_close, \n        deals.""RateMargin"" AS RateMargin_close, users.""Country"" As Country, deals.""Symbol"" AS symbol_close, deals.""PositionID"" AS Poistion_ID_Close\n        From mt5_deals_2018 deals\n        JOIN mt5_users users ON deals.""Login"" = users.""Login""\n        where deals.""Action"" IN (0,1) \n        and deals.""Entry"" = 1\n        and users.""Group"" LIKE \'%maltainvest%\'\n        and date(deals.""Time"") < {{Time}}\n        UNION\n        Select date_part(\'year\',deals.""Time"") as Year_Close, to_char(deals.""Time"",\'Mon\') month_close, deals.""Time"" AS Time_Close, deals.""Login"" AS login, users.""Group"" group_close, deals.""Price"" AS price_close,\n        deals.""ContractSize"" AS ContractSize_close, deals.""Volume"" AS volume_close, \n        deals.""RateMargin"" AS RateMargin_close, users.""Country"" As Country, deals.""Symbol"" AS symbol_close, deals.""PositionID"" AS Poistion_ID_Close\n        From mt5_deals_2019 deals\n        JOIN mt5_users users ON deals.""Login"" = users.""Login""\n        where deals.""Action"" IN (0,1) \n        and deals.""Entry"" = 1\n        and date(deals.""Time"") < {{Time}}\n        and users.""Group"" LIKE \'%maltainvest%\') close_positions\n    ON open_positions.""poistion_id_open"" = close_positions.""poistion_id_close""\n    Where close_positions.login IS NULL\n    Group by open_positions.country', 'template-tags': {'Time': {'id': 'a826a0d7-1a71-e58c-fb6f-5abb2f6a236f', 'name': 'Time', 'display-name': 'Open Positions up to', 'type': 'date', 'required': True, 'default': '2018-12-01'}}}}","Gross exposure as above, but only for CFDs with cryptocurrency as an underlying.",bar,,False,False,296,42.0,_18) Total exposure of all client positions in CRYPTOCURRENCY CFDS ONLY (TOTAL) in EURO (â‚¬).,4240abcc-c3cd-4a0b-9d7b-967bcc95eede,native,,"[{'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.6}}}}, {'name': 'exposure', 'display_name': 'Exposure', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 292.1008988078063, 'avg': 77.78358287751746, 'sd': 126.93013901728158, 'q1': 0.0, 'q3': 145.63798638678736}}}}]",,2019-02-06 12:32:15.218,"{'graph.dimensions': ['country'], 'graph.metrics': ['exposure']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-29 15:51:28.984,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","An active account is an account that made one trade over the period in question or had an open position with ""marked-to-market"" revaluation over the period.

A client account is profitable on this measure if the net equity in the account at the end of the month plus any sums withdrawn and minus any deposits during the month would have exceeded the net equity in the account at the beginning of the month had no spreads, fees or charges been incurred and had no bonuses been earned or otherwise awarded. 

Any zero-balance accounts should be excluded. Where possible aggregate client accounts when they are linked to a single retail client.",bar,,False,False,272,42.0,"_19) Total number of active accounts that made a profit over the relevant period (including spreads, fees and charges incurred and excluding any bonus received)  (all CFDs).",9692d6a0-2214-446f-9666-8ab93a8751f6,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 2.0, 'avg': 0.625, 'sd': 0.6599120175960891, 'q1': 0.033370452904234, 'q3': 1.1519247267329131}}}}]",,2019-02-06 13:38:09.434,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:41:56.294,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,318,42.0,"_19) Total number of active accounts that made a profit over the relevant period (including spreads, fees and charges incurred and excluding any bonus received) (all CFDs).",a4e2accd-0326-4786-807b-73d69b56b8df,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.555555555555555}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 2.0, 'avg': 0.777777777777777, 'sd': 0.833333333333333, 'q1': 0.06299606299409401, 'q3': 1.450490243203607}}}}]",,2019-02-01 14:12:23.075,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-29 15:53:05.739,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",SAME AS _19),bar,,False,False,273,42.0,"_20) Total number of active accounts that made a loss over the relevant period (including spreads, fees and charges incurred and excluding any bonus received) (all CFDs).",ffaeb395-c901-4da6-80a8-012d03de034f,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 5.0, 'avg': 1.1875, 'sd': 1.229673442094911, 'q1': 0.28759349706673804, 'q3': 1.75}}}}]",,2019-04-11 04:01:28.720,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:42:25.752,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,319,42.0,"_20) Total number of active accounts that made a loss over the relevant period (including spreads, fees and charges incurred and excluding any bonus received) (all CFDs).",e428396c-ba5e-4cdf-a52a-30999e2b722d,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.375}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 4.0, 'avg': 0.875, 'sd': 1.02469507659596, 'q1': 0.16227766016837902, 'q3': 1.2857142857142851}}}}]",,2019-02-06 13:32:45.064,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 09:03:53.282,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"") AS Profit_on_Client\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","For this question, relevant profits are the change in net equity in the account that would have occured between the beginning and the end of the month plus any sums withdrawn and minus any deposits during the month, assuming no spreads, fees or charges been incurred and had no bonuses been earned or otherwise awarded  (excluding spreads, fees and charges paid and bonus received) over the month in question.",bar,,False,False,277,42.0,"_21) Total profits from profit making accounts over the relevant period (excluding spreads, fees and charges incurred and excluding any bonuses received) (all CFDs) in Euros (â‚¬).",dc4af600-4486-4dee-83a7-7adb2b87935f,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 70.44999999999999, 'avg': 6.005, 'sd': 13.48893572883992, 'q1': 0.00711241430499, 'q3': 6.194999999999999}}}}]",,2019-02-22 05:39:24.621,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:48:46.901,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"") AS Profit_on_Client\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,320,42.0,"_21) Total profits from profit making accounts over the relevant period (excluding spreads, fees and charges incurred and excluding any bonuses received) (all CFDs) in Euros (â‚¬).",9e867599-9d03-4509-a5f4-a03192116478,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.375}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 239.29000000000002, 'avg': 18.720625000000002, 'sd': 59.30578077149534, 'q1': 0.21613955230308102, 'q3': 5.05}}}}]",,2019-02-06 13:31:36.167,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 09:05:13.130,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") AS Profit_on_Client\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","As above, but taking into account all the spreads, fees and charges incurred.",bar,,False,False,278,42.0,"_22) Total profits from profit making accounts over the relevant period (including spreads, fees and charges incurred and excluding any bonuses received) (all CFDs) in Euros (â‚¬).",f5263725-5e19-4c47-bf7d-b89e40b5aaa5,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 68.85999999999999, 'avg': 5.815937499999999, 'sd': 13.19010207091397, 'q1': 0.00711241430499, 'q3': 5.755}}}}]",,2019-02-07 08:54:27.886,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:49:41.952,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") AS Profit_on_Client\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,321,42.0,"_22) Total profits from profit making accounts over the relevant period (including spreads, fees and charges incurred and excluding any bonuses received) (all CFDs) in Euros (â‚¬).",cae4952b-a8f6-4119-9821-14c41f7b95bd,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.294117647058823}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 235.53, 'avg': 18.891176470588235, 'sd': 56.5600525859852, 'q1': 0.433469116483484, 'q3': 5.3275}}}}]",,2019-02-07 08:29:48.711,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 09:07:19.628,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"") AS Profit_on_Client\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","""For this question, relevant losses are the change in net equity in the account that would have occured between the beginning and the end of the month plus any sums withdrawn and minus any deposits during the month, assuming no spreads, fees or charges been incurred and had no bonuses been earned or otherwise awarded  (excluding spreads, fees and charges paid and bonus received) over the month in question. 

Please express losses as negative numbers.""",bar,,False,False,279,42.0,"_23) Total losses from loss making accounts over the relevant period (excluding spreads, fees and charges incurred and excluding any bonuses received) (all CFDs) in Euros (â‚¬).",81afb94d-575c-4958-a368-883c209cc2cd,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 3}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 8}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 22, 'nil%': 0}, 'type': {'type/Number': {'min': -838.7699999999999, 'max': 0, 'avg': -44.58, 'sd': 147.98046560272743, 'q1': -29.835, 'q3': -0.048903154309649005}}}}]",,2019-02-07 09:04:48.955,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:50:12.014,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"") AS Profit_on_Client\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,322,42.0,"_23) Total losses from loss making accounts over the relevant period (excluding spreads, fees and charges incurred and excluding any bonuses received) (all CFDs) in Euros (â‚¬).",d7082e69-b53e-47cd-a5ce-3634da7973cd,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.294117647058823}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Number': {'min': -180.33, 'max': 0.0, 'avg': -28.71941176470588, 'sd': 52.37267637692725, 'q1': -28.5875, 'q3': -0.013508893593264001}}}}]",,2019-02-07 08:44:49.887,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:50:40.953,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") AS Profit_on_Client\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,323,42.0,"_24) Total losses from loss making accounts over the relevant period (including spreads, fees and charges incurred and excluding any bonuses received) (all CFDs) in Euros (â‚¬).",73f21a00-49c2-4f51-a80f-1b27f3b2a21b,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.294117647058823}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Number': {'min': -193.92, 'max': 0.0, 'avg': -30.763529411764708, 'sd': 54.80812769804041, 'q1': -38.06, 'q3': -0.013508893593264001}}}}]",,2019-02-07 08:46:29.951,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 09:08:51.206,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") AS Profit_on_Client\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","""As above, but taking into account all the spreads, fees and charges incurred. 

Please express losses as negative numbers.""",bar,,False,False,280,42.0,"_24) Total losses from loss making accounts over the relevant period (including spreads, fees and charges incurred and excluding any bonuses received) (all CFDs) in Euros (â‚¬).",86d4a531-d134-4b39-b26e-5d92a0ff689f,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 23, 'nil%': 0.0}, 'type': {'type/Number': {'min': -908.1499999999999, 'max': 0.0, 'avg': -50.24218749999999, 'sd': 159.58310034090488, 'q1': -36.120000000000005, 'q3': -0.06792858924513301}}}}]",,2019-02-07 09:24:16.236,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 11:41:45.534,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  and deals.""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","""An active account is an account that made one trade over the period in question or had an open position with """"marked-to-market"""" revaluation over the period.

A client account is profitable on this measure if the net equity in the account at the end of the month plus any sums withdrawn and minus any deposits during the month would have exceeded the net equity in the account at the beginning of the month had no spreads, fees or charges been incurred and had no bonuses been earned or otherwise awarded. 

Only profitable active accounts that had at least one position in cryptocurrency CFDs open during the relevant period should be included.""",bar,,False,False,281,42.0,"_25) Total number of active accounts that made a profit over the relevant period (including spreads, fees and charges incurred and excluding any bonus received)  (Accounts that have at least one cryptocurrency CFDs).",4586d1ee-82e7-4e3b-bbe4-f19ca29afab7,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.818181818181818}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}]",,2019-02-07 08:19:49.535,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:51:20.485,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  and deals.""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,324,42.0,"_25) Total number of active accounts that made a profit over the relevant period (including spreads, fees and charges incurred and excluding any bonus received) (Accounts that have at least one cryptocurrency CFDs).",9d133a57-7b6c-4b71-9333-bcabf772b50c,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}]",,2019-02-07 08:32:14.770,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 11:43:01.597,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","As above, but for loss-making accounts.",bar,,False,False,282,42.0,"_26) Total number of active accounts that made a loss over the relevant period (including spreads, fees and charges incurred and excluding any bonus received) (Accounts that have at least one cryptocurrency CFDs)",2a6e753e-6c13-4b30-b984-5f2fc300b90e,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.818181818181818}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 2.0, 'avg': 1.0, 'sd': 0.44721359549995704, 'q1': 0.6353453162872771, 'q3': 1.364654683712722}}}}]",,2019-02-07 08:19:52.442,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:51:59.387,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,325,42.0,"_26) Total number of active accounts that made a loss over the relevant period (including spreads, fees and charges incurred and excluding any bonus received) (Accounts that have at least one cryptocurrency CFDs)",54c2dbd2-40b1-4dd0-b3bf-ac8b1e9c62d2,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1.0, 'avg': 1.0, 'sd': 0.0, 'q1': 1.0, 'q3': 1.0}}}}]",,2019-02-07 08:32:14.865,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 11:44:02.195,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"") AS Profit_on_Client\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","""For this question, relevant profits are the change in net equity in the account that would have occured between the beginning and the end of the month plus any sums withdrawn and minus any deposits during the month, assuming no spreads, fees or charges been incurred and had no bonuses been earned or otherwise awarded  (excluding spreads, fees and charges paid and bonus received) over the month in question. 

Only active accounts that had at least one position in cryptocurrency CFDs open during the relevant period should be included.""",bar,,False,False,283,42.0,"_27) Total profits from profit making accounts over the relevant period (excluding spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have at least one cryptocurrency CFDs) in Euros (â‚¬).",7fa60f2f-d7bd-4656-9f62-be8885ca894c,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.818181818181818}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}]",,2019-02-07 09:16:53.968,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:52:24.366,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"") AS Profit_on_Client\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,326,42.0,"_27) Total profits from profit making accounts over the relevant period (excluding spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have at least one cryptocurrency CFDs) in Euros (â‚¬).",457745f6-c3f8-4841-a098-836d96a2eee2,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}]",,2019-02-07 08:32:15.769,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 11:45:07.519,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") AS Profit_on_Client\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","""As above, but taking into account all the spreads, fees and charges incurred. 

Only active accounts that had at least one position in cryptocurrency CFDs open during the relevant period should be included.""",bar,,False,False,284,42.0,"_28) Total profits from profit making accounts over the relevant period (including spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have at least one cryptocurrency CFDs) in Euros (â‚¬).",77c66747-b3e6-40ca-9676-bb80c5c58c5f,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.818181818181818}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}]",,2019-02-05 14:04:06.755,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:52:57.496,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") AS Profit_on_Client\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,327,42.0,"_28) Total profits from profit making accounts over the relevant period (including spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have at least one cryptocurrency CFDs) in Euros (â‚¬).",20f187ec-9432-426d-81b2-4e718b840ca9,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}]",,2019-02-07 08:32:16.865,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:54:14.413,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"") AS Profit_on_Client\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,328,42.0,"_29) Total losses from loss making accounts over the relevant period (excluding spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have at least one cryptocurrency CFDs) in Euros (â‚¬).",9914dbeb-937b-4b03-a21d-9137e40e2cec,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': -58.15, 'max': 1.4, 'avg': -19.13, 'sd': 33.80770178524414, 'q1': -43.7725, 'q3': 0.889999999999999}}}}]",,2019-02-07 08:45:53.981,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 11:47:06.524,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"") AS Profit_on_Client\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and users.""Login"" IN (121710, 123575) -- Nov\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","""For this question, relevant losses are the change in net equity in the account that would have occured between the beginning and the end of the month plus any sums withdrawn and minus any deposits during the month, assuming no spreads, fees or charges been incurred and had no bonuses been earned or otherwise awarded  (excluding spreads, fees and charges paid and bonus received) over the month in question. 

Please expresses losses as negative numbers.

Only active accounts that had at least one position in cryptocurrency CFDs open during the relevant period should be included.""",bar,,False,False,285,42.0,"_29) Total losses from loss making accounts over the relevant period (excluding spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have at least one cryptocurrency CFDs) in Euros (â‚¬).",6e969bda-97c6-48af-b4bd-ab314a4d7bb0,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.857142857142857}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': -835.88, 'max': 0.0, 'avg': -121.57857142857142, 'sd': 315.00928073251913, 'q1': -9.932499999999997, 'q3': 0.0}}}}]",,2019-02-07 09:19:50.685,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:58:32.327,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") AS Profit_on_Client\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,329,42.0,"_30) Total losses from loss making accounts over the relevant period (including spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have at least one cryptocurrency CFDs) in Euros (â‚¬).",c9081a1f-fdc0-4e0e-aea0-0fd0602e5155,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': -72.64999999999999, 'max': -0.67, 'avg': -25.45, 'sd': 40.893427344745746, 'q1': -55.24499999999999, 'q3': -1.26}}}}]",,2019-02-07 08:32:23.761,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 11:48:08.805,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") AS Profit_on_Client\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","""As above, but taking into account all the spreads, fees and charges incurred. 

Please expresses losses as negative numbers.

Only active accounts that had at least one position in cryptocurrency CFDs open during the relevant period should be included.""",bar,,False,False,286,42.0,"_30) Total losses from loss making accounts over the relevant period (including spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have at least one cryptocurrency CFDs) in Euros (â‚¬).",735f23b1-6d7c-4291-bb03-e5c1802b168b,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.818181818181818}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Number': {'min': -268.4, 'max': 0.0, 'avg': -41.93090909090909, 'sd': 80.56611228730668, 'q1': -54.165000000000006, 'q3': -0.685}}}}]",,2019-02-07 09:22:53.556,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 12:06:17.299,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" NOT IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  and users.""Login"" NOT IN (121710, 123575) -- This applies only to Nov and Dec\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","""An active account is an account that made one trade over the period in question or had an open position with """"marked-to-market"""" revaluation over the period.

A client account is profitable on this measure if the net equity in the account at the end of the month plus any sums withdrawn and minus any deposits during the month would have exceeded the net equity in the account at the beginning of the month had no spreads, fees or charges been incurred and had no bonuses been earned or otherwise awarded. 

Only active accounts that had no position in cryptocurrency CFDs open during the relevant period should be included.""",bar,,False,False,287,42.0,"_31) Total number of active accounts that made a profit over the relevant period (including spreads, fees and charges incurred and excluding any bonus received)  (Accounts that have no cryptocurrency CFDs).",99af001d-a9ef-47c5-9e6f-4a1a7425efc7,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.137931034482758}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 2.0, 'avg': 0.689655172413793, 'sd': 0.660273118590333, 'q1': 0.103277807866851, 'q3': 1.214504843016107}}}}]",,2019-02-07 07:35:34.628,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:59:08.729,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" NOT IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  and users.""Login"" NOT IN (123575, 166076) -- This applies only to January\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,330,42.0,"_31) Total number of active accounts that made a profit over the relevant period (including spreads, fees and charges incurred and excluding any bonus received) (Accounts that have no cryptocurrency CFDs).",a120d91d-06c7-4cfe-89f9-b399aa0e8464,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.4375}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 2.0, 'avg': 0.875, 'sd': 0.61913918736689, 'q1': 0.38742588672279304, 'q3': 1.3486121811340022}}}}]",,2019-02-07 07:50:35.901,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 12:59:58.031,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, SUM(Profitable_Clients) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" NOT IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  and users.""Login"" NOT IN (123575, 166076) -- This applies only to January\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month\r\n'}}",,bar,,False,False,331,42.0,"_32) Total number of active accounts that made a loss over the relevant period (including spreads, fees and charges incurred and excluding any bonus received) (Accounts that have no cryptocurrency CFDs)",db001c0e-7c55-4c6d-9292-2998af1244b0,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 9.0, 'avg': 5.5, 'sd': 4.949747468305834, 'q1': 2.0, 'q3': 9.0}}}}]",,2019-02-07 07:51:04.004,"{'graph.dimensions': ['month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 12:08:12.559,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" NOT IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n    and users.""Login"" NOT IN (121710, 123575) -- This applies only to Nov and Dec\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","""As above, but for loss-making accounts.

Only active accounts that had no position in cryptocurrency CFDs open during the relevant period should be included.""",bar,,False,False,288,42.0,"_32) Total number of active accounts that made a loss over the relevant period (including spreads, fees and charges incurred and excluding any bonus received) (Accounts that have no cryptocurrency CFDs)",fa643af7-fad8-4217-bc94-ad0432a54863,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.137931034482758}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 4.0, 'avg': 1.068965517241379, 'sd': 1.099708873252976, 'q1': 0.283266665599965, 'q3': 1.5148485454303149}}}}]",,2019-02-07 07:36:28.542,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 12:19:08.333,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"") AS Profit_on_Client\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" NOT IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n    and users.""Login"" NOT IN (121710, 123575) -- This applies only to Nov and Dec\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","""For this question, relevant profits are the change in net equity in the account that would have occured between the beginning and the end of the month plus any sums withdrawn and minus any deposits during the month, assuming no spreads, fees or charges been incurred and had no bonuses been earned or otherwise awarded  (excluding spreads, fees and charges paid and bonus received) over the month in question. 

Only active accounts that had no position in cryptocurrency CFDs open during the relevant period should be included.""",bar,,False,False,289,42.0,"_33) Total profits from profit making accounts over the relevant period (excluding spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have no cryptocurrency CFDs) in Euros (â‚¬).",08c4748f-05d3-4c21-b4b8-ad948731858c,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.137931034482758}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 70.44999999999999, 'avg': 6.626206896551723, 'sd': 14.042183746990224, 'q1': 0.023032865434826, 'q3': 7.805}}}}]",,2019-02-07 07:41:10.802,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 13:07:07.560,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"") AS Profit_on_Client\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" NOT IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  and users.""Login"" NOT IN (123575, 166076) -- This applies only to January\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,332,42.0,"_33) Total profits from profit making accounts over the relevant period (excluding spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have no cryptocurrency CFDs) in Euros (â‚¬).",0097ee56-d196-4169-956f-6b38e1599cb3,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.4375}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 239.29000000000002, 'avg': 20.579375, 'sd': 59.119895406848165, 'q1': 0.6866666666666661, 'q3': 5.595000000000001}}}}]",,2019-02-07 07:51:22.852,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 12:20:08.393,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") AS Profit_on_Client\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" NOT IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n    and users.""Login"" NOT IN (121710, 123575) -- This applies only to Nov and Dec\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","""As above, but taking into account all the spreads, fees and charges incurred. 

Only active accounts that had no position in cryptocurrency CFDs open during the relevant period should be included.""",bar,,False,False,290,42.0,"_34) Total profits from profit making accounts over the relevant period (including spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have no cryptocurrency CFDs) in Euros (â‚¬).",549d5dd2-1483-43a7-befa-020d14902d88,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.137931034482758}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 68.86, 'avg': 6.417586206896552, 'sd': 13.733912317214852, 'q1': 0.023032865434826, 'q3': 7.797500000000001}}}}]",,2019-02-07 08:58:17.873,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 13:07:37.850,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") > 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") AS Profit_on_Client\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" NOT IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  and users.""Login"" NOT IN (123575, 166076) -- This applies only to January\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,333,42.0,"_34) Total profits from profit making accounts over the relevant period (including spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have no cryptocurrency CFDs) in Euros (â‚¬).",1eb2ef74-bd18-4132-99f1-8c7fadf39e14,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.4375}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 235.53, 'avg': 20.059375, 'sd': 58.20137781516288, 'q1': 0.6866666666666661, 'q3': 5.545}}}}]",,2019-02-07 07:52:50.491,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 12:21:09.460,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"") AS Profit_on_Client\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" NOT IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n    and users.""Login"" NOT IN (121710, 123575) -- This applies only to Nov and Dec\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","""For this question, relevant losses are the change in net equity in the account that would have occured between the beginning and the end of the month plus any sums withdrawn and minus any deposits during the month, assuming no spreads, fees or charges been incurred and had no bonuses been earned or otherwise awarded  (excluding spreads, fees and charges paid and bonus received) over the month in question. 

Please express losses as negative numbers.

Only active accounts that had no position in cryptocurrency CFDs open during the relevant period should be included.""",bar,,False,False,291,42.0,"_35) Total losses from loss making accounts over the relevant period (excluding spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have no cryptocurrency CFDs) in Euros (â‚¬).",a10c9c37-242a-45b4-9c2f-8c1065a30f78,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 3}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 8.137931034482758}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 21, 'nil%': 0}, 'type': {'type/Number': {'min': -121.46000000000001, 'max': 0, 'avg': -19.787586206896552, 'sd': 31.206247846862386, 'q1': -28.1375, 'q3': -0.043758562045526}}}}]",,2019-02-07 09:02:41.941,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 13:08:07.942,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"") AS Profit_on_Client\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" NOT IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  and users.""Login"" NOT IN (123575, 166076) -- This applies only to January\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,334,42.0,"_35) Total losses from loss making accounts over the relevant period (excluding spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have no cryptocurrency CFDs) in Euros (â‚¬).",4b8410fa-ab53-4ae4-b48b-ba1fd0d50d56,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.4375}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': -136.44000000000003, 'max': 0.0, 'avg': -21.3825, 'sd': 37.32289261744504, 'q1': -33.725, 'q3': 0.0}}}}]",,2019-02-07 08:29:10.207,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 13:08:38.417,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") AS Profit_on_Client\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" NOT IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  and users.""Login"" NOT IN (123575, 166076) -- This applies only to January\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}",,bar,,False,False,335,42.0,"_36) Total losses from loss making accounts over the relevant period (including spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have no cryptocurrency CFDs) in Euros (â‚¬).",2caff56a-097d-4b1a-aafb-355046df1e67,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.4375}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': -136.67, 'max': 0.0, 'avg': -20.636249999999997, 'sd': 37.45046379330079, 'q1': -31.744999999999997, 'q3': 0.0}}}}]",,2019-02-07 07:54:44.339,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 12:22:20.209,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT Month, Country, SUM(Profitable_Clients*Profit_on_Client) AS Total_Clients\r\n  FROM (\r\n  SELECT to_char(deals.""Time"",\'Mon\') AS Month, deals.""Login"" AS Login, users.""Country"" As Country, \r\n  (CASE WHEN (SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") < 0) THEN 1 ELSE 0 END) AS Profitable_Clients, SUM(deals.""Profit"" + deals.""Commission"" + deals.""Storage"") AS Profit_on_Client\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  WHERE ""Action"" IN (0,1)\r\n  and deals.""Symbol"" NOT IN (\'BTCUSDmf\',\'ETHUSDmf\',\'LTCUSDmf\',\'BCHUSDmf\',\'DSHUSDmf\',\'ETCUSDmf\',\'XMRUSDmf\',\'XRPUSDmf\',\'ZECUSDmf\',\'EMCUSDmf\')\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n    and users.""Login"" NOT IN (121710, 123575) -- This applies only to Nov and Dec\r\n  GROUP BY to_char(deals.""Time"",\'Mon\'), Login, Country\r\n  ) AS temp\r\n  Group by Month, Country\r\n'}}","""As above, but taking into account all the spreads, fees and charges incurred. 

Please express losses as negative numbers.

Only active accounts that had no position in cryptocurrency CFDs open during the relevant period should be included""",bar,,False,False,292,42.0,"_36) Total losses from loss making accounts over the relevant period (including spreads, fees and charges incurred and excluding any bonuses received) (Accounts that have no cryptocurrency CFDs) in Euros (â‚¬).",83fed7ea-ef02-4a7f-a357-bd7a654f949c,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.137931034482758}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 21, 'nil%': 0.0}, 'type': {'type/Number': {'min': -127.73, 'max': 0.0, 'avg': -20.51724137931035, 'sd': 32.17588459174175, 'q1': -28.937500000000004, 'q3': -0.043758562045526}}}}]",,2019-02-07 09:23:06.055,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['total_clients']}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 12:26:10.903,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': '  SELECT  to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, COUNT(deals.""Deal"")\r\n  FROM mt5_deals_2018 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  where deals.""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  and deals.""Comment"" like \'[so at%\' -- Close out\r\n  group by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}","""The number of automatic close-outs (not triggered by an order of an client) during the period.  

For the year 2017 the ESMA measures were not in place. In both years the data requested asks for the close-outs that are initiated by the investment firm and not the close-out that are triggered by an action of the client (e.g. via a stop-loss order)""",bar,,False,False,293,42.0,_43) Number of automatic close-outs during the period on client accounts.,8e225595-5edc-4f37-9885-4d460015a80b,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.333333333333333}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 9.0, 'avg': 3.5, 'sd': 3.563705936241092, 'q1': 1.0, 'q3': 7.0}}}}]",,2019-02-05 14:00:16.659,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['count']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 13:09:13.427,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': '  SELECT  to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, COUNT(deals.""Deal"")\r\n  FROM mt5_deals_2019 AS deals\r\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n  where deals.""Action"" IN (0,1)\r\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\r\n  and deals.""Comment"" like \'[so at%\' -- Close out\r\n  group by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",,bar,,False,False,336,42.0,_43) Number of automatic close-outs during the period on client accounts.,d4bca20e-02b8-465a-94dc-15f6580246bd,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.5}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 2.0, 'avg': 1.25, 'sd': 0.5, 'q1': 1.0, 'q3': 1.6339745962155612}}}}]",,2019-02-01 14:43:54.036,"{'graph.dimensions': ['country', 'month'], 'graph.metrics': ['count']}"
False,,"{'id': 79, 'name': 'CFD Data Gathering Report(MF) - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'cfd_data_gathering_report_mf____2019'}",79.0,,2019-01-31 13:09:43.709,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': '  SELECT  to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, COUNT(deals.""Deal"")\n  FROM mt5_deals_2019 AS deals\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\n  where deals.""Action"" IN (0,1)\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\n  and deals.""Comment"" like \'[so at -%\' -- Negative Close out\n  group by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}",,bar,,False,False,337,42.0,_44) Number of occurrences in which the client went in to negative equity,b76e09aa-0bf3-48a4-942c-1e4dee74f63d,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-01 14:44:07.945,"{'graph.dimensions': [None], 'graph.metrics': [None]}"
False,,"{'id': 75, 'name': ' CFD Data Gathering Report (MF) - 2018', 'description': 'MFSA requires Monthly or Quarterly data having values provided by this dashboard ', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': '_cfd_data_gathering_report__mf____2018'}",75.0,,2019-01-30 12:27:23.622,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': '  SELECT  to_char(deals.""Time"",\'Mon\') AS Month, users.""Country"" As Country, COUNT(deals.""Deal"")\n  FROM mt5_deals_2018 AS deals\n  JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\n  where deals.""Action"" IN (0,1)\n  and users.""Group"" LIKE \'%maltainvest%\' -- Change this for the Group you want (in case of MF something like malta_invest)\n  and deals.""Comment"" like \'[so at -%\' -- Negative Close out\n  group by to_char(deals.""Time"",\'Mon\'), users.""Country""'}}","""For the year 2017 the ESMA measures were not in place. In 2018 this would result in a negative balance protection. 

For firms providing negative balance protection in August 2017, please include instances in which clients went in to negative equity before their negative balance was restored by your firm.                                                                                                                                                      
                                                                                                                                                                                                                                                                                   For August 2018, negative balance protection will be in force. However, market gapping can lead to the client initially being closed out at a price that creates negative equity, with the account then recredited back to zero equity to meet the new requirement of negative balance protection.    
                                                                                                                          
We are looking for the number of times an account did/would have gone into negative equity in each of the relevant periods (August 2017 and August 2018).""",bar,,False,False,294,42.0,_44) Number of occurrences in which the client went in to negative equity,f2bef813-c848-41a3-ac52-8713ba0d3123,native,,"[{'name': 'month', 'display_name': 'Month', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'country', 'display_name': 'Country', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-05 14:01:10.105,"{'graph.dimensions': [None], 'graph.metrics': [None]}"
False,,"{'id': 1, 'name': ""Tom M's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 1, 'slug': 'tom_m_s_personal_collection'}",1.0,,2019-01-18 02:50:51.830,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'query': {'source-table': 94, 'filter': ['=', ['field-id', 836], 'id'], 'breakout': [['field-id', 834]], 'aggregation': [['count']]}, 'type': 'query', 'database': 2}",This is just Indonesia,table,,False,False,214,,Account opening reasons grouped,,query,,"[{'name': 'account_opening_reason', 'display_name': 'Account Opening Reason', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.25}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 8}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0}, 'type': {'type/Number': {'min': 4493, 'max': 229160, 'avg': 86449, 'sd': 99601.8228246853, 'q1': 20079.5, 'q3': 152818.5}}}}]",94.0,2019-01-18 02:50:51.830,"{'table.pivot_column': 'account_opening_reason', 'table.cell_column': 'count'}"
False,,"{'id': 181, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'accounting'}",181.0,,2019-04-09 09:38:53.183,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- new format\n-- Accounting > Account balance on given date\nWITH param as (\n    SELECT\n        -- Given date\n        '2017-09-30'::TIMESTAMP as given_date,\n        \n        -- CH, CR, JP, MX, MLT, MF, VR or any other broker_code\n        'JP'::VARCHAR as broker_code,\n        \n        -- true to include zero balance, false to filter out\n        false::BOOLEAN as include_zero\n)\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM account_balance_on_given_date(\n    (SELECT given_date FROM param)::timestamp,\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT include_zero FROM param)::BOOLEAN\n    )\nORDER BY loginid\n\n\n""}}",new format,table,,False,False,839,,Accounting Account balance on given date,,native,,,,2019-04-09 09:38:53.183,{}
False,,"{'id': 162, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/159/', 'personal_owner_id': None, 'slug': 'accounting'}",162.0,,2019-04-09 09:35:25.376,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- new format\n-- Accounting > Account balance on given date\nWITH param as (\n    SELECT\n        -- Given date\n        '2017-09-30'::TIMESTAMP as given_date,\n        \n        -- CH, CR, JP, MX, MLT, MF, VR or any other broker_code\n        'JP'::VARCHAR as broker_code,\n        \n        -- true to include zero balance, false to filter out\n        false::BOOLEAN as include_zero\n)\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM account_balance_on_given_date(\n    (SELECT given_date FROM param)::timestamp,\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT include_zero FROM param)::BOOLEAN\n    )\nORDER BY loginid\n\n\n""}}",new format,table,,False,False,829,,Accounting Account balance on given date,,native,,,,2019-04-09 09:35:25.376,{}
False,,"{'id': 162, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/159/', 'personal_owner_id': None, 'slug': 'accounting'}",162.0,,2019-04-09 09:35:32.226,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Accounting > All Brokers Cash Balance & AGG Open Bets\n-- Accounting > All Brokers Cash Balance & AGG Open Bets\n-- No parameter required\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM aggregated_balance_open_bets_per_broker() ORDER BY broker_code, currency_code\n'}}",Accounting > All Brokers Cash Balance & AGG Open Bets,table,,False,False,831,,Accounting All Brokers Cash Balance & AGG Open Bets,,native,,,,2019-04-09 09:35:32.226,{}
False,,"{'id': 181, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'accounting'}",181.0,,2019-04-09 09:39:00.161,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Accounting > All Brokers Cash Balance & AGG Open Bets\n-- Accounting > All Brokers Cash Balance & AGG Open Bets\n-- No parameter required\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM aggregated_balance_open_bets_per_broker() ORDER BY broker_code, currency_code\n'}}",Accounting > All Brokers Cash Balance & AGG Open Bets,table,,False,False,841,,Accounting All Brokers Cash Balance & AGG Open Bets,,native,,,,2019-04-09 09:39:00.161,{}
False,,"{'id': 181, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'accounting'}",181.0,,2019-04-09 09:39:10.753,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Accounting > All payment all broker\nWITH param AS (SELECT\n        -- Start date\n        '2017-08-23'::DATE AS start_date,\n        \n        -- End date\n        '2017-08-26'::DATE AS end_date,\n\n        -- The items in this list of payment_gateway values will be excluded. Add or remove items as desired.\n        '{\n          free_gift, payment_agent_transfer, currency_conversion_transfer\n        }'::VARCHAR[] AS exclude_payment_gateways,\n\n        -- The items in this list of payment_type values will be excluded. Add or remove items as desired.\n        '{\n          arbitrary_markup\n        }'::VARCHAR[]AS exclude_payment_types\n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT UPPER(ps.srvname), gp.*\nFROM param\nCROSS JOIN betonmarkets.production_servers() AS ps\nCROSS JOIN LATERAL fdw.get_payments_on(\n    ps.srvname,\n    param.start_date,\n    param.end_date,\n    param.exclude_payment_gateways,\n    param.exclude_payment_types\n) AS gp\nORDER BY gp.payment_time;""}}",Accounting > All payment all broker,table,,False,False,844,,Accounting All payment all broker,,native,,,,2019-04-09 09:39:10.753,{}
False,,"{'id': 199, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/181/', 'personal_owner_id': None, 'slug': 'compliance'}",199.0,,2019-04-09 09:39:21.162,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Accounting/Compliance -> *mobile* GGY Transaction Details\nWITH params AS (SELECT\n  \'MX\'::VARCHAR AS broker,  -- one of MX, MF, MLT, CR, JP\n  \'2017-10-18\'::DATE AS rpt_start,\n  \'2017-10-18\'::DATE AS rpt_end,\n  TRUE::BOOLEAN AS randoms_only\n)\n\n\n\n\n\n\n-- Do not touch any code below here\n\nSELECT\n  transaction_time::TIMESTAMP(0)::TEXT AS transaction_time,\n  transaction_id::TEXT,\n  betid::TEXT,\n  client_loginid,\n  residence,\n  quantity,\n  currency_code,\n  amount,\n  is_random,\n  action_type AS ""Type"",\n  broker AS ""Broker"",\n  buy_source\nFROM params\nCROSS JOIN LATERAL test.per_broker_app_trans_details(params.broker, params.rpt_start, params.rpt_end, \'{10,1006}\', params.randoms_only, FALSE)\n'}}",Accounting/Compliance -> *mobile* GGY Transaction Details,table,,False,False,847,,Accounting Compliance *mobile* GGY Transaction Details,,native,,,,2019-04-09 09:39:21.162,{}
False,,"{'id': 199, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/181/', 'personal_owner_id': None, 'slug': 'compliance'}",199.0,,2019-04-09 09:39:17.855,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- The inverse of Accounting/Compliance -> *mobile* GGY Transaction Details\n-- Accounting/Compliance -> *non mobile* GGY Transaction Details\nWITH params AS (SELECT\n  \'MX\'::VARCHAR AS broker,  -- one of MX, MF, MLT, CR, JP\n  \'2017-10-18\'::DATE AS rpt_start,\n  \'2017-10-18\'::DATE AS rpt_end,\n  TRUE::BOOLEAN AS randoms_only\n)\n\n\n\n\n\n\n-- Do not touch any code below here\n\nSELECT\n  transaction_time::TIMESTAMP(0)::TEXT AS transaction_time,\n  transaction_id::TEXT,\n  betid::TEXT,\n  client_loginid,\n  residence,\n  quantity,\n  currency_code,\n  amount,\n  is_random,\n  action_type AS ""Type"",\n  broker AS ""Broker"",\n  buy_source\nFROM params\nCROSS JOIN LATERAL per_broker_app_trans_details(params.broker, params.rpt_start, params.rpt_end, \'{10,1006}\', params.randoms_only, TRUE)\n'}}",The inverse of Accounting/Compliance -> *mobile* GGY Transaction Details,table,,False,False,846,,Accounting Compliance *non mobile* GGY Transaction Details,,native,,,,2019-04-09 09:39:17.855,{}
False,,"{'id': 199, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/181/', 'personal_owner_id': None, 'slug': 'compliance'}",199.0,,2019-04-09 09:39:24.561,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Accounting/Compliance -> Monthly Transaction Details\nWITH params AS (SELECT\n  \'MX\'::VARCHAR AS broker_code,  -- one of CH, MX, MF, MLT, CR, JP or any broker_code\n  NULL::DATE AS rpt_start,  -- left as NULL, this will default to the first of last month\n  --\'2017-04-30\'::DATE AS rpt_start,\n  NULL::DATE AS rpt_end     -- left as NULL, this will default to the last of last month\n  --\'2017-05-02\'::DATE AS rpt_end\n)\n\n\n\n\n\n\n-- Do not touch any code below here\n\nSELECT\n  transaction_time::TIMESTAMP(0)::TEXT AS transaction_time,\n  transaction_id::TEXT,\n  betid::TEXT,\n  client_loginid,\n  residence,\n  quantity,\n  currency_code,\n  amount,\n  is_random,\n  action_type AS ""Type"",\n  params.broker_code AS ""Broker""\nFROM params\nCROSS JOIN LATERAL monthly_trans_details(params.broker_code, params.rpt_start, params.rpt_end)\n'}}",Accounting/Compliance -> Monthly Transaction Details,table,,False,False,848,,Accounting Compliance Monthly Transaction Details,,native,,,,2019-04-09 09:39:24.561,{}
False,,"{'id': 181, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'accounting'}",181.0,,2019-04-09 09:38:35.699,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Accounting > Daily turnover report for date range\nWITH params as (\n    SELECT\n        -- CH, CR, JP, MX, MLT, MF or any other client broker_codes\n        'MX'::VARCHAR as broker_code,\n        \n        -- Start date\n        '2017-09-18'::TIMESTAMP AS start_date,\n        \n        -- End date\n        '2017-09-19'::TIMESTAMP AS end_date\n)\n\n-- If you find the report is missing a particular currency that should be included,\n-- point DBA to the following instruction:\n-- As postgres inspect: select update_type_daily_turnover_for_date_range(true);\n-- then: select update_type_daily_turnover_for_date_range(false);\n\n\nSELECT\n  d.txn_date,\n  d.total_buy_usd,\n  d.total_sell_usd,\n\td.buy_minus_sell_USD,\n\td.total_open_bet_PL_USD,\n\td.total_outstanding_bet_usd,\n\td.agg_cash_bal_usd,\n\td.pl_on_day,\n\t(jsonb_populate_record(NULL::daily_turnover_for_date_range, d.dat)).*\n\t\nFROM params\nCROSS JOIN LATERAL betonmarkets.production_servers_v2() AS ps\nCROSS JOIN LATERAL dblink(ps.srvname, $$\n    SELECT * FROM reporting.daily_turnover_for_date_range_on(\n      $$ || quote_literal(params.broker_code) || $$,\n      $$ || quote_literal(params.start_date)  || $$,\n      $$ || quote_literal(params.end_date)    || $$)\n    $$) d (\n    txn_date DATE,\n\t  total_buy_usd  NUMERIC,\n\t  total_sell_usd NUMERIC,\n\t  buy_minus_sell_USD        NUMERIC,\n\t  total_open_bet_PL_USD     NUMERIC,\n\t  total_outstanding_bet_usd NUMERIC,\n\t  agg_cash_bal_usd NUMERIC,\n\t  pl_on_day        NUMERIC,\n\t  dat              JSONB,\n\t  the_sql          TEXT\n\t)\n\nWHERE params.broker_code = ANY( ps.broker_codes)""}}",Accounting > Daily turnover report for date range,table,,False,False,834,,Accounting Daily turnover report for date range,,native,,,,2019-04-09 09:38:35.699,{}
False,,"{'id': 162, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/159/', 'personal_owner_id': None, 'slug': 'accounting'}",162.0,,2019-04-09 09:35:04.660,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Accounting > Daily turnover report for date range\nWITH params as (\n    SELECT\n        -- CH, CR, JP, MX, MLT, MF or any other client broker_codes\n        'MX'::VARCHAR as broker_code,\n        \n        -- Start date\n        '2017-09-18'::TIMESTAMP AS start_date,\n        \n        -- End date\n        '2017-09-19'::TIMESTAMP AS end_date\n)\n\n-- If you find the report is missing a particular currency that should be included,\n-- point DBA to the following instruction:\n-- As postgres inspect: select update_type_daily_turnover_for_date_range(true);\n-- then: select update_type_daily_turnover_for_date_range(false);\n\n\nSELECT\n  d.txn_date,\n  d.total_buy_usd,\n  d.total_sell_usd,\n\td.buy_minus_sell_USD,\n\td.total_open_bet_PL_USD,\n\td.total_outstanding_bet_usd,\n\td.agg_cash_bal_usd,\n\td.pl_on_day,\n\t(jsonb_populate_record(NULL::daily_turnover_for_date_range, d.dat)).*\n\t\nFROM params\nCROSS JOIN LATERAL betonmarkets.production_servers_v2() AS ps\nCROSS JOIN LATERAL dblink(ps.srvname, $$\n    SELECT * FROM reporting.daily_turnover_for_date_range_on(\n      $$ || quote_literal(params.broker_code) || $$,\n      $$ || quote_literal(params.start_date)  || $$,\n      $$ || quote_literal(params.end_date)    || $$)\n    $$) d (\n    txn_date DATE,\n\t  total_buy_usd  NUMERIC,\n\t  total_sell_usd NUMERIC,\n\t  buy_minus_sell_USD        NUMERIC,\n\t  total_open_bet_PL_USD     NUMERIC,\n\t  total_outstanding_bet_usd NUMERIC,\n\t  agg_cash_bal_usd NUMERIC,\n\t  pl_on_day        NUMERIC,\n\t  dat              JSONB,\n\t  the_sql          TEXT\n\t)\n\nWHERE params.broker_code = ANY( ps.broker_codes)""}}",Accounting > Daily turnover report for date range,table,,False,False,824,,Accounting Daily turnover report for date range,,native,,,,2019-04-09 09:35:04.660,{}
False,,"{'id': 181, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'accounting'}",181.0,,2019-04-09 09:39:14.415,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Accounting > ICO amounts to date\nSELECT\n    COALESCE(ttime::TEXT,'Totals') AS ttime,\n    SUM(aud_buy) AS aud_buy, SUM(aud_sell) AS aud_sell,\n    SUM(bch_buy) AS bch_buy, SUM(bch_sell) AS bch_sell,\n    SUM(btc_buy) AS btc_buy, SUM(btc_sell) AS btc_sell,\n    SUM(etc_buy) AS etc_buy, SUM(etc_sell) AS etc_sell,\n    SUM(eth_buy) AS eth_buy, SUM(eth_sell) AS eth_sell,\n    SUM(eur_buy) AS eur_buy, SUM(eur_sell) AS eur_sell,\n    SUM(gbp_buy) AS gbp_buy, SUM(gbp_sell) AS gbp_sell,\n    SUM(ltc_buy) AS ltc_buy, SUM(ltc_sell) AS ltc_sell,\n    SUM(usd_buy) AS usd_buy, SUM(usd_sell) AS usd_sell\nFROM CROSSTAB($OUT$SELECT * FROM dblink('cr',\n    $$\n    WITH cbets AS (\n        SELECT tt.transaction_time::DATE AS ttime, tt.action_type, ta.currency_code, SUM(abs(tt.amount)) AS amount\n        FROM bet.financial_market_bet fmb\n        JOIN bet.coinauction_bet cb ON cb.financial_market_bet_id=fmb.id\n        JOIN transaction.account ta ON ta.id=fmb.account_id\n        JOIN betonmarkets.client bc ON bc.loginid=ta.client_loginid\n        JOIN transaction.transaction tt ON tt.financial_market_bet_id=fmb.id\n        WHERE bc.email != 'ashkan.nemati@gmail.com'\n        AND bc.email NOT LIKE '%binary.com'\n        AND bc.email NOT LIKE '%regentmarkets.com'\n        GROUP BY 1,2,3\n    ),\n    dc AS (\n        SELECT DISTINCT cbets.ttime, cc.currency_code, acts.action_type FROM cbets CROSS JOIN betonmarkets.currency_config AS cc CROSS JOIN (VALUES ('buy'),('sell')) AS acts (action_type)\n        WHERE cc.currency_code <> 'JPY'\n    )\n    SELECT dc.ttime AS ttime, dc.currency_code||'_'||dc.action_type AS act_curr, COALESCE(cbets.amount, 0) AS amount\n    FROM dc\n    LEFT JOIN cbets ON cbets.ttime=dc.ttime AND dc.action_type=cbets.action_type AND dc.currency_code=cbets.currency_code\n    ORDER BY 1,2\n    $$\n    ) AS d(ttime DATE, act_curr VARCHAR, amount NUMERIC)$OUT$\n)AS (\n    ttime DATE,\n    aud_buy NUMERIC, aud_sell NUMERIC,\n    bch_buy NUMERIC, bch_sell NUMERIC,\n    btc_buy NUMERIC, btc_sell NUMERIC,\n    etc_buy NUMERIC, etc_sell NUMERIC,\n    eth_buy NUMERIC, eth_sell NUMERIC,\n    eur_buy NUMERIC, eur_sell NUMERIC,\n    gbp_buy NUMERIC, gbp_sell NUMERIC,\n    ltc_buy NUMERIC, ltc_sell NUMERIC,\n    usd_buy NUMERIC, usd_sell NUMERIC\n)\nGROUP BY ROLLUP ((ttime))""}}",Accounting > ICO amounts to date,table,,False,False,845,,Accounting ICO amounts to date,,native,,,,2019-04-09 09:39:14.415,{}
False,,"{'id': 181, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'accounting'}",181.0,,2019-04-09 09:38:42.636,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- individual buy/sell details\n-- Accounting > ICO bids\nWITH params AS (SELECT\n  \'2017-11-01\'::DATE AS rpt_start,\n  \'2017-11-10\'::DATE AS rpt_end\n)\n\n\n\n\n\n\n\n\n\n\nSELECT d.*\nFROM params\nCROSS JOIN LATERAL dblink(\'cr\',$$\n  SELECT t.transaction_time::TIMESTAMP(0)::TEXT, ta.currency_code, t.amount, t.action_type, ta.client_loginid, t.id::TEXT AS transaction_id\n  FROM bet.coinauction_bet cb\n  JOIN transaction.transaction t ON t.financial_market_bet_id=cb.financial_market_bet_id\n  JOIN transaction.account ta ON ta.id=t.account_id\n  JOIN betonmarkets.client bc ON bc.loginid=ta.client_loginid\n  WHERE t.transaction_time >= $$|| quote_literal( params.rpt_start) ||$$::TIMESTAMP\n  AND t.transaction_time < $$|| quote_literal( params.rpt_end) ||$$::TIMESTAMP + \'1day\'::INTERVAL\n  AND bc.email != \'ashkan.nemati@gmail.com\'\n  AND bc.email NOT LIKE \'%binary.com\'\n  AND bc.email NOT LIKE \'%regentmarkets.com\'\n  ORDER BY t.id\n  $$) d (transaction_time TEXT, currency VARCHAR, amount NUMERIC, ""type"" VARCHAR, client_loginid VARCHAR, transaction_id TEXT)'}}",individual buy/sell details,table,,False,False,836,,Accounting ICO bids,,native,,,,2019-04-09 09:38:42.636,{}
False,,"{'id': 162, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/159/', 'personal_owner_id': None, 'slug': 'accounting'}",162.0,,2019-04-09 09:35:14.882,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- individual buy/sell details\n-- Accounting > ICO bids\nWITH params AS (SELECT\n  \'2017-11-01\'::DATE AS rpt_start,\n  \'2017-11-10\'::DATE AS rpt_end\n)\n\n\n\n\n\n\n\n\n\n\nSELECT d.*\nFROM params\nCROSS JOIN LATERAL dblink(\'cr\',$$\n  SELECT t.transaction_time::TIMESTAMP(0)::TEXT, ta.currency_code, t.amount, t.action_type, ta.client_loginid, t.id::TEXT AS transaction_id\n  FROM bet.coinauction_bet cb\n  JOIN transaction.transaction t ON t.financial_market_bet_id=cb.financial_market_bet_id\n  JOIN transaction.account ta ON ta.id=t.account_id\n  JOIN betonmarkets.client bc ON bc.loginid=ta.client_loginid\n  WHERE t.transaction_time >= $$|| quote_literal( params.rpt_start) ||$$::TIMESTAMP\n  AND t.transaction_time < $$|| quote_literal( params.rpt_end) ||$$::TIMESTAMP + \'1day\'::INTERVAL\n  AND bc.email != \'ashkan.nemati@gmail.com\'\n  AND bc.email NOT LIKE \'%binary.com\'\n  AND bc.email NOT LIKE \'%regentmarkets.com\'\n  ORDER BY t.id\n  $$) d (transaction_time TEXT, currency VARCHAR, amount NUMERIC, ""type"" VARCHAR, client_loginid VARCHAR, transaction_id TEXT)'}}",individual buy/sell details,table,,False,False,826,,Accounting ICO bids,,native,,,,2019-04-09 09:35:14.881,{}
False,,"{'id': 181, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'accounting'}",181.0,,2019-04-09 09:39:03.773,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Accounting > LGA Bets Report - MLT\n-- Accounting > LGA Bets Report - MLT\nWITH param as (\n    SELECT\n        -- Given date\n        '2015-04-14'::TIMESTAMP as given_date\n)\n\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM lga_bets(\n    (SELECT given_date FROM param)::timestamp\n    )\n\n""}}",Accounting > LGA Bets Report - MLT,table,,False,False,842,,Accounting LGA Bets Report - MLT,,native,,,,2019-04-09 09:39:03.773,{}
False,,"{'id': 181, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'accounting'}",181.0,,2019-04-09 09:39:07.134,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Accounting > LGA Client Balance Report - MLT\n-- Accounting > LGA Client Balance Report - MLT\nWITH param as (\n    SELECT\n        -- Given date\n        '2015-04-14'::TIMESTAMP as given_date\n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM lga_client_balance(\n    (SELECT given_date FROM param)::timestamp\n    )\n\n""}}",Accounting > LGA Client Balance Report - MLT,table,,False,False,843,,Accounting LGA Client Balance Report - MLT,,native,,,,2019-04-09 09:39:07.134,{}
False,,"{'id': 181, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'accounting'}",181.0,,2019-04-09 09:38:46.026,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Accounting > MF EMIR closed & outstanding bets\nWITH param as (\n    SELECT\n        -- report end date\n        '2015-12-01'::TIMESTAMP as end_date,\n        \n        -- bet sell date from\n        '2015-08-01'::TIMESTAMP as sell_date_from\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT\n    transaction_id, \n    purchase_time::DATE as purchase_date, \n    sell_time::DATE as sell_date, \n    expiry_time::DATE as expiry_date,\n    currency, \n    buy_price, \n    sell_price\nFROM public.mf_emir_bets(\n    (SELECT end_date FROM param)::TIMESTAMP,\n    (SELECT sell_date_from FROM param)::TIMESTAMP\n);\n""}}",Accounting > MF EMIR closed & outstanding bets,table,,False,False,837,,Accounting MF EMIR closed & outstanding bets,,native,,,,2019-04-09 09:38:46.026,{}
False,,"{'id': 162, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/159/', 'personal_owner_id': None, 'slug': 'accounting'}",162.0,,2019-04-09 09:35:18.334,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Accounting > MF EMIR closed & outstanding bets\nWITH param as (\n    SELECT\n        -- report end date\n        '2015-12-01'::TIMESTAMP as end_date,\n        \n        -- bet sell date from\n        '2015-08-01'::TIMESTAMP as sell_date_from\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT\n    transaction_id, \n    purchase_time::DATE as purchase_date, \n    sell_time::DATE as sell_date, \n    expiry_time::DATE as expiry_date,\n    currency, \n    buy_price, \n    sell_price\nFROM public.mf_emir_bets(\n    (SELECT end_date FROM param)::TIMESTAMP,\n    (SELECT sell_date_from FROM param)::TIMESTAMP\n);\n""}}",Accounting > MF EMIR closed & outstanding bets,table,,False,False,827,,Accounting MF EMIR closed & outstanding bets,,native,,,,2019-04-09 09:35:18.334,{}
False,,"{'id': 162, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/159/', 'personal_owner_id': None, 'slug': 'accounting'}",162.0,,2019-04-09 09:35:28.738,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Accounting -> MLT Summary Duty\nWITH params AS (SELECT\n  NULL::DATE AS rpt_start,  -- left as NULL, this will default to the first of last month -or- delete this line, remove the leading hyphens from the next line and specify the desired date\n  --\'2017-04-30\'::DATE AS rpt_start,\n  NULL::DATE AS rpt_end     -- left as NULL, this will default to the last of last month -or- delete this line, remove the leading hyphens from the next line and specify the desired date\n  --\'2017-05-02\'::DATE AS rpt_end\n),\n\n\n\n\n\n\n-- Do not touch any code below here\n\nraw AS (\n\tSELECT mtd.* FROM params CROSS JOIN LATERAL monthly_trans_details(\'MLT\', rpt_start, rpt_end) AS mtd\n),\n\ndrange AS (\n\tSELECT (MIN(transaction_time)::DATE::TEXT ||\' / \'|| MAX(transaction_time)::DATE::TEXT) AS val FROM raw\n),\n\ngrp_mlt AS (\n\tSELECT\n\t\tbroker_code AS ""Broker"",\n\t\tcurrency_code,\n\t\taction_type AS ""Type"",\n\t\tCASE WHEN residence=\'ie\' THEN \'Irish Duty\'::TEXT WHEN residence=\'gb\' THEN \'UK Duty\' ELSE \'Other\' END AS label,\n\t\tCOALESCE(SUM(amount) FILTER(WHERE action_type = \'buy\'), 0) AS ""Buys"",\n\t\tCOALESCE(SUM(amount) FILTER(WHERE action_type =\'sell\'), 0) AS ""Sells"",\n\t\tNULL::NUMERIC AS ""Gaming Yield"",\n\t\tCOUNT(*) AS ""Number of Records""\n\tFROM raw\n\tGROUP BY 1,2,3,4\n\tORDER BY 1,2,4,3\n),\n-- subtotals on grp_mlt\ngrp_mlt_subttl AS (\n\tSELECT\n\t\t""Broker"",\n\t\tcurrency_code,\n\t\t\'Total\'::TEXT AS ""Type"",\n\t\tNULL::TEXT AS label,\n\t\tSUM(""Buys"") AS ""Buys"",\n\t\tSUM(""Sells"") AS ""Sells"",\n\t\tSUM(""Buys"" - ""Sells"") AS ""Gaming Yield"",\n\t\tSUM(""Number of Records"") AS ""Number of Records""\n\tFROM grp_mlt\n\tGROUP BY 1,2,3\n),\n-- the MLT report\nmlt_final AS (\n\tSELECT\n\t\t""Broker"",\n\t\tcurrency_code AS ""Currency Code"",\n\t\t""Type"",\n\t\tlabel AS ""UK Duty"",\n\t\t""Buys"",\n\t\t""Sells"",\n\t\t(""Buys"" - ""Sells"") AS ""Gaming Yield"",\n\t\t""Number of Records""\n\tFROM (\n\t\tSELECT * FROM grp_mlt\n\t\tUNION ALL\n\t\tSELECT * FROM grp_mlt_subttl\n\t) AS t1\n\tORDER BY 1, 2, 3, 4 NULLS LAST, 5\n)\n\n-- this is our final MLT report\nSELECT (SELECT val FROM drange) AS ""Report Dates"", * FROM mlt_final\nUNION ALL\nSELECT\n\t(SELECT val FROM drange) AS ""Report Dates"",\n\t""Broker"",\n\t\'Total\'::TEXT,\n\tNULL,\n\tNULL,\n\tSUM(""Buys""),\n\tSUM(""Sells""),\n\tSUM(""Gaming Yield""),\n\tSUM(""Number of Records"")\nFROM grp_mlt_subttl\nGROUP BY 2'}}",Accounting -> MLT Summary Duty,table,,False,False,830,,Accounting MLT Summary Duty,,native,,,,2019-04-09 09:35:28.738,{}
False,,"{'id': 181, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'accounting'}",181.0,,2019-04-09 09:38:56.715,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Accounting -> MLT Summary Duty\nWITH params AS (SELECT\n  NULL::DATE AS rpt_start,  -- left as NULL, this will default to the first of last month -or- delete this line, remove the leading hyphens from the next line and specify the desired date\n  --\'2017-04-30\'::DATE AS rpt_start,\n  NULL::DATE AS rpt_end     -- left as NULL, this will default to the last of last month -or- delete this line, remove the leading hyphens from the next line and specify the desired date\n  --\'2017-05-02\'::DATE AS rpt_end\n),\n\n\n\n\n\n\n-- Do not touch any code below here\n\nraw AS (\n\tSELECT mtd.* FROM params CROSS JOIN LATERAL monthly_trans_details(\'MLT\', rpt_start, rpt_end) AS mtd\n),\n\ndrange AS (\n\tSELECT (MIN(transaction_time)::DATE::TEXT ||\' / \'|| MAX(transaction_time)::DATE::TEXT) AS val FROM raw\n),\n\ngrp_mlt AS (\n\tSELECT\n\t\tbroker_code AS ""Broker"",\n\t\tcurrency_code,\n\t\taction_type AS ""Type"",\n\t\tCASE WHEN residence=\'ie\' THEN \'Irish Duty\'::TEXT WHEN residence=\'gb\' THEN \'UK Duty\' ELSE \'Other\' END AS label,\n\t\tCOALESCE(SUM(amount) FILTER(WHERE action_type = \'buy\'), 0) AS ""Buys"",\n\t\tCOALESCE(SUM(amount) FILTER(WHERE action_type =\'sell\'), 0) AS ""Sells"",\n\t\tNULL::NUMERIC AS ""Gaming Yield"",\n\t\tCOUNT(*) AS ""Number of Records""\n\tFROM raw\n\tGROUP BY 1,2,3,4\n\tORDER BY 1,2,4,3\n),\n-- subtotals on grp_mlt\ngrp_mlt_subttl AS (\n\tSELECT\n\t\t""Broker"",\n\t\tcurrency_code,\n\t\t\'Total\'::TEXT AS ""Type"",\n\t\tNULL::TEXT AS label,\n\t\tSUM(""Buys"") AS ""Buys"",\n\t\tSUM(""Sells"") AS ""Sells"",\n\t\tSUM(""Buys"" - ""Sells"") AS ""Gaming Yield"",\n\t\tSUM(""Number of Records"") AS ""Number of Records""\n\tFROM grp_mlt\n\tGROUP BY 1,2,3\n),\n-- the MLT report\nmlt_final AS (\n\tSELECT\n\t\t""Broker"",\n\t\tcurrency_code AS ""Currency Code"",\n\t\t""Type"",\n\t\tlabel AS ""UK Duty"",\n\t\t""Buys"",\n\t\t""Sells"",\n\t\t(""Buys"" - ""Sells"") AS ""Gaming Yield"",\n\t\t""Number of Records""\n\tFROM (\n\t\tSELECT * FROM grp_mlt\n\t\tUNION ALL\n\t\tSELECT * FROM grp_mlt_subttl\n\t) AS t1\n\tORDER BY 1, 2, 3, 4 NULLS LAST, 5\n)\n\n-- this is our final MLT report\nSELECT (SELECT val FROM drange) AS ""Report Dates"", * FROM mlt_final\nUNION ALL\nSELECT\n\t(SELECT val FROM drange) AS ""Report Dates"",\n\t""Broker"",\n\t\'Total\'::TEXT,\n\tNULL,\n\tNULL,\n\tSUM(""Buys""),\n\tSUM(""Sells""),\n\tSUM(""Gaming Yield""),\n\tSUM(""Number of Records"")\nFROM grp_mlt_subttl\nGROUP BY 2'}}",Accounting -> MLT Summary Duty,table,,False,False,840,,Accounting MLT Summary Duty,,native,,,,2019-04-09 09:38:56.715,{}
False,,"{'id': 162, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/159/', 'personal_owner_id': None, 'slug': 'accounting'}",162.0,,2019-04-09 09:35:21.728,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Accounting -> MX Summary Duty (v2)\nWITH params AS (SELECT\n  NULL::DATE AS rpt_start,  -- left as NULL, this will default to the first of last month -or- delete this line, remove the leading hyphens from the next line and specify the desired date\n  --\'2017-04-30\'::DATE AS rpt_start,\n  NULL::DATE AS rpt_end     -- left as NULL, this will default to the last of last month -or- delete this line, remove the leading hyphens from the next line and specify the desired date\n  --\'2017-05-02\'::DATE AS rpt_end\n),\n\n\n\n\n\n\n-- Do not touch any code below here\n\nraw AS (\n\tSELECT mtd.* FROM params CROSS JOIN LATERAL monthly_trans_details(\'MX\', rpt_start, rpt_end) AS mtd\n),\n\ndrange AS (\n\tSELECT (MIN(transaction_time)::DATE::TEXT ||\' / \'|| MAX(transaction_time)::DATE::TEXT) AS val FROM raw\n)\n\nSELECT * FROM (\n\t-- UK (GB) Clients that trade on randoms\n\tSELECT\n\t\t(SELECT val FROM drange) AS ""Report Dates"",\n\t\tcurrency_code AS ""Currency Code"",\n\t\t\'UK_Duty\'::TEXT AS ""UK duty"",\n\t\taction_type AS ""Type"",\n\t\tCOALESCE(SUM(amount) FILTER (WHERE action_type = \'buy\'), 0) AS ""Buys"",\n\t\tCOALESCE(SUM(amount) FILTER (WHERE action_type = \'sell\'), 0) AS ""Sells"",\n\t\tCOALESCE(SUM(amount) FILTER (WHERE action_type = \'buy\'), 0) - COALESCE(SUM(amount) FILTER (WHERE action_type = \'sell\'), 0) AS ""Gaming Yield""\n\tFROM raw\n\tWHERE residence = \'gb\'\n\tAND   is_random = TRUE\n\tGROUP BY 2,3,4\n\n\tUNION ALL\n\n\t-- All (MX) clients that trade on non-randoms\n\t-- AND all non-GB clients trading on randoms\n\tSELECT\n\t\t(SELECT val FROM drange) AS ""Report Dates"",\n\t\tcurrency_code AS ""Currency Code"",\n\t\t\'Other\'::TEXT AS ""UK duty"",\n\t\taction_type AS ""Type"",\n\t\tCOALESCE(SUM(amount) FILTER (WHERE action_type = \'buy\'), 0) AS ""Buys"",\n\t\tCOALESCE(SUM(amount) FILTER (WHERE action_type = \'sell\'), 0) AS ""Sells"",\n\t\tCOALESCE(SUM(amount) FILTER (WHERE action_type = \'buy\'), 0) - COALESCE(SUM(amount) FILTER (WHERE action_type = \'sell\'), 0) AS ""Gaming Yield""\n\tFROM raw\n\tWHERE is_random = FALSE\n\tOR   (is_random = TRUE AND residence != \'gb\')\n\tGROUP BY 2,3,4\n) AS tmp\nORDER BY 2,3,4\n'}}",Accounting -> MX Summary Duty (v2),table,,False,False,828,,Accounting MX Summary Duty (v2),,native,,,,2019-04-09 09:35:21.728,{}
False,,"{'id': 181, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'accounting'}",181.0,,2019-04-09 09:38:49.643,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Accounting -> MX Summary Duty (v2)\nWITH params AS (SELECT\n  NULL::DATE AS rpt_start,  -- left as NULL, this will default to the first of last month -or- delete this line, remove the leading hyphens from the next line and specify the desired date\n  --\'2017-04-30\'::DATE AS rpt_start,\n  NULL::DATE AS rpt_end     -- left as NULL, this will default to the last of last month -or- delete this line, remove the leading hyphens from the next line and specify the desired date\n  --\'2017-05-02\'::DATE AS rpt_end\n),\n\n\n\n\n\n\n-- Do not touch any code below here\n\nraw AS (\n\tSELECT mtd.* FROM params CROSS JOIN LATERAL monthly_trans_details(\'MX\', rpt_start, rpt_end) AS mtd\n),\n\ndrange AS (\n\tSELECT (MIN(transaction_time)::DATE::TEXT ||\' / \'|| MAX(transaction_time)::DATE::TEXT) AS val FROM raw\n)\n\nSELECT * FROM (\n\t-- UK (GB) Clients that trade on randoms\n\tSELECT\n\t\t(SELECT val FROM drange) AS ""Report Dates"",\n\t\tcurrency_code AS ""Currency Code"",\n\t\t\'UK_Duty\'::TEXT AS ""UK duty"",\n\t\taction_type AS ""Type"",\n\t\tCOALESCE(SUM(amount) FILTER (WHERE action_type = \'buy\'), 0) AS ""Buys"",\n\t\tCOALESCE(SUM(amount) FILTER (WHERE action_type = \'sell\'), 0) AS ""Sells"",\n\t\tCOALESCE(SUM(amount) FILTER (WHERE action_type = \'buy\'), 0) - COALESCE(SUM(amount) FILTER (WHERE action_type = \'sell\'), 0) AS ""Gaming Yield""\n\tFROM raw\n\tWHERE residence = \'gb\'\n\tAND   is_random = TRUE\n\tGROUP BY 2,3,4\n\n\tUNION ALL\n\n\t-- All (MX) clients that trade on non-randoms\n\t-- AND all non-GB clients trading on randoms\n\tSELECT\n\t\t(SELECT val FROM drange) AS ""Report Dates"",\n\t\tcurrency_code AS ""Currency Code"",\n\t\t\'Other\'::TEXT AS ""UK duty"",\n\t\taction_type AS ""Type"",\n\t\tCOALESCE(SUM(amount) FILTER (WHERE action_type = \'buy\'), 0) AS ""Buys"",\n\t\tCOALESCE(SUM(amount) FILTER (WHERE action_type = \'sell\'), 0) AS ""Sells"",\n\t\tCOALESCE(SUM(amount) FILTER (WHERE action_type = \'buy\'), 0) - COALESCE(SUM(amount) FILTER (WHERE action_type = \'sell\'), 0) AS ""Gaming Yield""\n\tFROM raw\n\tWHERE is_random = FALSE\n\tOR   (is_random = TRUE AND residence != \'gb\')\n\tGROUP BY 2,3,4\n) AS tmp\nORDER BY 2,3,4\n'}}",Accounting -> MX Summary Duty (v2),table,,False,False,838,,Accounting MX Summary Duty (v2),,native,,,,2019-04-09 09:38:49.643,{}
False,,"{'id': 181, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'accounting'}",181.0,,2019-04-09 09:38:32.214,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Accounting > Outstanding Contracts\nWITH params AS (SELECT\n    -- any valid broker code, like: CH, CR, MX, MF, MLT, etc.\n    'MX'::VARCHAR AS broker_code,\n    -- the report day effectively means what was in effect at 12:00 AM\n    '2017-10-01'::DATE AS report_day,\n    -- zero or more currency codes like '{GBP}' or '{GBP,EUR}' or even '{}' for all currency codes\n    '{}'::VARCHAR[] AS currency_code\n)\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT dbl.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN LATERAL dblink(ps.srvname, $OUT$\n\nWITH openz AS (SELECT * FROM dblink('dc', $IN$\n\n\tSELECT eb.account_id, eb.effective_date, eb.balance, ep.financial_market_bet_id, ep.marked_to_market_value AS mtm_value\n\tFROM accounting.end_of_day_balances AS eb\n\tLEFT JOIN accounting.end_of_day_open_positions AS ep ON ep.end_of_day_balance_id = eb.id\n\tWHERE eb.effective_date = $IN$|| quote_literal( $OUT$ || quote_literal( params.report_day ) || $OUT$ ) ||$IN$::TIMESTAMP\n\t\n\t$IN$) AS d (account_id BIGINT, effective_date TIMESTAMP, balance NUMERIC, fmb_id BIGINT, mtm_value NUMERIC)\n),\ninr AS (\nSELECT\n\tbc.loginid,\n\tta.currency_code,\n  openz.effective_date, \n\topenz.balance AS account_balance,\n\tSUM(openz.mtm_value) AS total_open_bets_value,\n\tSUM(openz.mtm_value - fmb.buy_price) AS total_open_bets_profit,\n\topenz.balance + COALESCE(SUM(openz.mtm_value), 0) AS total_equity,\n\t-- there is no magic to the following format... it's just the legacy format Accounting is accustomed to\n\tstring_agg('1L ' || fmb.buy_price || ' ' || fmb.short_code || ' (' || openz.mtm_value || ')', '+') AS portfolio\nFROM openz\nJOIN transaction.account AS ta ON ta.id = openz.account_id\nJOIN betonmarkets.client AS bc ON bc.loginid = ta.client_loginid\nLEFT JOIN bet.financial_market_bet AS fmb ON fmb.id = openz.fmb_id\nWHERE bc.broker_code = $OUT$ || quote_literal( params.broker_code ) || $OUT$\n$OUT$ || CASE WHEN cardinality( params.currency_code ) > 0 THEN 'AND ta.currency_code = ANY(' || quote_literal( params.currency_code ) || '::VARCHAR[])' ELSE '' END || $OUT$\nGROUP BY 1,2,3,4\n)\nSELECT\n    loginid,\n    currency_code,\n    effective_date,\n    account_balance,\n    COALESCE(total_open_bets_value, 0) AS total_open_bets_value,\n    COALESCE(total_open_bets_profit, 0) AS total_open_bets_profit,\n    total_equity,\n    portfolio\n\nFROM inr\nWHERE account_balance <> 0 OR total_open_bets_value IS NOT NULL OR total_open_bets_profit IS NOT NULL\n\n$OUT$) AS dbl (\n    loginid VARCHAR,\n    currency_code VARCHAR,\n    effective_date DATE,\n    account_balance NUMERIC,\n    total_open_bets_value NUMERIC,\n    total_open_bets_profit NUMERIC,\n    total_equity NUMERIC,\n    portfolio TEXT\n)\nWHERE broker_code = ANY (ps.broker_codes)\n    \n""}}",Accounting > Outstanding Contracts,table,,False,False,833,,Accounting Outstanding Contracts,,native,,,,2019-04-09 09:38:32.214,{}
False,,"{'id': 162, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/159/', 'personal_owner_id': None, 'slug': 'accounting'}",162.0,,2019-04-09 09:35:01.169,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Accounting > Outstanding Contracts\nWITH params AS (SELECT\n    -- any valid broker code, like: CH, CR, MX, MF, MLT, etc.\n    'MX'::VARCHAR AS broker_code,\n    -- the report day effectively means what was in effect at 12:00 AM\n    '2017-10-01'::DATE AS report_day,\n    -- zero or more currency codes like '{GBP}' or '{GBP,EUR}' or even '{}' for all currency codes\n    '{}'::VARCHAR[] AS currency_code\n)\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT dbl.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN LATERAL dblink(ps.srvname, $OUT$\n\nWITH openz AS (SELECT * FROM dblink('dc', $IN$\n\n\tSELECT eb.account_id, eb.effective_date, eb.balance, ep.financial_market_bet_id, ep.marked_to_market_value AS mtm_value\n\tFROM accounting.end_of_day_balances AS eb\n\tLEFT JOIN accounting.end_of_day_open_positions AS ep ON ep.end_of_day_balance_id = eb.id\n\tWHERE eb.effective_date = $IN$|| quote_literal( $OUT$ || quote_literal( params.report_day ) || $OUT$ ) ||$IN$::TIMESTAMP\n\t\n\t$IN$) AS d (account_id BIGINT, effective_date TIMESTAMP, balance NUMERIC, fmb_id BIGINT, mtm_value NUMERIC)\n),\ninr AS (\nSELECT\n\tbc.loginid,\n\tta.currency_code,\n  openz.effective_date, \n\topenz.balance AS account_balance,\n\tSUM(openz.mtm_value) AS total_open_bets_value,\n\tSUM(openz.mtm_value - fmb.buy_price) AS total_open_bets_profit,\n\topenz.balance + COALESCE(SUM(openz.mtm_value), 0) AS total_equity,\n\t-- there is no magic to the following format... it's just the legacy format Accounting is accustomed to\n\tstring_agg('1L ' || fmb.buy_price || ' ' || fmb.short_code || ' (' || openz.mtm_value || ')', '+') AS portfolio\nFROM openz\nJOIN transaction.account AS ta ON ta.id = openz.account_id\nJOIN betonmarkets.client AS bc ON bc.loginid = ta.client_loginid\nLEFT JOIN bet.financial_market_bet AS fmb ON fmb.id = openz.fmb_id\nWHERE bc.broker_code = $OUT$ || quote_literal( params.broker_code ) || $OUT$\n$OUT$ || CASE WHEN cardinality( params.currency_code ) > 0 THEN 'AND ta.currency_code = ANY(' || quote_literal( params.currency_code ) || '::VARCHAR[])' ELSE '' END || $OUT$\nGROUP BY 1,2,3,4\n)\nSELECT\n    loginid,\n    currency_code,\n    effective_date,\n    account_balance,\n    COALESCE(total_open_bets_value, 0) AS total_open_bets_value,\n    COALESCE(total_open_bets_profit, 0) AS total_open_bets_profit,\n    total_equity,\n    portfolio\n\nFROM inr\nWHERE account_balance <> 0 OR total_open_bets_value IS NOT NULL OR total_open_bets_profit IS NOT NULL\n\n$OUT$) AS dbl (\n    loginid VARCHAR,\n    currency_code VARCHAR,\n    effective_date DATE,\n    account_balance NUMERIC,\n    total_open_bets_value NUMERIC,\n    total_open_bets_profit NUMERIC,\n    total_equity NUMERIC,\n    portfolio TEXT\n)\nWHERE broker_code = ANY (ps.broker_codes)\n    \n""}}",Accounting > Outstanding Contracts,table,,False,False,823,,Accounting Outstanding Contracts,,native,,,,2019-04-09 09:35:01.169,{}
False,,"{'id': 162, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/159/', 'personal_owner_id': None, 'slug': 'accounting'}",162.0,,2019-04-09 09:35:08.402,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Accounting > Pay Agent report -v1\nWITH params AS (SELECT\n  \'2019-01-01\'::DATE AS start_date,\n  \'2019-02-28\'::DATE AS end_date\n)\n\nSELECT dbl.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink(ps.srvname, $$\n\nSELECT\n    TO_CHAR(pp.payment_time, \'Mon\') AS ""MONTH"",\n    pp.payment_time::DATE           AS ""Date"",\n    pa.client_loginid               AS ""Loginid"",\n    pa.payment_agent_name           AS ""PA Name"",\n    pa.target_country               AS ""PA Country"",\n    COALESCE(\n        df.payment_processor,\n        CASE WHEN ppg.description > \'\' THEN ppg.description ELSE pp.payment_gateway_code END\n        )                           AS ""Method"",\n    COALESCE(bw.bom_bank_info, df.payment_processor, ppc.currency_code, \'n/a\')        AS ""Bank/Wallet"",\n    pa.currency_code                AS ""Original Currency"",\n    pp.amount                       AS ""Original Currency Amount"",\n    transaction.round_amount(\'USD\', pp.amount * exch.rate)  AS ""USD Amount"",\n    pp.remark                       AS ""Payment Remark""\nFROM betonmarkets.payment_agent AS pa\nJOIN transaction.account AS ta\n    ON ta.client_loginid=pa.client_loginid\nJOIN payment.payment AS pp\n    ON pp.account_id=ta.id\nJOIN payment.payment_gateway AS ppg\n    ON ppg.code=pp.payment_gateway_code\nLEFT JOIN payment.doughflow AS df\n    ON df.payment_id=pp.id\nLEFT JOIN payment.bank_wire AS bw\n    ON bw.payment_id=pp.id\nLEFT JOIN payment.cryptocurrency AS ppc\n    ON ppc.payment_id=pp.id\nLEFT JOIN data_collection.exchangetousd_rate(pa.currency_code, pp.payment_time) exch (rate)\n    ON true\nWHERE $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP <= pp.payment_time AND pp.payment_time < $$|| quote_nullable(params.end_date +1) ||$$::TIMESTAMP\n  AND pp.payment_gateway_code NOT IN (\'free_gift\', \'payment_agent_transfer\', \'currency_conversion_transfer\', \'affiliate_reward\', \'account_transfer\')\n  AND pp.amount > 0\n\n$$) dbl (\n  ""MONTH"" TEXT,\n  ""Date"" TEXT,\n  ""Loginid"" TEXT,\n  ""PA Name"" TEXT,\n  ""PA Country"" TEXT,\n  ""Method"" TEXT,\n  ""Bank/Wallet"" TEXT,\n  ""Original Currency"" TEXT,\n  ""Original Currency Amount"" TEXT,\n  ""USD Amount"" TEXT,\n  ""Payment Remark"" TEXT\n)\norder by 2,3'}}",Accounting > Pay Agent report -v1,table,,False,False,825,,Accounting Pay Agent report -v1,,native,,,,2019-04-09 09:35:08.402,{}
False,,"{'id': 181, 'name': 'Accounting', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'accounting'}",181.0,,2019-04-09 09:38:39.331,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Accounting > Pay Agent report -v1\nWITH params AS (SELECT\n  \'2019-01-01\'::DATE AS start_date,\n  \'2019-02-28\'::DATE AS end_date\n)\n\nSELECT dbl.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink(ps.srvname, $$\n\nSELECT\n    TO_CHAR(pp.payment_time, \'Mon\') AS ""MONTH"",\n    pp.payment_time::DATE           AS ""Date"",\n    pa.client_loginid               AS ""Loginid"",\n    pa.payment_agent_name           AS ""PA Name"",\n    pa.target_country               AS ""PA Country"",\n    COALESCE(\n        df.payment_processor,\n        CASE WHEN ppg.description > \'\' THEN ppg.description ELSE pp.payment_gateway_code END\n        )                           AS ""Method"",\n    COALESCE(bw.bom_bank_info, df.payment_processor, ppc.currency_code, \'n/a\')        AS ""Bank/Wallet"",\n    pa.currency_code                AS ""Original Currency"",\n    pp.amount                       AS ""Original Currency Amount"",\n    transaction.round_amount(\'USD\', pp.amount * exch.rate)  AS ""USD Amount"",\n    pp.remark                       AS ""Payment Remark""\nFROM betonmarkets.payment_agent AS pa\nJOIN transaction.account AS ta\n    ON ta.client_loginid=pa.client_loginid\nJOIN payment.payment AS pp\n    ON pp.account_id=ta.id\nJOIN payment.payment_gateway AS ppg\n    ON ppg.code=pp.payment_gateway_code\nLEFT JOIN payment.doughflow AS df\n    ON df.payment_id=pp.id\nLEFT JOIN payment.bank_wire AS bw\n    ON bw.payment_id=pp.id\nLEFT JOIN payment.cryptocurrency AS ppc\n    ON ppc.payment_id=pp.id\nLEFT JOIN data_collection.exchangetousd_rate(pa.currency_code, pp.payment_time) exch (rate)\n    ON true\nWHERE $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP <= pp.payment_time AND pp.payment_time < $$|| quote_nullable(params.end_date +1) ||$$::TIMESTAMP\n  AND pp.payment_gateway_code NOT IN (\'free_gift\', \'payment_agent_transfer\', \'currency_conversion_transfer\', \'affiliate_reward\', \'account_transfer\')\n  AND pp.amount > 0\n\n$$) dbl (\n  ""MONTH"" TEXT,\n  ""Date"" TEXT,\n  ""Loginid"" TEXT,\n  ""PA Name"" TEXT,\n  ""PA Country"" TEXT,\n  ""Method"" TEXT,\n  ""Bank/Wallet"" TEXT,\n  ""Original Currency"" TEXT,\n  ""Original Currency Amount"" TEXT,\n  ""USD Amount"" TEXT,\n  ""Payment Remark"" TEXT\n)\norder by 2,3'}}",Accounting > Pay Agent report -v1,table,,False,False,835,,Accounting Pay Agent report -v1,,native,,,,2019-04-09 09:38:39.331,{}
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-10-04 03:16:51.837,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'native': {'query': ""--Accounts depositing from 1 IP\n\nselect\nip,\nsum(amount),\ncount (distinct client_loginid) as number,\nstring_agg (distinct cast ((client_loginid) as text), ';') as clients,\nstring_agg (distinct cast ((residence) as text), ';') as countries\n\nfrom \n(SELECT\n--d.payment_id,\nd.ip_address as ip,\nd.transaction_type,\nt.amount,\nd.created_by,\n--t.account_id,\na.client_loginid,\nc.residence,\nt.transaction_time::timestamp::date as day,\n\ncase WHEN client_loginid IN (select client_loginid from betonmarkets.payment_agent) THEN 'Yes'\nElse 'No'\nend payment_agent_status\n--count(d.payment_id) as number,\n--string_agg (distinct cast ((client_loginid) as text), ';') as logins\nFROM payment.doughflow d\njoin transaction.transaction t on d.payment_id = t.payment_id\njoin transaction.account a on a.id=t.account_id\njoin betonmarkets.client c on c.loginid=a.client_loginid \nwhere created_by = 'INTERNET'\nand transaction_type = 'deposit'\nand t.transaction_time >= Now()- '24 hour':: interval\norder by client_loginid desc\n) i\nwhere payment_agent_status = 'No'\ngroup by ip\norder by number desc""}, 'type': 'native', 'database': 2}",,table,,False,False,1055,,Accounts depositing from 1 IP,,native,,"[{'name': 'ip', 'display_name': 'ip', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 14.0}}}}, {'name': 'sum', 'display_name': 'sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 142.0, 'max': 142.0, 'avg': 142.0, 'sd': None, 'q1': 142.0, 'q3': 142.0}}}}, {'name': 'number', 'display_name': 'number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5.0, 'max': 5.0, 'avg': 5.0, 'sd': None, 'q1': 5.0, 'q3': 5.0}}}}, {'name': 'clients', 'display_name': 'clients', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 44.0}}}}, {'name': 'countries', 'display_name': 'countries', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}]",,2019-10-04 03:28:04.710,{}
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-05-07 03:37:49.168,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \nstaff_loginid,\ncount (distinct client_loginid) foll_number\nfrom\n(select\nt.account_id,\na.client_loginid,\nt.staff_loginid\nfrom transaction.transaction t\njoin transaction.account a on a.id=account_id\nwhere staff_loginid like '#%'\nand transaction_time >= NOW()-'24 hour'::interval\n\nand referrer_type = 'financial_market_bet'\ngroup by account_id, client_loginid, staff_loginid\norder by client_loginid desc) a\ngroup by staff_loginid\norder by foll_number desc""}}",,table,,False,False,957,,Accounts with followers (#),,native,,"[{'name': 'staff_loginid', 'display_name': 'staff_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'foll_number', 'display_name': 'foll_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-21 01:19:28.733,"{'table.pivot_column': 'foll_number', 'table.cell_column': 'foll_number'}"
False,,"{'id': 39, 'name': ""Eric Lopes's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 40, 'slug': 'eric_lopes_s_personal_collection'}",39.0,,2019-02-18 05:58:01.981,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'database': 2, 'type': 'query', 'query': {'source-table': 115, 'filter': ['=', ['field-id', 1056], 215121], 'breakout': [['field-id', 1050]]}}",,progress,,False,False,380,,"Accounts, Filtered by ID",,query,,"[{'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/BigInteger', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4285794.0, 'max': 4285794.0, 'avg': 4285794.0, 'sd': None, 'q1': 4285794.0, 'q3': 4285794.0}}}}]",115.0,2019-02-18 05:59:49.130,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-03 12:31:48.109,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with by_minute_data as\n(\n    select \n        to_timestamp(((extract(epoch from purchase_minute)::bigint)/(60*6))*360) as six_minute,\n        market,\n        sum(total_buy) as total_buy,\n        sum(profit) as profit\n    from\n    (\n        select \n            currency_code,\n            purchase_minute,\n            market,\n            total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n            profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n        from\n        (\n            select\n                ta.currency_code,\n                bm.market, \n                date_trunc('minute', purchase_time) as purchase_minute, \n                sum(buy_price) as total_buy,\n                sum(buy_price - sell_price) as profit\n            from only bet.financial_market_bet fmb left join bet.market bm\n            on bm.symbol = fmb.underlying_symbol\n            left join transaction.account ta\n            on ta.id= fmb.account_id\n            where purchase_time >= current_date\n            and purchase_time < date_trunc('minute', now())\n            group by 1,2,3\n        ) tmp\n    ) tmp2\n    group by 1,2\n)\n\nselect\n  market,\n  six_minute,\n  -- sum(amount) OVER (PARTITION BY circle_id ORDER BY ea_year, ea_month) AS cum_amt\n  sum(profit) over (partition by market order by six_minute asc rows between unbounded preceding and current row)\nfrom by_minute_data\norder by 2,1""}}",since midnight GMT,line,,False,False,996,,accumulated company profit (6 minute intervals),,native,,"[{'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.792857142857143}}}}, {'name': 'six_minute', 'display_name': 'six_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 51, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T05:00:00.000Z'}}}}, {'name': 'sum', 'display_name': 'sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 140, 'nil%': 0.0}, 'type': {'type/Number': {'min': -16488.995951362685, 'max': 4422.453181177842, 'avg': -939.6225680269924, 'sd': 4775.949266584644, 'q1': -752.2001916583994, 'q3': 1315.845469483389}}}}]",,2019-10-14 05:03:10.789,"{'graph.dimensions': ['six_minute', 'market'], 'graph.metrics': ['sum'], 'graph.y_axis.scale': 'linear', 'table.pivot_column': 'market', 'table.cell_column': 'sum'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-31 05:17:19.945,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with by_minute_data as\n(\n    select \n        purchase_minute,\n        market,\n        sum(total_buy) as total_buy,\n        sum(profit) as profit\n    from\n    (\n        select \n            currency_code,\n            purchase_minute,\n            market,\n            total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n            profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n        from\n        (\n            select\n                ta.currency_code,\n                bm.market, \n                date_trunc('minute', purchase_time) as purchase_minute, \n                sum(buy_price) as total_buy,\n                sum(buy_price - sell_price) as profit\n            from only bet.financial_market_bet fmb left join bet.market bm\n            on bm.symbol = fmb.underlying_symbol\n            left join transaction.account ta\n            on ta.id= fmb.account_id\n            where purchase_time >= current_date\n            and purchase_time < date_trunc('minute', now())\n            group by 1,2,3\n        ) tmp\n    ) tmp2\n    group by 1,2\n)\n\nselect\n  market,\n  purchase_minute,\n  -- sum(amount) OVER (PARTITION BY circle_id ORDER BY ea_year, ea_month) AS cum_amt\n  sum(profit) over (partition by market order by purchase_minute asc rows between unbounded preceding and current row)\nfrom by_minute_data\norder by 2,1""}}",,line,,False,False,985,,accumulated company profit by the minute,,native,,"[{'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.905343511450382}}}}, {'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 303, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T05:02:00.000Z'}}}}, {'name': 'sum', 'display_name': 'sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 655, 'nil%': 0.0}, 'type': {'type/Number': {'min': -17463.7403809912, 'max': 7313.781110941631, 'avg': -1089.6765427026667, 'sd': 5215.4248162366775, 'q1': -1640.091556878928, 'q3': 1980.0457281374352}}}}]",,2019-10-14 05:03:14.645,"{'graph.metrics': ['sum'], 'graph.dimensions': ['purchase_minute', 'market'], 'graph.y_axis.scale': 'pow'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-02 13:51:12.801,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with by_minute_data as\n(\n    select \n        purchase_minute,\n        market,\n        sum(count_buy) as count_buy\n    from\n    (\n        select \n            currency_code,\n            purchase_minute,\n            market,\n            count_buy,\n            total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n            profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n        from\n        (\n            select\n                ta.currency_code,\n                bm.market, \n                date_trunc('minute', purchase_time) as purchase_minute, \n                count(*) as count_buy,\n                sum(buy_price) as total_buy,\n                sum(buy_price - sell_price) as profit\n            from only bet.financial_market_bet fmb left join bet.market bm\n            on bm.symbol = fmb.underlying_symbol\n            left join transaction.account ta\n            on ta.id= fmb.account_id\n            where purchase_time >= current_date\n            and purchase_time < date_trunc('minute', now())\n            group by 1,2,3\n        ) tmp\n    ) tmp2\n    group by 1,2\n)\n\nselect\n  market,\n  purchase_minute,\n  -- sum(amount) OVER (PARTITION BY circle_id ORDER BY ea_year, ea_month) AS cum_amt\n  sum(count_buy::bigint) over (partition by market order by purchase_minute asc rows between unbounded preceding and current row)\nfrom by_minute_data\norder by 2,1""}}",,line,,False,False,988,,"accumulated count of purchased contracts, by the minute",,native,,"[{'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.905343511450382}}}}, {'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 303, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T05:02:00.000Z'}}}}, {'name': 'sum', 'display_name': 'sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 647, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 153929.0, 'avg': 36291.10534351145, 'sd': 48963.60475811131, 'q1': 1154.990307922423, 'q3': 70481.53103212724}}}}]",,2019-10-14 05:03:10.849,"{'graph.dimensions': ['purchase_minute', 'market'], 'graph.metrics': ['sum']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-05 06:22:23.625,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with by_minute_data as\n(\n    select \n        purchase_minute,\n        market,\n        sum(count_buy) as count_buy\n    from\n    (\n        select \n            currency_code,\n            purchase_minute,\n            market,\n            count_buy,\n            total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n            profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n        from\n        (\n            select\n                ta.currency_code,\n                bm.market, \n                date_trunc('minute', purchase_time) as purchase_minute, \n                count(*) as count_buy,\n                sum(buy_price) as total_buy,\n                sum(buy_price - sell_price) as profit\n            from only bet.financial_market_bet fmb left join bet.market bm\n            on bm.symbol = fmb.underlying_symbol\n            left join transaction.account ta\n            on ta.id= fmb.account_id\n            where purchase_time >= current_date\n            and purchase_time < date_trunc('minute', now())\n            group by 1,2,3\n        ) tmp\n    ) tmp2\n    group by 1,2\n)\n\nselect\n  market,\n  purchase_minute,\n  -- sum(amount) OVER (PARTITION BY circle_id ORDER BY ea_year, ea_month) AS cum_amt\n  sum(count_buy::bigint) over (partition by market order by purchase_minute asc rows between unbounded preceding and current row)\nfrom by_minute_data\norder by 2,1""}}",,line,,False,False,998,,"accumulated count of purchased contracts, by the minute (log scale)",,native,,"[{'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 6.031746031746032}}}}, {'name': 'purchase_minute', 'display_name': 'Purchase Minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 371, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-06-05T00:00:00.000Z', 'latest': '2019-06-05T06:20:00.000Z'}}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 796, 'nil%': 0}, 'type': {'type/Number': {'min': 1, 'max': 132336, 'avg': 31191.429792429793, 'sd': 42407.761006816276, 'q1': 1241.2782789251207, 'q3': 60033.76168658017}}}}]",,2019-06-05 06:22:23.625,"{'graph.dimensions': ['purchase_minute', 'market'], 'graph.metrics': ['sum'], 'graph.y_axis.scale': 'log'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-03 12:28:56.353,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with by_minute_data as\n(\n    select \n        to_timestamp(((extract(epoch from purchase_minute)::bigint)/(60*5))*3000) as five_min,\n        market,\n        sum(total_buy) as total_buy,\n        sum(profit) as profit\n    from\n    (\n        select \n            currency_code,\n            purchase_minute,\n            market,\n            total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n            profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n        from\n        (\n            select\n                ta.currency_code,\n                bm.market, \n                date_trunc('minute', purchase_time) as purchase_minute, \n                sum(buy_price) as total_buy,\n                sum(buy_price - sell_price) as profit\n            from only bet.financial_market_bet fmb left join bet.market bm\n            on bm.symbol = fmb.underlying_symbol\n            left join transaction.account ta\n            on ta.id= fmb.account_id\n            where purchase_time >= current_date\n            and purchase_time < date_trunc('minute', now())\n            group by 1,2,3\n        ) tmp\n    ) tmp2\n    group by 1,2\n)\n\nselect\n  market,\n  five_min,\n  -- sum(amount) OVER (PARTITION BY circle_id ORDER BY ea_year, ea_month) AS cum_amt\n  sum(profit) over (partition by market order by five_min asc rows between unbounded preceding and current row)\nfrom by_minute_data\norder by 2,1""}}",,line,,False,False,995,,accumulated profit by 5 minute intervals (linear scale),,native,,"[{'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 7.358422939068101}}}}, {'name': 'five_min', 'display_name': 'Five Min', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 150, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2464-03-11T00:00:00.000Z', 'latest': '2464-03-16T04:10:00.000Z'}}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 558, 'nil%': 0}, 'type': {'type/Number': {'min': -102684.03798392761, 'max': 22129.56007076968, 'avg': -17240.98483825595, 'sd': 39295.98311377822, 'q1': -12809.608632791242, 'q3': 6877.524452405744}}}}]",,2019-06-03 12:28:56.353,"{'graph.dimensions': ['five_min', 'market'], 'graph.metrics': ['sum']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-02 14:13:09.756,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with by_minute_data as\n(\n    select \n        purchase_minute,\n        market,\n        sum(total_buy) as total_buy,\n        sum(profit) as profit\n    from\n    (\n        select \n            currency_code,\n            purchase_minute,\n            market,\n            total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n            profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n        from\n        (\n            select\n                ta.currency_code,\n                bm.market, \n                date_trunc('minute', purchase_time) as purchase_minute, \n                sum(buy_price) as total_buy,\n                sum(buy_price - sell_price) as profit\n            from only bet.financial_market_bet fmb left join bet.market bm\n            on bm.symbol = fmb.underlying_symbol\n            left join transaction.account ta\n            on ta.id= fmb.account_id\n            where purchase_time >= current_date\n            and purchase_time < date_trunc('minute', now())\n            group by 1,2,3\n        ) tmp\n    ) tmp2\n    group by 1,2\n)\n\nselect\n  market,\n  purchase_minute,\n  -- sum(amount) OVER (PARTITION BY circle_id ORDER BY ea_year, ea_month) AS cum_amt\n  sum(profit) over (partition by market order by purchase_minute asc rows between unbounded preceding and current row)\nfrom by_minute_data\norder by 2,1""}}",,line,,False,False,989,,accumulated profit by the minute (linear scale),,native,,"[{'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.905343511450382}}}}, {'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 303, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T05:02:00.000Z'}}}}, {'name': 'sum', 'display_name': 'sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 655, 'nil%': 0.0}, 'type': {'type/Number': {'min': -17463.7403809912, 'max': 7313.781110941631, 'avg': -1089.6765427026667, 'sd': 5215.4248162366775, 'q1': -1640.091556878928, 'q3': 1980.0457281374352}}}}]",,2019-10-14 05:03:12.849,"{'graph.metrics': ['sum'], 'graph.dimensions': ['purchase_minute', 'market'], 'graph.y_axis.scale': 'linear'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-30 08:09:21.925,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with by_minute_data as\n(\n    select\n        date_trunc('hour', purchase_minute) as purchase_time,\n        --to_timestamp(floor(extract(epoch from purchase_minute)::bigint/15)*15) as purchase_time,\n        --symbol,\n        submarket,\n        sum(total_buy) as total_buy,\n        sum(profit) as profit\n    from\n    (\n        select \n            currency_code,\n            purchase_minute,\n            symbol,\n            submarket,\n            total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n            profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n        from\n        (\n            select\n                ta.currency_code,\n                bm.symbol as symbol, --bm.market, \n                coalesce(nullif(bm.submarket, ''), bm.market, 'none') as submarket,\n                date_trunc('minute', purchase_time) as purchase_minute, \n                sum(buy_price) as total_buy,\n                sum(buy_price - sell_price) as profit\n            from only bet.financial_market_bet fmb left join bet.market bm\n            on bm.symbol = fmb.underlying_symbol\n            left join transaction.account ta\n            on ta.id= fmb.account_id\n            where purchase_time >= current_date \n            and purchase_time < date_trunc('minute', now()) \n            group by 1,2,3,4\n        ) tmp\n    ) tmp2\n    group by 1,2--,3\n)\n\nselect\n  --symbol,\n  submarket,\n  purchase_time,\n  -- sum(amount) OVER (PARTITION BY circle_id ORDER BY ea_year, ea_month) AS cum_amt\n  sum(total_buy) over (partition by submarket order by purchase_time asc rows between unbounded preceding and current row)\nfrom by_minute_data\n--where --substr(symbol, 1, 1) = 'W' \n--or \n--substr(symbol, 1, 1) = 'f'\norder by 2,1""}}",note: submarkets are broken -- vol-100 shows up as volidx,line,,False,False,1008,37.0,"Accumulated turnover by submarket, by the hour",84c69c27-5062-4d7e-8dee-b02455be4a42,native,,"[{'name': 'submarket', 'display_name': 'Submarket', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 9.791666666666666}}}}, {'name': 'purchase_time', 'display_name': 'Purchase Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-07-03T00:00:00.000Z', 'latest': '2019-07-03T03:00:00.000Z'}}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0}, 'type': {'type/Number': {'min': 7, 'max': 370881.0021688305, 'avg': 79523.10428276805, 'sd': 123291.0688011216, 'q1': 2477.6881185320726, 'q3': 132278.60301181822}}}}]",,2019-07-03 03:12:06.858,"{'graph.metrics': ['sum'], 'graph.dimensions': ['purchase_time', 'submarket'], 'graph.y_axis.scale': 'pow', 'series_settings': {'R_10': {'line.marker_enabled': True}, 'R_100': {'line.marker_enabled': True}, 'R_25': {'line.marker_enabled': True}, 'R_50': {'line.marker_enabled': True}, 'R_75': {'line.marker_enabled': True}, 'RDBEAR': {'line.marker_enabled': True}, 'RDBULL': {'line.marker_enabled': True}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-30 07:11:59.936,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with by_minute_data as\n(\n    select\n        date_trunc('hour', purchase_minute) as purchase_time,\n        --to_timestamp(floor(extract(epoch from purchase_minute)::bigint/15)*15) as purchase_time,\n        market,\n        sum(total_buy) as total_buy,\n        sum(profit) as profit\n    from\n    (\n        select \n            currency_code,\n            purchase_minute,\n            market,\n            total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n            profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n        from\n        (\n            select\n                ta.currency_code,\n                bm.symbol as market, --bm.market, \n                date_trunc('minute', purchase_time) as purchase_minute, \n                sum(buy_price) as total_buy,\n                sum(buy_price - sell_price) as profit\n            from only bet.financial_market_bet fmb left join bet.market bm\n            on bm.symbol = fmb.underlying_symbol\n            left join transaction.account ta\n            on ta.id= fmb.account_id\n            where purchase_time >= current_date\n            and purchase_time < date_trunc('minute', now())\n            group by 1,2,3\n        ) tmp\n    ) tmp2\n    group by 1,2\n)\n\nselect\n  market,\n  purchase_time,\n  -- sum(amount) OVER (PARTITION BY circle_id ORDER BY ea_year, ea_month) AS cum_amt\n  sum(total_buy) over (partition by market order by purchase_time asc rows between unbounded preceding and current row)\nfrom by_minute_data\nwhere substr(market, 1, 1) = 'W' or substr(market, 1, 1) = 'f'\norder by 2,1""}}",,line,,False,False,1006,,"accumulated turnover by the hour, for individual forex symbols",,native,,"[{'name': 'market', 'display_name': 'Market', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'purchase_time', 'display_name': 'Purchase Time', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-06-30 07:16:47.514,"{'graph.metrics': [None], 'graph.dimensions': [None], 'graph.y_axis.scale': 'pow', 'series_settings': {'R_10': {'line.marker_enabled': True}, 'R_100': {'line.marker_enabled': True}, 'R_25': {'line.marker_enabled': True}, 'R_50': {'line.marker_enabled': True}, 'R_75': {'line.marker_enabled': True}, 'RDBEAR': {'line.marker_enabled': True}, 'RDBULL': {'line.marker_enabled': True}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-30 06:59:12.564,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with by_minute_data as\n(\n    select\n        date_trunc('hour', purchase_minute) as purchase_time,\n        --to_timestamp(floor(extract(epoch from purchase_minute)::bigint/15)*15) as purchase_time,\n        market,\n        sum(total_buy) as total_buy,\n        sum(profit) as profit\n    from\n    (\n        select \n            currency_code,\n            purchase_minute,\n            market,\n            total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n            profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n        from\n        (\n            select\n                ta.currency_code,\n                bm.symbol as market, --bm.market, \n                date_trunc('minute', purchase_time) as purchase_minute, \n                sum(buy_price) as total_buy,\n                sum(buy_price - sell_price) as profit\n            from only bet.financial_market_bet fmb left join bet.market bm\n            on bm.symbol = fmb.underlying_symbol\n            left join transaction.account ta\n            on ta.id= fmb.account_id\n            where purchase_time >= current_date\n            and purchase_time < date_trunc('minute', now())\n            group by 1,2,3\n        ) tmp\n    ) tmp2\n    group by 1,2\n)\n\nselect\n  market,\n  purchase_time,\n  -- sum(amount) OVER (PARTITION BY circle_id ORDER BY ea_year, ea_month) AS cum_amt\n  sum(total_buy) over (partition by market order by purchase_time asc rows between unbounded preceding and current row)\nfrom by_minute_data\nwhere substr(market, 1, 1) = 'R'\norder by 2,1""}}",,line,,False,False,1005,,"accumulated turnover by the hour, for individual volidx symbols",,native,,"[{'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 4.714285714285714}}}}, {'name': 'purchase_time', 'display_name': 'Purchase Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-06-30T00:00:00.000Z', 'latest': '2019-06-30T07:00:00.000Z'}}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 56, 'nil%': 0}, 'type': {'type/Number': {'min': 1720.706669319055, 'max': 326245.8092528176, 'avg': 81161.73284206273, 'sd': 88530.97929877455, 'q1': 13969.676940647083, 'q3': 105751.62573252556}}}}]",,2019-06-30 07:11:13.124,"{'graph.metrics': ['sum'], 'graph.dimensions': ['purchase_time', 'market'], 'graph.y_axis.scale': 'pow', 'series_settings': {'R_10': {'line.marker_enabled': True}, 'R_100': {'line.marker_enabled': True}, 'R_25': {'line.marker_enabled': True}, 'R_50': {'line.marker_enabled': True}, 'R_75': {'line.marker_enabled': True}, 'RDBEAR': {'line.marker_enabled': True}, 'RDBULL': {'line.marker_enabled': True}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-30 07:13:24.320,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with by_minute_data as\n(\n    select\n        date_trunc('hour', purchase_minute) as purchase_time,\n        --to_timestamp(floor(extract(epoch from purchase_minute)::bigint/15)*15) as purchase_time,\n        market,\n        sum(total_buy) as total_buy,\n        sum(profit) as profit\n    from\n    (\n        select \n            currency_code,\n            purchase_minute,\n            market,\n            total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n            profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n        from\n        (\n            select\n                ta.currency_code,\n                bm.symbol as market, --bm.market, \n                date_trunc('minute', purchase_time) as purchase_minute, \n                sum(buy_price) as total_buy,\n                sum(buy_price - sell_price) as profit\n            from only bet.financial_market_bet fmb left join bet.market bm\n            on bm.symbol = fmb.underlying_symbol\n            left join transaction.account ta\n            on ta.id= fmb.account_id\n            where purchase_time >= current_date\n            and purchase_time < date_trunc('minute', now()) \n            group by 1,2,3\n        ) tmp\n    ) tmp2\n    group by 1,2\n)\n\nselect\n  market,\n  purchase_time,\n  -- sum(amount) OVER (PARTITION BY circle_id ORDER BY ea_year, ea_month) AS cum_amt\n  sum(total_buy) over (partition by market order by purchase_time asc rows between unbounded preceding and current row)\nfrom by_minute_data\nwhere \n    substr(market, 1, 1) <> 'W' \n    and substr(market, 1, 1) <> 'f'\n    and substr(market, 1, 1) <> 'R'\norder by 2,1""}}",,line,,False,False,1007,,"accumulated turnover by the hour, for other individual symbols",,native,,"[{'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 8}}}}, {'name': 'purchase_time', 'display_name': 'Purchase Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-06-27T00:00:00.000Z', 'latest': '2019-06-27T07:00:00.000Z'}}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0}, 'type': {'type/Number': {'min': 3.4958, 'max': 25.4763657, 'avg': 15.453090949999998, 'sd': 9.988438378632619, 'q1': 6.9856, 'q3': 23.9856}}}}]",,2019-06-30 07:16:24.407,"{'graph.metrics': ['sum'], 'graph.dimensions': ['purchase_time', 'market'], 'graph.y_axis.scale': 'linear', 'series_settings': {'R_10': {'line.marker_enabled': True}, 'R_100': {'line.marker_enabled': True}, 'R_25': {'line.marker_enabled': True}, 'R_50': {'line.marker_enabled': True}, 'R_75': {'line.marker_enabled': True}, 'RDBEAR': {'line.marker_enabled': True}, 'RDBULL': {'line.marker_enabled': True}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-31 05:19:13.148,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with by_minute_data as\n(\n    select \n        purchase_minute,\n        market,\n        sum(total_buy) as total_buy,\n        sum(profit) as profit\n    from\n    (\n        select \n            currency_code,\n            purchase_minute,\n            market,\n            total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n            profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n        from\n        (\n            select\n                ta.currency_code,\n                bm.market, \n                date_trunc('minute', purchase_time) as purchase_minute, \n                sum(buy_price) as total_buy,\n                sum(buy_price - sell_price) as profit\n            from only bet.financial_market_bet fmb left join bet.market bm\n            on bm.symbol = fmb.underlying_symbol\n            left join transaction.account ta\n            on ta.id= fmb.account_id\n            where purchase_time >= current_date\n            and purchase_time < date_trunc('minute', now())\n            group by 1,2,3\n        ) tmp\n    ) tmp2\n    group by 1,2\n)\n\nselect\n  market,\n  purchase_minute,\n  -- sum(amount) OVER (PARTITION BY circle_id ORDER BY ea_year, ea_month) AS cum_amt\n  sum(total_buy) over (partition by market order by purchase_minute asc rows between unbounded preceding and current row)\nfrom by_minute_data\norder by 2,1""}}",,line,,False,False,986,,accumulated turnover by the minute,,native,,"[{'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.905343511450382}}}}, {'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 303, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T05:02:00.000Z'}}}}, {'name': 'sum', 'display_name': 'sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 655, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.5, 'max': 903189.4081225105, 'avg': 210152.50661005673, 'sd': 275360.7711254003, 'q1': 8824.394912136562, 'q3': 359378.24822998524}}}}]",,2019-10-14 05:03:10.730,"{'graph.metrics': ['sum'], 'graph.dimensions': ['purchase_minute', 'market'], 'graph.y_axis.scale': 'pow'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-02 14:15:13.383,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with by_minute_data as\n(\n    select \n        purchase_minute,\n        market,\n        sum(total_buy) as total_buy,\n        sum(profit) as profit\n    from\n    (\n        select \n            currency_code,\n            purchase_minute,\n            market,\n            total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n            profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n        from\n        (\n            select\n                ta.currency_code,\n                bm.market, \n                date_trunc('minute', purchase_time) as purchase_minute, \n                sum(buy_price) as total_buy,\n                sum(buy_price - sell_price) as profit\n            from only bet.financial_market_bet fmb left join bet.market bm\n            on bm.symbol = fmb.underlying_symbol\n            left join transaction.account ta\n            on ta.id= fmb.account_id\n            where purchase_time >= current_date\n            and purchase_time < date_trunc('minute', now())\n            group by 1,2,3\n        ) tmp\n    ) tmp2\n    group by 1,2\n)\n\nselect\n  market,\n  purchase_minute,\n  -- sum(amount) OVER (PARTITION BY circle_id ORDER BY ea_year, ea_month) AS cum_amt\n  sum(total_buy) over (partition by market order by purchase_minute asc rows between unbounded preceding and current row)\nfrom by_minute_data\norder by 2,1""}}",,line,,False,False,990,,accumulated turnover by the minute (linear scale),,native,,"[{'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.905343511450382}}}}, {'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 303, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T05:02:00.000Z'}}}}, {'name': 'sum', 'display_name': 'sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 655, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.5, 'max': 903203.7181225105, 'avg': 210155.73882379723, 'sd': 275361.028573506, 'q1': 8824.394912136562, 'q3': 359378.24822998524}}}}]",,2019-10-14 05:03:12.856,"{'graph.metrics': ['sum'], 'graph.dimensions': ['purchase_minute', 'market'], 'graph.y_axis.scale': 'linear'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-08-21 09:15:43.113,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'country_code': {'id': '543aab47-1ec7-cac6-1e55-cc48aa830478', 'name': 'country_code', 'display-name': '2-letter country code', 'type': 'dimension', 'required': False, 'dimension': ['field-id', 836], 'widget-type': 'location/country'}}, 'query': ""with relevant_accounts as (\nselect ta.id, betonmarkets.client.residence from transaction.account ta left join betonmarkets.client\non ta.client_loginid = betonmarkets.client.loginid\nwhere {{country_code}}\n)\n\nselect\n    date_trunc('hour', purchase_time) as purchase_hour,\n    date_part('hour', purchase_time) as only_hour,\n    date_trunc('day', purchase_time) as purchase_day,\n    residence,\n    count(distinct account_id) as distinct_accounts\nfrom relevant_accounts ra left join bet.financial_market_bet fmb\non fmb.account_id = ra.id\nwhere ((purchase_time >= current_date) and (purchase_time < date_trunc('hour', now())))\nor ((purchase_time >= current_date + interval '-7d') and (purchase_time < current_date + interval '-6d'))\ngroup by 1,2,3,4""}, 'type': 'native', 'database': 2}",today compared to a week ago,line,,False,False,1029,37.0,active accounts by hour,0c3e8cf4-f5f8-4ad6-b70c-e34bae67c9d6,native,,"[{'name': 'purchase_hour', 'display_name': 'Purchase Hour', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 35, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-08-14T00:00:00.000Z', 'latest': '2019-08-21T10:00:00.000Z'}}}}, {'name': 'only_hour', 'display_name': 'Only Hour', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 23.0, 'avg': 9.316279069767441, 'sd': 6.58970484154097, 'q1': 3.8960584136120993, 'q3': 14.307692307692308}}}}, {'name': 'purchase_day', 'display_name': 'Purchase Day', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-08-14T00:00:00.000Z', 'latest': '2019-08-21T00:00:00.000Z'}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'distinct_accounts', 'display_name': 'Distinct Accounts', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 95, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 281.0, 'avg': 29.23488372093023, 'sd': 45.85165764552497, 'q1': 5.137268569194012, 'q3': 29.629027074685638}}}}]",,2019-08-21 11:37:31.735,"{'graph.dimensions': ['only_hour', 'purchase_day'], 'graph.metrics': ['distinct_accounts'], 'series_settings': {'14': {'line.marker_enabled': True}, '21': {'line.marker_enabled': True}, 'August 14, 2019, 12:00 AM': {'line.marker_enabled': True}, 'August 21, 2019, 12:00 AM': {'line.marker_enabled': True}}, 'table.pivot_column': 'purchase_day', 'table.cell_column': 'only_hour'}"
False,,,,,2019-06-27 04:18:31.403,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,4,"{'database': 4, 'type': 'native', 'native': {'query': ""with fmb as (select distinct account_id from bet.financial_market_bet where purchase_time >= {{start_date}}::date -- default '2019-01-01'\nand purchase_time < {{end_date}}::date + interval '1d' -- default '2019-04-01'\n)\nselect binary_user_id, string_agg(client_loginid::text, ',') all_loginids\nfrom fmb left join transaction.account ta\non ta.id = fmb.account_id\ngroup by 1\n"", 'template-tags': {'start_date': {'id': '1bff45c3-cd94-718a-feee-26158128e127', 'name': 'start_date', 'display-name': 'start date (inclusive)', 'type': 'date', 'required': True, 'default': '2019-01-01'}, 'end_date': {'id': '4b1aab6d-9c83-1a4d-25cf-b28003935ff2', 'name': 'end_date', 'display-name': 'end date (inclusive)', 'type': 'date', 'required': True, 'default': '2019-03-31'}}}}",,table,,False,False,1003,,Active clients during a specified period (MF),,native,,"[{'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5167706.0, 'max': 6047827.0, 'avg': 5772557.0, 'sd': 413250.3116377127, 'q1': 5507253.5, 'q3': 6037860.5}}}}, {'name': 'all_loginids', 'display_name': 'All Loginids', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.75}}}}]",,2019-06-27 04:20:13.096,"{'table.pivot_column': 'binary_user_id', 'table.cell_column': 'binary_user_id'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-20 05:34:34.516,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select  Count(Distinct(mt5_deals_2019.""Login"")) As Clients\nfrom mt5_deals_2019\nJOIN mt5_users ON mt5_users.""Login"" = mt5_deals_2019.""Login""\nWHERE ""Action"" IN (0,1) -- In Trades only\n\nand mt5_users.""Group"" Like \'%labuan%\'\nand {{Time}}\n\n\ngroup by date(mt5_deals_2019.""Time"")', 'template-tags': {'Time': {'widget-type': 'date/relative', 'default': 'today', 'name': 'Time', 'type': 'dimension', 'id': '48398fcc-8cce-63aa-f8b0-367bfe87f8e7', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}}}}",,scalar,,False,False,397,,Active clients Labuan,,native,,"[{'name': 'clients', 'display_name': 'Clients', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-03-05 02:06:57.980,"{'column_settings': {'[""name"",""clients""]': {'number_style': 'decimal'}}}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-20 05:36:50.344,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select  Count(Distinct(mt5_deals_2019.""Login"")) As Clients\nfrom mt5_deals_2019\nJOIN mt5_users ON mt5_users.""Login"" = mt5_deals_2019.""Login""\nWHERE ""Action"" IN (0,1) -- In Trades only\n\nand mt5_users.""Group"" Like \'%maltainvest%\'\nand {{Time}}\n\n\ngroup by date(mt5_deals_2019.""Time"")', 'template-tags': {'Time': {'widget-type': 'date/relative', 'default': 'today', 'name': 'Time', 'type': 'dimension', 'id': '5bf85724-f218-df01-c1d4-b2ab88f23dd7', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}}}}",,scalar,,False,False,398,,Active clients MaltaInvest,,native,,"[{'name': 'clients', 'display_name': 'Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 10.0, 'max': 10.0, 'avg': 10.0, 'sd': None, 'q1': 10.0, 'q3': 10.0}}}}]",,2019-02-28 10:02:17.141,"{'column_settings': {'[""name"",""clients""]': {'number_style': 'decimal'}}}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-20 05:32:03.059,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'native': {'template-tags': {'Time': {'id': '04f96bb1-4026-a672-3d17-66013e63fde4', 'name': 'Time', 'display-name': 'Time', 'type': 'dimension', 'dimension': ['field-id', 7452], 'widget-type': 'date/relative', 'required': True, 'default': 'today'}}, 'query': 'select  Count(Distinct(mt5_deals_2019.""Login"")) As Clients\nfrom mt5_deals_2019\nJOIN mt5_users ON mt5_users.""Login"" = mt5_deals_2019.""Login""\nWHERE ""Action"" IN (0,1) -- In Trades only\n\nand mt5_users.""Group"" Like \'%vanuatu%\'\nand {{Time}}\n\n\ngroup by date(mt5_deals_2019.""Time"")'}, 'type': 'native', 'database': 9}",,scalar,,False,False,396,,Active clients Vanuatu,,native,,"[{'name': 'clients', 'display_name': 'Clients', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-03-07 09:02:22.703,{}
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-15 07:32:18.386,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select  Count(Distinct(""Login"")) As Clients\nfrom mt5_deals_2019\nWHERE ""Action"" IN (0,1) -- In Trades only\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\nand ""Group"" Like \'%costarica%\'\nand {{Time}}\n\n\ngroup by date(mt5_deals_2019.""Time"")', 'template-tags': {'Time': {'widget-type': 'date/relative', 'default': 'today', 'name': 'Time', 'type': 'dimension', 'id': '81b21d75-0d8e-b624-9f04-bb3c2f2cd3f7', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}}}}",,scalar,,False,False,376,,Active clients Vol indices,,native,,"[{'name': 'clients', 'display_name': 'Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1539.0, 'max': 1539.0, 'avg': 1539.0, 'sd': None, 'q1': 1539.0, 'q3': 1539.0}}}}]",,2019-02-20 04:06:59.168,"{'table.pivot_column': 'client_trading_activity_on_vol', 'table.cell_column': 'client_trading_activity_on_vol'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-20 05:10:42.569,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select  Count(Distinct(mt5_deals_2019.""Login"")) As Clients\nfrom mt5_deals_2019\nJOIN mt5_users ON mt5_users.""Login"" = mt5_deals_2019.""Login""\nWHERE ""Action"" IN (0,1) -- In Trades only\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\nand mt5_users.""Group"" Like \'%costarica%\'\nand {{Time}}\n\n\ngroup by date(mt5_deals_2019.""Time"")', 'template-tags': {'Time': {'widget-type': 'date/relative', 'default': 'today', 'name': 'Time', 'type': 'dimension', 'id': '81b21d75-0d8e-b624-9f04-bb3c2f2cd3f7', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}}}}",,scalar,,False,False,393,,Active clients Vol indices (CR),,native,,"[{'name': 'clients', 'display_name': 'Clients', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-03 07:49:16.760,"{'table.pivot_column': 'client_trading_activity_on_vol', 'table.cell_column': 'client_trading_activity_on_vol'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-03-12 07:35:01.145,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select  Count(Distinct(mt5_deals_2019.""Login"")) As Clients\nfrom mt5_deals_2019\nJOIN mt5_users ON mt5_users.""Login"" = mt5_deals_2019.""Login""\nWHERE ""Action"" IN (0,1) -- In Trades only\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\nand mt5_users.""Group"" Like \'%costarica%\'\nand date(""Time"") >=  {{Start_Time}}\nand date(""Time"") <=  {{End_Time}}\ngroup by date(mt5_deals_2019.""Time"")', 'template-tags': {'Start_Time': {'id': 'd278ef27-7852-c98c-1a14-65cb8615fd33', 'name': 'Start_Time', 'display-name': 'Start_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'End_Time': {'id': '6e97c92c-f101-cc22-8984-0a4c12c433b2', 'name': 'End_Time', 'display-name': 'End_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,scalar,,False,False,484,,Active clients Vol indices (CR) -  Filter by date range,,native,,"[{'name': 'clients', 'display_name': 'Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1461.0, 'max': 1461.0, 'avg': 1461.0, 'sd': None, 'q1': 1461.0, 'q3': 1461.0}}}}]",,2019-04-03 07:15:35.725,"{'table.pivot_column': 'client_trading_activity_on_vol', 'table.cell_column': 'client_trading_activity_on_vol'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-20 05:12:08.019,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select  Count(Distinct(mt5_deals_2019.""Login"")) As Clients\nfrom mt5_deals_2019\nJOIN mt5_users ON mt5_users.""Login"" = mt5_deals_2019.""Login""\nWHERE ""Action"" IN (0,1) -- In Trades only\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\nand mt5_users.""Group"" Like \'%malta%\'\nand {{Time}}\n\n\ngroup by date(mt5_deals_2019.""Time"")', 'template-tags': {'Time': {'widget-type': 'date/relative', 'default': 'today', 'name': 'Time', 'type': 'dimension', 'id': '81b21d75-0d8e-b624-9f04-bb3c2f2cd3f7', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}}}}",,scalar,,False,False,394,,Active clients Vol indices (MLT),,native,,"[{'name': 'clients', 'display_name': 'Clients', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-03 07:49:15.635,"{'table.pivot_column': 'client_trading_activity_on_vol', 'table.cell_column': 'client_trading_activity_on_vol'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-03-12 07:48:10.669,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select  Count(Distinct(mt5_deals_2019.""Login"")) As Clients\nfrom mt5_deals_2019\nJOIN mt5_users ON mt5_users.""Login"" = mt5_deals_2019.""Login""\nWHERE ""Action"" IN (0,1) -- In Trades only\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\nand mt5_users.""Group"" Like \'%malta%\'\nand date(""Time"") >=  {{Start_Time}}\nand date(""Time"") <=  {{End_Time}}\ngroup by date(mt5_deals_2019.""Time"")', 'template-tags': {'Start_Time': {'id': 'be823e40-e7ce-3509-65c8-bf96f529f666', 'name': 'Start_Time', 'display-name': 'Start_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'End_Time': {'id': '596a31e5-8987-3895-6247-f7213844b9a6', 'name': 'End_Time', 'display-name': 'End_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,scalar,,False,False,486,,Active clients Vol indices (MLT) - by date range,,native,,"[{'name': 'clients', 'display_name': 'Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 12.0, 'max': 12.0, 'avg': 12.0, 'sd': None, 'q1': 12.0, 'q3': 12.0}}}}]",,2019-04-03 07:15:35.295,"{'table.pivot_column': 'client_trading_activity_on_vol', 'table.cell_column': 'client_trading_activity_on_vol'}"
False,,,,,2019-02-07 06:58:41.460,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'native': {'query': 'select pid, now() - query_start as ""duration"", query from pg_stat_activity where state <> \'idle\'\n--and query not like \'%query_start%\'\norder by duration desc'}, 'type': 'native', 'database': 2}",Anything that's running on CR at the moment,table,,False,False,348,37.0,Active queries on CR,bbd0000f-22f6-477c-84de-5f54aee0e859,native,,"[{'name': 'pid', 'display_name': 'pid', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 9499.0, 'max': 9499.0, 'avg': 9499.0, 'sd': None, 'q1': 9499.0, 'q3': 9499.0}}}}, {'name': 'duration', 'display_name': 'duration', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'query', 'display_name': 'query', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 275.0}}}}]",,2019-10-07 12:29:47.400,"{'table.columns': [{'name': '?column?', 'enabled': True}, {'name': 'query', 'enabled': True}], 'table.pivot_column': 'duration', 'table.cell_column': 'pid'}"
False,,,,,2019-03-27 04:55:11.782,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,5,"{'database': 5, 'type': 'native', 'native': {'query': 'select now() - query_start as ""duration"", query from pg_stat_activity where state <> \'idle\'\n--and query not like \'%query_start%\''}}",,table,,False,False,680,,Active queries on MLT,,native,,"[{'name': 'duration', 'display_name': 'duration', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'query', 'display_name': 'query', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 247.0}}}}]",,2019-09-22 07:20:12.525,{'table.pivot_column': 'duration'}
False,,,,,2019-02-07 07:52:42.327,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select now() - query_start as ""duration"", query from pg_stat_activity where state <> \'idle\''}}",,table,,False,False,349,,Active queries on MT5,,native,,"[{'name': 'duration', 'display_name': 'Duration', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}}}, {'name': 'query', 'display_name': 'Query', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 618.5}}}}]",,2019-04-21 00:01:55.127,{'table.pivot_column': 'query'}
False,,,,,2019-07-17 04:18:54.814,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \n    residence,\n    count(distinct binary_user_id) filter (where length(myaffiliates_token) <> 32) as unaffiliated,\n    count(distinct binary_user_id) filter (where length(myaffiliates_token) = 32) as affiliated\nfrom betonmarkets.client\ngroup by 1'}}",,table,,False,False,1021,,Affiliated versus unaffiliated clients by residence,,native,,"[{'name': 'residence', 'display_name': 'residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 249, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 1.9919678714859432}}}}, {'name': 'unaffiliated', 'display_name': 'unaffiliated', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 143, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 150923.0, 'avg': 1475.8072289156626, 'sd': 10136.461396000423, 'q1': 6.979832867927214, 'q3': 295.375}}}}, {'name': 'affiliated', 'display_name': 'affiliated', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 143, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 121361.0, 'avg': 1281.9317269076305, 'sd': 8415.074775717076, 'q1': 6.812429421403735, 'q3': 226.28291754873715}}}}]",,2019-09-10 02:51:17.186,"{'table.pivot_column': 'unaffiliated', 'table.cell_column': 'unaffiliated'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-22 02:40:54.417,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    --(call_buy - put_buy)/(call_buy + put_buy) as call_to_put,\n    --(even_buy - odd_buy)/(odd_buy + even_buy) as odd_to_even,\n    *\nfrom\n(    \n    select\n        underlying_symbol,\n        start_time,\n        expiry_time,\n        sum(buy_usd) filter (where bet_type in (\'CALL\', \'CALLE\')) as call_buy,\n        sum(buy_usd) filter (where bet_type in (\'PUT\', \'PUTE\')) as put_buy,\n        sum(buy_usd) filter (where bet_type=\'DIGITODD\') as odd_buy,\n        sum(buy_usd) filter (where bet_type=\'DIGITEVEN\') as even_buy,\n        \n        string_agg(client_loginid, \', \') as ""clients"",\n        string_agg(myaffiliates_token, \', \') as ""tokens"",\n        string_agg(staff_loginid, \', \') as ""staff_ids""\n        --string_agg(""fmb_id"", \', \') as ""financial_market_bet_ids""\n    from  \n    (\n    select\n        fmb.id::text as ""fmb_id"",\n        fmb.account_id,\n        client_loginid,\n        tt.staff_loginid,\n        underlying_symbol,\n        --bet_class,\n        bet_type,\n        --short_code,\n        start_time,\n        expiry_time,\n        buy_price*data_collection.exchangetousd_rate(ta.currency_code, now()::date::timestamp) as ""buy_usd""\n        --sell_price*data_collection.exchangetousd_rate(ta.currency_code, now()::date::timestamp) as ""sell_usd"",\n        --payout_price*data_collection.exchangetousd_rate(ta.currency_code, now()::date::timestamp) as ""payout_usd""\n    from bet.financial_market_bet fmb \n\tleft join transaction.account ta\n    on ta.id=fmb.account_id\n\tleft join transaction.transaction tt\n\ton fmb.id=tt.financial_market_bet_id\n    where purchase_time >= NOW()-\'24 hour\'::interval\n    ) tmp left join betonmarkets.client bc\n    on tmp.client_loginid=bc.loginid\n    group by 1,2,3\n) tmp2\nwhere \n(abs((call_buy - put_buy)/(call_buy + put_buy)) < 0.2 and (call_buy+put_buy) > 100)\nor\n(abs((even_buy - odd_buy)/(even_buy + odd_buy)) < 0.2 and (even_buy+odd_buy) > 100)'}}",,table,,False,False,535,,Affiliates fraud check,,native,,"[{'name': 'underlying_symbol', 'display_name': 'underlying_symbol', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'start_time', 'display_name': 'start_time', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'expiry_time', 'display_name': 'expiry_time', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'call_buy', 'display_name': 'call_buy', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'put_buy', 'display_name': 'put_buy', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'odd_buy', 'display_name': 'odd_buy', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'even_buy', 'display_name': 'even_buy', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'clients', 'display_name': 'clients', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'tokens', 'display_name': 'tokens', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'staff_ids', 'display_name': 'staff_ids', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-21 00:00:33.006,"{'table.pivot_column': 'underlying_symbol', 'table.cell_column': 'call_buy'}"
False,,,,,2019-07-09 08:50:14.793,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with active_accounts as\n(\nselect distinct account_id, binary_user_id from bet.financial_market_bet fmb left join transaction.account ta\non ta.id=fmb.account_id\nwhere purchase_time >= date_trunc('week', current_date) + interval '-7d'\nand purchase_time < date_trunc('week', current_date)\n), all_clients as \n(\nselect binary_user_id, min(date_trunc('week', date_joined)) as week_joined from betonmarkets.client \ngroup by 1\n)\n\nselect (extract(epoch from (date_trunc('week', current_date) - greatest(week_joined, date_trunc('week', '2018-06-01'::timestamp))))::bigint)/(24*60*60*7) as account_age, count (distinct aa.binary_user_id) from active_accounts aa left join all_clients ac\non aa.binary_user_id=ac.binary_user_id\ngroup by 1\norder by 1 desc\n\n""}}",,bar,,False,False,1017,37.0,Age (in weeks) of currently active accounts,ef042f86-52b2-4a0d-af49-ec0ce9f53e5f,native,,"[{'name': 'account_age', 'display_name': 'account_age', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 69, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 69.0, 'avg': 35.0, 'sd': 20.061486368016645, 'q1': 17.75, 'q3': 52.25}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 56, 'nil%': 0.0}, 'type': {'type/Number': {'min': 32.0, 'max': 4966.0, 'avg': 229.95652173913044, 'sd': 606.0675179525261, 'q1': 59.775255128608414, 'q3': 165.25}}}}]",,2019-09-26 09:20:28.147,"{'graph.y_axis.scale': 'linear', 'graph.dimensions': ['account_age'], 'graph.metrics': ['count']}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:11:28.995,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select date(Time), -Round(sum(Profit),2)\nFROM mt5_deals_2018 AS deals\n    INNER JOIN mt5_users AS users\n    ON (deals.Login=users.Login)\n    WHERE users.Group LIKE '%costarica%'\n    and deals.Comment LIKE  '%agent%'\n    group by date(Time)\n    order by date(Time) DESC\n    limit 8\n\n\n\n\n""}}",,table,,False,False,545,,Agent comms for accounts team,,native,,,,2019-03-22 03:11:28.995,{}
False,,"{'id': 54, 'name': ""Aggelos Armenatzoglou's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 47, 'slug': 'aggelos_armenatzoglou_s_personal_collection'}",54.0,,2019-01-28 09:15:41.964,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'template-tags': {'Time': {'id': 'a85b87c9-8b1f-0cb9-9e72-16b9709ade1c', 'name': 'Time', 'display-name': 'Time', 'type': 'date'}}, 'query': 'Select  deals.""Symbol"",\n       Count(Distinct(users.""Login""))   AS Total_Clients,\n             Count(Distinct(users.""Login"")) FILTER (Where users.""Agent"" != 0)  AS Agent_Linked_Clients,\n              \n\n       SUM(""Volume""/10000) FILTER (Where users.""Agent"" != 0) AS Total_Volume,\n       SUM((""Profit"")*-1)  FILTER (Where users.""Agent"" != 0) AS Total_Profit,\n       SUM((""Storage"")*-1) FILTER (Where users.""Agent"" != 0) AS Total_Storage,\n       CASE WHEN ""Symbol"" = \'Volatility 10 Index\' THEN SUM((ROUND(((""Volume""/10000)*(0.25/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       WHEN ""Symbol"" = \'Volatility 25 Index\' THEN SUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       WHEN ""Symbol"" = \'Volatility 50 Index\' THEN SUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       WHEN ""Symbol"" = \'Volatility 75 Index\' THEN SUM((ROUND(((""Volume""/10000)*(2.25/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       WHEN ""Symbol"" = \'Volatility 100 Index\' THEN SUM((ROUND(((""Volume""/10000)*(0.75/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       WHEN ""Symbol"" = \'HF Volatility 10 Index\' THEN SUM((ROUND(((""Volume""/10000)*(0.25/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       WHEN ""Symbol"" = \'HF Volatility 50 Index\' THEN SUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       WHEN ""Symbol"" = \'HF Volatility 100 Index\' THEN SUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       ELSE \'0\' END AS Agent_Commissions\n   FROM mt5_deals_2019 AS deals\n   JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\n   and date(""Time"") = {{Time}}\n   and ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\n   and ""Entry"" IN (0,1,3)\n   and ""Action"" IN (0,1)\n \n   and users.""Group"" LIKE \'%costarica%\'\ngroup by deals.""Symbol""'}}",,table,,False,False,250,,Agent_comms_Date_filter,,native,,"[{'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.375}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 27.0, 'max': 978.0, 'avg': 208.875, 'sd': 331.9967458962727, 'q1': 40.0, 'q3': 228.0}}}}, {'name': 'agent_linked_clients', 'display_name': 'Agent Linked Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3.0, 'max': 150.0, 'avg': 31.625, 'sd': 51.13270549685956, 'q1': 5.5, 'q3': 37.0}}}}, {'name': 'total_volume', 'display_name': 'Total Volume', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 7.0, 'max': 1069.0, 'avg': 322.6275, 'sd': 447.31362892430246, 'q1': 39.45, 'q3': 589.7}}}}, {'name': 'total_profit', 'display_name': 'Total Profit', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1927.5499999999995, 'max': 24.46, 'avg': -344.78875000000016, 'sd': 653.2322375134172, 'q1': -297.3000000000005, 'q3': -13.26}}}}, {'name': 'total_storage', 'display_name': 'Total Storage', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 67.00999999999999, 'avg': 11.839999999999996, 'sd': 23.425317805436798, 'q1': 0.042509842672249006, 'q3': 12.47499999999999}}}}, {'name': 'agent_commissions', 'display_name': 'Agent Commissions', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': -68.39, 'max': -0.42, 'avg': -31.599999999999998, 'sd': 28.000878047457217, 'q1': -60.125, 'q3': -5.09}}}}]",,2019-02-07 07:38:03.172,"{'table.pivot_column': 'total_clients', 'table.cell_column': 'total_clients'}"
False,,"{'id': 54, 'name': ""Aggelos Armenatzoglou's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 47, 'slug': 'aggelos_armenatzoglou_s_personal_collection'}",54.0,,2019-01-28 08:20:55.714,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT \n\n--Count(Distinct(users.""Login"")) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') As Total_Vol_10_clients,\nSUM(""Volume""/10000) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Volume_Vol_10,\nSUM((ROUND(((""Volume""/10000)*(0.25/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Commissions_Vol_10,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Profit_Vol_10,\n\n--Count(Distinct(users.""Login"")) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') As Total_Vol_25_clients,\nSUM(""Volume""/10000) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Volume_Vol_25,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Commissions_Vol_25,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Profit_Vol_25,\n\n--Count(Distinct(users.""Login"")) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') As Total_Vol_50_clients,\nSUM(""Volume""/10000) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Volume_Vol_50,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Commissions_Vol_50,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Profit_Vol_50,\n\n--Count(Distinct(users.""Login"")) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') As Total_Vol_75_clients,\nSUM(""Volume""/10000) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Volume_Vol_75,\nSUM((ROUND(((""Volume""/10000)*(2.25/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Commissions_Vol_75,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Profit_Vol_75,\n\n--Count(Distinct(users.""Login"")) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') As Total_Vol_100_clients,\nSUM(""Volume""/10000) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Volume_Vol_100,\nSUM((ROUND(((""Volume""/10000)*(0.75/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Commissions_Vol_100,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Profit_Vol_100,\n\n--Count(Distinct(users.""Login"")) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') As Total_HF_Vol_10_clients,\nSUM(""Volume""/10000) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Volume_HF_Vol_10,\nSUM((ROUND(((""Volume""/10000)*(0.25/-2)),2))) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Commissions_HF_Vol_10,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Profit_HF_Vol_10,\n\n--Count(Distinct(users.""Login"")) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') As Total_HF_Vol_50_clients,\nSUM(""Volume""/10000) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Volume_HF_Vol_50,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Commissions_HF_Vol_50,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Profit_HF_Vol_50,\n\n--Count(Distinct(users.""Login"")) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') As Total_HF_Vol_100_clients,\nSUM(""Volume""/10000) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Volume_HF_Vol_100,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Commissions_HF_Vol_100,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Profit_HF_Vol_100\n\n\nFROM mt5_deals_2019 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nand date_part(\'year\',deals.""Time"")=\'2019\'\n--and ""Symbol"" IN (\'Volatility 50 Index\',\'HF Volatility 50 Index\')\n\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\nand users.""Agent"" != 0\nand users.""Group"" LIKE \'%costarica%\'\n--group by deals.""Symbol""'}}",,table,,False,False,249,,Aggelos_Agentcomms,,native,,"[{'name': 'volume_vol_10', 'display_name': 'Volume Vol 10', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 6635.06, 'max': 6635.06, 'avg': 6635.06, 'sd': None, 'q1': 6635.06, 'q3': 6635.06}}}}, {'name': 'commissions_vol_10', 'display_name': 'Commissions Vol 10', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -851.31, 'max': -851.31, 'avg': -851.31, 'sd': None, 'q1': -851.31, 'q3': -851.31}}}}, {'name': 'profit_vol_10', 'display_name': 'Profit Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -10747.19999999998, 'max': -10747.19999999998, 'avg': -10747.19999999998, 'sd': None, 'q1': -10747.19999999998, 'q3': -10747.19999999998}}}}, {'name': 'volume_vol_25', 'display_name': 'Volume Vol 25', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 13933.9, 'max': 13933.9, 'avg': 13933.9, 'sd': None, 'q1': 13933.9, 'q3': 13933.9}}}}, {'name': 'commissions_vol_25', 'display_name': 'Commissions Vol 25', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -824.81, 'max': -824.81, 'avg': -824.81, 'sd': None, 'q1': -824.81, 'q3': -824.81}}}}, {'name': 'profit_vol_25', 'display_name': 'Profit Vol 25', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -22334.19000000002, 'max': -22334.19000000002, 'avg': -22334.19000000002, 'sd': None, 'q1': -22334.19000000002, 'q3': -22334.19000000002}}}}, {'name': 'volume_vol_50', 'display_name': 'Volume Vol 50', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 55102.26, 'max': 55102.26, 'avg': 55102.26, 'sd': None, 'q1': 55102.26, 'q3': 55102.26}}}}, {'name': 'commissions_vol_50', 'display_name': 'Commissions Vol 50', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -2774.36, 'max': -2774.36, 'avg': -2774.36, 'sd': None, 'q1': -2774.36, 'q3': -2774.36}}}}, {'name': 'profit_vol_50', 'display_name': 'Profit Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -15870.420000000016, 'max': -15870.420000000016, 'avg': -15870.420000000016, 'sd': None, 'q1': -15870.420000000016, 'q3': -15870.420000000016}}}}, {'name': 'volume_vol_75', 'display_name': 'Volume Vol 75', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3111.55, 'max': 3111.55, 'avg': 3111.55, 'sd': None, 'q1': 3111.55, 'q3': 3111.55}}}}, {'name': 'commissions_vol_75', 'display_name': 'Commissions Vol 75', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -3321.5, 'max': -3321.5, 'avg': -3321.5, 'sd': None, 'q1': -3321.5, 'q3': -3321.5}}}}, {'name': 'profit_vol_75', 'display_name': 'Profit Vol 75', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -44701.55000000014, 'max': -44701.55000000014, 'avg': -44701.55000000014, 'sd': None, 'q1': -44701.55000000014, 'q3': -44701.55000000014}}}}, {'name': 'volume_vol_100', 'display_name': 'Volume Vol 100', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 8459.4, 'max': 8459.4, 'avg': 8459.4, 'sd': None, 'q1': 8459.4, 'q3': 8459.4}}}}, {'name': 'commissions_vol_100', 'display_name': 'Commissions Vol 100', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -3146.51, 'max': -3146.51, 'avg': -3146.51, 'sd': None, 'q1': -3146.51, 'q3': -3146.51}}}}, {'name': 'profit_vol_100', 'display_name': 'Profit Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 17428.069999999843, 'max': 17428.069999999843, 'avg': 17428.069999999843, 'sd': None, 'q1': 17428.069999999843, 'q3': 17428.069999999843}}}}, {'name': 'volume_hf_vol_10', 'display_name': 'Volume Hf Vol 10', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3972.82, 'max': 3972.82, 'avg': 3972.82, 'sd': None, 'q1': 3972.82, 'q3': 3972.82}}}}, {'name': 'commissions_hf_vol_10', 'display_name': 'Commissions Hf Vol 10', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -519.12, 'max': -519.12, 'avg': -519.12, 'sd': None, 'q1': -519.12, 'q3': -519.12}}}}, {'name': 'profit_hf_vol_10', 'display_name': 'Profit Hf Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -8386.999999999993, 'max': -8386.999999999993, 'avg': -8386.999999999993, 'sd': None, 'q1': -8386.999999999993, 'q3': -8386.999999999993}}}}, {'name': 'volume_hf_vol_50', 'display_name': 'Volume Hf Vol 50', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 17811.02, 'max': 17811.02, 'avg': 17811.02, 'sd': None, 'q1': 17811.02, 'q3': 17811.02}}}}, {'name': 'commissions_hf_vol_50', 'display_name': 'Commissions Hf Vol 50', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -906.51, 'max': -906.51, 'avg': -906.51, 'sd': None, 'q1': -906.51, 'q3': -906.51}}}}, {'name': 'profit_hf_vol_50', 'display_name': 'Profit Hf Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2661.7600000000075, 'max': 2661.7600000000075, 'avg': 2661.7600000000075, 'sd': None, 'q1': 2661.7600000000075, 'q3': 2661.7600000000075}}}}, {'name': 'volume_hf_vol_100', 'display_name': 'Volume Hf Vol 100', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 51892.42, 'max': 51892.42, 'avg': 51892.42, 'sd': None, 'q1': 51892.42, 'q3': 51892.42}}}}, {'name': 'commissions_hf_vol_100', 'display_name': 'Commissions Hf Vol 100', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -2672.39, 'max': -2672.39, 'avg': -2672.39, 'sd': None, 'q1': -2672.39, 'q3': -2672.39}}}}, {'name': 'profit_hf_vol_100', 'display_name': 'Profit Hf Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 10187.700000000008, 'max': 10187.700000000008, 'avg': 10187.700000000008, 'sd': None, 'q1': 10187.700000000008, 'q3': 10187.700000000008}}}}]",,2019-02-07 07:37:39.465,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:26:45.584,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SET extra_float_digits = 0;\nselect * from feed.tick\nwhere underlying = 'SPC' and \nts >= '2016-09-05 14:41:02' and \nts <= '2016-09-05 14:42:00'\norder by ts  ASC;""}}",,table,,False,False,612,,aggelos_feed,,native,,,,2019-03-22 03:26:45.584,{}
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-12 07:27:43.185,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date_daily, daily_pnl, Sum(daily_pnl_table.""daily_pnl"")  over (order by date(daily_pnl_table.""date_daily"")) as aggregated_PnL\nFrom(\n  Select date(to_timestamp(daily.""Datetime"")) AS date_daily ,\n  SUM (daily.""DailyProfit"" + daily.""DailyStorage"")*-1  + SUM(daily.""Profit"" + daily.""ProfitStorage"")*-1-LAG(SUM(daily.""Profit"" + daily.""ProfitStorage"")*-1,1) OVER (ORDER BY date(to_timestamp(daily.""Datetime"")))  as Daily_PnL\n  From mt5_daily_2019 daily\n  Where ""Group"" LIKE \'%costarica%\'\n  group by date(to_timestamp(daily.""Datetime""))\n  order by date(to_timestamp(daily.""Datetime"")) DESC) AS daily_pnl_table'}}",,line,,False,False,362,,Aggregated PnL_Graph,,native,,"[{'name': 'date_daily', 'display_name': 'Date Daily', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-03-16T00:00:00.000Z'}}}}, {'name': 'daily_pnl', 'display_name': 'Daily Pnl', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.013333333333333001}, 'type': {'type/Number': {'min': -162480.00000000012, 'max': 276719.2199999998, 'avg': 9566.223648648656, 'sd': 81943.31475867081, 'q1': -39634.2299999994, 'q3': 44701.51999999958}}}}, {'name': 'aggregated_pnl', 'display_name': 'Aggregated Pnl', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.013333333333333001}, 'type': {'type/Number': {'min': -105465.13999999975, 'max': 972238.7299999995, 'avg': 332337.22972973005, 'sd': 242331.29867534124, 'q1': 194250.0200000006, 'q3': 436508.31068243115}}}}]",,2019-04-16 01:14:47.708,"{'table.pivot_column': 'ytd_pnl', 'table.cell_column': 'ytd_pnl', 'graph.show_goal': False, 'series_settings': {'Daily Pnl': {'display': 'bar'}, 'Sum': {'axis': 'left'}, 'Aggregated Pnl': {'axis': 'left'}}, 'graph.dimensions': ['date_daily'], 'graph.metrics': ['daily_pnl', 'aggregated_pnl']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-10 02:31:48.952,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,15,"{'database': 15, 'type': 'query', 'query': {'source-table': 1698, 'filter': ['and', ['starts-with', ['field-id', 30027], 'binary', {'case-sensitive': False}], ['ends-with', ['field-id', 30027], 'bot', {'case-sensitive': False}]], 'order-by': [['asc', ['field-id', 30037]]]}}",,table,,False,False,959,37.0,"All apps that have names similar to ""Binary Bot""",c9821ddd-c7c5-4e42-b670-50407e5fd22d,query,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/BigInteger', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'name', 'display_name': 'Name', 'base_type': 'type/Text', 'special_type': 'type/Name', 'fingerprint': {'global': {'distinct-count': 9468, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 11.9273}}}}, {'name': 'active', 'display_name': 'Active', 'base_type': 'type/Boolean', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}}}, {'name': 'app_markup_percentage', 'display_name': 'App Markup Percentage', 'base_type': 'type/Decimal', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 38, 'nil%': 0.0001}, 'type': {'type/Number': {'min': 0.0, 'max': 5.0, 'avg': 0.087003700370037, 'sd': 0.5293582219175691, 'q1': 0.0, 'q3': 0.0033806629390620005}}}}, {'name': 'appstore', 'display_name': 'Appstore', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0004}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0122, 'percent-email': 0.0, 'average-length': 0.4213}}}}, {'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/BigInteger', 'fingerprint': {'global': {'distinct-count': 2493, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 6229601.0, 'avg': 5445868.03839999, 'sd': 291301.2700581424, 'q1': 5425032.304577866, 'q3': 5468958.708923595}}}, 'special_type': None}, {'name': 'bypass_verification', 'display_name': 'Bypass Verification', 'base_type': 'type/Boolean', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'github', 'display_name': 'Github', 'base_type': 'type/Text', 'fingerprint': {'global': {'distinct-count': 40, 'nil%': 0.0004}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0181, 'percent-email': 0.0, 'average-length': 0.6177}}}, 'special_type': None}, {'name': 'googleplay', 'display_name': 'Googleplay', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0004}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0125, 'percent-email': 0.0, 'average-length': 0.5128}}}}, {'name': 'homepage', 'display_name': 'Homepage', 'base_type': 'type/Text', 'fingerprint': {'global': {'distinct-count': 218, 'nil%': 0.0004}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0425, 'percent-email': 0.0, 'average-length': 1.1413}}}, 'special_type': None}, {'name': 'redirect_uri', 'display_name': 'Redirect Uri', 'base_type': 'type/Text', 'fingerprint': {'global': {'distinct-count': 7814, 'nil%': 0.0005}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.2786, 'percent-email': 0.0, 'average-length': 15.966}}}, 'special_type': None}, {'name': 'scopes', 'display_name': 'Scopes', 'base_type': 'type/*', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 16, 'nil%': 0.0}}}, {'name': 'stamp', 'display_name': 'Stamp', 'description': 'When a value is present this represents when the data in here was inserted/updated', 'base_type': 'type/DateTime', 'unit': 'default', 'fingerprint': {'global': {'distinct-count': 9734, 'nil%': 0.0267}, 'type': {'type/DateTime': {'earliest': '2016-11-22T06:43:09.917Z', 'latest': '2019-03-23T06:32:54.605Z'}}}, 'special_type': None}, {'name': 'verification_uri', 'display_name': 'Verification Uri', 'base_type': 'type/Text', 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.7398}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0126, 'percent-email': 0.0, 'average-length': 0.44210000000000005}}}, 'special_type': None}]",1698.0,2019-05-10 05:20:39.310,"{'table.pivot_column': 'active', 'table.cell_column': 'app_markup_percentage'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-03-20 05:00:13.200,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select * from bet.financial_market_bet\nwhere purchase_time > now() + interval '-5 minute'""}}",,table,,False,False,502,,all bets in last 5 minutes,,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'purchase_time', 'display_name': 'Purchase Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 289, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-08T08:37:27.000Z', 'latest': '2019-04-08T08:42:15.000Z'}}}}, {'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 472, 'nil%': 0.0}, 'type': {'type/Number': {'min': 283461.0, 'max': 12395981.0, 'avg': 8957685.194444444, 'sd': 3270731.1660866323, 'q1': 6096561.9237922905, 'q3': 11977491.308210231}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 23, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.033796296296296}}}}, {'name': 'payout_price', 'display_name': 'Payout Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 511, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.00371469, 'max': 485.5, 'avg': 8.632438957356483, 'sd': 28.934609246549932, 'q1': 1.121928254659094, 'q3': 5.485487578411831}}}}, {'name': 'buy_price', 'display_name': 'Buy Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 254, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.002, 'max': 400.0, 'avg': 5.074003470027777, 'sd': 18.896612348074285, 'q1': 0.656612865738555, 'q3': 3.182379687060818}}}}, {'name': 'sell_price', 'display_name': 'Sell Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 278, 'nil%': 0.160648148148148}, 'type': {'type/Number': {'min': 0.0, 'max': 485.5, 'avg': 4.545457095802536, 'sd': 22.733189945175734, 'q1': 0.073167242434308, 'q3': 2.232346941806304}}}}, {'name': 'start_time', 'display_name': 'Start Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 289, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-08T08:37:27.000Z', 'latest': '2019-04-08T08:42:15.000Z'}}}}, {'name': 'expiry_time', 'display_name': 'Expiry Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 442, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-08T08:37:30.000Z', 'latest': '2019-04-09T23:59:59.000Z'}}}}, {'name': 'settlement_time', 'display_name': 'Settlement Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 442, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-08T08:37:30.000Z', 'latest': '2019-04-09T23:59:59.000Z'}}}}, {'name': 'expiry_daily', 'display_name': 'Expiry Daily', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}}}, {'name': 'is_expired', 'display_name': 'Is Expired', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}}}, {'name': 'is_sold', 'display_name': 'Is Sold', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}}}, {'name': 'bet_class', 'display_name': 'Bet Class', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 12.777777777777779}}}}, {'name': 'bet_type', 'display_name': 'Bet Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.047222222222222}}}}, {'name': 'remark', 'display_name': 'Remark', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2117, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 294.2990740740741}}}}, {'name': 'short_code', 'display_name': 'Short Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2136, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 37.99768518518518}}}}, {'name': 'sell_time', 'display_name': 'Sell Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 261, 'nil%': 0.160648148148148}, 'type': {'type/DateTime': {'earliest': '2019-04-08T08:37:30.000Z', 'latest': '2019-04-08T08:42:16.000Z'}}}}, {'name': 'fixed_expiry', 'display_name': 'Fixed Expiry', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.9458333333333331}}}, {'name': 'tick_count', 'display_name': 'Tick Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.19814814814814802}, 'type': {'type/Number': {'min': 1.0, 'max': 10.0, 'avg': 3.142609699769053, 'sd': 2.376927343378463, 'q1': 1.089849394754755, 'q3': 4.971290956706613}}}}]",,2019-04-08 08:42:27.460,"{'table.pivot_column': 'expiry_daily', 'table.cell_column': 'id'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-08 08:43:11.479,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select * from bet.financial_market_bet\nwhere purchase_time > now() + interval '-60 minute'""}}",,table,,False,False,697,,all bets in last 60 minutes (CR),,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'purchase_time', 'display_name': 'Purchase Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1606, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-08T07:43:17.000Z', 'latest': '2019-04-08T08:10:08.000Z'}}}}, {'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 817, 'nil%': 0.0}, 'type': {'type/Number': {'min': 225141.0, 'max': 12396361.0, 'avg': 9026509.424, 'sd': 3442818.485461374, 'q1': 6330333.86828663, 'q3': 11999069.70626558}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 32, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.6919}}}}, {'name': 'payout_price', 'display_name': 'Payout Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1181, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.00035637, 'max': 6828.05, 'avg': 10.455168031547995, 'sd': 80.14477623812681, 'q1': 1.306659117010162, 'q3': 6.083254499960133}}}}, {'name': 'buy_price', 'display_name': 'Buy Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 597, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0002, 'max': 3500.0, 'avg': 5.865961398806995, 'sd': 40.20813723045242, 'q1': 0.6379208077267661, 'q3': 3.4630334907931952}}}}, {'name': 'sell_price', 'display_name': 'Sell Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 925, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 6828.05, 'avg': 6.135031390089003, 'sd': 74.93723947928387, 'q1': 0.38715433974004004, 'q3': 2.722173465656947}}}}, {'name': 'start_time', 'display_name': 'Start Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1606, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-08T07:43:17.000Z', 'latest': '2019-04-08T08:10:08.000Z'}}}}, {'name': 'expiry_time', 'display_name': 'Expiry Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1826, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-08T07:43:21.000Z', 'latest': '2019-04-08T18:06:34.000Z'}}}}, {'name': 'settlement_time', 'display_name': 'Settlement Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1826, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-08T07:43:21.000Z', 'latest': '2019-04-08T18:06:34.000Z'}}}}, {'name': 'expiry_daily', 'display_name': 'Expiry Daily', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'is_expired', 'display_name': 'Is Expired', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}}}, {'name': 'is_sold', 'display_name': 'Is Sold', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'bet_class', 'display_name': 'Bet Class', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 12.7211}}}}, {'name': 'bet_type', 'display_name': 'Bet Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.1206}}}}, {'name': 'remark', 'display_name': 'Remark', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9786, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 292.4912}}}}, {'name': 'short_code', 'display_name': 'Short Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9944, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 37.5117}}}}, {'name': 'sell_time', 'display_name': 'Sell Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1721, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-08T07:43:20.000Z', 'latest': '2019-04-08T08:41:12.000Z'}}}}, {'name': 'fixed_expiry', 'display_name': 'Fixed Expiry', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.9782000000000001}}}, {'name': 'tick_count', 'display_name': 'Tick Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.17070000000000002}, 'type': {'type/Number': {'min': 1.0, 'max': 10.0, 'avg': 3.351380682503316, 'sd': 2.366607131813673, 'q1': 1.193468568596688, 'q3': 5.033196329386811}}}}]",,2019-04-08 08:43:21.938,"{'table.pivot_column': 'expiry_daily', 'table.cell_column': 'id'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:11:54.464,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'with params as (select\n       \'2018-07-06\'::TIMESTAMP AS start_date,\n       \'2018-07-07\'::TIMESTAMP AS end_date\n)\n       \nselect output.*\nfrom params\nCROSS JOIN betonmarkets.production_servers_v2() as ps\nCROSS JOIN dblink(ps.srvname,\n$$\n     select b.id, \n            b.purchase_time, \n            b.underlying_symbol, \n            b.payout_price, \n            b.buy_price, \n            b.sell_price, \n            b.start_time,\n            b.expiry_time, \n            b.bet_type, \n            b.remark, \n            b.short_code, \n            b.sell_time, \n            a.client_loginid, \n            bm.market, \n            bm.submarket, \n            data_collection.exchangetousd_rate(a.currency_code, b.purchase_time) as ""exchange_rate""\n     from bet.financial_market_bet as b\n     join transaction.transaction t on b.id=t.financial_market_bet_id and t.action_type=\'sell\'\n     join transaction.account a on a.id=b.account_id\n     join betonmarkets.client c on c.loginid=a.client_loginid\n     left join bet.market bm on b.underlying_symbol = bm.symbol\n     where market <> \'volidx\' and\n      sell_time is not null and\n     ((purchase_time between $$ || quote_literal(params.start_date) || $$::TIMESTAMP and $$ || quote_literal(params.end_date) || $$::TIMESTAMP) or\n           (sell_time between $$ || quote_literal(params.start_date) || $$::TIMESTAMP and $$ || quote_literal(params.end_date) || $$::TIMESTAMP))\n$$) as output(id NUMERIC, \n        purchase_time TIMESTAMP, \n        underlying_symbol VARCHAR, \n        payout_price NUMERIC, \n        buy_price NUMERIC, \n        sell_price NUMERIC, \n        start_time TIMESTAMP, \n        expiry_time TIMESTAMP, \n        bet_type VARCHAR,\n        remark VARCHAR, \n        short_code VARCHAR, \n        sell_time TIMESTAMP, \n        client_loginid VARCHAR,\n        market VARCHAR,\n        submarket VARCHAR,\n        exchange_rate NUMERIC)\n'}}",,table,,False,False,546,,All client trades from all databases (date range),,native,,,,2019-03-22 03:11:54.464,{}
False,,"{'id': 96, 'name': ""Anthony Wong's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 67, 'slug': 'anthony_wong_s_personal_collection'}",96.0,,2019-04-02 08:18:15.051,"{'email': 'anthony@binary.com', 'first_name': 'Anthony', 'last_login': '2019-05-24T06:45:44.916Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 67, 'last_name': 'Wong', 'date_joined': '2019-03-15T03:06:43.727Z', 'common_name': 'Anthony Wong'}",67,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select loginid, residence, status_code from betonmarkets.client bc left join \nbetonmarkets.client_status bcs\non bc.loginid = bcs.client_loginid\nwhere {{res_filter}}\n', 'template-tags': {'res_filter': {'id': '755ece97-d2ac-8838-5026-3cee281bb9eb', 'name': 'res_filter', 'display-name': 'residence', 'type': 'dimension', 'dimension': ['field-id', 836], 'required': False}}}}",,table,,False,False,689,,all clients with their status for selected residences,,native,,"[{'name': 'loginid', 'display_name': 'Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 810817, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.863504949412715}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 249, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 1.993774757851313}}}}, {'name': 'status_code', 'display_name': 'Status Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 25, 'nil%': 0.0001783572149808554}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 12.339322683681562}}}}]",,2019-04-02 08:25:24.397,{'table.pivot_column': 'residence'}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:12:00.033,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- All contracts purchased in a date range, with source, affiliate ID, &c\nwith params as (select\n       \'2015-01-07\'::TIMESTAMP AS start_date,\n       \'2015-01-21\'::TIMESTAMP AS end_date\n)\n       \nselect output.*\nfrom params\nCROSS JOIN betonmarkets.production_servers_v2() as ps\nCROSS JOIN dblink(ps.srvname,\n$$\n     select b.id, \n            b.purchase_time, \n            b.underlying_symbol, \n            b.payout_price, \n            b.buy_price, \n            b.sell_price, \n            b.start_time,\n            b.expiry_time, \n            b.bet_type, \n            b.remark, \n            b.short_code, \n            b.sell_time, \n            a.client_loginid, \n            bm.market, \n            bm.submarket, \n            data_collection.exchangetousd_rate(a.currency_code, b.purchase_time) as ""exchange_rate"",\n            c.residence,\n            b.tick_count,\n            c.myaffiliates_token,\n            t.source\n     from only bet.financial_market_bet as b\n     join transaction.transaction t on b.id=t.financial_market_bet_id and t.action_type=\'sell\'\n     join transaction.account a on a.id=b.account_id\n     join betonmarkets.client c on c.loginid=a.client_loginid\n     left join bet.market bm on b.underlying_symbol = bm.symbol\n     --where market <> \'volidx\' and\n     where --market = \'forex\' and\n      --sell_time is not null and\n     ((purchase_time between $$ || quote_literal(params.start_date) || $$::TIMESTAMP and $$ || quote_literal(params.end_date) || $$::TIMESTAMP) --or\n           --(sell_time between $$ || quote_literal(params.start_date) || $$::TIMESTAMP and $$ || quote_literal(params.end_date) || $$::TIMESTAMP)\n           )\n      order by purchase_time\n      limit 1000000 offset 0\n$$) as output(id NUMERIC, \n        purchase_time TIMESTAMP, \n        underlying_symbol VARCHAR, \n        payout_price NUMERIC, \n        buy_price NUMERIC, \n        sell_price NUMERIC, \n        start_time TIMESTAMP, \n        expiry_time TIMESTAMP, \n        bet_type VARCHAR,\n        remark VARCHAR, \n        short_code VARCHAR, \n        sell_time TIMESTAMP, \n        client_loginid VARCHAR,\n        market VARCHAR,\n        submarket VARCHAR,\n        exchange_rate NUMERIC,\n        residence VARCHAR,\n        tick_count NUMERIC,\n        myaffiliates_token VARCHAR,\n        source VARCHAR)\n--where output.market in (\'forex\')\n--order by output.purchase_time\n--limit 1000000 offset 0'}}","All contracts purchased in a date range, with source, affiliate ID, &c",table,,False,False,547,,All contracts purchased within a date range,,native,,,,2019-03-22 03:12:00.033,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:12:05.430,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- List all crypto PA\nselect db.* from dblink('cr', $$\n  select client_loginid, payment_agent_name, currency_code from betonmarkets.payment_agent where currency_code in ('BTC', 'LTC', 'BCH', 'ETH', 'UST', 'USB');\n$$) db (client_loginid varchar, payment_agent_name varchar, currency_code varchar)""}}",List all crypto PA,table,,False,False,548,,All crypto PA,,native,,,,2019-03-22 03:12:05.430,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:52.275,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select t.id,\n  a.client_loginid, \n  b.buy_price, \n  b.sell_price,\n  b.start_time,\n  b.purchase_time, \n  b.sell_time, \n  b.expiry_time, \n  a.currency_code, \n  b.payout_price, \n  b.short_code,\n  b.bet_type,\n  b.underlying_symbol,\n  c.residence\nfrom transaction.transaction t, \n  bet.financial_market_bet b, \n  transaction.account a,\n  betonmarkets.client c\nwhere t.financial_market_bet_id = b.id\n  and c.loginid=a.client_loginid\n  and t.account_id = a.id  \n  and b.start_time > '2017-01-01'\n  order by date(purchase_time)""}}",,table,,False,False,643,,All JP trades,,native,,,,2019-03-22 03:27:52.275,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:28:10.872,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Change the Time to get trades for that duration (used for London 4 pm fix)\nSELECT bs.*,\n  data_collection.exchangetousd_rate(bs.currency_code, bs.purchase_time) as ""ExchangeRate""\nFROM (\nselect t.id, \n  a.client_loginid, \n  b.buy_price, \n  b.sell_price,\n  b.start_time,\n  b.purchase_time,\n  b.sell_time,\n  b.payout_price,\n  b.expiry_time,\n  a.currency_code, \n  c.residence,\n  b.short_code,\n  b.bet_type,\n  b.underlying_symbol\nfrom ONLY bet.financial_market_bet b /* fmb contains only closed trades */\njoin transaction.transaction t on b.id=t.financial_market_bet_id and t.action_type=\'buy\'\njoin transaction.account a on a.id=b.account_id /* that last_modified has no value here because it will at least reflect the trade */\njoin betonmarkets.client c on c.loginid=a.client_loginid\nwhere b.purchase_time > \'2018-07-02T14:50:00\'  /* USE A REASONABLE VALUE BEHIND YOUR start_time */\n  and b.sell_time < \'2018-07-02T15:10:00\'\n  and b.bet_type in (\'CALLE\',\'PUTE\',\'CALL\',\'PUT\')\n  and b.underlying_symbol like \'frx%\'\n  \n  ---and b.short_code similar to \'%T_S%\'\n) AS bs\n\nWHERE bs.start_time > \'2018-04-01\' /* get rid of this if you don\'t really care about start_time */\n  order by buy_price DESC'}}",Change the Time to get trades for that duration (used for London 4 pm fix),table,,False,False,648,,All trades during a given time,,native,,,,2019-03-22 03:28:10.871,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:44.015,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Change the Time to get trades for that duration (used for London 4 pm fix)\nSELECT bs.*,\n  data_collection.exchangetousd_rate(bs.currency_code, bs.purchase_time) as ""ExchangeRate""\nFROM (\nselect t.id, \n  a.client_loginid, \n  b.buy_price, \n  b.sell_price,\n  b.start_time,\n  b.purchase_time,\n  b.sell_time,\n  b.payout_price,\n  b.expiry_time,\n  a.currency_code, \n  c.residence,\n  b.short_code,\n  b.bet_type,\n  b.underlying_symbol\nfrom ONLY bet.financial_market_bet b /* fmb contains only closed trades */\njoin transaction.transaction t on b.id=t.financial_market_bet_id and t.action_type=\'buy\'\njoin transaction.account a on a.id=b.account_id /* that last_modified has no value here because it will at least reflect the trade */\njoin betonmarkets.client c on c.loginid=a.client_loginid\nwhere b.purchase_time > \'2018-07-02T14:50:00\'  /* USE A REASONABLE VALUE BEHIND YOUR start_time */\n  and b.sell_time < \'2018-07-02T15:10:00\'\n  and b.bet_type in (\'CALLE\',\'PUTE\',\'CALL\',\'PUT\')\n  and b.underlying_symbol like \'frx%\'\n  \n  ---and b.short_code similar to \'%T_S%\'\n) AS bs\n\nWHERE bs.start_time > \'2018-04-01\' /* get rid of this if you don\'t really care about start_time */\n  order by buy_price DESC'}}",Change the Time to get trades for that duration (used for London 4 pm fix),table,,False,False,640,,All trades during a given time,,native,,,,2019-03-22 03:27:44.015,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:28:32.008,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Change the Time to get trades for that duration (used for London 4 pm fix)\nSELECT bs.*,\n  data_collection.exchangetousd_rate(bs.currency_code, bs.purchase_time) as ""ExchangeRate""\nFROM (\nselect t.id, \n  a.client_loginid, \n  b.buy_price, \n  b.sell_price,\n  b.start_time,\n  b.purchase_time,\n  b.sell_time,\n  b.payout_price,\n  b.expiry_time,\n  a.currency_code, \n  c.residence,\n  b.short_code,\n  b.bet_type,\n  b.underlying_symbol\nfrom ONLY bet.financial_market_bet b /* fmb contains only closed trades */\njoin transaction.transaction t on b.id=t.financial_market_bet_id and t.action_type=\'buy\'\njoin transaction.account a on a.id=b.account_id /* that last_modified has no value here because it will at least reflect the trade */\njoin betonmarkets.client c on c.loginid=a.client_loginid\nwhere b.purchase_time > \'2018-07-02T14:50:00\'  /* USE A REASONABLE VALUE BEHIND YOUR start_time */\n  and b.sell_time < \'2018-07-02T15:10:00\'\n  and b.bet_type in (\'CALLE\',\'PUTE\',\'CALL\',\'PUT\')\n  and b.underlying_symbol like \'frx%\'\n  \n  ---and b.short_code similar to \'%T_S%\'\n) AS bs\n\nWHERE bs.start_time > \'2018-04-01\' /* get rid of this if you don\'t really care about start_time */\n  order by buy_price DESC'}}",Change the Time to get trades for that duration (used for London 4 pm fix),table,,False,False,653,,All trades during a given time,,native,,,,2019-03-22 03:28:32.008,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:12.033,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Change the Time to get trades for that duration (used for London 4 pm fix)\nSELECT bs.*,\n  data_collection.exchangetousd_rate(bs.currency_code, bs.purchase_time) as ""ExchangeRate""\nFROM (\nselect t.id, \n  a.client_loginid, \n  b.buy_price, \n  b.sell_price,\n  b.start_time,\n  b.purchase_time,\n  b.sell_time,\n  b.payout_price,\n  b.expiry_time,\n  a.currency_code, \n  c.residence,\n  b.short_code,\n  b.bet_type,\n  b.underlying_symbol\nfrom ONLY bet.financial_market_bet b /* fmb contains only closed trades */\njoin transaction.transaction t on b.id=t.financial_market_bet_id and t.action_type=\'buy\'\njoin transaction.account a on a.id=b.account_id /* that last_modified has no value here because it will at least reflect the trade */\njoin betonmarkets.client c on c.loginid=a.client_loginid\nwhere b.purchase_time > \'2018-07-02T14:50:00\'  /* USE A REASONABLE VALUE BEHIND YOUR start_time */\n  and b.sell_time < \'2018-07-02T15:10:00\'\n  and b.bet_type in (\'CALLE\',\'PUTE\',\'CALL\',\'PUT\')\n  and b.underlying_symbol like \'frx%\'\n  \n  ---and b.short_code similar to \'%T_S%\'\n) AS bs\n\nWHERE bs.start_time > \'2018-04-01\' /* get rid of this if you don\'t really care about start_time */\n  order by buy_price DESC'}}",Change the Time to get trades for that duration (used for London 4 pm fix),table,,False,False,621,,All trades during a given time,,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 222, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.996031746031746}}}}, {'name': 'buy_price', 'display_name': 'Buy Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 82, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.5, 'max': 750.0, 'avg': 26.58101851851852, 'sd': 85.73716518941488, 'q1': 0.9962930636932851, 'q3': 17.30501256289338}}}}, {'name': 'sell_price', 'display_name': 'Sell Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 181, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1312.19, 'avg': 18.682539682539684, 'sd': 95.4797651115826, 'q1': 0.0, 'q3': 4.736885019870215}}}}, {'name': 'start_time', 'display_name': 'Start Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 319, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-07-02T14:50:01.000Z', 'latest': '2018-07-02T15:09:48.000Z'}}}}, {'name': 'purchase_time', 'display_name': 'Purchase Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 319, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-07-02T14:50:01.000Z', 'latest': '2018-07-02T15:09:48.000Z'}}}}, {'name': 'sell_time', 'display_name': 'Sell Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 309, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-07-02T14:50:15.000Z', 'latest': '2018-07-02T15:09:57.000Z'}}}}, {'name': 'payout_price', 'display_name': 'Payout Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 301, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.8300000000000001, 'max': 1325.43, 'avg': 45.89805555555556, 'sd': 147.62491033703986, 'q1': 1.9028911977798222, 'q3': 30.541810649394108}}}}, {'name': 'expiry_time', 'display_name': 'Expiry Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 310, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-07-02T14:50:20.000Z', 'latest': '2018-07-09T23:59:59.000Z'}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'short_code', 'display_name': 'Short Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 580, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 45.20238095238095}}}}, {'name': 'bet_type', 'display_name': 'Bet Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.621693121693122}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 22, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.0}}}}, {'name': 'ExchangeRate', 'display_name': 'Exchangerate', 'base_type': 'type/Decimal', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.7327300000000001, 'max': 1.16059, 'avg': 1.008150674603174, 'sd': 0.042963538894960004, 'q1': 0.9265503736595091, 'q3': 1.058021160859302}}}}]",,2019-06-14 05:22:13.313,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:31.719,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Change the Time to get trades for that duration (used for London 4 pm fix)\nSELECT bs.*,\n  data_collection.exchangetousd_rate(bs.currency_code, bs.purchase_time) as ""ExchangeRate""\nFROM (\nselect t.id, \n  a.client_loginid, \n  b.buy_price, \n  b.sell_price,\n  b.start_time,\n  b.purchase_time,\n  b.sell_time,\n  b.payout_price,\n  b.expiry_time,\n  a.currency_code, \n  c.residence,\n  b.short_code,\n  b.bet_type,\n  b.underlying_symbol\nfrom ONLY bet.financial_market_bet b /* fmb contains only closed trades */\njoin transaction.transaction t on b.id=t.financial_market_bet_id and t.action_type=\'buy\'\njoin transaction.account a on a.id=b.account_id /* that last_modified has no value here because it will at least reflect the trade */\njoin betonmarkets.client c on c.loginid=a.client_loginid\nwhere b.purchase_time > \'2018-07-02T14:50:00\'  /* USE A REASONABLE VALUE BEHIND YOUR start_time */\n  and b.sell_time < \'2018-07-02T15:10:00\'\n  and b.bet_type in (\'CALLE\',\'PUTE\',\'CALL\',\'PUT\')\n  and b.underlying_symbol like \'frx%\'\n  \n  ---and b.short_code similar to \'%T_S%\'\n) AS bs\n\nWHERE bs.start_time > \'2018-04-01\' /* get rid of this if you don\'t really care about start_time */\n  order by buy_price DESC'}}",Change the Time to get trades for that duration (used for London 4 pm fix),table,,False,False,637,,All trades during a given time,,native,,,,2019-03-22 03:27:31.719,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:12:30.957,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- All contracts purchased in a date range, with source, affiliate ID, &c\nwith params as (select\n       \'2018-10-17\'::TIMESTAMP AS start_date,\n       \'2018-10-18\'::TIMESTAMP AS end_date\n)\n       \nselect output.*\nfrom params\nCROSS JOIN betonmarkets.production_servers_v2() as ps\nCROSS JOIN dblink(ps.srvname,\n$$\n     select b.id, \n            b.purchase_time, \n            b.underlying_symbol, \n            b.payout_price, \n            b.buy_price, \n            b.sell_price, \n            b.start_time,\n            b.expiry_time,\n            EXTRACT(EPOCH FROM (b.start_time - b.purchase_time)) as delay,\n            EXTRACT(EPOCH FROM (b.expiry_time - b.start_time)) as duration,\n            b.bet_type, \n            b.remark, \n            b.short_code, \n            b.sell_time, \n            a.client_loginid, \n            t.staff_loginid,\n            bm.market, \n            bm.submarket, \n            data_collection.exchangetousd_rate(a.currency_code, b.purchase_time) as ""exchange_rate"",\n            c.residence,\n            c.date_joined,\n            b.tick_count,\n            c.myaffiliates_token,\n            t.source\n     from only bet.financial_market_bet as b\n     join transaction.transaction t on b.id=t.financial_market_bet_id and t.action_type=\'buy\' --and t.source=6070\n     join transaction.account a on a.id=b.account_id\n     join betonmarkets.client c on c.loginid=a.client_loginid\n     left join bet.market bm on b.underlying_symbol = bm.symbol\n     where \n     --t.staff_loginid=\'#CR382954\' and\n     --market = \'forex\' and \n     --tick_count < 31 and\n     --residence = \'in\' and\n     --client_loginid=\'CR382954\' and\n     --where market = \'forex\' and\n      --sell_time is not null and\n     ((purchase_time between $$ || quote_literal(params.start_date) || $$::TIMESTAMP and $$ || quote_literal(params.end_date) || $$::TIMESTAMP) --or\n           --(sell_time between $$ || quote_literal(params.start_date) || $$::TIMESTAMP and $$ || quote_literal(params.end_date) || $$::TIMESTAMP)\n           )\n      order by purchase_time\n      --limit 1000000 offset 0\n$$) as output(id NUMERIC, \n        purchase_time TIMESTAMP, \n        underlying_symbol VARCHAR, \n        payout_price NUMERIC, \n        buy_price NUMERIC, \n        sell_price NUMERIC, \n        start_time TIMESTAMP, \n        expiry_time TIMESTAMP,\n        delay NUMERIC,\n        duration NUMERIC,\n        bet_type VARCHAR,\n        remark VARCHAR, \n        short_code VARCHAR, \n        sell_time TIMESTAMP, \n        client_loginid VARCHAR,\n        staff_loginid VARCHAR,\n        market VARCHAR,\n        submarket VARCHAR,\n        exchange_rate NUMERIC,\n        residence VARCHAR,\n        date_joined TIMESTAMP,\n        tick_count NUMERIC,\n        myaffiliates_token VARCHAR,\n        source VARCHAR)\n'}}","All contracts purchased in a date range, with source, affiliate ID, &c",table,,False,False,549,,"All trades, with full details, in a given date range",,native,,,,2019-03-22 03:12:30.957,{}
False,,"{'id': 73, 'name': ""Dwi Hadyan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 53, 'slug': 'dwi_hadyan_s_personal_collection'}",73.0,,2019-02-14 07:05:43.830,"{'email': 'dwi@binary.com', 'first_name': 'Dwi', 'last_login': '2019-06-21T06:57:40.046Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 53, 'last_name': 'Hadyan', 'date_joined': '2019-01-24T02:54:53.692Z', 'common_name': 'Dwi Hadyan'}",53,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_users.""Registration""), \nCount(Distinct(mt5_users.""Login"")) As Total_MT5_Signups\nFrom mt5_users\nwhere date(mt5_users.""Registration"") > \'2018-08-01\'\nand  date(mt5_users.""Registration"") < date(NOW())\nand mt5_users.""Country"" = \'{{CountryName}}\'\nand mt5_users.""Group"" like \'real%\'\ngroup by date(mt5_users.""Registration"")\nOrder by date(mt5_users.""Registration"") DESC', 'template-tags': {'CountryName': {'id': '74ff81c6-9b1d-c4f7-969b-8c5516c6712f', 'name': 'CountryName', 'display-name': 'Countryname', 'type': 'dimension', 'dimension': ['field-id', 7005], 'widget-type': 'location/country'}}}}",,table,,False,False,367,,all user categorised by country,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'total_mt5_signups', 'display_name': 'Total Mt5 Sign Ups', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-15 04:02:31.570,"{'table.pivot_column': 'total_mt5_signups', 'table.cell_column': 'total_mt5_signups'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:11:03.674,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select *\nfrom dblink('auth', \n$$\nSELECT * FROM auth.access_token\nwhere client_loginid = 'CR482531'\n$$) as (token VARCHAR, display_name VARCHAR, client_loginid VARCHAR, creation_time TIMESTAMP, last_used TIMESTAMP, scopes VARCHAR, valid_for_ip VARCHAR)""}}",,table,,False,False,544,,API Token lookup,,native,,,,2019-03-22 03:11:03.674,{}
False,,,,,2018-11-20 11:04:31.774,"{'email': 'rustem@binary.com', 'first_name': 'Rustem', 'last_login': '2019-05-13T02:53:07.540Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 33, 'last_name': 'Kakimov', 'date_joined': '2018-11-09T07:28:02.665Z', 'common_name': 'Rustem Kakimov'}",33,2,"{'native': {'template-tags': {'email': {'id': 'd007cfd9-042c-4e87-2e29-a8cbafe35594', 'name': 'email', 'display-name': 'Email', 'type': 'text'}, 'purchase_since': {'id': '5c3ea0db-6387-4786-5137-fedf505cc68d', 'name': 'purchase_since', 'display-name': 'Purchase since', 'type': 'date'}, 'binary_userid': {'id': 'a9c9a31b-4e53-4545-7e5d-91233b046a01', 'name': 'binary_userid', 'display-name': 'Binary userid', 'type': 'number'}, 'Account_loginid': {'id': '57e19154-70b3-3b8c-27a7-c0ddb0bcbc98', 'name': 'Account_loginid', 'display-name': 'Account loginid', 'type': 'text'}}, 'query': ""SELECT source, COUNT(*) AS contracts\nFROM (\n  SELECT id\n  FROM (\n    SELECT loginid\n    FROM betonmarkets.client\n    where true [[and binary_user_id = {{binary_userid}}]]  [[and email like CONCAT({{email}}, '%')]] [[and loginid = {{Account_loginid}}]]\n  ) AS logins\n  LEFT JOIN transaction.account a ON a.client_loginid = logins.loginid\n) AS account_ids\nINNER JOIN transaction.transaction t ON t.account_id = account_ids.id\nWHERE t.action_type='buy'\n[[AND t.transaction_time >= {{purchase_since}}]]\nGROUP BY 1\n""}, 'type': 'native', 'database': 2}",,pie,,False,False,49,,App preference,,native,,"[{'name': 'source', 'display_name': 'source', 'base_type': 'type/Integer', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 1720, 'nil%': 0.0005813953488372093}, 'type': {'type/Number': {'min': 0.0, 'max': 18979.0, 'avg': 10448.29435718441, 'sd': 5363.442417348442, 'q1': 3530.8874551860367, 'q3': 15003.26221759412}}}}, {'name': 'contracts', 'display_name': 'contracts', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1138, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 312410092.0, 'avg': 528751.9395348837, 'sd': 10627465.09990345, 'q1': 973.851083169264, 'q3': 9641.504660436569}}}}]",,2019-09-12 10:17:35.111,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:12:36.636,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Arbitrary App Markup Analysis\n-- enter your dates as yyyy-mm-dd\n-- the query will pull all data inclusive of start and end dates\nWITH params AS (SELECT\n  '2017-02-01'::DATE AS start_date,\n  '2017-02-28'::DATE AS end_date\n)\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT amr.*\nFROM params\nCROSS JOIN LATERAL app_markup_report(start_date, end_date) amr;""}}",Arbitrary App Markup Analysis,table,,False,False,550,,Arbitrary App Markup Analysis,,native,,,,2019-03-22 03:12:36.636,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:12:42.158,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Arbitrary App Markup Payment Report\n-- enter your dates as yyyy-mm-dd\n-- the query will pull all data inclusive of start and end dates\nWITH params AS (SELECT\n  '2017-06-01'::DATE AS start_date,\n  '2017-06-30'::DATE AS end_date\n)\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT\n  amr.loginid,\n  'credit'::TEXT AS pay_type,\n  'arbitrary_markup'::TEXT AS grouping,\n  amr.dev_currcode,\n  SUM(amr.markup_for_dev_currency) AS amount,\n  ('Payment for arbitrary markup ' || amr.reporting_period) AS description\nFROM params\nCROSS JOIN LATERAL app_markup_report(start_date, end_date) amr\nGROUP BY amr.loginid, amr.dev_currcode, amr.reporting_period\nORDER BY 1\n""}}",Arbitrary App Markup Payment Report,table,,False,False,551,,Arbitrary App Markup Payment Report,,native,,,,2019-03-22 03:12:42.158,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:28:20.494,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n  a.client_loginid, \n  b.bet_type,\n  b.buy_price, \n  b.sell_price,\n  b.start_time,\n  b.purchase_time, \n  b.sell_time, \n  b.payout_price, \n  b.short_code,\n  c.residence,\n  ((b.buy_price - b.sell_price)*data_collection.exchangetousd_rate(a.currency_code, b.purchase_time) ) as ""CompanyProfit"",\n  w.*\nfrom transaction.transaction t, \n  bet.financial_market_bet b, \n  transaction.account a,\n  betonmarkets.client c,\n  (SELECT \n    t.client_loginid, \n    SUM(t.""CompanyProfit"") AS ""TotalCompanyProfit"" ,\n    SUM(ABS(t.""CompanyProfit"")) AS ""TotalABSMoneyInOut"",\n    COUNT(t.""CompanyProfit"") AS ""COUNTTrades"",\n    -SUM(t.""CompanyProfit"")/SUM(ABS(t.""CompanyProfit"")) AS ""Profitability""\n  FROM \n    (select a.client_loginid, \n      ((b.buy_price - b.sell_price)*data_collection.exchangetousd_rate(a.currency_code, b.purchase_time) ) as ""CompanyProfit""\n    from transaction.transaction t, \n      bet.financial_market_bet b, \n      transaction.account a,\n      betonmarkets.client c\n    where t.financial_market_bet_id = b.id\n      and c.loginid=a.client_loginid\n      and t.account_id = a.id  \n      and t.action_type = \'buy\'\n      and short_code like \'%_S0P_0\') AS t\n  GROUP BY t.client_loginid) as w\nwhere t.financial_market_bet_id = b.id\n  and c.loginid=a.client_loginid\n  and t.account_id = a.id  \n  and t.action_type = \'buy\'\n  and short_code like \'%_S0P_0\'\n  and w.client_loginid = a.client_loginid\n  and w.""COUNTTrades"">=100\n  and w.""Profitability"">0.1\nORDER BY w.""Profitability"" DESC'}}",,table,,False,False,651,,ATM high profitability,,native,,,,2019-03-22 03:28:20.494,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:28:01.729,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n  a.client_loginid, \n  b.bet_type,\n  b.buy_price, \n  b.sell_price,\n  b.start_time,\n  b.purchase_time, \n  b.sell_time, \n  b.payout_price, \n  b.short_code,\n  c.residence,\n  ((b.buy_price - b.sell_price)*data_collection.exchangetousd_rate(a.currency_code, b.purchase_time) ) as ""CompanyProfit"",\n  w.*\nfrom transaction.transaction t, \n  bet.financial_market_bet b, \n  transaction.account a,\n  betonmarkets.client c,\n  (SELECT \n    t.client_loginid, \n    SUM(t.""CompanyProfit"") AS ""TotalCompanyProfit"" ,\n    SUM(ABS(t.""CompanyProfit"")) AS ""TotalABSMoneyInOut"",\n    COUNT(t.""CompanyProfit"") AS ""COUNTTrades"",\n    -SUM(t.""CompanyProfit"")/SUM(ABS(t.""CompanyProfit"")) AS ""Profitability""\n  FROM \n    (select a.client_loginid, \n      ((b.buy_price - b.sell_price)*data_collection.exchangetousd_rate(a.currency_code, b.purchase_time) ) as ""CompanyProfit""\n    from transaction.transaction t, \n      bet.financial_market_bet b, \n      transaction.account a,\n      betonmarkets.client c\n    where t.financial_market_bet_id = b.id\n      and c.loginid=a.client_loginid\n      and t.account_id = a.id  \n      and t.action_type = \'buy\'\n      and short_code like \'%_S0P_0\') AS t\n  GROUP BY t.client_loginid) as w\nwhere t.financial_market_bet_id = b.id\n  and c.loginid=a.client_loginid\n  and t.account_id = a.id  \n  and t.action_type = \'buy\'\n  and short_code like \'%_S0P_0\'\n  and w.client_loginid = a.client_loginid\n  and w.""COUNTTrades"">=100\n  and w.""Profitability"">0.1\nORDER BY w.""Profitability"" DESC'}}",,table,,False,False,646,,ATM high profitability,,native,,,,2019-03-22 03:28:01.729,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:26:45.599,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Transaction > Dormant Accounts\nWITH param as (\n    SELECT\n        -- CH, CR, MX, MLT, MF, VR or any other broker_code\n        'CR'::VARCHAR as broker_code\n)\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM dormant_account_corresponding_mf_mlt(\n    (SELECT broker_code FROM param)::varchar\n    );\n\n\n\n""}}",Transaction > Dormant Accounts,table,,False,False,614,,audit,,native,,,,2019-03-22 03:26:45.599,{}
False,,"{'id': 191, 'name': 'Audit', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'audit'}",191.0,,2019-04-09 09:43:23.149,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Audit > address change within interval\nWITH params AS (SELECT\n-- CH, CR, MF, MX, MLT, JP...\n-- bear in mind that running against CR will produce a very large report that will probably take ""forever"" to run without a tight interval\n\t\'MF\'::VARCHAR AS broker_code,\n\n\t\'2017-07-01\'::DATE AS start_date,\n\t\'2017-12-31\'::DATE AS end_date\n)\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT dbl.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink (ps.srvname, $$\n    WITH ref AS (\n        SELECT DISTINCT ON (loginid)\n            loginid,\n            address_line_1 AS add1,\n            address_line_2 AS add2\n        FROM audit.client\n        WHERE stamp < $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n        ORDER BY loginid, stamp DESC\n    ),\n    \n    diffs AS (\n        SELECT DISTINCT ON (ac.loginid, ac.address_line_1, ac.address_line_2)\n            ac.loginid,\n            ac.address_line_1 AS add1,\n            ac.address_line_2 AS add2,\n            ac.stamp\n        FROM ref\n        JOIN audit.client AS ac\n             ON ac.loginid = ref.loginid\n             AND (ref.add1 <> ac.address_line_1 OR ref.add2 <> ac.address_line_2)\n        WHERE ac.stamp >= $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n        AND ac.stamp < $$|| quote_nullable(params.end_date) ||$$::TIMESTAMP + INTERVAL \'1 day\'\n        ORDER BY ac.loginid, ac.address_line_1, ac.address_line_2\n    )\n    \n    SELECT\n        diffs.loginid,\n        ref.add1 AS reference_address1,\n        ref.add2 AS reference_address2,\n        string_agg((diffs.stamp::DATE::TEXT ||\': (\'|| diffs.add1 ||\', \'|| diffs.add2 ||\')\'), \' # \' ORDER BY diffs.stamp) AS address_diffs\n    FROM ref\n    JOIN diffs\n         ON ref.loginid = diffs.loginid\n    GROUP BY diffs.loginid, ref.add1, ref.add2\n$$) AS dbl(\n    loginid TEXT,\n    reference_address1 TEXT,\n    reference_address2 TEXT,\n    address_diffs TEXT\n    )\nWHERE params.broker_code = ANY(ps.broker_codes)\nORDER BY betonmarkets.loginid_sortable(dbl.loginid);'}}",Audit > address change within interval,table,,False,False,913,,Audit address change within interval,,native,,,,2019-04-09 09:43:23.149,{}
False,,"{'id': 191, 'name': 'Audit', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'audit'}",191.0,,2019-04-09 09:43:12.925,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Audit > first deposit -AND- address change within interval\n-- these items are not considered deposits for the sake of this report\n-- (\'free_gift\', \'compacted_statement\', \'cancellation\', \'closed_account\', \'miscellaneous\', \'affiliate_reward\', \'payment_fee\', \'virtual_credit\', \'account_transfer\', \'currency_conversion_transfer\')\nWITH params AS (SELECT\n-- CH, CR, MF, MX, MLT, JP...\n-- bear in mind that running against CR will produce a very large report that will probably take ""forever"" to run without a tight interval\n\t\'MF\'::VARCHAR AS broker_code,\n\n\t\'2017-07-01\'::DATE AS start_date,\n\t\'2017-12-31\'::DATE AS end_date\n)\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT dbl.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink (ps.srvname, $$\n    WITH first_dep AS (\n        SELECT DISTINCT ON (pp.account_id)\n            pp.account_id,\n            pp.payment_time\n        FROM payment.payment AS pp\n        WHERE pp.payment_type_code NOT IN (\'free_gift\', \'compacted_statement\', \'cancellation\', \'closed_account\', \'miscellaneous\', \'affiliate_reward\', \'payment_fee\', \'virtual_credit\', \'account_transfer\', \'currency_conversion_transfer\')\n    -- no point in considering payment activity after the end date\n        AND pp.payment_time < $$|| quote_nullable(params.end_date) ||$$::TIMESTAMP + INTERVAL \'1 day\'\n        ORDER BY pp.account_id, payment_time\n    ),\n    \n    ref AS (\n        SELECT DISTINCT ON (loginid)\n            loginid,\n            address_line_1 AS add1,\n            address_line_2 AS add2\n        FROM audit.client\n        WHERE stamp < $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n        ORDER BY loginid, stamp DESC\n    ),\n    \n    diffs AS (\n        SELECT DISTINCT ON (ac.loginid, ac.address_line_1, ac.address_line_2)\n            ac.loginid,\n            ac.address_line_1 AS add1,\n            ac.address_line_2 AS add2,\n            ac.stamp\n        FROM first_dep\n        JOIN transaction.account AS ta\n             ON ta.id = first_dep.account_id\n             AND first_dep.payment_time >= $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n        JOIN ref\n             ON ref.loginid = ta.client_loginid\n        JOIN audit.client AS ac\n             ON ac.loginid = ref.loginid\n             AND (ref.add1 <> ac.address_line_1 OR ref.add2 <> ac.address_line_2)\n        WHERE ac.stamp >= $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n        AND ac.stamp < $$|| quote_nullable(params.end_date) ||$$::TIMESTAMP + INTERVAL \'1 day\'\n        ORDER BY ac.loginid, ac.address_line_1, ac.address_line_2\n    )\n    \n    SELECT\n        diffs.loginid,\n        ref.add1 AS reference_address1,\n        ref.add2 AS reference_address2,\n        string_agg((diffs.stamp::DATE::TEXT ||\': (\'|| diffs.add1 ||\', \'|| diffs.add2 ||\')\'), \' # \' ORDER BY diffs.stamp) AS address_diffs\n    FROM ref\n    JOIN diffs\n         ON ref.loginid = diffs.loginid\n    GROUP BY diffs.loginid, ref.add1, ref.add2\n    \n$$) AS dbl(\n    loginid TEXT,\n    reference_address1 TEXT,\n    reference_address2 TEXT,\n    address_diffs TEXT)\n    \nWHERE params.broker_code = ANY(ps.broker_codes)\nORDER BY betonmarkets.loginid_sortable(dbl.loginid);'}}",Audit > first deposit -AND- address change within interval,table,,False,False,910,,Audit first deposit -AND- address change within interval,,native,,,,2019-04-09 09:43:12.925,{}
False,,"{'id': 191, 'name': 'Audit', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'audit'}",191.0,,2019-04-09 09:43:29.952,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Audit > First time deposits within interval\n-- Which clients first deposited to their account within the specified interval\n-- This actually reports the first ""payment"" record for a given client, regardless of what type of ""payment"" that is\nWITH params AS (SELECT\n  \'2017-06-01\'::DATE AS start_date,\n  \'2017-07-15\'::DATE AS end_date,\n  \'{MF}\'::VARCHAR[]  AS broker_codes -- leave empty, {}, to lookup all broker_codes, otherwise one or more of CR,MF,MX,MLT,JP,CH\n)\n\n\n\n\n\n\n-- Do not change any code below here\n\nSELECT d.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink(ps.srvname, $$\n    SELECT\n        ta.client_loginid,\n        bc.broker_code,\n        crnt.payment_time::TEXT AS payment_time,\n        crnt.payment_gateway_code,\n        crnt.payment_type_code\n    \n    FROM (\n        SELECT DISTINCT ON (pp.account_id)\n            pp.account_id,\n            pp.payment_time AS payment_time,\n            payment_gateway_code,\n            payment_type_code\n        FROM payment.payment pp\n        WHERE pp.payment_time >= $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n          AND pp.payment_time <  $$|| quote_nullable(params.end_date) ||$$::TIMESTAMP + INTERVAL \'1 day\'\n        ORDER BY pp.account_id, payment_time\n    ) AS crnt\n    \n    JOIN LATERAL (\n        SELECT MIN(payment_time) AS payment_time\n        FROM payment.payment\n        WHERE account_id = crnt.account_id\n    ) realmin ON realmin.payment_time = crnt.payment_time\n    \n    JOIN transaction.account AS ta\n         ON ta.id = crnt.account_id\n    JOIN betonmarkets.client AS bc\n         ON bc.loginid = ta.client_loginid\n    WHERE\n        $$|| CASE WHEN CARDINALITY(params.broker_codes) > 0\n                THEN \'bc.broker_code = ANY(\'|| quote_literal( params.broker_codes ) ||\'::VARCHAR[])\'\n                ELSE \'TRUE\'\n             END\n        ||$$\n$$) AS d (\n    client_loginid VARCHAR,\n    broker_code VARCHAR,\n    payment_time TEXT,\n    payment_gateway_code VARCHAR,\n    payment_type_code VARCHAR)\n    \nWHERE CARDINALITY(params.broker_codes) = 0 OR params.broker_codes && ps.broker_codes\nORDER BY 3;'}}",Audit > First time deposits within interval,table,,False,False,915,,Audit First time deposits within interval,,native,,,,2019-04-09 09:43:29.952,{}
False,,"{'id': 191, 'name': 'Audit', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'audit'}",191.0,,2019-04-09 09:43:16.306,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Audit > Listing of Locked and Disabled client accounts\n\nWITH params AS (SELECT\n  '2016-01-01'::DATE AS p_start_date,\n  '2016-12-31'::DATE AS p_end_date\n),\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nps AS (SELECT srvname FROM betonmarkets.production_servers() WHERE srvname != 'jp' ORDER BY 1)\nSELECT t.* FROM params, ps\nCROSS JOIN dblink(ps.srvname, $DBLINK$\nSELECT \n    cs.client_loginid, c.broker_code,ta.balance,ta.currency_code, cs.status_code,cs.last_modified_date, cs.reason \nFROM \n    betonmarkets.client c, transaction.account ta, betonmarkets.client_status cs\nWHERE \n    ta.client_loginid=cs.client_loginid\n    AND ta.is_default\n    AND c.loginid=cs.client_loginid \n    AND cs.status_code IN ('disabled','cashier_locked')\n    AND cs.last_modified_date BETWEEN $DBLINK$|| quote_literal(params.p_start_date) ||$DBLINK$ AND $DBLINK$|| quote_literal(params.p_end_date || ' 23:59:59.999999') ||$DBLINK$\nORDER BY cs.client_loginid, cs.last_modified_date\n$DBLINK$::TEXT) t (loginid VARCHAR, broker_code TEXT, balance NUMERIC, currency_code TEXT,status_code VARCHAR, last_modified_date timestamp(0), reason VARCHAR)\n""}}",Audit > Listing of Locked and Disabled client accounts,table,,False,False,911,,Audit Listing of Locked and Disabled client accounts,,native,,,,2019-04-09 09:43:16.306,{}
False,,"{'id': 191, 'name': 'Audit', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'audit'}",191.0,,2019-04-09 09:43:09.489,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Audit > Listing of Locked and Disabled client accounts -v2\n\nWITH params AS (SELECT\n  '2016-01-01'::DATE AS p_start_date,\n  '2018-12-31'::DATE AS p_end_date,\n  'MF'::VARCHAR AS broker_code,                             -- except JP... leave empty, '', for all broker codes\n  '{disabled, cashier_locked}'::VARCHAR[]  AS status_codes, -- values separated by commas like: disabled, cashier_locked, unwelcome\n  TRUE::BOOLEAN AS zero_balances_only                       -- TRUE to only get balances != 0, otherwise FALSE gives all flagged accounts\n)\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT t.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink(ps.srvname, $$\nSELECT \n    cs.client_loginid,\n    c.broker_code,\n    ta.balance,\n    ta.currency_code,\n    cs.status_code,\n    cs.last_modified_date::TIMESTAMP(0) AS last_modified_date,\n    cs.reason \nFROM \n    betonmarkets.client c\nJOIN betonmarkets.client_status cs ON c.loginid=cs.client_loginid\nJOIN transaction.account ta ON ta.client_loginid=cs.client_loginid\nWHERE \n    ta.is_default\n    AND cs.status_code = ANY( $$|| quote_nullable(params.status_codes) ||$$::VARCHAR[])\n    AND cs.last_modified_date >= $$|| quote_literal(params.p_start_date) ||$$::TIMESTAMP\n    AND cs.last_modified_date <  $$|| quote_literal(params.p_end_date) ||$$::TIMESTAMP + INTERVAL '1 day'\n    $$|| CASE WHEN params.zero_balances_only THEN 'AND ta.balance <> 0'::TEXT ELSE '' END ||$$\nORDER BY cs.last_modified_date DESC\n$$::TEXT) t (loginid VARCHAR, broker_code TEXT, balance NUMERIC, currency_code TEXT,status_code VARCHAR, last_modified_date TEXT, reason VARCHAR)\nWHERE ps.srvname != 'jp'\nAND (params.broker_code = '' OR params.broker_code = ANY (ps.broker_codes))""}}",Audit > Listing of Locked and Disabled client accounts -v2,table,,False,False,909,,Audit Listing of Locked and Disabled client accounts -v2,,native,,,,2019-04-09 09:43:09.489,{}
False,,"{'id': 191, 'name': 'Audit', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'audit'}",191.0,,2019-04-09 09:43:26.557,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Audit > Pay Agent Performance details\nWITH params AS (SELECT\n    '2018-02-01'::DATE AS start_date,\n    '2018-02-25'::DATE AS end_date,\n  -- For client_loginids, use {} for all -OR- specify a list of one or more like this '{ClientID1}' , '{ClientID1,ClientID2}'\n    '{CR48993}'::VARCHAR[] AS client_loginids\n)\n\n\n\n\n\n-- Do not change any code below here\n\n\nSELECT t.*\nFROM params\nCROSS JOIN LATERAL payagent_analysis(start_date, end_date, client_loginids) AS t;""}}",Audit > Pay Agent Performance details,table,,False,False,914,,Audit Pay Agent Performance details,,native,,,,2019-04-09 09:43:26.557,{}
False,,"{'id': 191, 'name': 'Audit', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'audit'}",191.0,,2019-04-09 09:43:19.664,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Audit > Pay Agent Performance grouping\nWITH params AS (SELECT\n    '2018-02-01'::DATE AS start_date,\n    '2018-02-25'::DATE AS end_date,\n  -- For client_loginids, use {} for all -OR- specify a list of one or more like this '{ClientID1}' , '{ClientID1,ClientID2}'\n    '{CR48993}'::VARCHAR[] AS client_loginids\n)\n\n\n\n\n\n-- Do not change any code below here\n\n\n\nSELECT\n    t.agent_loginid,\n    t.currency_code,\n    SUM(t.amount) AS acct_differential,\n    COUNT(t.agent_deposit) AS agent_deposit,\n    SUM(t.amount) FILTER (WHERE t.agent_deposit) AS deposit_ttl,\n    COUNT(t.agent_withdrawal) AS agent_withdrawal,\n    SUM(t.amount) FILTER (WHERE t.agent_withdrawal) AS withdrawal_ttl,\n    COUNT(t.xfr_in) AS xfr_in,\n    SUM(t.amount) FILTER (WHERE t.xfr_in) AS xfr_in_ttl,\n    COUNT(t.xfr_out) AS xfr_out,\n    SUM(t.amount) FILTER (WHERE t.xfr_out) AS xfr_out_ttl\n\nFROM params\nCROSS JOIN LATERAL payagent_analysis(start_date, end_date, client_loginids) AS t\nGROUP BY\n    t.agent_loginid,\n    t.currency_code\nORDER BY betonmarkets.loginid_sortable(t.agent_loginid), t.currency_code\n""}}",Audit > Pay Agent Performance grouping,table,,False,False,912,,Audit Pay Agent Performance grouping,,native,,,,2019-04-09 09:43:19.664,{}
False,,"{'id': 73, 'name': ""Dwi Hadyan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 53, 'slug': 'dwi_hadyan_s_personal_collection'}",73.0,,2019-01-31 02:33:48.187,"{'email': 'dwi@binary.com', 'first_name': 'Dwi', 'last_login': '2019-06-21T06:57:40.046Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 53, 'last_name': 'Hadyan', 'date_joined': '2019-01-24T02:54:53.692Z', 'common_name': 'Dwi Hadyan'}",53,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT \ne.""date"",\nround(avg(e.new_deposit_amount*e.exchangetousd_rate),2) as ""Average_deposits_USD""\nFROM\n(\n  SELECT \n  data_collection.exchangetousd_rate(d.currency_code, d.""date""), d.* -- created exchangetousd_rate variable from currency_code\n  FROM\n  (\n    SELECT \n    cast(f.transaction_time AS date) as ""date"", -- convert transaction_time to date format\n    a.currency_code,  -- let currency_code as a\n    coalesce(sum(f.amount) filter (where f.action_type=\'deposit\'), 0) as new_deposit_amount\n    FROM transaction.firsts f left join transaction.account a\n    on f.account_id=a.id\n    \n    WHERE CAST(transaction_time AS date) BETWEEN CAST((NOW() - INTERVAL \'1 day\') AS date)\n          AND CAST(NOW()  AS date)\n    \n    GROUP BY 1,2 \n    ORDER BY CAST(transaction_time AS date) DESC\n\n  ) d\n) e\n\ngroup by 1\norder by 1 asc\n\n\n\n'}}",,smartscalar,,False,False,297,,Average Deposit CR,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-06-30T00:00:00.000Z', 'latest': '2019-07-01T00:00:00.000Z'}}}}, {'name': 'Average_deposits_USD', 'display_name': 'Average Deposits Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3051.37, 'max': 3383.51, 'avg': 3217.44, 'sd': 234.85844630330013, 'q1': 3051.37, 'q3': 3383.51}}}}]",,2019-07-01 05:17:31.332,"{'column_settings': {'[""name"",""Average_deposits_USD""]': {'number_style': 'currency'}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-20 09:07:40.085,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n  to_char(d.""day"", \'D\'),\n  to_char(d.""day"", \'day\') as ""day_of_week"",\n  d.""residence"",\n  round(avg(d.""turnover_USD""),2) as ""turnover_USD"",\n  round(avg(d.""profit_USD""),2) as ""profit_USD"",\n  round(avg(d.client_count),2) as ""client_count""\nfrom\n(\nselect \n  ""day"",\n  ""residence"",\n  sum(""turnover_USD"") as ""turnover_USD"",\n  sum(""profit_USD"") as ""profit_USD"",\n  count(distinct client_loginid) as ""client_count""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-31 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\n) d right join \n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-1 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\nlimit 10\n) e\non e.residence=d.residence\ngroup by 1,2,3\norder by 1\n'}}",,line,,False,False,122,,Average number of clients by day of week,,native,,"[{'name': 'to_char', 'display_name': 'To Char', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 1.0}}}}, {'name': 'day_of_week', 'display_name': 'Day Of Week', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.0}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'turnover_USD', 'display_name': 'Turnover Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 70, 'nil%': 0.0}, 'type': {'type/Number': {'min': 14142.17, 'max': 1627016.77, 'avg': 287646.03, 'sd': 446767.9846513752, 'q1': 45294.37125, 'q3': 189941.07}}}}, {'name': 'profit_USD', 'display_name': 'Profit Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 70, 'nil%': 0.0}, 'type': {'type/Number': {'min': -2630.57, 'max': 62279.16, 'avg': 8480.146428571428, 'sd': 14548.710315396955, 'q1': 1261.8225204918144, 'q3': 6439.39}}}}, {'name': 'client_count', 'display_name': 'Client Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 69, 'nil%': 0.0}, 'type': {'type/Number': {'min': 34.8, 'max': 2487.0, 'avg': 505.32571428571435, 'sd': 687.2205879110126, 'q1': 115.25, 'q3': 635.0}}}}]",,2019-02-25 04:43:20.378,"{'graph.dimensions': ['day_of_week', 'residence'], 'graph.metrics': ['client_count'], 'graph.y_axis.scale': 'log'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-22 11:48:19.357,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\n    hour_of_day,\n    sum(total_buy) as total_buy,\n    avg(total_buy) as avg_buy,\n    sum(total_profit) as total_profit,\n    avg(total_profit) as avg_profit\nfrom\n(\n    select \n        tmp.account_id,\n        tmp.hour_of_day,\n        tmp.total_buy*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as total_buy,\n        tmp.total_profit*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as total_profit\n    from\n    (\n        select \n            account_id, \n            date_part('hour', purchase_time) as hour_of_day, \n            sum(coalesce(buy_price,0)) as total_buy, \n            sum(coalesce(buy_price,0) - coalesce(sell_price,0)) as total_profit\n        from only bet.financial_market_bet \n        where purchase_time >= {{start_date}}::date\n        and purchase_time < coalesce([[{{end_date}}]],({{start_date}}::timestamp + interval '1d'))::date\n        and substr(underlying_symbol,1,1)={{first_letter}}\n        --current_date --+ interval '-2d'\n        group by 1, 2\n    ) tmp \n    left join transaction.account ta\n    on ta.id=tmp.account_id\n) tmp2\ngroup by 1"", 'template-tags': {'first_letter': {'id': 'd1f24ec6-de99-4b13-e182-a63c4c469861', 'name': 'first_letter', 'display-name': 'First Letter', 'type': 'text', 'required': True, 'default': 'f'}, 'start_date': {'id': '0c1b4f0f-5a68-a3e8-0b4d-338ebc8e6c5b', 'name': 'start_date', 'display-name': 'start date (inclusive)', 'type': 'date', 'required': True, 'default': '2019-05-04'}, 'end_date': {'id': '1214e187-7e57-f9bb-bcac-518deb1ae151', 'name': 'end_date', 'display-name': 'end date (exclusive)', 'type': 'date', 'required': False}}}}",,bar,,False,False,978,,average profit and turnover by hour of day,,native,,"[{'name': 'hour_of_day', 'display_name': 'Hour Of Day', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 23.0, 'avg': 11.5, 'sd': 7.071067811865475, 'q1': 5.5, 'q3': 17.5}}}}, {'name': 'total_buy', 'display_name': 'Total Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2279315.508161868, 'max': 4161257.2043233467, 'avg': 3132807.105622132, 'sd': 515752.3234818969, 'q1': 2869696.2861380535, 'q3': 3344846.5256395573}}}}, {'name': 'avg_buy', 'display_name': 'Avg Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 346.40053315529906, 'max': 460.1656744694047, 'avg': 408.624122962605, 'sd': 31.75970211089866, 'q1': 382.5138779598965, 'q3': 435.0137185257783}}}}, {'name': 'total_profit', 'display_name': 'Total Profit', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 33716.2421639553, 'max': 150067.41717409456, 'avg': 79724.20152786045, 'sd': 28676.890011514137, 'q1': 60418.55686678618, 'q3': 99077.97518440694}}}}, {'name': 'avg_profit', 'display_name': 'Avg Profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3.539019855563693, 'max': 18.21427566137815, 'avg': 10.423786592952881, 'sd': 3.407899440950467, 'q1': 8.169456326407472, 'q3': 12.339527651116278}}}}]",,2019-05-24 02:32:29.974,"{'table.pivot_column': 'substr', 'table.cell_column': 'account_id', 'graph.dimensions': ['hour_of_day'], 'graph.metrics': ['total_buy', 'total_profit'], 'series_settings': {'total_profit': {'axis': 'right', 'display': 'area'}, 'total_buy': {'display': 'area'}}, 'graph.y_axis.scale': 'linear', 'graph.show_goal': False, 'graph.goal_value': 4000}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:12:47.485,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT count(deal) AS Company_Profit\n FROM mt5_deals_2018 AS deals\n JOIN mt5_users AS users ON users.Login = deals.Login\n WHERE Action IN (0,1) -- In Trades only\n and users.group like '%vanuatu_standard%'\n and symbol in ('AUDCAD','AUDCHF','AUDJPY','AUDNZD','AUDUSD','EURAUD','EURCAD','EURCHF','EURGBP','EURJPY','EURNZD','EURUSD','GBPCHF','GBPJPY','GBPUSD','NZDUSD','USDCAD','USDCHF','USDJPY')\n and date(deals.Time) = '2018-12-06'""}}",,table,,False,False,552,,B-Book Profit,,native,,,,2019-03-22 03:12:47.485,{}
False,,"{'id': 54, 'name': ""Aggelos Armenatzoglou's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 47, 'slug': 'aggelos_armenatzoglou_s_personal_collection'}",54.0,,2019-02-08 06:40:29.650,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(to_timestamp(daily.""Datetime"")), daily.""Login"", daily.""Balance"",  daily.""Group"" from mt5_daily_2018  as daily\n\nWHERE daily.""Group"" Like \'%costarica%\'\nand date(to_timestamp(daily.""Datetime""))=\'2018-11-30\''}}",,table,,False,False,354,,Balance real costarica,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-11-30T00:00:00.000Z', 'latest': '2018-11-30T00:00:00.000Z'}}}}, {'name': 'Login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10000, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1122.0, 'max': 55779.0, 'avg': 30081.0129, 'sd': 15123.518648343961, 'q1': 17398.44715689054, 'q3': 43024.624855166534}}}}, {'name': 'Balance', 'display_name': 'Balance', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 642, 'nil%': 0.0}, 'type': {'type/Number': {'min': -733.02, 'max': 9954.16, 'avg': 8.171537999999998, 'sd': 164.47777509867785, 'q1': -4.2602536743049, 'q3': 4.852478260043299}}}}, {'name': 'Group', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 14.0}}}}]",,2019-02-21 05:48:34.497,"{'table.pivot_column': 'date', 'table.cell_column': 'Login'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-12 03:50:05.818,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(to_timestamp(daily.""Datetime"")), SUM (daily.""Balance"") AS Total_Balance, SUM(daily.""ProfitEquity"") as Total_Equity, SUM (daily.""Profit"" + daily.""ProfitStorage"")*-1 AS Total_PnL_On_Open_Positions\nfrom mt5_daily_2019 daily\nWhere ""Group"" LIKE \'%costarica%\'\ngroup by date(to_timestamp(daily.""Datetime""))'}}",,combo,,False,False,361,,Balance-Equity-Floating PnL (Daily),,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-03-16T00:00:00.000Z'}}}}, {'name': 'total_balance', 'display_name': 'Total Balance', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/Number': {'min': 888615.3300000088, 'max': 1637683.5800000334, 'avg': 1321224.284533359, 'sd': 232438.57259510717, 'q1': 1080227.020000015, 'q3': 1512188.9804650568}}}}, {'name': 'total_equity', 'display_name': 'Total Equity', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/Number': {'min': 532821.2500000036, 'max': 1199602.9400000214, 'avg': 902212.5944000119, 'sd': 184858.47121827127, 'q1': 734329.4525000069, 'q3': 1080322.5562500171}}}}, {'name': 'total_pnl_on_open_positions', 'display_name': 'Total Pnl On Open Positions', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/Number': {'min': 226251.83999999985, 'max': 649853.4799999989, 'avg': 419021.6901333333, 'sd': 106160.9777561857, 'q1': 355595.4524999999, 'q3': 481046.085219418}}}}]",,2019-04-16 01:14:47.718,"{'graph.dimensions': ['date'], 'graph.metrics': ['total_balance', 'total_equity', 'total_pnl_on_open_positions'], 'series_settings': {'Total Balance On Clients Account': {'color': '#509EE3'}, 'Total Equity': {'axis': 'left', 'display': 'line'}, 'Total Pnl On Open Positions': {'axis': 'left'}}}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:13:08.987,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Banned country clients\nWITH params AS (SELECT array[\n\n  'af','ba','gy','iq','la','sy','ug','vu','ye'  -- add or remove countries as necessary\n\n  ]::TEXT[] AS banned_countries\n)\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\n\nSELECT t.* FROM params\nCROSS JOIN LATERAL banned_country_listings(banned_countries) AS t;""}}",Banned country clients,table,,False,False,556,,Banned country clients,,native,,,,2019-03-22 03:13:08.987,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-09-12 05:27:31.134,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with by_minute_data as\n(\n    select \n        to_timestamp(((extract(epoch from purchase_minute)::bigint)/(60*6))*360) as six_minute,\n        purchase_day,\n        market,\n        sum(total_buy) as total_buy,\n        sum(profit) as profit,\n        max(distinct_buid) as max_buid,\n        min(distinct_buid) as min_buid,\n        avg(distinct_buid) as avg_buid\n    from\n    (\n        select \n            purchase_minute,\n            purchase_day,\n            market,\n            sum(total_buy) as total_buy,\n            sum(profit) as profit,\n            sum(distinct_buid) as distinct_buid\n        from\n        (\n            select \n                currency_code,\n                purchase_minute,\n                purchase_day,\n                market,\n                total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n                profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit,\n                distinct_buid\n            from\n            (\n                select\n                    ta.currency_code,\n                    bm.market, \n                    date_trunc('minute', purchase_time) as purchase_minute, \n                    date_trunc('day', purchase_time) as purchase_day,\n                    sum(buy_price) as total_buy,\n                    sum(buy_price - sell_price) as profit,\n                    count(distinct ta.binary_user_id) as distinct_buid\n                from only bet.financial_market_bet fmb left join bet.market bm\n                on bm.symbol = fmb.underlying_symbol\n                left join transaction.account ta\n                on ta.id= fmb.account_id\n                where \n                    (purchase_time >= current_date \n                        and purchase_time < date_trunc('minute', now())) or\n                    (purchase_time >= (current_date + interval'-7d') \n                        and purchase_time < (date_trunc('minute', now()) + interval '-7d')) or\n                    (purchase_time >= (current_date + interval'-14d') \n                        and purchase_time < (date_trunc('minute', now()) + interval '-14d')) or\n                    (purchase_time >= (current_date + interval'-21d') \n                        and purchase_time < (date_trunc('minute', now()) + interval '-21d')) or\n                    (purchase_time >= (current_date + interval'-28d') \n                        and purchase_time < (date_trunc('minute', now()) + interval '-28d')) or\n                    (purchase_time >= (current_date + interval'-35d') \n                        and purchase_time < (date_trunc('minute', now()) + interval '-35d'))\n                group by 1,2,3,4\n            ) tmp\n        ) tmp2\n        group by 1,2,3\n    ) tmp3\n    group by 1,2,3\n)\n\nselect\n  market,\n  date_part('time', six_minute) as six_minute,\n  purchase_day,\n  --sum(amount) OVER (PARTITION BY circle_id ORDER BY ea_year, ea_month) AS cum_amt\n  --sum(profit) over (partition by market order by six_minute asc rows between unbounded preceding and current row) as accumulated_profit,\n  --sum(total_buy) over (partition by market order by six_minute asc rows between unbounded preceding and current row) as accumulated_buy,\n  profit,\n  total_buy,\n  max_buid,\n  min_buid,\n  round(avg_buid)::bigint as avg_buid\nfrom by_minute_data\norder by 2,1""}}",,line,,False,False,1037,,basic stats by 6 minute intervals,,native,,[],,2019-09-12 06:13:22.671,"{'graph.dimensions': [None], 'graph.metrics': [None], 'graph.y_axis.scale': 'linear'}"
False,,"{'id': 14, 'name': ""Yng Shan Tan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 12, 'slug': 'yng_shan_tan_s_personal_collection'}",14.0,,2019-03-08 02:26:06.173,"{'email': 'yngshan@binary.com', 'first_name': 'Yng Shan', 'last_login': '2019-10-21T01:07:21.265Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 12, 'last_name': 'Tan', 'date_joined': '2018-11-08T08:46:36.532Z', 'common_name': 'Yng Shan Tan'}",12,2,"{'native': {'template-tags': {'startdate': {'id': '471ca58c-9d38-5ed9-2a63-0c4fdc5c5e65', 'name': 'startdate', 'display-name': 'Start_date', 'type': 'date'}, 'enddate': {'id': 'b2e8bc84-48d3-59ec-9a24-659ed76bdc35', 'name': 'enddate', 'display-name': 'End_date', 'type': 'date'}}, 'query': 'select\nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select\n  a.client_loginid,\n  a.currency_code,\n    round((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n   from bet.financial_market_bet\n   join transaction.account as a\n   on a.id = account_id\n\n   and sell_time > {{startdate}}\n   and sell_time < {{enddate}}\n   and underlying_symbol like \'frx%\'\n    ) as d\ngroup by client_loginid, currency_code\norder by PL_USD desc\nlimit 10'}, 'type': 'native', 'database': 2}",,table,,False,False,470,,big winner,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Login ID', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'pl_usd', 'display_name': 'Pl Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 250.83, 'max': 1379.12, 'avg': 562.6179999999999, 'sd': 375.69430116637227, 'q1': 264.19, 'q3': 817.46}}}}, {'name': 'trades_number', 'display_name': 'Trades Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4.0, 'max': 61.0, 'avg': 17.7, 'sd': 17.04927499273144, 'q1': 5.0, 'q3': 22.0}}}}]",,2019-03-08 02:26:21.744,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd'}"
False,,"{'id': 83, 'name': 'CR', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'cr'}",83.0,,2019-02-28 04:37:15.749,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    s.binary_user_id,\n    string_agg(s.client_loginid, \'|\' order by s.client_loginid) as ""all_loginids"",\n    --s.""underlying_symbol"",\n    sum(""total_buy_USD""-""total_sell_USD"") as ""total_buyâ€“sell_USD"",\n    sum(""total_buy_USD"") as ""total_buy_USD"",\n    sum(""total_sell_USD"") as ""total_sell_USD"",\n    sum(""contract_count"") as ""contract_count""\nfrom \n(\n    select \n        t.binary_user_id,\n        t.client_loginid,\n        t.""underlying_symbol"",\n        data_collection.exchangetousd_rate(t.""currency_code"", t.""purch_time"")*t.""total_buy"" as ""total_buy_USD"",\n        data_collection.exchangetousd_rate(t.""currency_code"", t.""purch_time"")*t.""total_sell"" as ""total_sell_USD"",\n        t.""contract_count""\n    from\n    (\n        select\n            ta.binary_user_id,\n            ta.client_loginid,\n            ta.currency_code,\n            fmb.underlying_symbol,\n            sum(fmb.buy_price) as ""total_buy"",\n            sum(fmb.sell_price) as ""total_sell"",\n            count(1) as ""contract_count"",\n            min(fmb.purchase_time) as ""purch_time""\n        from only bet.financial_market_bet fmb left join transaction.account ta\n        on ta.id=fmb.account_id\n        where purchase_time >= now() + interval \'-6 hours\' \n        group by 1,2,3,4\n        order by 5 desc\n    ) t\n) s\n--where underlying_symbol = {{underlying_symbol}}\ngroup by 1\norder by 3\n--limit 20', 'template-tags': {'underlying_symbol': {'id': '0906822d-d022-cae9-0a3b-723253db014d', 'name': 'underlying_symbol', 'display-name': 'Underlying Symbol', 'type': 'text', 'required': True, 'default': 'frxAUDJPY'}}}}",,table,,False,False,424,,Biggest winners in last 6 hours in a given underlying,,native,,"[{'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 113, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4046664.0, 'max': 6203286.0, 'avg': 5715059.654867257, 'sd': 487115.06242314796, 'q1': 5449189.0, 'q3': 6117432.25}}}}, {'name': 'all_loginids', 'display_name': 'All Login Ids', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 113, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.991150442477876}}}}, {'name': 'total_buyâ€“sell_USD', 'display_name': 'Total Buyâ€“sell Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 97, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1613.86, 'max': 29.87, 'avg': -21.99048112934593, 'sd': 154.17130390003862, 'q1': -8.330436627784794, 'q3': 1.26264913}}}}, {'name': 'total_buy_USD', 'display_name': 'Total Buy Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 65, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.357155, 'max': 2147.78, 'avg': 57.47782107743363, 'sd': 270.4746236455061, 'q1': 1.644603207010313, 'q3': 20.052500000000002}}}}, {'name': 'total_sell_USD', 'display_name': 'Total Sell Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 82, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 3761.64, 'avg': 79.46830220677957, 'sd': 402.01025756529725, 'q1': 0.7191749862707111, 'q3': 23.6475}}}}, {'name': 'contract_count', 'display_name': 'Contract Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 16, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 47.0, 'avg': 3.398230088495575, 'sd': 5.4355638145735075, 'q1': 1.163168351369447, 'q3': 3.275876705200594}}}}]",,2019-02-28 04:49:47.493,"{'table.pivot_column': 'contract_count', 'table.cell_column': 'binary_user_id'}"
False,,"{'id': 83, 'name': 'CR', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'cr'}",83.0,,2019-02-28 05:04:57.258,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'query': 'select\n    s.binary_user_id,\n    s.underlying_symbol,\n    string_agg(s.client_loginid, \'|\' order by s.client_loginid) as ""all_loginids"",\n    sum(""total_buy_USD""-""total_sell_USD"") as ""total_buyâ€“sell_USD"",\n    sum(""total_buy_USD"") as ""total_buy_USD"",\n    sum(""total_sell_USD"") as ""total_sell_USD"",\n    sum(""contract_count"") as ""contract_count""\nfrom \n(\n    select \n        t.binary_user_id,\n        t.client_loginid,\n        t.underlying_symbol,\n        data_collection.exchangetousd_rate(t.""currency_code"", t.""purch_time"")*t.""total_buy"" as ""total_buy_USD"",\n        data_collection.exchangetousd_rate(t.""currency_code"", t.""purch_time"")*t.""total_sell"" as ""total_sell_USD"",\n        t.""contract_count""\n    from\n    (\n        select\n            ta.binary_user_id,\n            ta.client_loginid,\n            ta.currency_code,\n            fmb.underlying_symbol,\n            sum(fmb.buy_price) as ""total_buy"",\n            sum(fmb.sell_price) as ""total_sell"",\n            count(1) as ""contract_count"",\n            min(fmb.purchase_time) as ""purch_time""\n        from only bet.financial_market_bet fmb left join transaction.account ta\n        on ta.id=fmb.account_id\n        where purchase_time >= now() + interval \'-6 hours\' \n        group by 1,2,3,4\n        order by 5 desc\n    ) t\n) s\nwhere substring(underlying_symbol,1,1) != \'R\'\ngroup by 1,2\norder by 4\n--limit 20'}, 'type': 'native', 'database': 2}",,table,,False,False,426,,Biggest winners in ONE underlying symbol (non-volidx) in the last 6 hours,,native,,"[{'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 270, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4064474.0, 'max': 6223635.0, 'avg': 5732098.488479262, 'sd': 540391.9423551423, 'q1': 5456238.283329862, 'q3': 6168398.06135616}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.933179723502304}}}}, {'name': 'all_loginids', 'display_name': 'All Login Ids', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 270, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.09447004608295}}}}, {'name': 'total_buyâ€“sell_USD', 'display_name': 'Total Buyâ€“sell Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 261, 'nil%': 0.0}, 'type': {'type/Number': {'min': -838.2, 'max': 998.0, 'avg': 0.9762313315601391, 'sd': 101.57984516887957, 'q1': -4.1620270150823, 'q3': 2.43689341606514}}}}, {'name': 'total_buy_USD', 'display_name': 'Total Buy Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 143, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.5, 'max': 998.0, 'avg': 28.882522793618662, 'sd': 118.77746667488215, 'q1': 2.137153528403134, 'q3': 12.068755494439637}}}}, {'name': 'total_sell_USD', 'display_name': 'Total Sell Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 197, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1836.2, 'avg': 27.906291462058523, 'sd': 159.31917319836862, 'q1': 0.286000197976689, 'q3': 11.557227290547088}}}}, {'name': 'contract_count', 'display_name': 'Contract Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 16.0, 'avg': 1.8778801843317972, 'sd': 1.850365203182646, 'q1': 1.0, 'q3': 2.105385208534731}}}}]",,2019-03-18 01:59:11.680,"{'table.pivot_column': 'contract_count', 'table.cell_column': 'binary_user_id'}"
False,,"{'id': 83, 'name': 'CR', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'cr'}",83.0,,2019-02-28 04:51:58.291,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'query': 'select\n    s.binary_user_id,\n    s.underlying_symbol,\n    string_agg(s.client_loginid, \'|\' order by s.client_loginid) as ""all_loginids"",\n    sum(""total_buy_USD""-""total_sell_USD"") as ""total_buyâ€“sell_USD"",\n    sum(""total_buy_USD"") as ""total_buy_USD"",\n    sum(""total_sell_USD"") as ""total_sell_USD"",\n    sum(""contract_count"") as ""contract_count""\nfrom \n(\n    select \n        t.binary_user_id,\n        t.client_loginid,\n        t.underlying_symbol,\n        data_collection.exchangetousd_rate(t.""currency_code"", t.""purch_time"")*t.""total_buy"" as ""total_buy_USD"",\n        data_collection.exchangetousd_rate(t.""currency_code"", t.""purch_time"")*t.""total_sell"" as ""total_sell_USD"",\n        t.""contract_count""\n    from\n    (\n        select\n            ta.binary_user_id,\n            ta.client_loginid,\n            ta.currency_code,\n            fmb.underlying_symbol,\n            sum(fmb.buy_price) as ""total_buy"",\n            sum(fmb.sell_price) as ""total_sell"",\n            count(1) as ""contract_count"",\n            min(fmb.purchase_time) as ""purch_time""\n        from only bet.financial_market_bet fmb left join transaction.account ta\n        on ta.id=fmb.account_id\n        where purchase_time >= now() + interval \'-6 hours\' \n        group by 1,2,3,4\n        order by 5 desc\n    ) t\n) s\ngroup by 1,2\norder by 4\n--limit 20'}, 'type': 'native', 'database': 2}",,table,,False,False,425,,Biggest winners in ONE underlying symbol in last 6 hours,,native,,"[{'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2183, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4044376.0, 'max': 6223986.0, 'avg': 5785751.202873563, 'sd': 511793.83730489993, 'q1': 5566017.852762128, 'q3': 6158976.978875473}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 35, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.953448275862069}}}}, {'name': 'all_loginids', 'display_name': 'All Login Ids', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2187, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.020114942528735}}}}, {'name': 'total_buyâ€“sell_USD', 'display_name': 'Total Buyâ€“sell Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1970, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1453.16, 'max': 6462.69, 'avg': 8.220155986139245, 'sd': 174.7286411752142, 'q1': -6.440220918239822, 'q3': 6.323298202102155}}}}, {'name': 'total_buy_USD', 'display_name': 'Total Buy Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1898, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.28459, 'max': 115483.33, 'avg': 232.7441526582109, 'sd': 2635.2044146026356, 'q1': 9.594389715453525, 'q3': 68.06353045380789}}}}, {'name': 'total_sell_USD', 'display_name': 'Total Sell Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 2208, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 109020.64, 'avg': 224.52399667207166, 'sd': 2534.8841313159687, 'q1': 11.436692815239978, 'q3': 74.43324038829786}}}}, {'name': 'contract_count', 'display_name': 'Contract Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 265, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1909.0, 'avg': 36.086781609195405, 'sd': 105.41805175678891, 'q1': 3.312043040795568, 'q3': 25.730301206853575}}}}]",,2019-03-18 01:59:13.377,"{'table.pivot_column': 'contract_count', 'table.cell_column': 'binary_user_id'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:12:58.251,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select Date(d.Time) as Date, round(sum(Profit),2) as Client_Profit, sum(IF(d.Comment like '%win%%',1,0)) as num_wins,\nsum(IF(d.Comment like '%%invest%%',1,0)) as num_buys,\n-1*round(sum(IF(d.Comment like '%%invest%%',Profit,0)),2) as buy_price,\n1*round(sum(IF(d.Comment like '%%win%%',Profit,0)),2) as sell_price\nfrom mt5_deals_2018 d\njoin mt5_users u On u.login = d.login\nwhere (d.Comment like '%win%%'\nOR d.Comment like '%%invest%%')\nand u.group like '%%real%%'\n-- and not(u.Email like '%%binary%%')\n group by date(Time)\norder by date(Time) DESC\n\nlimit 13""}}",,table,,False,False,554,,BO PnL for accounts team,,native,,,,2019-03-22 03:12:58.251,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:12:52.945,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select Date(d.Time) as Date, u.login as Login, u.Name as Name, u.Email as Email,\nround(sum(Profit),2) as Client_Profit, sum(IF(d.Comment like '%win%%',1,0)) as num_wins,\nsum(IF(d.Comment like '%%invest%%',1,0)) as num_buys,\n-1*round(sum(IF(d.Comment like '%%invest%%',Profit,0)),2) as buy_price,\n1*round(sum(IF(d.Comment like '%%win%%',Profit,0)),2) as sell_price\nfrom mt5_deals_2018 d\njoin mt5_users u On u.login = d.login\nwhere (d.Comment like '%win%%'\nOR d.Comment like '%%invest%%')\nand u.group like '%%real%%'\n-- and Date(d.Time)='2018-11-13'\ngroup by Login\norder by Date(d.Time) DESC\n\n\n""}}",,table,,False,False,553,,BO PnL for accounts team by Login,,native,,,,2019-03-22 03:12:52.945,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:13:03.494,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select ""Login"", SUM(""Profit"")\nfrom mt5_deals_2019\nwhere Date(""Time"") >= \'2019-01-01\'\nand Date(""Time"") <= \'2019-01-31\'\nand (""Comment"" like \'%%invest%%\' OR ""Comment"" like \'%%win%%\' OR ""Comment"" like \'%%payout%%\' OR ""Comment"" like \'%%refunded%%\')\nGroup by ""Login""'}}",,table,,False,False,555,,BO Trades for accounts team,,native,,,,2019-03-22 03:13:03.494,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-22 06:11:04.755,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    date_trunc('week', date_joined)::timestamp as date_joined,\n    count(distinct binary_user_id) as all_countries,\n    count(distinct binary_user_id) filter (where residence='id') as indonesia,\n    count(distinct binary_user_id) filter (where residence='br') as brazil,\n    count(distinct binary_user_id) filter (where residence='za') as south_africa,\n    count(distinct binary_user_id) filter (where residence in ('id', 'za', 'br')) as all_three,\n    count(distinct binary_user_id) filter (where residence not in ('id', 'za', 'br')) as others\nfrom betonmarkets.client\nwhere --residence = 'id' and \ndate_joined >= date_trunc('week', {{start_date}}::timestamp)\nand date_joined < date_trunc('week', current_date)\ngroup by 1\norder by 1\n--LPAD(numcol::text, 3, '0')"", 'template-tags': {'start_date': {'id': '3135ff0a-4a1c-41cc-5ca2-65aea565991e', 'name': 'start_date', 'display-name': 'start date', 'type': 'date', 'required': True, 'default': '2018-01-01'}}}}",,line,,False,False,977,37.0,"Brazil, Indonesia, and South Africa new sign-ups per week",ab35cba6-5efd-496f-ad37-784b68803b54,native,,"[{'name': 'date_joined', 'display_name': 'Date Joined', 'base_type': 'type/DateTime', 'special_type': 'type/JoinTimestamp', 'fingerprint': {'global': {'distinct-count': 73, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:00:00.000Z', 'latest': '2019-05-20T00:00:00.000Z'}}}}, {'name': 'all_countries', 'display_name': 'All Countries', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 72, 'nil%': 0}, 'type': {'type/Number': {'min': 2488, 'max': 5026, 'avg': 3542.082191780822, 'sd': 608.8488341722493, 'q1': 3048, 'q3': 4047.524197325875}}}}, {'name': 'indonesia', 'display_name': 'Indonesia', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 71, 'nil%': 0}, 'type': {'type/Number': {'min': 548, 'max': 1701, 'avg': 1114.0958904109589, 'sd': 323.2301201694059, 'q1': 791.75, 'q3': 1356.25}}}}, {'name': 'brazil', 'display_name': 'Brazil', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 66, 'nil%': 0}, 'type': {'type/Number': {'min': 165, 'max': 911, 'avg': 414.7671232876712, 'sd': 182.6756273563485, 'q1': 270.5, 'q3': 540.75}}}}, {'name': 'south_africa', 'display_name': 'South Africa', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 62, 'nil%': 0}, 'type': {'type/Number': {'min': 45, 'max': 900, 'avg': 189.58904109589042, 'sd': 195.89763735859307, 'q1': 76.5, 'q3': 238.5}}}}, {'name': 'all_three', 'display_name': 'All Three', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 71, 'nil%': 0}, 'type': {'type/Number': {'min': 1052, 'max': 2382, 'avg': 1718.4520547945206, 'sd': 299.55501911149116, 'q1': 1527, 'q3': 1935.5}}}}, {'name': 'others', 'display_name': 'Others', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 71, 'nil%': 0}, 'type': {'type/Number': {'min': 1226, 'max': 2730, 'avg': 1823.6575342465753, 'sd': 364.4852205449316, 'q1': 1462.75, 'q3': 2102}}}}]",,2019-05-28 07:56:23.699,"{'graph.show_trendline': False, 'table.cell_column': 'indonesia', 'graph.x_axis.axis_enabled': 'compact', 'graph.y_axis.scale': 'pow', 'graph.y_axis.auto_split': False, 'graph.metrics': ['indonesia', 'brazil', 'south_africa', 'all_countries', 'others'], 'graph.y_axis.axis_enabled': True, 'table.pivot_column': 'south_africa', 'series_settings': {'indonesia': {'line.marker_enabled': False, 'line.interpolate': 'cardinal', 'color': '#F2A86F', 'axis': 'left', 'display': 'line'}, 'brazil': {'line.marker_enabled': False, 'line.interpolate': 'cardinal', 'color': '#F9D45C', 'axis': 'left'}, 'south_africa': {'line.interpolate': 'cardinal', 'line.marker_enabled': False, 'color': '#EF8C8C', 'axis': 'left', 'display': 'line'}, 'others': {'line.interpolate': 'cardinal', 'line.marker_enabled': False, 'color': '#74838F', 'axis': 'left', 'display': 'line'}, 'all_countries': {'line.interpolate': 'cardinal', 'line.marker_enabled': False, 'color': '#509EE3', 'axis': 'left', 'display': 'line'}, 'all_three': {'line.interpolate': 'cardinal', 'line.marker_enabled': False, 'axis': 'left'}}, 'graph.y_axis.auto_range': True, 'graph.dimensions': ['date_joined'], 'stackable.stack_type': 'stacked'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-22 06:07:13.331,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'with params as (select date_trunc(\'week\', coalesce([[{{end_date}},]] current_date))::timestamp as end_date\n                )\nselect \n    --date_part(\'year\',date_joined::date)::text||\'week\'||LPAD(date_part(\'week\', date_joined::date)::text,2,\'0\') \n    date_trunc(\'week\', date_joined) as ""time"", \n    count(distinct binary_user_id) filter (where residence=\'id\') as indonesia,\n    count(distinct binary_user_id) filter (where residence=\'br\') as brazil,\n    count(distinct binary_user_id) filter (where residence=\'za\') as south_africa,\n    count(distinct binary_user_id) filter (where residence in (\'id\', \'za\', \'br\')) as all_three,\n    count(distinct binary_user_id) filter (where residence not in (\'id\', \'za\', \'br\')) as others,\n    count(distinct binary_user_id) as all_countries\n    --filter (where residence=\'za\') as south_africa\n\nfrom betonmarkets.client cross join params\nwhere --residence = \'id\' and \ndate_joined >= date_trunc(\'week\', {{start_date}}::timestamp) --\'2018-01-01\'\nand date_joined < params.end_date::timestamp --date_trunc(\'week\', current_date)\ngroup by 1\n--LPAD(numcol::text, 3, \'0\')', 'template-tags': {'start_date': {'id': '1d627cc6-6931-eb48-630f-5605c56a0e2f', 'name': 'start_date', 'display-name': 'start date', 'type': 'date', 'required': True, 'default': '2018-07-01'}, 'end_date': {'id': '86cb460f-5a66-1f34-8625-c99f3f324144', 'name': 'end_date', 'display-name': 'end date (optional)', 'type': 'date'}}}}",,line,,False,False,976,,"Brazil, South Africa, and Indonesia sign-ups by week",,native,,"[{'name': 'time', 'display_name': 'Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 48, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-06-25T00:00:00.000Z', 'latest': '2019-05-20T00:00:00.000Z'}}}}, {'name': 'indonesia', 'display_name': 'Indonesia', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 48, 'nil%': 0.0}, 'type': {'type/Number': {'min': 548.0, 'max': 1459.0, 'avg': 957.3125, 'sd': 250.9633487057762, 'q1': 758.0, 'q3': 1182.5}}}}, {'name': 'brazil', 'display_name': 'Brazil', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 47, 'nil%': 0.0}, 'type': {'type/Number': {'min': 208.0, 'max': 911.0, 'avg': 465.9791666666667, 'sd': 196.05812095085514, 'q1': 294.5, 'q3': 642.5}}}}, {'name': 'south_africa', 'display_name': 'South Africa', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 44, 'nil%': 0.0}, 'type': {'type/Number': {'min': 57.0, 'max': 900.0, 'avg': 246.22916666666666, 'sd': 221.4982099330514, 'q1': 93.0, 'q3': 325.5}}}}, {'name': 'all_three', 'display_name': 'All Three', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 46, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1126.0, 'max': 2382.0, 'avg': 1669.5208333333333, 'sd': 295.0850573073792, 'q1': 1506.0, 'q3': 1833.5}}}}, {'name': 'others', 'display_name': 'Others', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 48, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1317.0, 'max': 2730.0, 'avg': 1842.0625, 'sd': 379.21707735190296, 'q1': 1460.5, 'q3': 2112.0}}}}, {'name': 'all_countries', 'display_name': 'All Countries', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 48, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2488.0, 'max': 5026.0, 'avg': 3511.5625, 'sd': 627.110934101944, 'q1': 3065.5, 'q3': 3967.5}}}}]",,2019-05-28 02:27:35.758,"{'series_settings': {'indonesia': {'line.marker_enabled': False, 'line.interpolate': 'cardinal', 'color': '#EF8C8C', 'axis': 'left'}, 'brazil': {'line.interpolate': 'cardinal', 'line.marker_enabled': False, 'color': '#74838F', 'axis': 'left'}, 'south_africa': {'line.interpolate': 'cardinal', 'line.marker_enabled': False, 'color': '#509EE3', 'axis': 'left'}, 'all_three': {'line.interpolate': 'cardinal', 'line.marker_enabled': False, 'color': '#98D9D9', 'axis': 'left'}, 'others': {'line.interpolate': 'cardinal', 'line.marker_enabled': False, 'color': '#A989C5', 'axis': 'left'}, 'all_countries': {'line.interpolate': 'cardinal', 'line.marker_enabled': False, 'color': '#F9D45C', 'axis': 'left'}}, 'graph.show_trendline': True, 'graph.dimensions': ['time'], 'graph.metrics': ['indonesia', 'brazil', 'south_africa', 'all_three', 'others', 'all_countries']}"
False,,"{'id': 54, 'name': ""Aggelos Armenatzoglou's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 47, 'slug': 'aggelos_armenatzoglou_s_personal_collection'}",54.0,,2019-02-07 07:57:37.891,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select  deals.""Symbol"",\n       Count(Distinct(users.""Login""))   AS Total_Clients,\n           \n              \n\n       SUM(""Volume""/10000)  AS Total_Volume,\n       SUM((""Profit"")*-1)   AS Total_Profit,\n       SUM((""Storage"")*-1)  AS Total_Storage\n      \n   FROM mt5_deals_2019 AS deals\n   JOIN mt5_users AS users ON users.""Login"" = deals.""Login"" \n  \n   where ""Entry"" IN (1,3)\n   and ""Action"" IN (0,1)\n   and ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\nand date(deals.""Time"")<\'2019-02-01\'\n\n   and users.""Group"" LIKE \'%costarica%\'\ngroup by deals.""Symbol""'}}",,table,,False,False,350,,"By symbol vols_Clients,Volume, PnL",,native,,"[{'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.375}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 250.0, 'max': 3573.0, 'avg': 1041.625, 'sd': 1201.241374281503, 'q1': 364.0, 'q3': 1394.0}}}}, {'name': 'total_volume', 'display_name': 'Total Volume', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3760.84, 'max': 58925.43, 'avg': 19589.153749999998, 'sd': 19107.60635043986, 'q1': 7171.9, 'q3': 27537.190000000002}}}}, {'name': 'total_profit', 'display_name': 'Total Profit', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': -19793.05999999994, 'max': 56229.39000000236, 'avg': 9024.565000000246, 'sd': 27614.994490299272, 'q1': -9318.225000000053, 'q3': 28762.62499999984}}}}, {'name': 'total_storage', 'display_name': 'Total Storage', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 112.75000000000048, 'max': 29919.320000000444, 'avg': 4130.861250000048, 'sd': 10427.537482896707, 'q1': 193.4649999999995, 'q3': 920.8249999999709}}}}]",,2019-02-08 06:31:24.257,"{'table.column_widths': [None, None, None, 121], 'table.pivot_column': 'Symbol', 'table.cell_column': 'total_clients'}"
False,,,,,2019-07-15 06:05:33.620,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with all_rows as (\n\twith times as (select x as purchase_minute\n\t\t\t\t   from generate_series( {{chosen_date}}::timestamp --current_date::timestamp\n\t\t\t\t\t  , {{chosen_date}}::timestamp + interval '1 day' --now()::timestamp + interval '-1 minute'\n\t\t\t\t\t  , interval  '1 min') t(x)\n\t), markets as (select distinct market \n\t\t\t\t   from bet.market\n\t\t\t\t   where market not in  ('stocks', 'legacy', 'cryptocurrency', 'futures'))\n\n\tselect * from markets cross join times\n\torder by 2,1\n)\n\nselect \n    all_rows.purchase_minute,\n    all_rows.market,\n    sum(coalesce(count_buy,0)) as count_buy,\n    sum(coalesce(total_buy,0)) as total_buy,\n    sum(coalesce(profit,0)) as profit,\n    100*sum(coalesce(profit,0))/(sum(coalesce(total_buy,0))+0.001) as profit_margin\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_buy,\n        total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy,\n            sum(buy_price) as total_buy,\n            sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= {{chosen_date}}::timestamp --\n        and purchase_time < {{chosen_date}}::timestamp + interval '1 day' --date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2 right join all_rows\non all_rows.purchase_minute = tmp2.purchase_minute and all_rows.market = tmp2.market\ngroup by 1,2 --rollup(2)\norder by 1"", 'template-tags': {'chosen_date': {'id': '15c5b447-6dcf-55d6-93fa-5d68e613af26', 'name': 'chosen_date', 'display-name': 'chosen date', 'type': 'date', 'required': True, 'default': '2019-07-01'}}}}",,table,,False,False,1020,,by the minute,,native,,"[{'name': 'purchase_minute', 'display_name': 'Purchase Minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 500, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-07-01T00:00:00.000Z', 'latest': '2019-07-01T08:19:00.000Z'}}}}, {'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 7.25}}}}, {'name': 'count_buy', 'display_name': 'Count Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 244, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 557, 'avg': 115.486, 'sd': 192.73842818378455, 'q1': 0.286989110144939, 'q3': 228.5}}}}, {'name': 'total_buy', 'display_name': 'Total Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1034, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 15790.204027662989, 'avg': 679.0541820285466, 'sd': 1255.8960408718274, 'q1': 4.244807895479097, 'q3': 1271.4512235401016}}}}, {'name': 'profit', 'display_name': 'Profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1097, 'nil%': 0}, 'type': {'type/Number': {'min': -3516.3, 'max': 13938.589360139093, 'avg': 26.058937068618107, 'sd': 427.83412172735285, 'q1': -16.93452958254605, 'q3': 35.9033071453837}}}}, {'name': 'profit_margin', 'display_name': 'Profit Margin', 'base_type': 'type/Decimal', 'special_type': 'type/GrossMargin', 'fingerprint': {'global': {'distinct-count': 1113, 'nil%': 0}, 'type': {'type/Number': {'min': -93.76927822331893, 'max': 99.99954300547023, 'avg': 6.89937804101748, 'sd': 40.14316586010811, 'q1': -1.760100914154796, 'q3': 11.294770590502567}}}}]",,2019-07-15 06:16:33.479,"{'graph.metrics': ['profit_margin'], 'graph.dimensions': ['purchase_minute', 'market'], 'table.pivot_column': 'market', 'table.cell_column': 'count_buy'}"
False,,"{'id': 74, 'name': ""Chris Tan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 54, 'slug': 'chris_tan_s_personal_collection'}",74.0,,2019-01-30 05:47:02.515,"{'email': 'chris.tan@binary.com', 'first_name': 'Chris', 'last_login': '2019-10-17T08:23:50.055Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 54, 'last_name': 'Tan', 'date_joined': '2019-01-25T07:04:08.850Z', 'common_name': 'Chris Tan'}",54,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select y.""Date"",y.""Balance Beg"",y.""Equity Beg"",y.""Floating PnL"",z.""Initial Deposit"",z.""Second Deposit"",z.""Withdrawals""\nfrom \n(select to_timestamp(""Datetime"")::date as ""Date"",sum(""BalancePrevDay"") as ""Balance Beg"" , sum(""EquityPrevDay"") as ""Equity Beg"", sum(""Profit"") as ""Floating PnL""\nfrom mt5_daily_2019\nwhere to_timestamp(""Datetime"") > \'2019-01-01\'\ngroup by to_timestamp(""Datetime"")::date) as y\nJoin\n(select deposit.""Date"",deposit.""Initial Deposit"",deposit.""Second Deposit"",withdraw.""Withdrawals"" from\n(Select b.""Date"", Sum(b.""Profit"") Filter (Where b.""row_number""=1) as ""Initial Deposit"",\nSum(b.""Profit"") Filter (Where ""row_number""!=1) as ""Second Deposit""\nfrom\n(select a.""Time""::date as ""Date"",""Login"",""Profit"" ,row_number() over (partition by ""Login"" order by ""Time"") \nfrom\n(select ""Time""::date, ""Login"",""Action"",""Profit""\nfrom mt5_deals_2019\nWhere ""Action""=2\nUnion\nselect ""Time""::date, ""Login"",""Action"",""Profit""\nfrom mt5_deals_2018\nWhere ""Action""=2\nUnion\nselect ""Time""::date, ""Login"",""Action"",""Profit""\nfrom mt5_deals_2017\nWhere ""Action""=2\nUnion\nselect ""Time""::date, ""Login"",""Action"",""Profit""\nfrom mt5_deals_2016\nWhere ""Action""=2) as a\nwhere a.""Action"" =2 and a.""Profit"" >0) as b \nGroup by b.""Date"") as deposit\njoin\n (select deals.""Time""::date as ""Date"", sum(deals.""Profit"") as ""Withdrawals""\n from mt5_deals_2019 as deals\n where deals.""Action"" =2 and deals.""Profit"" <0 and deals.""Time"" > \'2019-01-01\'\n Group by deals.""Time""::date ) as withdraw\n on withdraw.""Date""=deposit.""Date"" ) as z\n on y.""Date""=z.""Date"" '}}","The table shows the total beginning balance, total equity balance, floating PnL , initial deposit, second deposit and withdrawals by day in 2019",table,,False,False,275,,Cash Flow Report,,native,,"[{'name': 'Date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-01-28T00:00:00.000Z'}}}}, {'name': 'Balance Beg', 'display_name': 'Balance Beg', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 966114.4300000006, 'max': 1277508.8300000047, 'avg': 1121663.7550000024, 'sd': 87409.52681594052, 'q1': 1046028.2300000011, 'q3': 1176090.315000004}}}}, {'name': 'Equity Beg', 'display_name': 'Equity Beg', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 592399.6199999982, 'max': 862581.459999999, 'avg': 739742.7978571419, 'sd': 70989.72777526408, 'q1': 687731.2199999999, 'q3': 796176.4150000002}}}}, {'name': 'Floating PnL', 'display_name': 'Floating Pn L', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': -595216.11, 'max': -258916.35999999993, 'avg': -379605.69107142853, 'sd': 91829.49748826037, 'q1': -445676.25, 'q3': -296349.39}}}}, {'name': 'Initial Deposit', 'display_name': 'Initial Deposit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1559.72, 'max': 16350.269999999999, 'avg': 7250.864642857144, 'sd': 4152.938676232978, 'q1': 4112.2300000000005, 'q3': 10124.64}}}}, {'name': 'Second Deposit', 'display_name': 'Second Deposit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 25832.239999999994, 'max': 104808.98000000001, 'avg': 57125.516785714295, 'sd': 20665.351232112615, 'q1': 40174.46500000001, 'q3': 68088.95000000001}}}}, {'name': 'Withdrawals', 'display_name': 'Withdrawals', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': -91107.93, 'max': -20950.079999999998, 'avg': -52133.9157142857, 'sd': 18210.97455770831, 'q1': -65689.67499999999, 'q3': -39084.869999999995}}}}]",,2019-01-31 06:56:31.948,"{'table.pivot_column': 'Date', 'table.cell_column': 'Balance Beg'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:13:14.641,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Champion Report 1\n\n\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nWITH \nvr AS (\n    SELECT\n            t.loginid,\n            t.date_joined,\n            ul.binary_user_id\n    FROM    users.loginid ul\n    JOIN    dblink(\'vr\', $$\n                SELECT bc.loginid, bc.date_joined\n                FROM betonmarkets.client AS bc\n                WHERE bc.broker_code=\'VRCH\'\n            --    AND email NOT LIKE \'%@binary.com\'\n            $$) AS t (loginid VARCHAR, date_joined TIMESTAMP)\n                ON t.loginid = ul.loginid\n    /*\n        By specifying a match condition up front, PG can push that down to the foreign server and restrict the initial set rather than work against the entire table.\n        This gives a result similar to creating a dblink and specifying a match condition, except we don\'t have the ""overhead"" of having to do dblink.\n    */\n    WHERE ul.loginid LIKE \'VRCH%\'\n),\ncr AS (\n    SELECT DISTINCT\n            t.loginid,\n            t.date_joined,\n            t.authenticated,\n            t.balance,\n            t.deposit_count,\n            ul.binary_user_id,\n            t.first_name,\n            t.last_name,\n            t.email,\n            t.residence,\n            t.citizen\n    FROM    users.loginid ul\n    JOIN    dblink(\'cr\', $$\n                SELECT\n                            bc.loginid,\n                            bc.first_name,\n                            bc.last_name,\n                            bc.email,\n                            bc.residence,\n                            bc.citizen,\n                            bc.date_joined,\n                            CASE WHEN bcam.client_loginid IS NOT NULL THEN TRUE::BOOLEAN END AS authenticated,\n                        -- by ""converting"" our value, we get consistent representation of zero balances, rather than an assortment of 0, 0.00, 0.0000\n                            transaction.round_amount(ta.currency_code, ta.balance) AS balance,\n                            deps.cnt AS deposit_count\n                FROM        betonmarkets.client AS bc\n                LEFT JOIN LATERAL (\n                                SELECT DISTINCT\n                                        client_loginid\n                                FROM    betonmarkets.client_authentication_method\n                                WHERE   client_loginid = bc.loginid\n                                AND     status = \'pass\'\n                            ) AS bcam ON TRUE\n                LEFT JOIN   transaction.account AS ta\n                            ON ta.client_loginid = bc.loginid\n                LEFT JOIN LATERAL (\n                                SELECT COUNT(*) AS cnt\n                                FROM    transaction.transaction\n                                WHERE   account_id = ta.id\n                                AND     action_type = \'deposit\'\n                            ) AS deps ON TRUE\n                WHERE bc.broker_code=\'CH\'\n            $$) AS t (loginid VARCHAR, first_name VARCHAR, last_name VARCHAR, email VARCHAR, residence VARCHAR, citizen VARCHAR, date_joined TIMESTAMP, authenticated BOOLEAN, balance NUMERIC, deposit_count BIGINT)\n                ON t.loginid = ul.loginid\n    WHERE ul.loginid LIKE \'CH%\'\n)\nSELECT\n            vr.loginid AS vr_id,\n            vr.date_joined AS vr_join_date,\n            cr.loginid AS real_id,\n            cr.date_joined AS real_join_date,\n            cr.authenticated,\n            cr.balance,\n            CASE WHEN cr.deposit_count > 0 THEN cr.deposit_count END AS deposit_count,\n            cr.first_name,\n            cr.last_name,\n            cr.email,\n            cr.residence,\n            cr.citizen\n\nFROM        vr\nLEFT JOIN   cr\n            ON cr.binary_user_id = vr.binary_user_id\n\n\nORDER BY vr.date_joined\n'}}",Champion Report 1,table,,False,False,557,,Champion Report 1,,native,,,,2019-03-22 03:13:14.641,{}
False,,"{'id': 41, 'name': ""Tony Cini's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 42, 'slug': 'tony_cini_s_personal_collection'}",41.0,,2019-03-11 08:46:37.385,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT to_char(to_timestamp (M::text, \'MM\'), \'TMmon\') as M, Last_Date_of_month, Login, Group_, Balance \n  FROM\n(SELECT\n  date_part(\'year\', to_timestamp(daily.""Datetime"")) as Y\n  ,date_part(\'month\',to_timestamp(daily.""Datetime"")) as M\n  ,to_timestamp(daily.""Datetime"") as Last_Date_of_month\n  ,""Login"" as Login\n  ,""Group"" as Group_\n  ,daily.""Balance"" as Balance\n  ,rank() OVER (PARTITION BY date_part(\'year\',to_timestamp(daily.""Datetime"")),date_part(\'month\',to_timestamp(daily.""Datetime"")) ORDER BY to_timestamp(daily.""Datetime"") DESC) as is_day_in_month\nFROM mt5_daily_2019 daily\nWHERE daily.""Group"" NOT LIKE \'%malta%\') a\nWHERE a.is_day_in_month =1\nGROUP BY a.M, Last_Date_of_month, Login, Group_, Balance\n\n'}}",,table,,False,False,482,,Check end of day balance on MT5 - using daily table,,native,,"[{'name': 'm', 'display_name': 'M', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'last_date_of_month', 'display_name': 'Last Date Of Month', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-31T23:59:59.000Z', 'latest': '2019-01-31T23:59:59.000Z'}}}}, {'name': 'login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10001, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1126.0, 'max': 78216.0, 'avg': 48885.4832, 'sd': 21084.048362879807, 'q1': 32973.724416316356, 'q3': 66703.6839643006}}}}, {'name': 'group_', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 16.3789}}}}, {'name': 'balance', 'display_name': 'Balance', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 893, 'nil%': 0.0}, 'type': {'type/Number': {'min': -7728.78, 'max': 42985.15, 'avg': 20.374050999999998, 'sd': 541.6116941443108, 'q1': -10.937819411461138, 'q3': 10.17012216454895}}}}]",,2019-03-13 10:19:34.170,"{'table.column_widths': [46, 221, 55], 'table.pivot_column': 'm', 'table.cell_column': 'sum'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:13:20.083,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Snippet meant to track ICO only CR accounts. Excel will display, LoginID, Currency, Balance, Email, Last LoginDate, Account Status, Authentication Status, Corresponding accounts\nselect\n\ndb.*,\null.history_date::date AS last_login_date,\narray_agg(ul.loginid) AS corresponding_loginids\n\nfrom\n\ndblink('cr', $$\n  select cli.binary_user_id, cli.loginid, ta.currency_code, ta.balance, cli.email, cm.authentication_method_code, array_agg(cs.status_code)\n  from transaction.account AS ta\n  join betonmarkets.client AS cli ON ta.client_loginid = cli.loginid\n  join betonmarkets.client_status AS cs ON cs.client_loginid = ta.client_loginid\n  left join betonmarkets.client_authentication_method AS cm ON cs.client_loginid = cm.client_loginid\n  where cli.loginid IN (select client_loginid FROM betonmarkets.client_status where status_code = 'ico_only') \n  GROUP BY cli.binary_user_id, cli.loginid, ta.currency_code, ta.balance, cli.email, cm.authentication_method_code\n$$) db (\n  binary_user_id BIGINT,\n  loginid VARCHAR,\n  currency_code VARCHAR,\n  account_balance NUMERIC,\n  email VARCHAR,\n  authentication_method_code VARCHAR,\n  status_code VARCHAR[]\n)\n\nJOIN users.last_login_by_loginid_vw AS ull ON ull.loginid = db.loginid\nJOIN users.loginid AS ul ON ul.binary_user_id = db.binary_user_id\nGROUP BY db.binary_user_id, db.loginid, db.currency_code, db.account_balance, db.email, db.authentication_method_code, db.status_code, ull.history_date""}}","Snippet meant to track ICO only CR accounts. Excel will display, LoginID, Currency, Balance, Email, Last LoginDate, Account Status, Authentication Status, Corresponding accounts",table,,False,False,558,,Check for ICO Only CR Accounts,,native,,,,2019-03-22 03:13:20.083,{}
False,,"{'id': 192, 'name': 'Chris', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'chris'}",192.0,,2019-04-09 09:43:33.573,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Chris > self exclusion change analysis\nWITH params AS (SELECT\n  'MF'::VARCHAR      AS broker_code,\n  '2017-01-01'::DATE AS start_date,\n  '2017-07-31'::DATE AS end_date\n)\n\nSELECT d.* FROM params, dblink(lower(params.broker_code), $$\nWITH\nprev AS (\nSELECT DISTINCT ON (client_loginid)\n    client_loginid,\n    max_balance,\n    max_turnover,\n    max_open_bets,\n    exclude_until,\n    session_duration_limit,\n    max_losses,\n    max_7day_turnover,\n    max_7day_losses,\n    max_30day_turnover,\n    max_30day_losses,\n    timeout_until,\n    last_modified_date AS last_modified\nFROM audit.self_exclusion\nWHERE last_modified_date < $$|| quote_literal(params.start_date) ||$$::TIMESTAMP\nORDER BY client_loginid, last_modified_date DESC\n)\n,c AS (\nSELECT\n    client_loginid,\n    max_balance,\n    max_turnover,\n    max_open_bets,\n    exclude_until,\n    session_duration_limit,\n    max_losses,\n    max_7day_turnover,\n    max_7day_losses,\n    max_30day_turnover,\n    max_30day_losses,\n    timeout_until,\n    last_modified_date AS last_modified\nFROM audit.self_exclusion\nWHERE last_modified_date >= $$|| quote_literal(params.start_date) ||$$::TIMESTAMP\n  AND last_modified_date  < $$|| quote_literal(params.end_date) ||$$::TIMESTAMP + '1d'::INTERVAL\n\nUNION\n\nSELECT\n    client_loginid,\n    max_balance,\n    max_turnover,\n    max_open_bets,\n    exclude_until,\n    session_duration_limit,\n    max_losses,\n    max_7day_turnover,\n    max_7day_losses,\n    max_30day_turnover,\n    max_30day_losses,\n    timeout_until,\n    last_modified_date AS last_modified\nFROM betonmarkets.self_exclusion\nWHERE last_modified_date >= $$|| quote_literal(params.start_date) ||$$::TIMESTAMP\n  AND last_modified_date  < $$|| quote_literal(params.end_date) ||$$::TIMESTAMP + '1d'::INTERVAL\n)\n\nSELECT client_loginid,\n    nullif(max_balance, prev_max_balance) AS max_balance,\n    nullif(max_turnover, prev_max_turnover) AS max_turnover,\n    nullif(max_open_bets, prev_max_open_bets) AS max_open_bets,\n    nullif(exclude_until, prev_exclude_until) AS exclude_until,\n    nullif(session_duration_limit, prev_session_duration_limit) AS session_duration_limit,\n    nullif(max_losses, prev_max_losses) AS max_losses,\n    nullif(max_7day_turnover, prev_max_7day_turnover) AS max_7day_turnover,\n    nullif(max_7day_losses, prev_max_7day_losses) AS max_7day_losses,\n    nullif(max_30day_turnover, prev_max_30day_turnover) AS max_30day_turnover,\n    nullif(max_30day_losses, prev_max_30day_losses) AS max_30day_losses,\n    to_timestamp(nullif(timeout_until, prev_timeout_until)::INTEGER) AS timeout_until,\n    last_modified\nFROM (\n    SELECT cb.client_loginid,\n\tmax_balance, lag(max_balance) OVER (ORDER BY client_loginid, last_modified) AS prev_max_balance, \n\tmax_turnover, lag(max_turnover) OVER (ORDER BY client_loginid, last_modified) AS prev_max_turnover,\n\tmax_open_bets, lag(max_open_bets) OVER (ORDER BY client_loginid, last_modified) AS prev_max_open_bets,\n\texclude_until, lag(exclude_until) OVER (ORDER BY client_loginid, last_modified) AS prev_exclude_until,\n\tsession_duration_limit, lag(session_duration_limit) OVER (ORDER BY client_loginid, last_modified) AS prev_session_duration_limit,\n\tmax_losses, lag(max_losses) OVER (ORDER BY client_loginid, last_modified) AS prev_max_losses,\n\tmax_7day_turnover, lag(max_7day_turnover) OVER (ORDER BY client_loginid, last_modified) AS prev_max_7day_turnover,\n\tmax_7day_losses, lag(max_7day_losses) OVER (ORDER BY client_loginid, last_modified) AS prev_max_7day_losses,\n\tmax_30day_turnover, lag(max_30day_turnover) OVER (ORDER BY client_loginid, last_modified) AS prev_max_30day_turnover,\n\tmax_30day_losses, lag( max_30day_losses) OVER (ORDER BY client_loginid, last_modified) AS prev_max_30day_losses,\n\ttimeout_until, lag(timeout_until) OVER (ORDER BY client_loginid, last_modified) AS prev_timeout_until,\n\tlast_modified\n    FROM (select * from prev union select * from c order by last_modified) AS cb\n) AS ll\nWHERE last_modified >= $$|| quote_literal(params.start_date) ||$$::TIMESTAMP\nAND (\n    max_balance IS DISTINCT FROM prev_max_balance OR\n    max_turnover IS DISTINCT FROM prev_max_turnover OR\n    max_open_bets IS DISTINCT FROM prev_max_open_bets OR\n    exclude_until IS DISTINCT FROM prev_exclude_until OR\n    session_duration_limit IS DISTINCT FROM prev_session_duration_limit OR\n    max_losses IS DISTINCT FROM prev_max_losses OR\n    max_7day_turnover IS DISTINCT FROM prev_max_7day_turnover OR\n    max_7day_losses IS DISTINCT FROM prev_max_7day_losses OR\n    max_30day_turnover IS DISTINCT FROM prev_max_30day_turnover OR\n    max_30day_losses IS DISTINCT FROM prev_max_30day_losses OR\n    timeout_until IS DISTINCT FROM prev_timeout_until\n)\nORDER BY client_loginid, last_modified\n$$) d (\n  client_loginid VARCHAR,\n  max_balance NUMERIC,\n  max_turnover NUMERIC,\n  max_open_bets INTEGER,\n  exclude_until DATE,\n  session_duration_limit INTEGER,\n  max_losses NUMERIC,\n  max_7day_turnover NUMERIC,\n  max_7day_losses NUMERIC,\n  max_30day_turnover NUMERIC,\n  max_30day_losses NUMERIC,\n  timeout_until TEXT,\n  last_modified TEXT\n)""}}",Chris > self exclusion change analysis,table,,False,False,916,,Chris self exclusion change analysis,,native,,,,2019-04-09 09:43:33.573,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:13:25.576,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- obtain archived and live self exclusion records by date range and broker\n-- Chris selfx analysis\nWITH params AS (SELECT\n  '2017-01-01'::DATE AS start_date,\n  '2017-06-30'::DATE AS end_date,\n  'MF'::VARCHAR AS broker_code\n)\n\nSELECT d.*\nFROM params,\n  dblink(lower(params.broker_code), $$\nSELECT\n    sx.client_loginid,\n\t  bc.residence,\n    max_balance,\n    max_turnover,\n    max_open_bets,\n    exclude_until,\n    session_duration_limit,\n    max_losses,\n    max_7day_turnover,\n    max_7day_losses,\n    max_30day_turnover,\n    max_30day_losses,\n    to_timestamp(timeout_until::INTEGER) AS timeout_until,\n    last_modified_date\nFROM betonmarkets.self_exclusion sx\nJOIN betonmarkets.client bc ON bc.loginid=sx.client_loginid\nWHERE sx.last_modified_date >= $$|| quote_literal(params.start_date) ||$$::TIMESTAMP\n  AND sx.last_modified_date  < $$|| quote_literal(params.end_date) ||$$::TIMESTAMP + '1d'::INTERVAL\n\nUNION\n\nSELECT\n    client_loginid,\n\t  bc.residence,\n    max_balance,\n    max_turnover,\n    max_open_bets,\n    exclude_until,\n    session_duration_limit,\n    max_losses,\n    max_7day_turnover,\n    max_7day_losses,\n    max_30day_turnover,\n    max_30day_losses,\n    to_timestamp(timeout_until::INTEGER) AS timeout_until,\n    last_modified_date\nFROM audit.self_exclusion sx\nJOIN betonmarkets.client bc ON bc.loginid=sx.client_loginid\nWHERE sx.last_modified_date >= $$|| quote_literal(params.start_date) ||$$::TIMESTAMP\n  AND sx.last_modified_date  < $$|| quote_literal(params.end_date) ||$$::TIMESTAMP + '1d'::INTERVAL\n$$) d (\n    client_loginid VARCHAR,\n\t  residence VARCHAR,\n    max_balance NUMERIC,\n    max_turnover NUMERIC,\n    max_open_bets BIGINT,\n    exclude_until DATE,\n    session_duration_limit INTEGER,\n    max_losses NUMERIC,\n    max_7day_turnover NUMERIC,\n    max_7day_losses NUMERIC,\n    max_30day_turnover NUMERIC,\n    max_30day_losses NUMERIC,\n    timeout_until TIMESTAMP,\n    last_modified_date TEXT\n)\nORDER BY d.last_modified_date DESC""}}",obtain archived and live self exclusion records by date range and broker,table,,False,False,559,,Chris selfx analysis,,native,,,,2019-03-22 03:13:25.576,{}
False,,"{'id': 65, 'name': ""Parviz asoodefard's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 52, 'slug': 'parviz_asoodefard_s_personal_collection'}",65.0,,2019-01-28 06:45:06.233,"{'email': 'parviz@regentmarkets.com', 'first_name': 'Parviz', 'last_login': '2019-07-03T05:55:34.855Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 52, 'last_name': 'asoodefard', 'date_joined': '2019-01-08T07:10:52.493Z', 'common_name': 'Parviz asoodefard'}",52,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select  to_char(deal_for_withdrawal.""Time"", \'DD/MM/YYYY\') ""date"",\ncount(distinct deal_for_withdrawal.""Login"") count_user -- because a use can have multiple deposit after a withdrawal I count disint of users\nfrom mt5_deals_2019 deal_for_withdrawal -- I used deals to find every withdrawals\ninner join mt5_daily_2019 daily_balance -- I used daily table to check balance < 1$\n      on to_char(deal_for_withdrawal.""Time"", \'DD/MM/YYYY\')=TO_CHAR(TO_TIMESTAMP(daily_balance.""Datetime"" ), \'DD/MM/YYYY\')\n      and deal_for_withdrawal.""Login""=daily_balance.""Login""\nwhere deal_for_withdrawal.""Action""=2 \n  and deal_for_withdrawal.""Profit""<0 \n  and daily_balance.""Balance""<1\n  and deal_for_withdrawal.""Time""::date >  (current_date + interval \'-7d\')\n--  and TO_TIMESTAMP(daily_balance.""Datetime"" )::date  (current_date + interval \'-7d\')\n  group by to_char(deal_for_withdrawal.""Time"", \'DD/MM/YYYY\')'}}",,table,,False,False,248,,churn in MT5,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'count_user', 'display_name': 'Count User', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-14 07:00:05.859,"{'table.pivot_column': 'count_user', 'table.cell_column': 'count_user'}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:27.345,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'filter': ['time-interval', ['field-id', 852], -30, 'day'], 'aggregation': [['count']]}}",,scalar,,False,False,6,,Client added in the last 30 days,,query,,"[{'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 17600.0, 'max': 17600.0, 'avg': 17600.0, 'sd': None, 'q1': 17600.0, 'q3': 17600.0}}}}]",94.0,2019-02-25 02:57:14.469,"{'graph.series_labels': ['number'], 'graph.metrics': ['count'], 'graph.dimensions': []}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:23.849,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'filter': ['time-interval', ['field-id', 816], -30, 'day'], 'aggregation': [['count']]}}",,scalar,,False,False,4,,Client added in the last 30 days,,query,,"[{'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': None, 'q1': 0.0, 'q3': 0.0}}}}]",94.0,2019-02-25 02:46:09.027,"{'graph.series_labels': ['number'], 'graph.metrics': ['count'], 'graph.dimensions': []}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:25.456,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'filter': ['time-interval', ['field-id', 847], -30, 'day'], 'aggregation': [['count']]}}",,scalar,,False,False,5,,Client added in the last 30 days,,query,,"[{'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 214.0, 'max': 214.0, 'avg': 214.0, 'sd': None, 'q1': 214.0, 'q3': 214.0}}}}]",94.0,2019-02-25 02:56:55.183,"{'graph.series_labels': ['number'], 'graph.metrics': ['count'], 'graph.dimensions': []}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:13:30.958,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""\n    SELECT count(distinct deals.Login)\n    FROM mt5_deals_2017 AS deals\n    INNER JOIN metatrader5.mt5_users AS users\n    ON (deals.Login=users.Login)\n    WHERE (users.Group LIKE '%real%Vanuatu%' or users.Group LIKE '%real%champion%')\n    AND deals.Action IN (0,1)\n    AND DATE(deals.time) >= '2017-08-24T21:00:00'\n    AND DATE(deals.time) <= '2017-08-27T20:59:59'\n      \n""}}",,table,,False,False,560,,Client count,,native,,,,2019-03-22 03:13:30.958,{}
False,,"{'id': 197, 'name': 'Client Management', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'client_management'}",197.0,,2019-04-09 09:44:53.528,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Client Management > Client account details\nWITH param as (\n    SELECT\n        -- CH, CR, MX, MLT, MF, VR or any other broker_code\n        'MF'::VARCHAR as broker_code\n)\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_client_account_details(\n    (SELECT broker_code FROM param)::varchar\n    )""}}",Client Management > Client account details,table,,False,False,939,,Client Management Client account details,,native,,,,2019-04-09 09:44:53.528,{}
False,,"{'id': 197, 'name': 'Client Management', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'client_management'}",197.0,,2019-04-09 09:44:56.825,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Client Management > Client self exclusion report\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF or VR\n        'MF'::VARCHAR as broker_code\n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_client_self_exclusion_report(\n    (SELECT broker_code FROM param)::varchar\n    )\n\n""}}",Client Management > Client self exclusion report,table,,False,False,940,,Client Management Client self exclusion report,,native,,,,2019-04-09 09:44:56.825,{}
False,,"{'id': 197, 'name': 'Client Management', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'client_management'}",197.0,,2019-04-09 09:45:00.241,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Client Management > Get login IDs for POC locking clients\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF or VRTC\n        'MX'::VARCHAR as broker_code,\n        \n        -- Date joined\n        '2015-05-01'::TIMESTAMP as date_joined,\n        \n        -- 'true' or 'false'\n        true::BOOLEAN as authenticated,\n\n        -- 'true' or 'false'\n        true::BOOLEAN as lock_cashier,\n\n        -- 'true' or 'false'\n        true::BOOLEAN as unwelcome_logins\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_loginids_for_poc_locking_clients(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT date_joined FROM param)::timestamp,\n    (SELECT authenticated FROM param)::boolean,\n    (SELECT lock_cashier FROM param)::boolean,\n    (SELECT unwelcome_logins FROM param)::boolean)\n\n\n\n\n""}}",Client Management > Get login IDs for POC locking clients,table,,False,False,941,,Client Management Get login IDs for POC locking clients,,native,,,,2019-04-09 09:45:00.240,{}
False,,"{'id': 197, 'name': 'Client Management', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'client_management'}",197.0,,2019-04-09 09:44:50.072,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Client Management > Statement\nWITH params as (\n    SELECT\n        'MF1113'::TEXT as loginid,\n  -- If both dates are NULL, then the report defaults to all history from 2001-01-01 to now.\n    --    '2016-01-01'::DATE AS start_date,\n        NULL::DATE AS start_date,\n    --    '2016-12-31'::DATE AS end_date,\n        NULL::DATE AS end_date,\n    -- action_type can be NULL::VARCHAR, which will match all action_types\n    -- or- one or more of the following individual quoted items\n    -- example: ARRAY['buy','sell','deposit','withdrawal']::VARCHAR[] or ARRAY['buy','sell']::VARCHAR[]\n    --    ARRAY['buy','sell','deposit','withdrawal']::VARCHAR[]\n        NULL::VARCHAR[] AS action_type\n)\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT t.* FROM params\nCROSS JOIN LATERAL client_statement(loginid, start_date, end_date, action_type) AS t;\n""}}",Client Management > Statement,table,,False,False,938,,Client Management Statement,,native,,,,2019-04-09 09:44:50.071,{}
False,,,,,2018-12-28 03:06:43.214,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select sum (""client_pnl_usd"") \nfrom (\n    select round((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n    where 1=1\n    [[and a.client_loginid = {{loginid}}]]\n    and purchase_time >= {{since}}\n) as t', 'template-tags': {'loginid': {'id': 'b9baa1d5-9dcf-adbe-81be-fd5ce8290146', 'name': 'loginid', 'display-name': 'loginid', 'type': 'text', 'required': True, 'default': 'CR53073'}, 'since': {'id': '55f2411b-40fd-e4f4-8aba-1be01f6bb6b5', 'name': 'since', 'display-name': 'since', 'type': 'date', 'required': True, 'default': '2018-01-01'}}}}",,gauge,,False,False,139,,client PnL,,native,,"[{'name': 'sum', 'display_name': 'sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 45703.86, 'max': 45703.86, 'avg': 45703.86, 'sd': None, 'q1': 45703.86, 'q3': 45703.86}}}}]",,2019-09-10 02:54:07.308,"{'gauge.segments': [{'min': 5000, 'max': 20000, 'color': '#ED6E6E', 'label': ''}, {'min': 500, 'max': 5000, 'color': '#F9CF48', 'label': ''}, {'min': 0, 'max': 500, 'color': '#84BB4C', 'label': ''}], 'column_settings': {'[""name"",""sum""]': {'number_style': 'currency'}}, 'card.title': ""Client's total Profit""}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:26:54.764,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT\n  t.id, \n  a.client_loginid, \n  t.transaction_time, \n  t.amount, \n  t.action_type, \n  t.financial_market_bet_id\nFROM \n  transaction.account a, \n  transaction.transaction t\n  \nWHERE t.account_id=a.id\nAND   a.client_loginid='JP1416'\n\nORDER BY t.transaction_time DESC""}}",,table,,False,False,618,,client transactions,,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/*', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'client_loginid', 'display_name': 'Client Login ID', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'transaction_time', 'display_name': 'Transaction Time', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'amount', 'display_name': 'Amount', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'action_type', 'display_name': 'Action Type', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'financial_market_bet_id', 'display_name': 'Financial Market Bet ID', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-03-22 03:26:54.764,{}
False,,,,,2018-11-20 03:00:40.607,"{'email': 'rustem@binary.com', 'first_name': 'Rustem', 'last_login': '2019-05-13T02:53:07.540Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 33, 'last_name': 'Kakimov', 'date_joined': '2018-11-09T07:28:02.665Z', 'common_name': 'Rustem Kakimov'}",33,2,"{'native': {'template-tags': {'email': {'id': '8e0bf799-fd86-416b-fe40-cbe56e4c1d05', 'name': 'email', 'display-name': 'Email', 'type': 'text'}, 'binary_userid': {'id': '01fadea5-7ecd-fc1e-c2c6-53aae146d513', 'name': 'binary_userid', 'display-name': 'Binary userid', 'type': 'number'}, 'Account_loginid': {'id': '19e95709-a271-3061-5411-8f0082b04e6d', 'name': 'Account_loginid', 'display-name': 'Account loginid', 'type': 'text'}}, 'query': ""SELECT account_opening_reason\nFROM betonmarkets.client\nwhere true [[and binary_user_id = {{binary_userid}}]]  [[and email like CONCAT({{email}}, '%')]] [[and loginid = {{Account_loginid}}]]\nLIMIT 1""}, 'type': 'native', 'database': 2}",,scalar,,False,False,46,,Client's account opening reason,,native,,"[{'name': 'account_opening_reason', 'display_name': 'account_opening_reason', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 14.0}}}}]",,2019-10-14 09:54:16.116,{}
False,,,,,2018-11-20 02:30:02.019,"{'email': 'rustem@binary.com', 'first_name': 'Rustem', 'last_login': '2019-05-13T02:53:07.540Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 33, 'last_name': 'Kakimov', 'date_joined': '2018-11-09T07:28:02.665Z', 'common_name': 'Rustem Kakimov'}",33,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT loginid,\n    currency_code,\n    balance AS current_balance,\n    last_modified\nFROM (\n  SELECT loginid\n  FROM betonmarkets.client\n  where true [[and binary_user_id = {{binary_userid}}]]  [[and email like CONCAT({{email}}, '%')]] [[and loginid = {{Account_loginid}}]]\n) AS logins\nLEFT JOIN transaction.account a on a.client_loginid = logins.loginid\nORDER BY loginid"", 'template-tags': {'email': {'id': '037c357c-b54b-34b9-3cd7-a4a033d53584', 'name': 'email', 'display-name': 'Email', 'type': 'text', 'required': False}, 'binary_userid': {'id': '256e4ff3-7526-fe6d-7f11-fa77ce7aa2b7', 'name': 'binary_userid', 'display-name': 'Binary userid', 'type': 'number'}, 'Account_loginid': {'id': '2d6df4e7-2766-cae2-8dfa-06138d79b375', 'name': 'Account_loginid', 'display-name': 'Account loginid', 'type': 'text'}}}}",,table,,False,False,43,,Client's accounts,,native,,"[{'name': 'loginid', 'display_name': 'loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'current_balance', 'display_name': 'current_balance', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': None, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'last_modified', 'display_name': 'last_modified', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-13T13:50:16.061Z', 'latest': '2019-10-13T13:50:16.061Z'}}}}]",,2019-10-14 09:54:16.092,{}
False,,,,,2018-11-20 07:36:56.870,"{'email': 'rustem@binary.com', 'first_name': 'Rustem', 'last_login': '2019-05-13T02:53:07.540Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 33, 'last_name': 'Kakimov', 'date_joined': '2018-11-09T07:28:02.665Z', 'common_name': 'Rustem Kakimov'}",33,2,"{'native': {'template-tags': {'email': {'id': '8e0bf799-fd86-416b-fe40-cbe56e4c1d05', 'name': 'email', 'display-name': 'Email', 'type': 'text'}, 'binary_userid': {'id': '62592e63-5e44-57c2-403a-6723cdfa51df', 'name': 'binary_userid', 'display-name': 'Binary userid', 'type': 'number'}, 'Account_loginid': {'id': '251012c4-fc37-5f8e-e52d-1147f82f9337', 'name': 'Account_loginid', 'display-name': 'Account loginid', 'type': 'text'}}, 'query': ""select case\n    when myaffiliates_token != '' then 'Affiliated'\n    else 'Non-affiliated'\nend\nfrom betonmarkets.client\nwhere true [[and binary_user_id = {{binary_userid}}]]  [[and email like CONCAT({{email}}, '%')]] [[and loginid = {{Account_loginid}}]]\nlimit 1""}, 'type': 'native', 'database': 2}",,scalar,,False,False,48,,Client's affiliation status,,native,,"[{'name': 'case', 'display_name': 'case', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 14.0}}}}]",,2019-10-18 10:49:37.564,{}
False,,,,,2018-11-19 09:39:50.814,"{'email': 'rustem@binary.com', 'first_name': 'Rustem', 'last_login': '2019-05-13T02:53:07.540Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 33, 'last_name': 'Kakimov', 'date_joined': '2018-11-09T07:28:02.665Z', 'common_name': 'Rustem Kakimov'}",33,2,"{'native': {'template-tags': {'email': {'id': 'd007cfd9-042c-4e87-2e29-a8cbafe35594', 'name': 'email', 'display-name': 'Email', 'type': 'text'}, 'purchase_since': {'id': '5c3ea0db-6387-4786-5137-fedf505cc68d', 'name': 'purchase_since', 'display-name': 'Purchase since', 'type': 'date'}, 'binary_userid': {'id': 'a9c9a31b-4e53-4545-7e5d-91233b046a01', 'name': 'binary_userid', 'display-name': 'Binary userid', 'type': 'number'}, 'Account_loginid': {'id': '57e19154-70b3-3b8c-27a7-c0ddb0bcbc98', 'name': 'Account_loginid', 'display-name': 'Account loginid', 'type': 'text'}}, 'query': ""SELECT source, COUNT(*) AS contracts\nFROM (\n  SELECT id\n  FROM (\n    SELECT loginid\n    FROM betonmarkets.client\n    where true [[and binary_user_id = {{binary_userid}}]]  [[and email like CONCAT({{email}}, '%')]] [[and loginid = {{Account_loginid}}]]\n  ) AS logins\n  LEFT JOIN transaction.account a ON a.client_loginid = logins.loginid\n) AS account_ids\nINNER JOIN transaction.transaction t ON t.account_id = account_ids.id\nWHERE t.action_type='buy'\n[[AND t.transaction_time >= {{purchase_since}}]]\nGROUP BY 1\n""}, 'type': 'native', 'database': 2}",,pie,,False,False,41,,Client's app preference,,native,,"[{'name': 'source', 'display_name': 'source', 'base_type': 'type/Integer', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 15481.0, 'avg': 10255.333333333334, 'sd': 8881.05941503227, 'q1': 3821.75, 'q3': 15431.75}}}}, {'name': 'contracts', 'display_name': 'contracts', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 532.0, 'max': 9729.0, 'avg': 5674.0, 'sd': 4693.866103757115, 'q1': 2089.25, 'q3': 8987.0}}}}]",,2019-10-14 09:56:28.620,{}
False,,,,,2018-12-04 03:19:01.423,"{'email': 'rustem@binary.com', 'first_name': 'Rustem', 'last_login': '2019-05-13T02:53:07.540Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 33, 'last_name': 'Kakimov', 'date_joined': '2018-11-09T07:28:02.665Z', 'common_name': 'Rustem Kakimov'}",33,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \ncase when tick_count > 0 then \'tick\'\n  when EXTRACT(epoch FROM (expiry_time - start_time)) < 60 then \'seconds\'\n  when ((EXTRACT(epoch FROM (expiry_time - start_time)) >= 60) and\n    (EXTRACT(epoch FROM (expiry_time - start_time)) < 300)) then \'1-5min\'\n  when ((EXTRACT(epoch FROM (expiry_time - start_time)) >= 300) and\n    (EXTRACT(epoch FROM (expiry_time - start_time)) < 900)) then \'5-15min\'\n  when ((EXTRACT(epoch FROM (expiry_time - start_time)) >= 900) and\n    (EXTRACT(epoch FROM (expiry_time - start_time)) < 3600)) then \'15min-1hour\'\n  else \'>1hour\'\n  end \nas ""duration_bucket"",\n--extract(\'hour\' from start_time) as ""start_hour"",\n--bm.market,\ncount(1)\n     from bet.financial_market_bet as b\n     join transaction.transaction t on b.id=t.financial_market_bet_id and t.action_type=\'buy\' [[AND t.transaction_time >= {{purchase_since}}]]\n     join transaction.account a on a.id=b.account_id\n     join betonmarkets.client c on c.loginid=a.client_loginid\n     left join bet.market bm on b.underlying_symbol = bm.symbol\nwhere true [[and binary_user_id = {{binary_userid}}]]  [[and email like CONCAT({{email}}, \'%\')]] [[and client_loginid = {{Account_loginid}}]]\ngroup by 1\norder by count desc', 'template-tags': {'email': {'id': 'd007cfd9-042c-4e87-2e29-a8cbafe35594', 'name': 'email', 'display-name': 'Email', 'type': 'text'}, 'binary_userid': {'id': '41087f38-09bd-19dc-9a5b-baab000db31a', 'name': 'binary_userid', 'display-name': 'Binary userid', 'type': 'number'}, 'Account_loginid': {'id': '8dd49c88-20dc-037d-9ba9-b13fc67a6291', 'name': 'Account_loginid', 'display-name': 'Account loginid', 'type': 'text'}, 'purchase_since': {'id': '9db133e1-e2bd-01d5-d78f-e71588f5dbe3', 'name': 'purchase_since', 'display-name': 'Purchase since', 'type': 'date'}}}}",,pie,,False,False,64,,Client's contract duration preference,,native,,"[{'name': 'duration_bucket', 'display_name': 'duration_bucket', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.833333333333333}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 17074.0, 'avg': 2850.8333333333335, 'sd': 6967.901417691461, 'q1': 2.0, 'q3': 12.0}}}}]",,2019-10-18 10:52:05.071,"{'table.pivot_column': 'count', 'table.cell_column': 'count'}"
False,,,,,2018-11-19 09:34:13.163,"{'email': 'rustem@binary.com', 'first_name': 'Rustem', 'last_login': '2019-05-13T02:53:07.540Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 33, 'last_name': 'Kakimov', 'date_joined': '2018-11-09T07:28:02.665Z', 'common_name': 'Rustem Kakimov'}",33,2,"{'native': {'template-tags': {'email': {'id': 'd007cfd9-042c-4e87-2e29-a8cbafe35594', 'name': 'email', 'display-name': 'Email', 'type': 'text'}, 'purchase_since': {'id': '5c3ea0db-6387-4786-5137-fedf505cc68d', 'name': 'purchase_since', 'display-name': 'Purchase since', 'type': 'date'}, 'binary_userid': {'id': 'd27226b5-6cf9-3ae2-5578-f201ee16bdf9', 'name': 'binary_userid', 'display-name': 'Binary userid', 'type': 'number'}, 'Account_loginid': {'id': '5b01fda1-b817-a2b9-c73c-a21f76b22926', 'name': 'Account_loginid', 'display-name': 'Account loginid', 'type': 'text', 'required': True, 'default': 'CR53073'}}, 'query': ""SELECT bet_type, COUNT(*) AS contracts\nFROM (\n  SELECT id\n  FROM (\n    SELECT loginid\n    FROM betonmarkets.client\n    where true [[and binary_user_id = {{binary_userid}}]]  [[and email like CONCAT({{email}}, '%')]] [[and loginid = {{Account_loginid}}]]\n  ) AS logins\n  LEFT JOIN transaction.account a ON a.client_loginid = logins.loginid\n) AS account_ids\nINNER JOIN bet.financial_market_bet b ON b.account_id = account_ids.id\n[[WHERE b.purchase_time >= {{purchase_since}}]]\nGROUP BY 1\n""}, 'type': 'native', 'database': 2}",,pie,,False,False,40,,Client's contract type preference,,native,,"[{'name': 'bet_type', 'display_name': 'bet_type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 16, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.625}}}}, {'name': 'contracts', 'display_name': 'contracts', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 10964.0, 'avg': 1069.0625, 'sd': 2881.3042062869145, 'q1': 2.585786437626905, 'q3': 147.5}}}}]",,2019-10-18 10:51:21.470,{}
False,,,,,2018-11-19 10:02:41.418,"{'email': 'rustem@binary.com', 'first_name': 'Rustem', 'last_login': '2019-05-13T02:53:07.540Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 33, 'last_name': 'Kakimov', 'date_joined': '2018-11-09T07:28:02.665Z', 'common_name': 'Rustem Kakimov'}",33,2,"{'native': {'template-tags': {'email': {'id': 'd007cfd9-042c-4e87-2e29-a8cbafe35594', 'name': 'email', 'display-name': 'Email', 'type': 'text'}, 'purchase_since': {'id': '5c3ea0db-6387-4786-5137-fedf505cc68d', 'name': 'purchase_since', 'display-name': 'Purchase since', 'type': 'date'}, 'binary_userid': {'id': '41087f38-09bd-19dc-9a5b-baab000db31a', 'name': 'binary_userid', 'display-name': 'Binary userid', 'type': 'number'}, 'Account_loginid': {'id': '8dd49c88-20dc-037d-9ba9-b13fc67a6291', 'name': 'Account_loginid', 'display-name': 'Account loginid', 'type': 'text'}}, 'query': ""SELECT currency_code, COUNT(*) AS contracts\nFROM (\n  SELECT id, a.currency_code\n  FROM (\n    SELECT loginid\n    FROM betonmarkets.client\n    where true [[and binary_user_id = {{binary_userid}}]]  [[and email like CONCAT({{email}}, '%')]] [[and loginid = {{Account_loginid}}]]\n  ) AS logins\n  LEFT JOIN transaction.account a ON a.client_loginid = logins.loginid\n) AS account_ids\nINNER JOIN transaction.transaction t ON t.account_id = account_ids.id\nWHERE t.action_type='buy'\n[[AND t.transaction_time >= {{purchase_since}}]]\nGROUP BY 1\n""}, 'type': 'native', 'database': 2}",,pie,,False,False,42,,Client's currency preference,,native,,"[{'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'contracts', 'display_name': 'Contracts', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5.0, 'max': 727397675.0, 'avg': 62006521.5, 'sd': 209553634.8688509, 'q1': 25918.5, 'q3': 3934201.0}}}}]",,2019-01-15 06:16:59.247,{}
False,,,,,2018-11-20 02:55:23.223,"{'email': 'rustem@binary.com', 'first_name': 'Rustem', 'last_login': '2019-05-13T02:53:07.540Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 33, 'last_name': 'Kakimov', 'date_joined': '2018-11-09T07:28:02.665Z', 'common_name': 'Rustem Kakimov'}",33,2,"{'native': {'template-tags': {'email': {'id': '8e0bf799-fd86-416b-fe40-cbe56e4c1d05', 'name': 'email', 'display-name': 'Email', 'type': 'text'}, 'binary_userid': {'id': 'c0b1da19-4da0-d56e-7a08-2b116b526192', 'name': 'binary_userid', 'display-name': 'Binary userid', 'type': 'number'}, 'Account_loginid': {'id': 'af3dc9e4-fcb8-27c1-5140-70bb503f5a5f', 'name': 'Account_loginid', 'display-name': 'Account loginid', 'type': 'text'}}, 'query': ""SELECT date_joined\nFROM betonmarkets.client\nwhere true [[and binary_user_id = {{binary_userid}}]]  [[and email like CONCAT({{email}}, '%')]] [[and loginid = {{Account_loginid}}]]\nORDER BY date_joined ASC\nLIMIT 1""}, 'type': 'native', 'database': 2}",,scalar,,False,False,45,,Client's join date,,native,,"[{'name': 'date_joined', 'display_name': 'date_joined', 'base_type': 'type/DateTime', 'special_type': 'type/JoinTimestamp', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-09-27T23:48:29.000Z', 'latest': '2018-09-27T23:48:29.000Z'}}}}]",,2019-10-18 10:49:37.561,{}
False,,,,,2018-11-19 07:39:39.282,"{'email': 'rustem@binary.com', 'first_name': 'Rustem', 'last_login': '2019-05-13T02:53:07.540Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 33, 'last_name': 'Kakimov', 'date_joined': '2018-11-09T07:28:02.665Z', 'common_name': 'Rustem Kakimov'}",33,2,"{'native': {'template-tags': {'email': {'id': '788a7be4-850c-1fe4-0280-bfa665cffbb5', 'name': 'email', 'display-name': 'Email', 'type': 'text', 'required': False}, 'purchase_since': {'id': '5b8cf5e2-cf00-04c8-85dc-329cba07c4fd', 'name': 'purchase_since', 'display-name': 'Purchase since', 'type': 'date'}, 'binary_userid': {'id': '68d0d490-dad0-d87d-c156-e72448df3e87', 'name': 'binary_userid', 'display-name': 'Binary userid', 'type': 'number'}, 'Account_loginid': {'id': 'c36cd69d-351c-6066-7dfc-c168c28862ed', 'name': 'Account_loginid', 'display-name': 'Account loginid', 'type': 'text'}}, 'query': ""SELECT market, SUM(contracts) AS contracts\nFROM (\n    SELECT underlying_symbol, COUNT(*) AS contracts\n    FROM (\n      SELECT id\n      FROM (\n        SELECT loginid\n        FROM betonmarkets.client\n        where true [[and binary_user_id = {{binary_userid}}]]  [[and email like CONCAT({{email}}, '%')]] [[and loginid = {{Account_loginid}}]]\n      ) AS logins\n      LEFT JOIN transaction.account a ON a.client_loginid = logins.loginid\n    ) AS account_ids\n    INNER JOIN bet.financial_market_bet b ON b.account_id = account_ids.id\n    [[WHERE b.purchase_time >= {{purchase_since}}]]\n    GROUP BY underlying_symbol\n) AS count_per_symbol\nLEFT JOIN bet.market m ON m.symbol = count_per_symbol.underlying_symbol\nGROUP BY 1""}, 'type': 'native', 'database': 2}",Count number of client's contracts per market,pie,,False,False,39,,Client's market preference,,native,,"[{'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.5}}}}, {'name': 'contracts', 'display_name': 'contracts', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 119.0, 'max': 16903.0, 'avg': 8511.0, 'sd': 11868.080215435013, 'q1': 119.0, 'q3': 16903.0}}}}]",,2019-10-14 09:56:16.471,{}
False,,,,,2018-12-14 07:27:31.370,"{'email': 'rustem@binary.com', 'first_name': 'Rustem', 'last_login': '2019-05-13T02:53:07.540Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 33, 'last_name': 'Kakimov', 'date_joined': '2018-11-09T07:28:02.665Z', 'common_name': 'Rustem Kakimov'}",33,2,"{'native': {'template-tags': {'binary_userid': {'id': '19fa0079-6a72-ab03-2563-7aedb7572775', 'name': 'binary_userid', 'display-name': 'Binary userid', 'type': 'text'}, 'email': {'id': '8416cfe4-27c4-b337-0c5d-ca2102fd7cc0', 'name': 'email', 'display-name': 'Email', 'type': 'text'}, 'Account_loginid': {'id': '3d87fef0-1be1-ccc7-e4af-00bccfd66428', 'name': 'Account_loginid', 'display-name': 'Account loginid', 'type': 'text'}}, 'query': ""SELECT CONCAT_WS(' ', salutation, first_name, last_name) AS name\nFROM betonmarkets.client\nwhere true [[and binary_user_id = {{binary_userid}}]]  [[and email like CONCAT({{email}}, '%')]] [[and loginid = {{Account_loginid}}]]\nLIMIT 1""}, 'type': 'native', 'database': 2}",,table,,False,False,84,40.0,Client's name,ae781ad4-d345-45bb-9850-79694e58e10a,native,,"[{'name': 'name', 'display_name': 'name', 'base_type': 'type/Text', 'special_type': 'type/Name', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 21.0}}}}]",,2019-09-10 02:54:06.630,{}
False,,,,,2018-11-20 06:15:06.313,"{'email': 'rustem@binary.com', 'first_name': 'Rustem', 'last_login': '2019-05-13T02:53:07.540Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 33, 'last_name': 'Kakimov', 'date_joined': '2018-11-09T07:28:02.665Z', 'common_name': 'Rustem Kakimov'}",33,2,"{'native': {'template-tags': {'email': {'id': '8e0bf799-fd86-416b-fe40-cbe56e4c1d05', 'name': 'email', 'display-name': 'Email', 'type': 'text'}, 'binary_userid': {'id': '2eda9b6b-0e1b-b22b-8029-5a6a92f9c1fb', 'name': 'binary_userid', 'display-name': 'Binary userid', 'type': 'number'}, 'Account_loginid': {'id': '1a1bc86a-8661-c7e5-70c5-0e204a466076', 'name': 'Account_loginid', 'display-name': 'Account loginid', 'type': 'text'}}, 'query': ""select\n    case\n        when residence = 'ad' then 'Andorra'\n        when residence = 'ae' then 'United Arab Emirates'\n        when residence = 'af' then 'Afghanistan'\n        when residence = 'ag' then 'Antigua and Barbuda'\n        when residence = 'ai' then 'Anguilla'\n        when residence = 'al' then 'Albania'\n        when residence = 'am' then 'Armenia'\n        when residence = 'ao' then 'Angola'\n        when residence = 'aq' then 'Antarctica'\n        when residence = 'ar' then 'Argentina'\n        when residence = 'at' then 'Austria'\n        when residence = 'au' then 'Australia'\n        when residence = 'aw' then 'Aruba'\n        when residence = 'ax' then 'Aland Islands'\n        when residence = 'az' then 'Azerbaijan'\n        when residence = 'ba' then 'Bosnia and Herzegovina'\n        when residence = 'bb' then 'Barbados'\n        when residence = 'bd' then 'Bangladesh'\n        when residence = 'be' then 'Belgium'\n        when residence = 'bf' then 'Burkina Faso'\n        when residence = 'bg' then 'Bulgaria'\n        when residence = 'bh' then 'Bahrain'\n        when residence = 'bi' then 'Burundi'\n        when residence = 'bj' then 'Benin'\n        when residence = 'bl' then 'Saint Barthelemy'\n        when residence = 'bm' then 'Bermuda'\n        when residence = 'bn' then 'Brunei Darussalam'\n        when residence = 'bo' then 'Bolivia (Plurinational State of)'\n        when residence = 'br' then 'Brazil'\n        when residence = 'bs' then 'Bahamas'\n        when residence = 'bt' then 'Bhutan'\n        when residence = 'bv' then 'Bouvet Island'\n        when residence = 'bw' then 'Botswana'\n        when residence = 'by' then 'Belarus'\n        when residence = 'bz' then 'Belize'\n        when residence = 'cc' then 'Cocos (Keeling) Islands'\n        when residence = 'cd' then 'Congo (The Democratic Republic of the)'\n        when residence = 'cf' then 'Central African Republic'\n        when residence = 'cg' then 'Congo'\n        when residence = 'ch' then 'Switzerland'\n        when residence = 'ci' then 'Cote d''Ivoire'\n        when residence = 'ck' then 'Cook Islands'\n        when residence = 'cl' then 'Chile'\n        when residence = 'cm' then 'Cameroon'\n        when residence = 'cn' then 'China'\n        when residence = 'co' then 'Colombia'\n        when residence = 'cu' then 'Cuba'\n        when residence = 'cv' then 'Cabo Verde'\n        when residence = 'cx' then 'Christmas Island'\n        when residence = 'cy' then 'Cyprus'\n        when residence = 'cz' then 'Czechia'\n        when residence = 'de' then 'Germany'\n        when residence = 'dj' then 'Djibouti'\n        when residence = 'dk' then 'Denmark'\n        when residence = 'dm' then 'Dominica'\n        when residence = 'do' then 'Dominican Republic'\n        when residence = 'dz' then 'Algeria'\n        when residence = 'ec' then 'Ecuador'\n        when residence = 'ee' then 'Estonia'\n        when residence = 'eg' then 'Egypt'\n        when residence = 'eh' then 'Western Sahara'\n        when residence = 'er' then 'Eritrea'\n        when residence = 'es' then 'Spain'\n        when residence = 'et' then 'Ethiopia'\n        when residence = 'fi' then 'Finland'\n        when residence = 'fj' then 'Fiji'\n        when residence = 'fk' then 'Falkland Islands (The) [Malvinas]'\n        when residence = 'fm' then 'Micronesia (Federated States of)'\n        when residence = 'fo' then 'Faroe Islands'\n        when residence = 'fr' then 'France'\n        when residence = 'ga' then 'Gabon'\n        when residence = 'gb' then 'United Kingdom of Great Britain and Northern Ireland'\n        when residence = 'gd' then 'Grenada'\n        when residence = 'ge' then 'Georgia'\n        when residence = 'gf' then 'French Guiana'\n        when residence = 'gh' then 'Ghana'\n        when residence = 'gi' then 'Gibraltar'\n        when residence = 'gl' then 'Greenland'\n        when residence = 'gm' then 'Gambia'\n        when residence = 'gn' then 'Guinea'\n        when residence = 'gp' then 'Guadeloupe'\n        when residence = 'gq' then 'Equatorial Guinea'\n        when residence = 'gr' then 'Greece'\n        when residence = 'gs' then 'South Georgia and the South Sandwich Islands'\n        when residence = 'gt' then 'Guatemala'\n        when residence = 'gw' then 'Guinea-Bissau'\n        when residence = 'gy' then 'Guyana'\n        when residence = 'hm' then 'Heard Island and McDonald Islands'\n        when residence = 'hn' then 'Honduras'\n        when residence = 'hr' then 'Croatia'\n        when residence = 'ht' then 'Haiti'\n        when residence = 'hu' then 'Hungary'\n        when residence = 'id' then 'Indonesia'\n        when residence = 'ie' then 'Ireland'\n        when residence = 'im' then 'Isle of Man'\n        when residence = 'in' then 'India'\n        when residence = 'io' then 'British Indian Ocean Territory'\n        when residence = 'iq' then 'Iraq'\n        when residence = 'is' then 'Iceland'\n        when residence = 'it' then 'Italy'\n        when residence = 'jm' then 'Jamaica'\n        when residence = 'jo' then 'Jordan'\n        when residence = 'ke' then 'Kenya'\n        when residence = 'kg' then 'Kyrgyzstan'\n        when residence = 'kh' then 'Cambodia'\n        when residence = 'ki' then 'Kiribati'\n        when residence = 'km' then 'Comoros'\n        when residence = 'kn' then 'Saint Kitts and Nevis'\n        when residence = 'kr' then 'Korea, The Republic of'\n        when residence = 'kw' then 'Kuwait'\n        when residence = 'ky' then 'Cayman Islands'\n        when residence = 'kz' then 'Kazakhstan'\n        when residence = 'la' then 'Lao People''s Democratic Republic'\n        when residence = 'lb' then 'Lebanon'\n        when residence = 'lc' then 'Saint Lucia'\n        when residence = 'li' then 'Liechtenstein'\n        when residence = 'lk' then 'Sri Lanka'\n        when residence = 'lr' then 'Liberia'\n        when residence = 'ls' then 'Lesotho'\n        when residence = 'lt' then 'Lithuania'\n        when residence = 'lu' then 'Luxembourg'\n        when residence = 'lv' then 'Latvia'\n        when residence = 'ly' then 'Libya'\n        when residence = 'ma' then 'Morocco'\n        when residence = 'mc' then 'Monaco'\n        when residence = 'md' then 'Moldova, The Republic of'\n        when residence = 'me' then 'Montenegro'\n        when residence = 'mf' then 'Saint Martin (French part)'\n        when residence = 'mg' then 'Madagascar'\n        when residence = 'mh' then 'Marshall Islands'\n        when residence = 'mk' then 'Macedonia, The former Yugoslav Republic of'\n        when residence = 'ml' then 'Mali'\n        when residence = 'mm' then 'Myanmar'\n        when residence = 'mn' then 'Mongolia'\n        when residence = 'mo' then 'Macao'\n        when residence = 'mq' then 'Martinique'\n        when residence = 'mr' then 'Mauritania'\n        when residence = 'ms' then 'Montserrat'\n        when residence = 'mu' then 'Mauritius'\n        when residence = 'mv' then 'Maldives'\n        when residence = 'mw' then 'Malawi'\n        when residence = 'mx' then 'Mexico'\n        when residence = 'mz' then 'Mozambique'\n        when residence = 'na' then 'Namibia'\n        when residence = 'nc' then 'New Caledonia'\n        when residence = 'ne' then 'Niger'\n        when residence = 'nf' then 'Norfolk Island'\n        when residence = 'ng' then 'Nigeria'\n        when residence = 'ni' then 'Nicaragua'\n        when residence = 'nl' then 'Netherlands'\n        when residence = 'no' then 'Norway'\n        when residence = 'np' then 'Nepal'\n        when residence = 'nr' then 'Nauru'\n        when residence = 'nu' then 'Niue'\n        when residence = 'nz' then 'New Zealand'\n        when residence = 'om' then 'Oman'\n        when residence = 'pa' then 'Panama'\n        when residence = 'pe' then 'Peru'\n        when residence = 'pf' then 'French Polynesia'\n        when residence = 'pg' then 'Papua New Guinea'\n        when residence = 'ph' then 'Philippines'\n        when residence = 'pk' then 'Pakistan'\n        when residence = 'pl' then 'Poland'\n        when residence = 'pm' then 'Saint Pierre and Miquelon'\n        when residence = 'pn' then 'Pitcairn'\n        when residence = 'ps' then 'Palestine, State of'\n        when residence = 'pt' then 'Portugal'\n        when residence = 'pw' then 'Palau'\n        when residence = 'py' then 'Paraguay'\n        when residence = 'qa' then 'Qatar'\n        when residence = 're' then 'Reunion'\n        when residence = 'ro' then 'Romania'\n        when residence = 'rs' then 'Serbia'\n        when residence = 'ru' then 'Russian Federation'\n        when residence = 'rw' then 'Rwanda'\n        when residence = 'sa' then 'Saudi Arabia'\n        when residence = 'sb' then 'Solomon Islands'\n        when residence = 'sc' then 'Seychelles'\n        when residence = 'sd' then 'Sudan'\n        when residence = 'se' then 'Sweden'\n        when residence = 'sg' then 'Singapore'\n        when residence = 'sh' then 'Saint Helena, Ascension and Tristan da Cunha'\n        when residence = 'si' then 'Slovenia'\n        when residence = 'sj' then 'Svalbard and Jan Mayen'\n        when residence = 'sk' then 'Slovakia'\n        when residence = 'sl' then 'Sierra Leone'\n        when residence = 'sm' then 'San Marino'\n        when residence = 'sn' then 'Senegal'\n        when residence = 'so' then 'Somalia'\n        when residence = 'sr' then 'Suriname'\n        when residence = 'st' then 'Sao Tome and Principe'\n        when residence = 'sv' then 'El Salvador'\n        when residence = 'sy' then 'Syrian Arab Republic'\n        when residence = 'sz' then 'Swaziland'\n        when residence = 'tc' then 'Turks and Caicos Islands'\n        when residence = 'td' then 'Chad'\n        when residence = 'tf' then 'French Southern Territories'\n        when residence = 'tg' then 'Togo'\n        when residence = 'th' then 'Thailand'\n        when residence = 'tj' then 'Tajikistan'\n        when residence = 'tk' then 'Tokelau'\n        when residence = 'tl' then 'Timor-Leste'\n        when residence = 'tm' then 'Turkmenistan'\n        when residence = 'tn' then 'Tunisia'\n        when residence = 'to' then 'Tonga'\n        when residence = 'tr' then 'Turkey'\n        when residence = 'tt' then 'Trinidad and Tobago'\n        when residence = 'tv' then 'Tuvalu'\n        when residence = 'tw' then 'Taiwan (Province of China)'\n        when residence = 'tz' then 'Tanzania, United Republic of'\n        when residence = 'ua' then 'Ukraine'\n        when residence = 'ug' then 'Uganda'\n        when residence = 'uy' then 'Uruguay'\n        when residence = 'uz' then 'Uzbekistan'\n        when residence = 'va' then 'Holy See'\n        when residence = 'vc' then 'Saint Vincent and the Grenadines'\n        when residence = 've' then 'Venezuela (Bolivarian Republic of)'\n        when residence = 'vg' then 'Virgin Islands (British)'\n        when residence = 'vn' then 'Viet Nam'\n        when residence = 'wf' then 'Wallis and Futuna'\n        when residence = 'ws' then 'Samoa'\n        when residence = 'ye' then 'Yemen'\n        when residence = 'yt' then 'Mayotte'\n        when residence = 'za' then 'South Africa'\n        when residence = 'zm' then 'Zambia'\n        when residence = 'zw' then 'Zimbabwe'\n        else 'Country code not found'\n    end as country_of_residence\nfrom betonmarkets.client\nwhere true [[and binary_user_id = {{binary_userid}}]]  [[and email like CONCAT({{email}}, '%')]] [[and loginid = {{Account_loginid}}]]\nlimit 1""}, 'type': 'native', 'database': 2}",,scalar,,False,False,47,,Client's residence country,,native,,"[{'name': 'country_of_residence', 'display_name': 'country_of_residence', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.0}}}}]",,2019-10-18 10:49:37.565,"{'map.type': 'region', 'map.region': 'world_countries', 'map.dimension': 'residence'}"
False,,"{'id': 198, 'name': 'Client_Management', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'client_management'}",198.0,,2019-04-09 09:45:03.767,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Client_Management > MX Client Authentication\n-- Client_Management > MX Client Authentication\nWITH param as (\n    SELECT\n        -- Start date\n        '2015-03-01'::TIMESTAMP as start_date,\n        \n        -- End date\n        '2015-04-15'::TIMESTAMP as end_date\n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM mx_clients_authentication(\n    (SELECT start_date FROM param)::timestamp,\n    (SELECT end_date FROM param)::timestamp\n    )\n""}}",Client_Management > MX Client Authentication,table,,False,False,942,,Client_Management MX Client Authentication,,native,,,,2019-04-09 09:45:03.767,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-03-04 05:03:42.167,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    loginid,\n    age(date_of_birth),\n    residence,\n    myaffiliates_token\nfrom betonmarkets.client\nwhere \nresidence = {{country_name}}\nand age(date_of_birth) >= {{min_age}}::interval\nand age(date_of_birth) < {{max_age}}::interval\nand \n({{unaffiliated}}::boolean or (length(myaffiliates_token) > 0))', 'template-tags': {'min_age': {'id': 'a1a3f9a3-b9c3-85eb-ca67-be43ff5e35e2', 'name': 'min_age', 'display-name': 'min age (incl)', 'type': 'text', 'required': True, 'default': '35y'}, 'max_age': {'id': 'f9246583-b545-0756-bcf6-e0d0fa21f390', 'name': 'max_age', 'display-name': 'max age (excl)', 'type': 'text', 'required': True, 'default': '40y'}, 'country_name': {'id': 'a13af323-e3a6-c075-38a3-ffda64a158b4', 'name': 'country_name', 'display-name': 'country', 'type': 'text', 'required': True, 'default': 'ng'}, 'unaffiliated': {'id': 'eb969367-9296-5ff3-4f7a-5a31156ddb16', 'name': 'unaffiliated', 'display-name': 'Unaffiliated?', 'type': 'text', 'required': True, 'default': 'False'}}}}",,table,,False,False,428,,Clients fitting a description,,native,,"[{'name': 'loginid', 'display_name': 'Login ID', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3856, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.748768472906404}}}}, {'name': 'age', 'display_name': 'Age', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1494, 'nil%': 0.0}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'myaffiliates_token', 'display_name': 'My Affiliates Token', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1965, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 32.0}}}}]",,2019-03-07 06:30:09.622,"{'table.pivot_column': 'residence', 'table.cell_column': 'binary_user_id'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-03-02 18:23:13.246,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,11,"{'database': 11, 'type': 'native', 'native': {'query': ""select * from chronicle where category='app_settings'  and name='quants.custom_client_profiles' order by timestamp desc limit 2;""}}",,table,,False,False,427,,"Clients on watchlist, query via Yng Shan",,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'timestamp', 'display_name': 'Timestamp', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-05T03:59:14.000Z', 'latest': '2019-05-06T01:40:39.000Z'}}}}, {'name': 'category', 'display_name': 'Category', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 12.0}}}}, {'name': 'name', 'display_name': 'Name', 'base_type': 'type/Text', 'special_type': 'type/Name', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 29.0}}}}, {'name': 'value', 'display_name': 'Value', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 1.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 16288.5}}}}]",,2019-05-14 17:42:42.187,"{'table.pivot_column': 'category', 'table.cell_column': 'id'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-12 05:14:02.363,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '--* Number of clients who made 1st deal in Binary bot platform\nselect \n    tmp.binary_user_id,\n    tmp.client_loginid,\n    tmp.transaction_time as transaction_date,\n    tmp.market_type,\n    tmp.currency_code,\n    tmp.balance,\n    bc.date_joined,\n    bc.residence,\n    bc.gender,\n    date_part(\'year\', age(bc.date_of_birth)) as ""age""\nfrom\n(\n    select \n        ta.binary_user_id,\n        ta.client_loginid,\n        transaction_time::date,\n        market_type,\n        currency_code,\n        balance\n    from transaction.firsts tf left join transaction.account ta\n    on ta.id = tf.account_id\n    where source in (1169,15438,15481)\n    and action_type=\'buy\'\n) tmp left join betonmarkets.client bc\non bc.loginid=tmp.client_loginid'}}",,table,,False,False,951,,clients who made first deal on binary bot,,native,,"[{'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1929, 'nil%': 0}, 'type': {'type/Number': {'min': 4063426, 'max': 5585814, 'avg': 5485932.788000001, 'sd': 182939.80781531878, 'q1': 5476754.676336542, 'q3': 5554970.253291849}}}}, {'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1929, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 7.997}}}}, {'name': 'transaction_date', 'display_name': 'Transaction Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 254, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2016-06-09T00:00:00.000Z', 'latest': '2017-04-03T00:00:00.000Z'}}}}, {'name': 'market_type', 'display_name': 'Market Type', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 3}}}}, {'name': 'balance', 'display_name': 'Balance', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 217, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 3952, 'avg': 7.3636, 'sd': 112.90992622957586, 'q1': 0.008451701710095, 'q3': 0.314919870556291}}}}, {'name': 'date_joined', 'display_name': 'Date Joined', 'base_type': 'type/DateTime', 'special_type': 'type/JoinTimestamp', 'fingerprint': {'global': {'distinct-count': 1929, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2007-02-07T16:03:00.000Z', 'latest': '2017-03-27T04:27:26.000Z'}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 51, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 2}}}}, {'name': 'gender', 'display_name': 'Gender', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 1}}}}, {'name': 'age', 'display_name': 'Age', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 56, 'nil%': 0}, 'type': {'type/Number': {'min': 20, 'max': 101, 'avg': 35.5515, 'sd': 9.769343262670828, 'q1': 28.481285369304718, 'q3': 40.75798686681381}}}}]",,2019-04-12 05:14:02.363,"{'table.pivot_column': 'market_type', 'table.cell_column': 'binary_user_id'}"
False,,"{'id': 1, 'name': ""Tom M's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 1, 'slug': 'tom_m_s_personal_collection'}",1.0,,2018-10-17 09:20:48.613,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'database': 2, 'type': 'query', 'query': {'source-table': 94, 'aggregation': [['count']], 'breakout': [['field-id', 836]]}}",,map,,False,False,2,,"Clients, Count, Grouped by Residence",,query,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 249, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 1.9919678714859432}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 173, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 350724.0, 'avg': 3162.29718875502, 'sd': 23325.399847165958, 'q1': 22.878106563510983, 'q3': 598.4562255152854}}}}]",94.0,2019-02-25 02:35:32.317,"{'map.type': 'region', 'map.region': 'world_countries'}"
False,,,,,2019-06-27 09:03:49.099,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'type': 'native', 'database': 2, 'native': {'query': 'SELECT ""betonmarkets"".""client"".""loginid"" AS ""loginid"", email,\nfirst_name, last_name, date_joined, residence\nFROM ""betonmarkets"".""client""\nWHERE ""betonmarkets"".""client"".""residence"" = lower({{country}}::text)', 'template-tags': {'country': {'id': '846be2d1-b3cf-806c-16b0-bade650ec6ee', 'name': 'country', 'display-name': 'country (two letter, default: ug)', 'type': 'text', 'required': True, 'default': 'ug'}}}}",,table,,False,False,1004,37.0,"Clients, Filtered by Residence",4396e3e5-62d2-48e0-940b-3842fc72f9f4,native,,"[{'name': 'loginid', 'display_name': 'Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 665, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.977443609022556}}}}, {'name': 'email', 'display_name': 'Email', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 605, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 1.0, 'average-length': 21.73984962406015}}}}, {'name': 'first_name', 'display_name': 'First Name', 'base_type': 'type/Text', 'special_type': 'type/Name', 'fingerprint': {'global': {'distinct-count': 505, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.748872180451128}}}}, {'name': 'last_name', 'display_name': 'Last Name', 'base_type': 'type/Text', 'special_type': 'type/Name', 'fingerprint': {'global': {'distinct-count': 559, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.04360902255639}}}}, {'name': 'date_joined', 'display_name': 'Date Joined', 'base_type': 'type/DateTime', 'special_type': 'type/JoinTimestamp', 'fingerprint': {'global': {'distinct-count': 665, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2006-02-21T15:44:00.000Z', 'latest': '2019-06-26T14:45:23.000Z'}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}]",,2019-06-27 09:09:53.101,"{'table.pivot_column': 'account_opening_reason', 'table.cell_column': 'binary_user_id'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-20 03:25:28.630,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    tmp3.""underlying_symbol"",\n    tmp3.""transaction_source"",\n    sum(tmp3.""buy_USD"") as ""buy_USD"",\n    sum(tmp3.""sell_USD"") as ""sell_USD"",\n    sum(tmp3.""max_payout_USD"") as ""max_payout_USD"",\n    sum(tmp3.""buy_USD"") - sum(tmp3.""sell_USD"") as ""revenue_USD"",\n    sum(""num_contracts"") as ""num_contracts""\nfrom\n\n(\n    select\n        ta.currency_code,\n        tmp2.underlying_symbol,\n        tmp2.transaction_source,\n        --tmp2.bet_class,\n        --tmp2.bet_type,\n        sum(buy)*data_collection.exchangetousd_rate(ta.""currency_code"", now()::date) as ""buy_USD"",\n        sum(payout)*data_collection.exchangetousd_rate(ta.""currency_code"", now()::date) as ""max_payout_USD"",\n        sum(sell)*data_collection.exchangetousd_rate(ta.""currency_code"", now()::date) as ""sell_USD"",\n        sum(num_contracts) as ""num_contracts""\n    from\n    (\n      select\n        fmbc.account_id,\n        fmbc.underlying_symbol,\n        tmp.source as ""transaction_source"",\n        --fmbc.bet_class,\n        --fmbc.bet_type,\n        --tmp.staff_loginid as ""transaction_staff_loginid"",\n        --fmbc.purchase_time,\n        sum(fmbc.buy_price) as ""buy"",\n        sum(fmbc.payout_price) as ""payout"",\n        sum(fmbc.sell_price) as ""sell"",\n        count(1) as ""num_contracts""\n      from\n      (\n        select * from transaction.transaction\n        where action_type=\'buy\'\n        and transaction_time > now() + interval \'-10m\'\n      ) tmp \n      inner join only bet.financial_market_bet fmbc\n        on tmp.financial_market_bet_id=fmbc.id\n      where substring(underlying_symbol from 1 for 1) != \'R\'\n      group by  1,2,3 --,4,5\n    ) tmp2\n    -- NOTE THAT ONE MUST USE INNER JOIN TO ONLY COUNT CLOSED CONTRACTS --\n    inner join transaction.account ta\n      on tmp2.account_id=ta.id\n    group by 1,2,3 --,4,5\n) tmp3\ngroup by 1,2\norder by 3 desc, 6, 5 desc'}}",,table,,False,False,390,,Closed contracts in the past 10 minutes,,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.727272727272727}}}}, {'name': 'transaction_source', 'display_name': 'Transaction Source', 'base_type': 'type/Integer', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 15284.0, 'avg': 8704.136363636364, 'sd': 6715.175084023566, 'q1': 390.3333333333333, 'q3': 13528.515227617163}}}}, {'name': 'buy_USD', 'display_name': 'Buy Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.5, 'max': 116.55, 'avg': 15.951650081818183, 'sd': 27.184073023769244, 'q1': 1.0, 'q3': 17.54}}}}, {'name': 'sell_USD', 'display_name': 'Sell Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 218.15, 'avg': 17.52159422435091, 'sd': 48.26344446819584, 'q1': 0.050155091790437006, 'q3': 8.41}}}}, {'name': 'max_payout_USD', 'display_name': 'Max Pay Out Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 21, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.93, 'max': 219.15, 'avg': 29.196744587987272, 'sd': 50.52730087336421, 'q1': 1.87, 'q3': 31.61}}}}, {'name': 'revenue_USD', 'display_name': 'Revenue Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': -101.6, 'max': 43.75, 'avg': -1.569944142532727, 'sd': 27.061162509488106, 'q1': -1.6400000000000001, 'q3': 4.437306695894642}}}}, {'name': 'num_contracts', 'display_name': 'Num Contracts', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 18.0, 'avg': 2.8636363636363633, 'sd': 3.9916037419689383, 'q1': 1.0, 'q3': 2.6833752096446}}}}]",,2019-03-07 06:28:44.968,"{'table.pivot_column': 'bet_class', 'table.cell_column': 'transaction_source'}"
False,,,,,2019-01-25 06:43:26.062,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n  purchase_date,\n  --sum(""volidx_buy_USD"") as ""volidx_buy_USD"",\n  --sum(""volidx_PnL_USD"") as ""volidx_PnL_USD""\n  --sum(""forex_buy_USD"") as ""forex_buy_USD"",\n  --sum(""forex_PnL_USD"") as ""forex_PnL_USD""\n  --sum(""indices_buy_USD"") as ""indices_buy_USD"",\n  --sum(""indices_PnL_USD"") as ""indices_PnL_USD""\n  sum(""commodities_buy_USD"") as ""commodities_buy_USD"",\n  sum(""commodities_PnL_USD"") as ""commodities_PnL_USD""\nfrom\n(\nselect\n  ta.currency_code,\n  tmp.""purchase_date"",\n  sum(tmp.""volidx_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""volidx_buy_USD"",\n  sum(tmp.""volidx_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""volidx_PnL_USD"",\n  sum(tmp.""forex_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""forex_buy_USD"",\n  sum(tmp.""forex_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""forex_PnL_USD"",\n  sum(tmp.""indices_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""indices_buy_USD"",\n  sum(tmp.""indices_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""indices_PnL_USD"",\n  sum(tmp.""commodities_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""commodities_buy_USD"",\n  sum(tmp.""commodities_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""commodities_PnL_USD""\nfrom\n(\n    select\n      account_id,\n      purchase_time::date as ""purchase_date"",\n      sum(buy_price) filter (where bm.market=\'volidx\') as ""volidx_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'volidx\') as ""volidx_PnL"",\n      sum(buy_price) filter (where bm.market=\'forex\') as ""forex_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'forex\') as ""forex_PnL"",\n      sum(buy_price) filter (where bm.market=\'indices\') as ""indices_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'indices\') as ""indices_PnL"",\n      sum(buy_price) filter (where bm.market=\'commodities\') as ""commodities_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'commodities\') as ""commodities_PnL""\n      \n    \n    from bet.financial_market_bet fmb left join bet.market bm\n    on fmb.underlying_symbol=bm.symbol\n    where purchase_time >= (now() + interval \'-7d\')::date\n    and purchase_time < now()::date\n    group by 1,2\n) tmp left join transaction.account ta\non ta.id=tmp.account_id\ngroup by 1,2\n\n) tmp2\ngroup by 1\norder by 1 desc'}}",,table,,False,False,236,,Commodities turnover and profit (CR),,native,,"[{'name': 'purchase_date', 'display_name': 'purchase_date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-10T00:00:00.000Z', 'latest': '2019-10-16T00:00:00.000Z'}}}}, {'name': 'commodities_buy_USD', 'display_name': 'commodities_buy_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.14285714285714202}, 'type': {'type/Number': {'min': 70.0, 'max': 6242.356515360087, 'avg': 2849.0233060346095, 'sd': 2039.363485298427, 'q1': 1943.53477193492, 'q3': 3633.3161507191}}}}, {'name': 'commodities_PnL_USD', 'display_name': 'commodities_PnL_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.14285714285714202}, 'type': {'type/Number': {'min': -66.183907049, 'max': 480.752406564335, 'avg': 138.68547986571966, 'sd': 225.69813521381596, 'q1': -62.675808671407, 'q3': 349.3814889856}}}}]",,2019-10-17 00:20:10.253,{}
False,,"{'id': 83, 'name': 'CR', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'cr'}",83.0,,2019-02-26 05:29:00.601,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    tmp2.purchase_date,\n    sum(vol_contracts) as vol_contracts,\n    sum(vol_buy*exchange_rate) as vol_buy,\n    sum(vol_profit*exchange_rate) as vol_profit,\n    sum(vol_client_count) as vol_client_count,\n\n    sum(tmp2.""FX_contracts"") as FX_contracts,\n    sum(tmp2.""FX_buy""*exchange_rate) as FX_buy,\n    sum(tmp2.""FX_profit""*exchange_rate) as FX_profit,\n    sum(tmp2.""FX_client_count"") as FX_client_count,\n    \n    sum(indices_contracts) as indices_contracts,\n    sum(indices_buy*exchange_rate) as indices_buy,\n    sum(indices_profit*exchange_rate) as indices_profit,\n    sum(indices_client_count) as indices_client_count,\n    \n    sum(commodities_contracts) as commodities_contracts,\n    sum(commodities_buy*exchange_rate) as commodities_buy,\n    sum(commodities_profit*exchange_rate) as commodities_profit,\n    sum(commodities_client_count) as commodities_client_count\nfrom\n(\n    select\n        ta.currency_code,\n        tmp.purchase_date,\n        data_collection.exchangetousd_rate(ta.currency_code, tmp.purchase_date::timestamp::date) as ""exchange_rate"",\n        sum(tmp.vol_buy) as vol_buy,\n        sum(tmp.vol_profit) as vol_profit,\n        sum(sign(tmp.vol_contracts)) as ""vol_client_count"",\n        sum(tmp.vol_contracts) as ""vol_contracts"",\n\n        sum(tmp.""FX_buy"") as ""FX_buy"",\n        sum(tmp.""FX_profit"") as ""FX_profit"",\n        sum(sign(tmp.""FX_contracts"")) as ""FX_client_count"",\n        sum(tmp.""FX_contracts"") as ""FX_contracts"",\n\n        sum(tmp.indices_buy) as indices_buy,\n        sum(tmp.indices_profit) as indices_profit,\n        sum(sign(tmp.indices_contracts)) as ""indices_client_count"",\n        sum(tmp.indices_contracts) as ""indices_contracts"",\n\n        sum(tmp.commodities_buy) as commodities_buy,\n        sum(tmp.commodities_profit) as commodities_profit,\n        sum(sign(tmp.commodities_contracts)) as ""commodities_client_count"",\n        sum(tmp.commodities_contracts) as ""commodities_contracts""\n\n    from\n    (\n        select\n            account_id,\n            to_char(purchase_time, \'YYYY-MM-DD\') as ""purchase_date"",\n            sum(buy_price) filter(where market=\'volidx\') as ""vol_buy"",\n            count(buy_price) filter (where market=\'volidx\') as ""vol_contracts"",\n            sum(buy_price-sell_price) filter(where market=\'volidx\') as ""vol_profit"",\n\n            sum(buy_price) filter(where market=\'forex\') as ""FX_buy"",\n            count(buy_price) filter (where market=\'forex\') as ""FX_contracts"",\n            sum(buy_price-sell_price) filter(where market=\'forex\') as ""FX_profit"",\n\n            sum(buy_price) filter(where market=\'indices\') as ""indices_buy"",\n            count(buy_price) filter (where market=\'indices\') as ""indices_contracts"",\n            sum(buy_price-sell_price) filter(where market=\'indices\') as ""indices_profit"",\n\n            sum(buy_price) filter(where market=\'commodities\') as ""commodities_buy"",\n            count(buy_price) filter (where market=\'commodities\') as ""commodities_contracts"",\n            sum(buy_price-sell_price) filter(where market=\'commodities\') as ""commodities_profit""\n        from bet.financial_market_bet fmb left join bet.market bm\n        on fmb.underlying_symbol = bm.symbol\n        where purchase_time >= (now() + \'-7d\')::date\n        and purchase_time < now()::date\n        group by 1,2\n    ) tmp left join\n    transaction.account ta\n    on ta.id = tmp.account_id\n    group by 1,2\n) tmp2\ngroup by 1\n\n'}}",,line,,False,False,420,,Company Profit (CR) by market,,native,,"[{'name': 'purchase_date', 'display_name': 'Purchase Date', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 10}}}}, {'name': 'vol_contracts', 'display_name': 'Vol Contracts', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0}, 'type': {'type/Number': {'min': 555698, 'max': 685225, 'avg': 634525.5714285715, 'sd': 39461.89106322344, 'q1': 630562, 'q3': 651961.75}}}}, {'name': 'vol_buy', 'display_name': 'Vol Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0}, 'type': {'type/Number': {'min': 3585265.2888860065, 'max': 4502279.80434385, 'avg': 4102433.0365828383, 'sd': 310976.96801764605, 'q1': 3921099.4535671473, 'q3': 4328934.195437809}}}}, {'name': 'vol_profit', 'display_name': 'Vol Profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0}, 'type': {'type/Number': {'min': -16641.439174832118, 'max': 310706.2278710352, 'avg': 83675.43225609751, 'sd': 119656.2824627443, 'q1': -5024.433977735856, 'q3': 148759.92429993316}}}}, {'name': 'vol_client_count', 'display_name': 'Vol Client Count', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0}, 'type': {'type/Number': {'min': 4567, 'max': 5509, 'avg': 5196.285714285715, 'sd': 354.1321383729122, 'q1': 4956.75, 'q3': 5472}}}}, {'name': 'fx_contracts', 'display_name': 'Fx Contracts', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0}, 'type': {'type/Number': {'min': 4, 'max': 22917, 'avg': 14671, 'sd': 10094.15642835002, 'q1': 4771.5, 'q3': 20770.5}}}}, {'name': 'fx_buy', 'display_name': 'Fx Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0}, 'type': {'type/Number': {'min': 79.8003453, 'max': 287302.1851754566, 'avg': 155940.9601017505, 'sd': 118101.69262876456, 'q1': 36544.25540825116, 'q3': 254067.03728525844}}}}, {'name': 'fx_profit', 'display_name': 'Fx Profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0}, 'type': {'type/Number': {'min': -8571.826985231177, 'max': 63423.33185957443, 'avg': 15607.907273876635, 'sd': 27293.755531581908, 'q1': -301.9802222464675, 'q3': 35358.090002485085}}}}, {'name': 'fx_client_count', 'display_name': 'Fx Client Count', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0}, 'type': {'type/Number': {'min': 3, 'max': 1917, 'avg': 1281.857142857143, 'sd': 879.7193545996034, 'q1': 665.6383708068118, 'q3': 1851.25}}}}, {'name': 'indices_contracts', 'display_name': 'Indices Contracts', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 71, 'avg': 38.857142857142854, 'sd': 28.433715734602654, 'q1': 17.17330796654822, 'q3': 59.25}}}}, {'name': 'indices_buy', 'display_name': 'Indices Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.28571428571428503}, 'type': {'type/Number': {'min': 388.5260909, 'max': 66695.2285252, 'avg': 18798.878239474998, 'sd': 28491.36022364691, 'q1': 502.709486975, 'q3': 34386.2280572875}}}}, {'name': 'indices_profit', 'display_name': 'Indices Profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.28571428571428503}, 'type': {'type/Number': {'min': -12049.9803242, 'max': 561.07331303445, 'avg': -2272.526679097573, 'sd': 5471.831387778735, 'q1': -3125.1753948667356, 'q3': 291.4284959836125}}}}, {'name': 'indices_client_count', 'display_name': 'Indices Client Count', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 23, 'avg': 14.285714285714286, 'sd': 9.92831448793946, 'q1': 7.120639888568774, 'q3': 20.75}}}}, {'name': 'commodities_contracts', 'display_name': 'Commodities Contracts', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 389, 'avg': 238.14285714285714, 'sd': 169.4908341390261, 'q1': 104.29643130903675, 'q3': 367.75}}}}, {'name': 'commodities_buy', 'display_name': 'Commodities Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.28571428571428503}, 'type': {'type/Number': {'min': 680.4758779432, 'max': 4594.9942001, 'avg': 2914.4580782519433, 'sd': 1660.0512270374327, 'q1': 1563.151992338464, 'q3': 4411.064734325}}}}, {'name': 'commodities_profit', 'display_name': 'Commodities Profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.28571428571428503}, 'type': {'type/Number': {'min': 102.482520923905, 'max': 1432.73389402424, 'avg': 708.9024162713371, 'sd': 664.7891416049365, 'q1': 155.2846253191285, 'q3': 1422.27648425606}}}}, {'name': 'commodities_client_count', 'display_name': 'Commodities Client Count', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 115, 'avg': 69.28571428571429, 'sd': 48.79793125981976, 'q1': 31.414587743685768, 'q3': 101.25}}}}]",,2019-06-05 02:33:45.586,"{'table.pivot_column': 'purchase_date', 'table.cell_column': 'account_id', 'graph.metrics': ['vol_profit', 'fx_profit', 'indices_profit', 'commodities_profit'], 'graph.dimensions': ['purchase_date'], 'graph.y_axis.scale': 'pow', 'series_settings': {'Indices Profit': {'axis': 'left'}, 'Fx Profit': {'axis': 'left'}, 'Vol Profit': {'axis': 'left'}, 'Commodities Profit': {'axis': 'left'}, 'vol_profit': {'axis': 'left', 'line.interpolate': 'linear'}, 'fx_profit': {'axis': 'left'}, 'indices_profit': {'axis': 'left'}, 'commodities_profit': {'axis': 'left'}}}"
False,,"{'id': 83, 'name': 'CR', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'cr'}",83.0,,2019-02-25 07:50:08.191,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'buy_threshold': {'id': 'f4fe8b2a-e780-a6cf-cb36-1e5b4cd324d5', 'name': 'buy_threshold', 'display-name': 'Total Buy Threshold', 'type': 'number', 'required': True, 'default': '0'}}, 'query': 'select * from\n(\n    select\n    usdder.symbol,\n    --sum(usdder.total_buy) as ""total_buy""\n    sum(usdder.company_revenue) as ""company_revenue""\n    from\n        (\n        select \n        tmp.account_id,\n        tmp.symbol,\n        round(tmp.buy*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""total_buy"",\n        round(tmp.company_revenue*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""company_revenue""\n        from\n            (\n            select \n                account_id,\n                bm.symbol,\n                cast(purchase_time as date) as ""day"", \n                sum(buy_price) as ""buy"",\n                sum((buy_price - sell_price)) as ""company_revenue""\n            from bet.financial_market_bet fmb\n            left join bet.market bm\n            on bm.symbol=fmb.underlying_symbol\n            where purchase_time < current_date -- + INTERVAL \'-4 hour\'\n            and purchase_time >= (current_date + interval \'-1d\')::date\n            --and market=\'forex\'    \n            --and is_sold = TRUE\n            group by 1,2,3 \n        ) tmp\n            left join transaction.account a\n            on tmp.account_id=a.id\n        --order by 3\n        --limit 1000\n        ) usdder\n    group by symbol\n) ttt\nwhere \n--total_buy >=  500 and \nabs(company_revenue) >= {{buy_threshold}}\nand substring(symbol from 1 for 1) = \'R\'\norder by 2 desc'}, 'type': 'native', 'database': 2}",,bar,,False,False,416,,Company profit (CR) by volidx underlying,,native,,"[{'name': 'symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.714285714285714}}}}, {'name': 'company_revenue', 'display_name': 'Company Revenue', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': -86850.14, 'max': 31878.96, 'avg': 54.47428571428463, 'sd': 39981.72252237592, 'q1': 3057.1825, 'q3': 23866.4525}}}}]",,2019-06-05 02:28:23.466,"{'table.pivot_column': 'symbol', 'table.cell_column': 'total_buy', 'graph.y_axis.scale': 'linear', 'graph.dimensions': ['symbol'], 'graph.metrics': ['company_revenue']}"
False,,"{'id': 83, 'name': 'CR', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'cr'}",83.0,,2019-02-25 07:18:47.873,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select t2.""day"", sum(t2.profit_USDDER) as profit_USD from\n    (select tmp.""day"", \n            profit*data_collection.exchangetousd_rate(tmp.currency_code, tmp.""day"") as profit_USDDER \n    from\n        (select \n          CAST(da.""day"" AS date) as ""day"", \n          a.currency_code,\n          --sum(turnover) as ""turnover""\n          sum(loss) as ""profit""\n          --count(distinct account_id) as ""customer_count""\n        from bet.daily_aggregates da left join transaction.account a  \n        on da.account_id=a.id\n        WHERE CAST(da.""day"" AS date) \n            BETWEEN \n                CAST((NOW() + INTERVAL \'-2 day\') AS date) --current_date -30\n            AND CAST((NOW() + INTERVAL \'-1 day\') AS date)  --current_date \n        GROUP BY 1,2\n        ORDER BY 1 DESC, 2 DESC\n        ) tmp\n    ) t2\ngroup by 1\norder by 1'}}",,smartscalar,,False,False,411,,Company Profit (last 2 days),,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-06-03T00:00:00.000Z', 'latest': '2019-06-04T00:00:00.000Z'}}}}, {'name': 'profit_usd', 'display_name': 'Profit Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/Number': {'min': 46371.29944782587, 'max': 53687.22071627081, 'avg': 50029.260082048335, 'sd': 5173.137539544304, 'q1': 46371.29944782587, 'q3': 53687.22071627081}}}}]",,2019-06-05 02:26:33.647,"{'table.pivot_column': 'day', 'table.cell_column': 'turnover_usd', 'column_settings': {'[""name"",""profit_usd""]': {'prefix': '$'}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-31 04:42:32.559,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    purchase_minute,\n    market,\n    sum(total_buy) as total_buy,\n    sum(profit) as profit\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            sum(buy_price) as total_buy,\n            sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2\ngroup by 1,2""}}",,line,,False,False,984,,company profit by the minute,,native,,"[{'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 303, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T05:02:00.000Z'}}}}, {'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.905343511450382}}}}, {'name': 'total_buy', 'display_name': 'total_buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 601, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.5, 'max': 62574.97177354, 'avg': 1471.1583131258901, 'sd': 3362.5173355577604, 'q1': 32.946403768154916, 'q3': 2349.696122502873}}}}, {'name': 'profit', 'display_name': 'profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 636, 'nil%': 0.0}, 'type': {'type/Number': {'min': -24653.44527960829, 'max': 12089.04664463321, 'avg': -15.044476078611456, 'sd': 1283.359503751276, 'q1': -45.40034806834714, 'q3': 70.44431640663595}}}}]",,2019-10-14 05:03:10.856,"{'graph.metrics': ['profit'], 'graph.dimensions': ['purchase_minute', 'market'], 'graph.y_axis.scale': 'pow'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-02 14:17:31.611,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    purchase_minute,\n    market,\n    sum(total_buy) as total_buy,\n    sum(profit) as profit\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            sum(buy_price) as total_buy,\n            sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2\ngroup by 1,2""}}",,line,,False,False,991,,company profit by the minute (linear scale),,native,,"[{'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 303, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T05:02:00.000Z'}}}}, {'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.905343511450382}}}}, {'name': 'total_buy', 'display_name': 'total_buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 601, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.5, 'max': 62574.97177354, 'avg': 1471.2081757213102, 'sd': 3362.510228163198, 'q1': 33.00681336911565, 'q3': 2349.696122502873}}}}, {'name': 'profit', 'display_name': 'profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 636, 'nil%': 0.0}, 'type': {'type/Number': {'min': -24653.44527960829, 'max': 12089.04664463321, 'avg': -15.016598216016025, 'sd': 1283.3672400844434, 'q1': -45.39601018003055, 'q3': 70.44595912863367}}}}]",,2019-10-14 05:03:12.790,"{'graph.metrics': ['profit'], 'graph.dimensions': ['purchase_minute', 'market'], 'graph.y_axis.scale': 'linear'}"
False,,"{'id': 83, 'name': 'CR', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'cr'}",83.0,,2019-02-25 07:50:34.339,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select * from\n(\n    select\n    usdder.symbol,\n    --sum(usdder.total_buy) as ""total_buy""\n    sum(usdder.company_revenue) as ""company_revenue""\n    from\n        (\n        select \n        tmp.account_id,\n        tmp.symbol,\n        round(tmp.buy*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""total_buy"",\n        round(tmp.company_revenue*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""company_revenue""\n        from\n            (\n            select \n                account_id,\n                bm.symbol,\n                cast(purchase_time as date) as ""day"", \n                sum(buy_price) as ""buy"",\n                sum((buy_price - sell_price)) as ""company_revenue""\n            from bet.financial_market_bet fmb\n            left join bet.market bm\n            on bm.symbol=fmb.underlying_symbol\n            where purchase_time < now()::date -- + INTERVAL \'-4 hour\'\n            and purchase_time >= (now() + interval \'-1d\')::date\n            --and market=\'forex\'    \n            --and is_sold = TRUE\n            group by 1,2,3 \n        ) tmp\n            left join transaction.account a\n            on tmp.account_id=a.id\n        --order by 3\n        --limit 1000\n        ) usdder\n    group by symbol\n) ttt\nwhere \n--total_buy >=  500 and \nabs(company_revenue) >= {{buy_threshold}}\nand substring(symbol from 1 for 1) != \'R\'\norder by abs(company_revenue) desc', 'template-tags': {'buy_threshold': {'id': 'f4fe8b2a-e780-a6cf-cb36-1e5b4cd324d5', 'name': 'buy_threshold', 'display-name': 'Buy Threshold', 'type': 'number', 'required': True, 'default': '1000'}}}}",,bar,,False,False,417,,Company profit by underlying (non-volidx),,native,,"[{'name': 'symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 9}}}}, {'name': 'company_revenue', 'display_name': 'Company Revenue', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0}, 'type': {'type/Number': {'min': -8060.62, 'max': 39644.01, 'avg': 3272.4814285714283, 'sd': 11182.366265957004, 'q1': -1177.15, 'q3': 2239.26}}}}]",,2019-06-05 02:30:15.827,"{'table.pivot_column': 'symbol', 'table.cell_column': 'total_buy', 'graph.y_axis.scale': 'linear', 'graph.dimensions': ['symbol'], 'graph.metrics': ['company_revenue'], 'graph.show_goal': False}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-28 06:54:23.506,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select ""day"", sum(""profit""*""exchange_rate"") as ""profit_usd"", sum(""exchange_rate""*""turnover"") as ""turnover_usd"" from\n(\nselect \n  ""day"",\n  ta.""currency_code"",\n  sum(turnover) as ""turnover"",\n  sum(loss) as ""profit"",\n  data_collection.exchangetousd_rate(ta.currency_code, ""day"") as ""exchange_rate""\n  --count(distinct account_id) as ""customer_count""\nfrom bet.daily_aggregates da left join transaction.account ta\non ta.id = da.account_id\nWHERE CAST(da.""day"" AS date) BETWEEN CAST((NOW() + INTERVAL \'-2 day\') AS date)\n   AND CAST((NOW() + INTERVAL \'-1 day\') AS date)\nGROUP BY CAST(da.""day"" AS date), ta.""currency_code""\nORDER BY CAST(da.""day"" AS date) DESC\n) s\ngroup by 1\norder by 1'}}",,smartscalar,,False,False,143,,Company profit yesterday (CR),,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-06-03T00:00:00.000Z', 'latest': '2019-06-04T00:00:00.000Z'}}}}, {'name': 'profit_usd', 'display_name': 'Profit Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/Number': {'min': 46371.29944782587, 'max': 53687.22071627081, 'avg': 50029.260082048335, 'sd': 5173.137539544304, 'q1': 46371.29944782587, 'q3': 53687.22071627081}}}}, {'name': 'turnover_usd', 'display_name': 'Turnover Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/Number': {'min': 4222679.5837080665, 'max': 4588637.087286061, 'avg': 4405658.335497064, 'sd': 258771.03240609993, 'q1': 4222679.5837080665, 'q3': 4588637.087286061}}}}]",,2019-06-05 02:26:16.589,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-08-08 06:11:25.067,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select date_part('hour', purchase_time) as hr, date_trunc('day', purchase_time) as d, count(*) as c from bet.financial_market_bet\nwhere purchase_time > current_date + interval '-35day'\nand purchase_time < date_trunc('hour', now())\nand extract (dow from purchase_time) = extract(dow from now())\ngroup by 1,2""}}",,scatter,,False,False,1024,,Compare current day to previous weeks,,native,,"[{'name': 'hr', 'display_name': 'Hr', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 23, 'avg': 11.16, 'sd': 7.015385390975185, 'q1': 4.96875, 'q3': 17.25}}}}, {'name': 'd', 'display_name': 'D', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-08-01T00:00:00.000Z', 'latest': '2019-08-08T00:00:00.000Z'}}}}, {'name': 'c', 'display_name': 'C', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 174, 'nil%': 0}, 'type': {'type/Number': {'min': 2789, 'max': 52091, 'avg': 34428.71428571428, 'sd': 6773.207019619244, 'q1': 29983.437805267982, 'q3': 39432.38208744157}}}}]",,2019-08-08 06:11:25.067,"{'graph.dimensions': ['hr', 'd'], 'graph.metrics': ['c'], 'series_settings': {'August 8, 2019, 12:00 AM': {'color': '#EF8C8C', 'display': 'line'}}}"
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:42:10.093,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Active Client Financial Assessment\nWITH params AS (SELECT\n        'MX'::VARCHAR AS broker_code, -- MX, MLT, MF, CR\n        '2018-08-01'::DATE AS start_date,\n        '2018-08-31'::DATE AS end_date  -- date is inclusive\n)\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT d.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink(ps.srvname, $$\n\n    WITH active AS (\n        SELECT DISTINCT ON (ta.client_loginid)\n            ta.client_loginid,\n            transaction.round_amount(ta.currency_code, ta.balance) AS balance\n        FROM transaction.transaction AS tt\n        JOIN transaction.account AS ta\n             ON ta.id = tt.account_id\n        WHERE tt.action_type IN ('buy','deposit')\n          AND tt.transaction_time >= $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n          AND tt.transaction_time < $$|| quote_nullable(params.end_date +1) ||$$::TIMESTAMP\n        ORDER BY ta.client_loginid, tt.transaction_time DESC\n    )\n    SELECT\n        active.client_loginid,\n        active.balance,\n        fa.data->'employment_status' AS employment_status,\n        fa.data->'employment_industry' employment_industry, \n        fa.data->'income_source' income_source, \n        fa.data->'estimated_worth' estimated_worth, \n        fa.data->'net_income'net_income\n    FROM active\n    JOIN betonmarkets.financial_assessment AS fa\n         ON active.client_loginid = fa.client_loginid\n\n$$) d (\n    loginid VARCHAR,\n    balance NUMERIC,\n    employment_status VARCHAR,\n    employment_industry VARCHAR,\n    income_source VARCHAR,\n    estimated_worth VARCHAR,\n    net_income VARCHAR\n)\n\nWHERE params.broker_code = ANY (ps.broker_codes);\n""}}",Compliance > Active Client Financial Assessment,table,,False,False,892,,Compliance Active Client Financial Assessment,,native,,,,2019-04-09 09:42:10.093,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:35.334,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Compliance > Binary clients with MT5\n-- This report associates Binary clients with MT5 clients who share the same Binary USER account\n-- It provides basic client details along with certain status, financial assessment and authentication info\n-- along with an MT5 summary providing MT5 loginid, group and registration date\n-- If the client has more than one associated MT5 account, they will be joined together by double hash tags:\n-- MT134205 - real\\costarica - 2018-10-12 ## MT133436 - real\\vanuatu_standard - 2018-10-10\n-- NOTES: the balance_usd value is the Binary client balance based upon the exchange rate at the moment\nWITH params AS (SELECT\n  \'2018-12-01\'::DATE AS binary_join_start_date, -- To pull all clients ""regardless"" of join date, just use a very old date like \'1990-01-01\'\n  \'2018-12-31\'::DATE AS binary_join_end_date,   -- Binary clients who joined after this date will not be included\n  \'MF\'::VARCHAR AS broker_code -- CH, CR, MX, MLT, MF\n)\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT\n    dbl.*,\n    ull.history_date::DATE AS last_login,\n    string_agg(ulmt.loginid ||\' - \'|| mt5u.""Group"" ||\' - \'|| mt5u.""Registration""::DATE, \' ## \' ORDER BY mt5u.""Registration"" DESC) AS ""MT5_logins""\nFROM params\nJOIN betonmarkets.production_servers_v2() AS ps ON UPPER(params.broker_code) = ANY (ps.broker_codes)\nCROSS JOIN dblink(ps.srvname, $$\n\n    SELECT\n        c.loginid,\n        c.date_joined::DATE AS date_joined,\n        concat_ws(\' \', c.first_name, c.last_name) AS name,\n        c.residence,\n        c.citizen,\n        c.place_of_birth,\n        c.date_of_birth,\n        c.email,\n        c.phone,\n        c.address_line_1 || \', \' || c.address_line_2 || \', \' || c.address_city || \', \' || c.address_state || \', \' || c.address_postcode AS address,\n        data_collection.exchangetousd(ta.balance, ta.currency_code) AS balance_usd,\n        COALESCE(cs.status, \'active\') AS status,\n        CASE WHEN cs.is_professional THEN \'professional\'::text ELSE \'retail\' END AS client_categorisation,\n        fa.data,\n        CASE WHEN cam.status = \'pass\' AND cam.authentication_method_code = \'ID_NOTARIZED\'\n             THEN \'notarized\'\n             WHEN cam.status = \'pass\' AND cam.authentication_method_code = \'ID_DOCUMENT\'\n             THEN \'scans\'\n             ELSE coalesce(cam.status, \'no\')\n        END AS authentication_status\n\n    FROM\n        betonmarkets.client AS c\n    LEFT JOIN transaction.account AS ta\n        ON ta.client_loginid = c.loginid\n    LEFT JOIN betonmarkets.financial_assessment AS fa\n        ON fa.client_loginid = c.loginid\n    LEFT JOIN\n        (\n            SELECT\n                client_loginid,\n                bool_or(TRUE) FILTER (WHERE status_code=\'professional\') AS is_professional,\n                string_agg(status_code, \' \\\\ \' ORDER BY status_code) FILTER (WHERE status_code IN (\'cashier_locked\', \'disabled\', \'unwelcome\', \'withdrawal_locked\')) AS status,\n                string_agg(reason, \' \\\\ \' ORDER BY status_code) FILTER (WHERE status_code IN (\'cashier_locked\', \'disabled\', \'unwelcome\', \'withdrawal_locked\')) AS reason\n            FROM\n                betonmarkets.client_status cs\n            WHERE\n                status_code IN (\'cashier_locked\', \'disabled\', \'unwelcome\', \'withdrawal_locked\', \'professional\')\n            GROUP BY 1\n        ) AS cs ON cs.client_loginid = c.loginid\n    LEFT JOIN betonmarkets.client_authentication_method AS cam\n        ON cam.client_loginid = c.loginid\n\n    WHERE\n        c.broker_code =  $$ || quote_literal( params.broker_code ) || $$\n    AND c.date_joined >= $$ || quote_literal( params.binary_join_start_date ) || $$::TIMESTAMP\n    AND c.date_joined <  $$ || quote_literal( params.binary_join_end_date ) || $$::TIMESTAMP + INTERVAL \'1 day\'\n\n$$) AS dbl(\n    loginid TEXT,\n    date_joined DATE,\n    name TEXT,\n    residence TEXT,\n    citizen TEXT,\n    place_of_birth TEXT,\n    date_of_birth DATE,\n    email TEXT,\n    phone TEXT,\n    address TEXT,\n    balance_usd NUMERIC,\n    status TEXT,\n    client_categorisation TEXT,\n    submitted_financial_assessment TEXT,\n    authentication_status TEXT\n    )\nJOIN users.loginid AS ulcr ON ulcr.loginid = dbl.loginid\nJOIN users.last_login AS ull ON ull.binary_user_id = ulcr.binary_user_id\nJOIN users.loginid AS ulmt ON ulmt.binary_user_id = ulcr.binary_user_id AND ulmt.loginid LIKE \'MT%\'\nJOIN mt5.mt5_users AS mt5u ON \'MT\' || mt5u.""Login""::TEXT = ulmt.loginid\nGROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16\nORDER BY betonmarkets.loginid_sortable(dbl.loginid);\n'}}",Compliance > Binary clients with MT5,table,,False,False,882,,Compliance Binary clients with MT5,,native,,,,2019-04-09 09:41:35.334,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:11.199,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Client age statistic\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF or VR\n        'MX'::VARCHAR as broker_code,\n        \n        -- gb, id, etc.\n        'gb'::VARCHAR as residence,\n\n        --  - for no filter or withdrawal_locked, disabled, skip_3ds, unwelcome, ok, cashier_locked, allowed_other_card, tnc_approval, ukgc_funds_protection, trusted, age_verification\n        '-'::VARCHAR as excluded_status\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_client_age_stat(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT residence FROM param)::varchar,\n    (SELECT excluded_status FROM param)::varchar\n    );\n\n""}}",Compliance > Client age statistic,table,,False,False,875,,Compliance Client age statistic,,native,,,,2019-04-09 09:41:11.199,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:18.000,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Client age statistic with residence exclusion\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF or VR\n        'MX'::VARCHAR as broker_code,\n        \n        -- gb, id, etc.\n        'gb'::VARCHAR as excluded_residence,\n\n        --  - for no filter or withdrawal_locked, disabled, skip_3ds, unwelcome, ok, cashier_locked, allowed_other_card, tnc_approval, ukgc_funds_protection, trusted, age_verification\n        '-'::VARCHAR as excluded_status\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_client_age_stat_residence_exclusion(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT excluded_residence FROM param)::varchar,\n    (SELECT excluded_status FROM param)::varchar\n    );\n\n""}}",Compliance > Client age statistic with residence exclusion,table,,False,False,877,,Compliance Client age statistic with residence exclusion,,native,,,,2019-04-09 09:41:18.000,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:49.158,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Client authentication status (ADDRESS)\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF or VR\n        'MLT'::VARCHAR as broker_code\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM client_auth_status(\n    (SELECT broker_code FROM param)::varchar\n    );\n\n""}}",Compliance > Client authentication status (ADDRESS),table,,False,False,886,,Compliance Client authentication status (ADDRESS),,native,,,,2019-04-09 09:41:49.158,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:40:53.999,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Client gender statistic\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF or VR\n        'MX'::VARCHAR as broker_code,\n        \n        -- gb, id, etc.\n        'gb'::VARCHAR as residence,\n\n        --  - for no filter or withdrawal_locked, disabled, skip_3ds, unwelcome, ok, cashier_locked, allowed_other_card, tnc_approval, ukgc_funds_protection, trusted, age_verification\n        '-'::VARCHAR as excluded_status\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_client_gender_stat(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT residence FROM param)::varchar,\n    (SELECT excluded_status FROM param)::varchar\n    );\n""}}",Compliance > Client gender statistic,table,,False,False,870,,Compliance Client gender statistic,,native,,,,2019-04-09 09:40:53.999,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:40:43.650,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Client gender statistic with residence exclusion\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF or VR\n        'MX'::VARCHAR as broker_code,\n        \n        -- gb, id, etc.\n        'gb'::VARCHAR as excluded_residence,\n\n        --  - for no filter or withdrawal_locked, disabled, skip_3ds, unwelcome, ok, cashier_locked, allowed_other_card, tnc_approval, ukgc_funds_protection, trusted, age_verification\n        '-'::VARCHAR as excluded_status\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_client_gender_stat_residence_exclusion(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT excluded_residence FROM param)::varchar,\n    (SELECT excluded_status FROM param)::varchar\n    );\n""}}",Compliance > Client gender statistic with residence exclusion,table,,False,False,867,,Compliance Client gender statistic with residence exclusion,,native,,,,2019-04-09 09:40:43.650,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:40:36.851,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Client Self Exclusion Audit\nWITH params AS (SELECT\n        'MX41033'::VARCHAR AS loginid,\n        '2010-08-01'::DATE AS start_date,\n        '2018-10-31'::DATE AS end_date  -- date is inclusive\n)\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT d.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink(ps.srvname, $$\n\n  SELECT *\n  FROM audit.self_exclusion\n  WHERE client_loginid = $$|| quote_nullable(params.loginid) ||$$::VARCHAR\n    AND stamp >= $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n    and stamp <  $$|| quote_nullable(params.end_date +1) ||$$::TIMESTAMP\n  ORDER BY stamp DESC\n\n$$) d (\n    operation VARCHAR,\n    stamp TEXT,\n    pg_userid TEXT,\n    client_addr CIDR,\n    client_port INTEGER,\n    client_loginid VARCHAR,\n    max_balance NUMERIC,\n    max_turnover NUMERIC,\n    max_open_bets INTEGER,\n    exclude_until DATE,\n    session_duration_limit INTEGER,\n    last_modified_date TEXT,\n    max_losses NUMERIC,\n    max_7day_turnover NUMERIC,\n    max_7day_losses NUMERIC,\n    remote_addr CIDR,\n    max_30day_turnover NUMERIC,\n    max_30day_losses NUMERIC,\n    timeout_until NUMERIC\n)\n\nWHERE regexp_replace(params.loginid, '[0-9]+', '') = ANY (ps.broker_codes);\n""}}",Compliance > Client Self Exclusion Audit,table,,False,False,865,,Compliance Client Self Exclusion Audit,,native,,,,2019-04-09 09:40:36.851,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:59.686,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Client total deposits\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF or VR\n        'MLT'::VARCHAR as broker_code,\n        \n        -- End date\n        '2015-08-01 00:00:00'::TIMESTAMP as start_date,\n\n        -- End date\n        '2015-08-17 00:00:00'::TIMESTAMP as end_date\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_client_deposit(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT start_date FROM param)::timestamp,\n    (SELECT end_date FROM param)::timestamp\n    );\n""}}",Compliance > Client total deposits,table,,False,False,889,,Compliance Client total deposits,,native,,,,2019-04-09 09:41:59.686,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:40:29.702,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- provides loginid, residence, tax_identification_number, status if matching (\'disabled\',\'unwelcome\',\'cashier_locked\'), the newest txn time within the interval, the balance after that transaction as well as their current balance and their currency_code\n-- Compliance > Clients active within interval\n-- This report looks for clients who traded -or- made a deposit -or- made a withdrawal during the specified interval\n-- It provides loginid, residence, tax_identification_number, status if matching (\'disabled\',\'unwelcome\',\'cashier_locked\'),\n-- the newest txn time within the interval, the balance after that transaction\n-- as well as their current balance and their currency_code\nWITH params as (\n    SELECT\n        -- CH, CR, MX, MLT, MF, VR or other broker codes except MT (MT5)\n        \'MF\'::VARCHAR as broker_code,\n        \n        -- Start date (balances that changed before this date will not be included)\n        \'2017-01-01\'::DATE AS start_date,\n        \n        -- End date (date is inclusive)\n        \'2017-12-31\'::DATE AS end_date\n)\n\n-- For future reference, according to Chris this report is ""for the quarterly reports and that is all they care about (client activity)""\n-- Also according to Francesca, this report will be used to help in CRS reporting\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT dbl.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2(TRUE) AS ps\nCROSS JOIN dblink(ps.srvname,\n    $$\n        SELECT\n            bc.loginid,\n            bc.residence,\n            bc.tax_identification_number,\n            cs.status,\n            tt.action_type,\n            tt.transaction_time::TIMESTAMP(0) AS transaction_time,\n            transaction.round_amount(ta.currency_code, tt.balance_after) AS balance_after,\n            transaction.round_amount(ta.currency_code, ta.balance) AS current_balance,\n            ta.currency_code\n\n        FROM transaction.account AS ta\n        JOIN betonmarkets.client AS bc\n             ON bc.loginid = ta.client_loginid\n        JOIN LATERAL (\n        \tSELECT\n        \t    staff_loginid,\n        \t    action_type,\n        \t    balance_after,\n        \t    transaction_time\n        \tFROM transaction.transaction\n        \tWHERE account_id = ta.id\n        \t  AND staff_loginid = ta.client_loginid\n        \t  AND transaction_time >= $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n              AND transaction_time <  $$|| quote_nullable(params.end_date) ||$$::TIMESTAMP + \'1d\'::INTERVAL\n            ORDER BY transaction_time DESC LIMIT 1\n        ) AS tt ON TRUE\n        LEFT JOIN LATERAL (\n           SELECT string_agg(status_code, \', \') AS status\n             FROM betonmarkets.client_status\n            WHERE client_loginid = bc.loginid\n              AND status_code IN (\'disabled\',\'unwelcome\',\'cashier_locked\')\n        ) AS cs ON TRUE\n        \n        WHERE bc.broker_code = $$|| quote_nullable(params.broker_code) ||$$\n        ORDER BY 1\n    $$\n) AS dbl (\n        loginid TEXT,\n        residence TEXT,\n        tax_identification_number TEXT,\n        client_special_status TEXT,\n        txn_type TEXT,\n        transaction_time TEXT,\n        balance_after NUMERIC,\n        current_balance NUMERIC,\n        currency_code TEXT\n)\n  \nWHERE params.broker_code = ANY(ps.broker_codes);\n'}}","provides loginid, residence, tax_identification_number, status if matching ('disabled','unwelcome','cashier_locked'), the newest txn time within the interval, the balance after that transaction as well as their current balance and their currency_code",table,,False,False,863,,Compliance Clients active within interval,,native,,,,2019-04-09 09:40:29.702,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:40:50.579,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Clients age not verified\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF or VR\n        'MLT'::VARCHAR as broker_code,\n        \n        -- Start date\n        '2012-01-01'::TIMESTAMP as start_date,\n\n\n        -- End date\n        '2014-01-01'::TIMESTAMP as end_date\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM client_not_age_verified(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT start_date FROM param)::timestamp,\n    (SELECT end_date FROM param)::timestamp\n    );""}}",Compliance > Clients age not verified,table,,False,False,869,,Compliance Clients age not verified,,native,,,,2019-04-09 09:40:50.579,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:14.588,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Clients last transaction\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF or VR\n        'MLT'::VARCHAR as broker_code,\n        \n        -- End date\n        '2012-11-30'::TIMESTAMP as end_date\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM client_last_transaction(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT end_date FROM param)::timestamp\n    );\n""}}",Compliance > Clients last transaction,table,,False,False,876,,Compliance Clients last transaction,,native,,,,2019-04-09 09:41:14.587,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:40:26.318,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Clients with expired documents\nWITH param as (\n    SELECT\n        -- CH, CR, JP, MX, MLT, MF but not VR as it is not relevant here\n        'CR'::VARCHAR as broker_code,\n        -- Start date\n        '2017-12-01'::DATE AS start_date,\n        -- End date\n        '2017-12-31'::DATE AS end_date\n)\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT t.*, (SELECT string_agg(m.loginid, ' ')\n               FROM users.loginid l\n               JOIN users.loginid m ON m.binary_user_id=l.binary_user_id\n              WHERE l.loginid=t.loginid\n                AND m.loginid ~ '^MT') AS mt_loginids\nFROM param\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN LATERAL fdw.clients_with_expired_documents(\n  ps.srvname,\n  param.broker_code,\n  param.start_date,\n  param.end_date\n) AS t\nWHERE param.broker_code = ANY(ps.broker_codes)\n""}}",Compliance > Clients with expired documents,table,,False,False,862,,Compliance Clients with expired documents,,native,,,,2019-04-09 09:40:26.318,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:07.744,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Clients with residence but no nationality\n-- By default, this report looks for clients who have their residency set, but not their nationality\n-- It provides loginid, residency, nationality (empty of course) and matching_client_status\n-- Only clients who have selected their currency will be shown\nWITH params as (\n    SELECT\n        -- CH, CR, MX, MLT, MF, JP\n        'MF'::VARCHAR             AS broker_code,\n        '{active,withdrawal_locked}'::VARCHAR[]  AS show_status_types,   -- comma separated list of 0 or more of these values: active, disabled, unwelcome, cashier_locked, withdrawal_locked\n                                                            -- examples '{disabled}', '{disabled, cashier_locked}', etc.\n        TRUE::BOOLEAN     AS nationality_unset,  -- By default we are looking for clients whose Nationality is empty. Change this to FALSE to ignore the nationality field\n        TRUE::BOOLEAN     AS residency_set       -- By default we are looking for clients with their residence set. Change this to FALSE to ignore the residency field\n)\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT dbl.*\nFROM params\nJOIN betonmarkets.production_servers_v2() AS ps ON UPPER(params.broker_code) = ANY(ps.broker_codes)\nCROSS JOIN dblink(ps.srvname, $$\n\n    SELECT\n      bc.loginid,\n      bc.residence,\n      bc.citizen,\n      cs.status\n\t\n    FROM betonmarkets.client AS bc\n    JOIN transaction.account AS ta ON ta.client_loginid = bc.loginid\n    LEFT JOIN LATERAL (\n      SELECT\n            COALESCE( STRING_AGG(status_code, ', ' ORDER BY status_code), 'active') AS status,\n            COALESCE( ARRAY_AGG(status_code), '{active}'::VARCHAR[]) status_array\n      FROM betonmarkets.client_status\n      WHERE client_loginid = bc.loginid\n      AND status_code IN ('disabled','unwelcome','cashier_locked','withdrawal_locked')\n    ) AS cs ON TRUE\n    WHERE bc.broker_code = $$|| quote_literal( UPPER(params.broker_code) ) ||$$\n    AND (COALESCE(bc.citizen,'') = '' AND $$|| CASE WHEN params.nationality_unset THEN 'TRUE'::TEXT ELSE 'FALSE' END ||$$)\n    AND (COALESCE(bc.residence,'') > '' AND $$|| CASE WHEN params.residency_set THEN 'TRUE'::TEXT ELSE 'FALSE' END ||$$)\n    AND (\n        cs.status_array && $$|| quote_literal( params.show_status_types ) ||$$::VARCHAR[]\n        OR\n        (cs.status = 'active' AND array_length($$|| quote_literal(params.show_status_types) ||$$::VARCHAR[], 1) IS NULL)\n    )\n    ORDER BY 1\n\n$$) AS dbl(\n    loginid TEXT,\n    residence TEXT,\n    citizen TEXT,\n    matching_client_status TEXT\n    );\n""}}",Compliance > Clients with residence but no nationality,table,,False,False,874,,Compliance Clients with residence but no nationality,,native,,,,2019-04-09 09:41:07.744,{}
False,,"{'id': 204, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/189/', 'personal_owner_id': None, 'slug': 'compliance'}",204.0,,2019-04-09 09:42:31.846,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Compliance > CR ICO Monitor non-EU\nWITH params AS (SELECT\n    '1970-01-01'::TIMESTAMP AS start,\n    'yesterday'::TIMESTAMP AS end,\n\n    -- list the countries you want to see\n    -- if an empty set is given ('{}') all countries are returned excluding EU (see below)\n    -- if anything other than the empty set is given, only those countries are shown.\n    -- This overrides anything set in the exclude list below\n    -- That means if you specify {de,fr,ru}, you get France, Germany and Russia no matter what.\n    '{}'\n    ::TEXT[] AS included_countries,   -- don't touch this line\n    \n    -- this is the list of EU-countries. They are excluded from this report.\n    '{at,be,bg,hr,cy,cz,dk,ee,fi,fr,de,gr,hu,ie,im,it,lt,lv,lu,nl,pl,pt,ro,sk,si,es,se,gb}'\n    ::TEXT[] AS excluded_countries   -- don't touch this line\n)\n\n\n\n\n\n\n\n\n\n\n\nSELECT loginid\n     , residence\n     , date_joined::TIMESTAMP(0)::TEXT\n     , nr_open_ico\n     , nr_closed_ico\n     , is_professional\n     , professional_requested\n  FROM dblink('cr', $$\n           WITH b AS (\n               SELECT a.client_loginid\n                    , count(f.id) AS nr_open_ico\n                    , count(fc.id) - count(f.id) AS nr_closed_ico\n                    , count(distinct sp.id)>0 AS professional\n                    , count(distinct sr.id)>0 AS professional_requested\n                 FROM bet.coinauction_bet c\n                 JOIN bet.financial_market_bet fc ON fc.id=c.financial_market_bet_id\n                 LEFT JOIN bet.financial_market_bet_open f ON f.id=c.financial_market_bet_id\n                 LEFT JOIN transaction.account a ON a.id=fc.account_id\n                 LEFT JOIN betonmarkets.client_status sp ON sp.client_loginid=a.client_loginid AND sp.status_code='professional'\n                 LEFT JOIN betonmarkets.client_status sr ON sr.client_loginid=a.client_loginid AND sr.status_code='professional_requested'\n                GROUP BY a.client_loginid\n                ORDER BY a.client_loginid\n           )\n           SELECT b.*\n                , cl.residence\n                , cl.date_joined\n             FROM b\n             JOIN betonmarkets.client cl ON b.client_loginid=cl.loginid\n       $$) dbl(loginid VARCHAR,\n               nr_open_ico BIGINT,\n               nr_closed_ico BIGINT,\n               is_professional BOOLEAN,\n               professional_requested BOOLEAN,\n               residence VARCHAR,\n               date_joined TIMESTAMP\n               )\n CROSS JOIN params\n WHERE (params.included_countries = '{}' AND dbl.residence <>ALL (params.excluded_countries)\n        OR dbl.residence =ANY (params.included_countries))\n   AND params.start <= dbl.date_joined AND date_joined < params.end + '1d'::INTERVAL\n""}}",Compliance > Compliance > CR ICO Monitor non-EU,table,,False,False,898,,Compliance Compliance CR ICO Monitor non-EU,,native,,,,2019-04-09 09:42:31.846,{}
False,,"{'id': 204, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/189/', 'personal_owner_id': None, 'slug': 'compliance'}",204.0,,2019-04-09 09:42:28.289,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Compliance > CR ICO Signup Monitor\nWITH params AS (SELECT\n\t'2017-11-01'::TIMESTAMP AS start,\n\t'yesterday'::TIMESTAMP AS end,\n  -- list the countries you want to see\n  -- if an empty set is given ('{}') all countries are returned including a few non-EU\n \t'{at,be,bg,hr,cy,cz,dk,ee,fi,fr,de,gr,hu,ie,im,it,lt,lv,lu,nl,pl,pt,ro,sk,si,es,se,gb}'\n \t::TEXT[] AS countries   -- don't touch this line\n)\n\n\n\n\n\n\n\n\n\n\n\nSELECT l.loginid AS cr_loginid,\n       string_agg(m.loginid, ', ') AS regulated_loginid,\n       ico_only.residence,\n       l.creation_stamp::TIMESTAMP(0)::TEXT,\n       ico_only.has_ico,\n       ico_only.funded,\n       ico_only.cr_prof AS cr_prof_status,\n       string_agg(m_prof.prof_status, ', ') AS reg_prof_status\n  FROM params\n CROSS JOIN users.loginid l\n  JOIN dblink('cr', $$\n           SELECT c.loginid,\n                  c.residence,\n                  exists(SELECT *\n                           FROM bet.financial_market_bet_open b\n                           JOIN bet.coinauction_bet ca\n                             ON ca.financial_market_bet_id=b.id\n                          WHERE b.account_id=a.id) AS has_ico,\n                  exists(SELECT *\n                           FROM transaction.transaction t\n                          WHERE t.account_id=a.id\n                            AND t.action_type='deposit') AS funded,\n                  (SELECT string_agg(cs.status_code, ', ')\n                     FROM betonmarkets.client_status cs\n                    WHERE cs.client_loginid=c.loginid\n                      AND cs.status_code IN ('professional','professional_requested')) AS cr_prof\n             FROM betonmarkets.client_status s\n             JOIN betonmarkets.client c ON c.loginid=s.client_loginid\n             LEFT JOIN transaction.account a ON a.client_loginid=c.loginid\n            WHERE s.status_code='ico_only'\n       $$) ico_only(\n               loginid VARCHAR,\n               residence VARCHAR,\n               has_ico BOOLEAN,\n               funded BOOLEAN,\n               cr_prof VARCHAR)\n    ON ico_only.loginid=l.loginid\n  LEFT JOIN users.loginid m ON m.binary_user_id=l.binary_user_id AND m.loginid ~ '^(MX|MF|MLT)'\n  LEFT JOIN (SELECT dbl.client_loginid, string_agg(dbl.status_code, ', ') AS prof_status\n               FROM (VALUES ('mf'), ('mlt'), ('mx')) rem(rem)\n              CROSS JOIN dblink(rem.rem, $$\n                        SELECT client_loginid,\n                               status_code\n                          FROM betonmarkets.client_status\n                         WHERE status_code IN ('professional','professional_requested')\n                    $$) dbl(client_loginid VARCHAR, status_code VARCHAR)\n              GROUP BY 1\n            ) m_prof ON m_prof.client_loginid=m.loginid\n WHERE params.start <= l.creation_stamp AND l.creation_stamp < params.end + '1d'::INTERVAL\n   AND l.loginid ~ '^CR'\n   AND (params.countries = '{}' OR ico_only.residence = ANY(params.countries))\n GROUP BY 1,3,4,5,6,7\n ORDER BY l.loginid\n""}}",Compliance > Compliance > CR ICO Signup Monitor,table,,False,False,897,,Compliance Compliance CR ICO Signup Monitor,,native,,,,2019-04-09 09:42:28.289,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:04.388,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Compliance > CR-MT5 with expired documents\n-- this report will only display CR clients who have MT5 accounts still registered in the MT5 backup system\n-- you may see more MT5 login IDs in BO, but they are phantoms\nWITH params as (\n    SELECT\n        -- CH, CR, JP, MX, MLT, MF but not VR as it is not relevant here\n        \'CR\'::VARCHAR as broker_code,\n        -- Start date\n        \'2017-12-01\'::DATE AS start_date, -- expiration dates before this will be ignored\n        -- End date\n        \'2017-12-31\'::DATE AS end_date    -- expiration dates after this will be ignored\n        -- if you want all expired regardless of the date, then put 1970-01-01 as your start_date and the current date for your end_date\n)\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT dbl.*,\n  string_agg(ulmt.loginid ||\' - \'|| mt5u.""Group"" ||\' - \'|| mt5u.""Registration""::DATE, \' ## \' ORDER BY mt5u.""Registration"" DESC) AS ""MT5_logins""\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink(ps.srvname, $$\n    WITH clients AS (\n          SELECT\n            c.loginid,\n            c.date_joined,\n            (c.first_name || \' \' || c.last_name) AS name,\n            c.address_line_1,\n            c.address_line_2,\n            c.address_city,\n            c.address_state AS state,\n            c.address_postcode AS postcode,\n            c.residence,\n            c.citizen,\n            c.aml_risk_classification\n          FROM betonmarkets.client AS c\n          JOIN betonmarkets.client_authentication_document AS d\n            ON d.client_loginid = c.loginid\n          WHERE c.broker_code = $$ || quote_literal( params.broker_code ) || $$\n            AND d.expiration_date IS NOT NULL\n            GROUP BY c.loginid\n            HAVING \n                MAX(d.expiration_date) >= $$ || quote_literal( params.start_date ) || $$::TIMESTAMP\n                AND\n                MAX(d.expiration_date)  < $$ || quote_literal( params.end_date )   || $$::TIMESTAMP + \'1 day\'::INTERVAL\n        ),\n\n    sts AS (\n          SELECT\n              client_loginid,\n              bool_or(status_code = \'disabled\') AS disabled,\n              bool_or(status_code = \'unwelcome\') AS unwelcome\n          FROM betonmarkets.client_status AS bcs\n          JOIN clients ON clients.loginid=bcs.client_loginid\n          GROUP BY bcs.client_loginid\n    ),\n\n    last_auth_doc AS (\n          SELECT\n              cad.client_loginid,\n              last(cad.expiration_date ORDER BY expiration_date) as expiration_date\n          FROM betonmarkets.client_authentication_document AS cad\n          JOIN clients ON clients.loginid=cad.client_loginid\n          GROUP BY cad.client_loginid\n    )\n\n    SELECT\n        clients.*,\n        d.expiration_date::DATE,\n        sts.disabled,\n        sts.unwelcome\n    FROM clients\n\n    LEFT JOIN sts\n        ON sts.client_loginid = clients.loginid\n    LEFT JOIN last_auth_doc AS d\n        ON d.client_loginid = clients.loginid\n\n$$) AS dbl (\n    loginid TEXT,\n    date_joined DATE,\n    name TEXT,\n    address_line_1 TEXT,\n    address_line_2 TEXT,\n    address_city TEXT,\n    state TEXT,\n    postcode TEXT,\n    residence TEXT,\n    citizen TEXT,\n    aml_risk_classification TEXT,\n    expiration_date TEXT,\n    disabled BOOLEAN,\n    unwelcome BOOLEAN)\nJOIN users.loginid AS ulcr ON ulcr.loginid = dbl.loginid\nJOIN users.loginid AS ulmt ON ulmt.binary_user_id=ulcr.binary_user_id AND ulmt.loginid LIKE \'MT%\'\nJOIN mt5.mt5_users AS mt5u ON \'MT\' || mt5u.""Login""::TEXT = ulmt.loginid\nWHERE params.broker_code = ANY(ps.broker_codes)\nGROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14\nORDER BY 1;\n'}}",Compliance > CR-MT5 with expired documents,table,,False,False,873,,Compliance CR-MT5 with expired documents,,native,,,,2019-04-09 09:41:04.388,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:52.710,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > CRS - Individuals List\n-- This report looks for clients who performed one of the txn_activity_triggers during the specified interval\n-- Besides a number of client details, this report provides the newest txn time within the interval, the balance after that transaction\n-- as well as their balance at the close of eom_for_acct_balance date and their currency_code\nWITH params as (\n    SELECT\n        -- CH, CR, MX, MLT, MF, VR or other broker codes except MT (MT5)\n        'MF'::VARCHAR as broker_code,\n        \n        -- Start date (balances that changed before this date will not be included)\n        '2017-12-01'::DATE AS start_date,\n        \n        -- End date (date is inclusive)\n        '2017-12-31'::DATE AS end_date,\n        \n        'buy, sell, deposit, withdraw'::TEXT AS txn_activity_triggers,  -- one or more of buy, sell, deposit, withdraw\n        \n        '2017-12-31'::DATE AS eom_for_acct_balance  -- the day ending whatever period for obtaining the then current balance\n)\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT dbl.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2(TRUE) AS ps\nCROSS JOIN dblink(ps.srvname,\n    $$\n        WITH tr AS (SELECT string_to_array(regexp_replace($$|| quote_nullable(params.txn_activity_triggers) ||$$, '\\s', '', 'g'), ',') AS trigs)\n        SELECT\n            bc.loginid,\n            bc.first_name,\n            bc.last_name,\n            bc.tax_residence,\n            bc.tax_identification_number,\n            bc.date_of_birth,\n            bc.place_of_birth,\n            bc.address_line_1,\n            bc.address_line_2,\n            bc.address_postcode,\n            bc.address_city,\n            bc.address_state,\n            bc.residence,\n            cs.status,\n            tt.action_type,\n            tt.transaction_time::TIMESTAMP(0) AS transaction_time,\n            transaction.round_amount(ta.currency_code, tt.balance_after) AS balance_after,\n            transaction.round_amount(ta.currency_code, eomb.balance_after) AS eom_balance,\n            ta.currency_code,\n            transaction.round_amount(ta.currency_code, ta.balance) AS current_balance\n\n        FROM tr\n        CROSS JOIN transaction.account AS ta\n        JOIN betonmarkets.client AS bc\n             ON bc.loginid = ta.client_loginid\n        JOIN (\n                SELECT DISTINCT ON (ta.client_loginid) ta.client_loginid, tt.balance_after\n                FROM transaction.account AS ta\n                JOIN transaction.transaction AS tt ON ta.id = tt.account_id\n                ORDER BY ta.client_loginid, tt.transaction_time DESC\n        ) AS eomb ON eomb.client_loginid = bc.loginid\n        JOIN LATERAL (\n        \tSELECT\n        \t    tt.staff_loginid,\n        \t    tt.action_type,\n        \t    tt.balance_after,\n        \t    tt.transaction_time\n        \tFROM transaction.transaction AS tt\n        \tWHERE tt.account_id = ta.id\n        \t  AND tt.staff_loginid = ta.client_loginid\n        \t  AND tt.transaction_time >= $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n              AND tt.transaction_time <  $$|| quote_nullable(params.end_date) ||$$::TIMESTAMP + '1d'::INTERVAL\n              AND ARRAY[tt.action_type::TEXT] && tr.trigs\n            ORDER BY tt.transaction_time DESC LIMIT 1\n        ) AS tt ON TRUE\n        LEFT JOIN LATERAL (\n           SELECT string_agg(status_code, ', ') AS status\n             FROM betonmarkets.client_status\n            WHERE client_loginid = bc.loginid\n              AND status_code IN ('disabled','unwelcome','cashier_locked')\n        ) AS cs ON TRUE\n        \n        WHERE bc.broker_code = $$|| quote_nullable(params.broker_code) ||$$\n        ORDER BY 1\n    $$\n) AS dbl (\n        loginid TEXT,\n\tfirst_name TEXT,\n\tlast_name TEXT,\n\ttax_residence TEXT,\n        tax_identification_number TEXT,\n\tdate_of_birth DATE,\n\tplace_of_birth TEXT,\n\taddress_line_1 TEXT,\n\taddress_line_2 TEXT,\n\tpostcode TEXT,\n\taddress_city TEXT,\n\taddress_state TEXT,\n\tresidence TEXT,\n        client_special_status TEXT,\n        txn_type TEXT,\n        transaction_time TEXT,\n        balance_after NUMERIC,\n        eom_balance NUMERIC,\n        currency_code TEXT,\n        current_balance NUMERIC\n)\n  \nWHERE params.broker_code = ANY(ps.broker_codes);""}}",Compliance > CRS - Individuals List,table,,False,False,887,,Compliance CRS - Individuals List,,native,,,,2019-04-09 09:41:52.710,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:40:57.544,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- an evaluation version only which includes pnl and properly applies eom_for_acct_balance\n-- Compliance > CRS - Individuals List -v2\n-- This report looks for clients who performed one of the txn_activity_triggers during the specified interval\n-- Besides a number of client details, this report provides the newest txn time within the interval, the balance after that transaction\n-- as well as their balance at the close of eom_for_acct_balance date and their currency_code\nWITH params as (\n    SELECT\n        -- CH, CR, MX, MLT, MF, VR or other broker codes except MT (MT5)\n        'MF'::VARCHAR as broker_code,\n        \n        -- Start date (balances that changed before this date will not be included)\n        '2019-01-01'::DATE AS start_date,\n        \n        -- End date (date is inclusive)\n        '2019-01-31'::DATE AS end_date,\n        \n        'buy, sell, deposit, withdraw'::TEXT AS txn_activity_triggers,  -- one or more of buy, sell, deposit, withdraw\n        \n        '2019-01-31'::DATE AS eom_for_acct_balance  -- the day ending whatever period for obtaining the then current balance\n)\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT dbl.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2(TRUE) AS ps\nCROSS JOIN dblink(ps.srvname,\n    $$\n        WITH tr AS (SELECT string_to_array(regexp_replace($$|| quote_nullable(params.txn_activity_triggers) ||$$, '\\s', '', 'g'), ',') AS trigs)\n        SELECT\n            bc.loginid,\n            bc.first_name,\n            bc.last_name,\n            bc.tax_residence,\n            bc.tax_identification_number,\n            bc.date_of_birth,\n            bc.place_of_birth,\n            bc.address_line_1,\n            bc.address_line_2,\n            bc.address_postcode,\n            bc.address_city,\n            bc.address_state,\n            bc.residence,\n            cs.status,\n            tt.action_type,\n            tt.transaction_time::TIMESTAMP(0) AS transaction_time,\n            transaction.round_amount(ta.currency_code, tt.balance_after) AS balance_after,\n            transaction.round_amount(ta.currency_code, pnl.pnl) AS pnl,\n            transaction.round_amount(ta.currency_code, eomb.balance_after) AS eom_balance,\n            ta.currency_code,\n            transaction.round_amount(ta.currency_code, ta.balance) AS current_balance\n\n        FROM tr\n        CROSS JOIN transaction.account AS ta\n        JOIN betonmarkets.client AS bc\n             ON bc.loginid = ta.client_loginid\n        JOIN (\n                SELECT DISTINCT ON (ta.client_loginid)\n                    ta.client_loginid,\n                    tt.balance_after\n                FROM transaction.account AS ta\n                JOIN transaction.transaction AS tt ON ta.id = tt.account_id\n                WHERE tt.transaction_time < $$|| quote_nullable(params.eom_for_acct_balance) ||$$::TIMESTAMP + '1d'::INTERVAL\n                ORDER BY ta.client_loginid, tt.transaction_time DESC, tt.id DESC\n        ) AS eomb ON eomb.client_loginid = bc.loginid\n        JOIN LATERAL (\n        \tSELECT\n        \t    tt.staff_loginid,\n        \t    tt.action_type,\n        \t    tt.balance_after,\n        \t    tt.transaction_time\n        \tFROM transaction.transaction AS tt\n        \tWHERE tt.account_id = ta.id\n        \t  AND tt.staff_loginid = ta.client_loginid\n        \t  AND tt.transaction_time >= $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n              AND tt.transaction_time <  $$|| quote_nullable(params.end_date) ||$$::TIMESTAMP + '1d'::INTERVAL\n              AND ARRAY[tt.action_type::TEXT] && tr.trigs\n            ORDER BY tt.transaction_time DESC LIMIT 1\n        ) AS tt ON TRUE\n        LEFT JOIN LATERAL (\n           SELECT string_agg(status_code, ', ') AS status\n             FROM betonmarkets.client_status\n            WHERE client_loginid = bc.loginid\n              AND status_code IN ('disabled','unwelcome','cashier_locked')\n        ) AS cs ON TRUE\n        LEFT JOIN LATERAL (\n            SELECT SUM(amount) AS pnl\n            FROM transaction.transaction\n            WHERE account_id = ta.id\n            AND action_type IN ('buy','sell')\n            AND transaction_time >= $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n            AND transaction_time <  $$|| quote_nullable(params.end_date) ||$$::TIMESTAMP + '1d'::INTERVAL\n        ) AS pnl ON TRUE\n        WHERE bc.broker_code = $$|| quote_nullable(params.broker_code) ||$$\n        ORDER BY 1\n    $$\n) AS dbl (\n        loginid TEXT,\n\tfirst_name TEXT,\n\tlast_name TEXT,\n\ttax_residence TEXT,\n        tax_identification_number TEXT,\n\tdate_of_birth DATE,\n\tplace_of_birth TEXT,\n\taddress_line_1 TEXT,\n\taddress_line_2 TEXT,\n\tpostcode TEXT,\n\taddress_city TEXT,\n\taddress_state TEXT,\n\tresidence TEXT,\n        client_special_status TEXT,\n        txn_type TEXT,\n        transaction_time TEXT,\n        balance_after NUMERIC,\n        pnl NUMERIC,\n        eom_balance NUMERIC,\n        currency_code TEXT,\n        current_balance NUMERIC\n)\n  \nWHERE params.broker_code = ANY(ps.broker_codes);\n""}}",an evaluation version only which includes pnl and properly applies eom_for_acct_balance,table,,False,False,871,,Compliance CRS - Individuals List -v2,,native,,,,2019-04-09 09:40:57.544,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:42:06.646,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Datatracks MiFIR reporting\nWITH params AS (SELECT\n  '2018-06-01'::DATE AS start_date, -- equivalent to beginning of the day\n  '2018-06-01'::DATE AS end_date    -- equivalent to end of the day\n)\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\n\n\n\n\n\n\n\nSELECT * FROM mfirmfsa_report(\n    (SELECT start_date FROM params),\n    (SELECT end_date FROM params)\n);""}}",Compliance > Datatracks MiFIR reporting,table,,False,False,891,,Compliance Datatracks MiFIR reporting,,native,,,,2019-04-09 09:42:06.646,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:21.418,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > High Risk during interval\nWITH params as (\n    SELECT\n        -- CH, CR, JP, MX, MLT, MF but not VR as it is not relevant here\n        'JP'::VARCHAR as broker_code,\n        -- Start date\n        '2017-10-01'::DATE AS start_date,\n        -- End date\n        '2017-12-31'::DATE AS end_date\n)\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT\n  params.broker_code,\n  dbl.high_risk_cnt AS high_risk_during_interval\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink(ps.srvname, $$\n  SELECT count(DISTINCT ac.loginid)\n  FROM audit.client AS ac\n  JOIN betonmarkets.client bc ON bc.loginid = ac.loginid\n  WHERE ac.aml_risk_classification = 'high'\n  AND $$|| quote_nullable( params.start_date ) ||$$::TIMESTAMP <= ac.stamp\n  AND ac.stamp < $$|| quote_nullable( params.end_date ) ||$$::TIMESTAMP + INTERVAL '1 day'\n  AND bc.broker_code = $$|| quote_nullable( params.broker_code ) ||$$\n$$) dbl(high_risk_cnt BIGINT)\nWHERE params.broker_code = ANY(ps.broker_codes);\n""}}",Compliance > High Risk during interval,table,,False,False,878,,Compliance High Risk during interval,,native,,,,2019-04-09 09:41:21.417,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:31.896,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- version 2\n-- Compliance > High Risk Report\nWITH params AS (SELECT\n  \'MX\'::VARCHAR AS broker_code, -- one of CR, CH, MF, MLT, MX, JP or other broker codes\n  \n  -- The following are currently your options for aml_risk. Choose 0 or more by just deleting unwanted ones -and- the next comma\n  --\'{ ""low"", ""standard"", ""high"", ""manual override - low"", ""manual override - standard"", ""manual override - high"" }\'\n  \'{ ""low"", ""standard"", ""high"", ""manual override - low"", ""manual override - standard"", ""manual override - high"" }\'::VARCHAR[] AS aml_risk_type,\n  \n  -- TRUE / FALSE / NULL = made a deposit / did not make a deposit / deposit status ignored\n  ( TRUE )::BOOLEAN AS made_deposit\n)\n\n\n-- Do not touch any code below here\n\nSELECT dbl.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN LATERAL dblink(ps.srvname, $$\nSELECT\n\tbc.loginid,\n\tbc.first_name,\n\tbc.last_name,\n\tbc.residence,\n\tta.balance,\n\tta.currency_code,\n\tbc.aml_risk_classification,\n\tCASE WHEN bcs.status_code IS NOT NULL THEN TRUE::BOOLEAN ELSE FALSE END AS disabled,\n\tbc.date_joined\n\nFROM betonmarkets.client AS bc\nJOIN transaction.account AS ta\n\tON ta.client_loginid = bc.loginid\n$$|| CASE WHEN params.made_deposit IS NOT NULL THEN \'\nLEFT JOIN LATERAL (\n\tSELECT DISTINCT TRUE AS has_dep FROM payment.payment WHERE amount > 0 AND account_id = ta.id\n) AS deps ON TRUE\'\nELSE \'\' END ||$$\nLEFT JOIN betonmarkets.client_status AS bcs\n\tON bcs.client_loginid = bc.loginid\n  AND bcs.status_code = \'disabled\'\nWHERE bc.broker_code = $$|| quote_literal(params.broker_code) ||$$\n$$|| CASE WHEN array_length(params.aml_risk_type, 1) > 0 THEN\n      \'AND bc.aml_risk_classification = ANY(\'|| quote_literal(params.aml_risk_type) ||\')\'\n     ELSE \'\' END ||$$\n     \n-- the logic here is that if we specified either true or false, then we need to evaluate against something, but the left join above will be empty if they don\'t have a deposit\n$$|| CASE WHEN params.made_deposit IS NOT NULL THEN\n      \'AND COALESCE(deps.has_dep, FALSE) = \' || params.made_deposit\n     ELSE \'\' END ||$$\n\n$$) AS dbl (\n\tloginid VARCHAR,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tresidence VARCHAR,\n\tbalance NUMERIC,\n\tcurrency_code VARCHAR,\n\taml_risk_classification VARCHAR,\n\tdisabled BOOLEAN,\n\tdate_joined TIMESTAMP)\n\t\nWHERE params.broker_code = ANY (ps.broker_codes);'}}",version 2,table,,False,False,881,,Compliance High Risk Report,,native,,,,2019-04-09 09:41:31.896,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:24.826,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- only a starting point\n-- Compliance > Market Abuse Regulations\nWITH params as (SELECT\n        -- Start date\n        \'2019-01-10\'::DATE AS start_date,\n        \n        -- End date\n        \'2019-01-12\'::DATE AS end_date\n)\n\nSELECT d.*\nFROM params\nCROSS JOIN dblink(\'mt5\', $$\nSELECT deals.""Login"" AS Login,\n    users.""Group"" AS Maltainvest_Group, \n    deals.""Time"" AS Transaction_Time, \n    deals.""Symbol"" AS Symbol,\n    deals.""Entry"" AS Open_Trade_0_and_Close_Trade_1, \n    deals.""Action"" AS BUY_Trade_0_and_SELL_Trade_1,\n    (deals.""Volume""/10000) AS Volume_in_lots, \n    deals.""Profit"" AS Profit, deals.""Storage"" AS Swaps\nFROM mt5_deals_2019 AS deals\nJOIN mt5_users users ON deals.""Login"" = users.""Login""\nWhere\n    deals.""Symbol"" IN (\'DAX_30\')\nand\n    users.""Group"" LIKE \'%maltainvest%\'\nand deals.""Action"" IN (0,1)\nand deals.""Time"" >= $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\nAND deals.""Time""  < $$|| quote_nullable(params.end_date) ||$$::TIMESTAMP\n\n$$) d (\n    login BIGINT,\n    malta_invest_group TEXT,\n    transaction_time TEXT,\t-- text makes it more readable in Jack\n    symbol TEXT,\n    Open_Trade_0_and_Close_Trade_1 BIGINT,\n    BUY_Trade_0_and_SELL_Trade_1 BIGINT,\n    volume_in_lots BIGINT,\n    profit NUMERIC,\n    swaps BIGINT\n)'}}",only a starting point,table,,False,False,879,,Compliance Market Abuse Regulations,,native,,,,2019-04-09 09:41:24.826,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:42:03.355,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > MF professional status report\n-- To monitor clients with some form of professional status change within an interval\n-- This report runs against MF only\nWITH params AS (SELECT\n  '2017-10-01'::DATE AS start_date,\n  '2017-12-31'::DATE AS end_date\n)\n\nSELECT\n    t.*\nFROM params\nCROSS JOIN dblink('mf', $$\n\n    SELECT\n        bc.date_joined::DATE AS date_joined,\n        COALESCE(cs.status, 'active') AS status,\n        cs.reason,\n        bc.loginid,\n        bc.first_name,\n        bc.last_name,\n        bc.date_of_birth,\n        bc.place_of_birth,\n        bc.citizen,\n        bc.mifir_id,\n        bc.residence,\n        bc.tax_residence,\n        bc.tax_identification_number,\n        bc.address_line_1 || ', ' || bc.address_line_2 || ', ' || bc.address_city || ', ' || bc.address_state || ', ' || bc.address_postcode AS address,\n        transaction.round_amount(ta.currency_code, ta.balance) AS balance,\n        ta.currency_code,\n        bc.aml_risk_classification::TEXT as aml_risk_classification,\n        ps.status_code AS professional_status,\n        ps.last_modified_date AS prof_status_stamp,\n        ps.reason AS prof_notes,\n        ps.staff_name AS prof_by_whom\n\n    FROM betonmarkets.client_status AS ps\n    JOIN betonmarkets.client AS bc ON ps.client_loginid = bc.loginid\n    LEFT JOIN transaction.account AS ta\n        ON ta.client_loginid = bc.loginid\n\n    LEFT JOIN\n        (\n            SELECT\n                client_loginid,\n                string_agg(status_code, ' \\\\ ' ORDER BY status_code) AS status,\n                string_agg(reason, ' \\\\ ' ORDER BY status_code) AS reason\n            FROM\n                betonmarkets.client_status\n            WHERE\n                status_code IN ('cashier_locked', 'disabled', 'unwelcome', 'withdrawal_locked')\n            GROUP BY 1\n        ) AS cs ON cs.client_loginid = bc.loginid\n\n    WHERE\n        bc.broker_code = 'MF'\n-- in practice, only one of these codes exists at any given time\nAND ps.status_code IN ('professional','professional_requested')\n    AND ps.last_modified_date >= $$ || quote_literal( params.start_date ) || $$::TIMESTAMP\n    AND ps.last_modified_date <  $$ || quote_literal( params.end_date ) || $$::TIMESTAMP + INTERVAL '1 day'\n\n$$) AS t(\n    date_joined DATE,\n    status TEXT,\n    reason TEXT,\n    loginid TEXT,\n    first_name TEXT,\n    last_name TEXT,\n    date_of_birth DATE,\n    place_of_birth TEXT,\n    citizen TEXT,\n    mifir_id TEXT,\n    residence TEXT,\n    tax_residence TEXT,\n    tax_identification_number TEXT,\n    address TEXT,\n    balance NUMERIC,\n    currency_code TEXT,\n    aml_risk_classification TEXT,\n    professional_status TEXT,\n    prof_status_stamp TEXT,\n    prof_notes TEXT,\n    prof_by_whom TEXT\n    )\nORDER BY prof_status_stamp;""}}",Compliance > MF professional status report,table,,False,False,890,,Compliance MF professional status report,,native,,,,2019-04-09 09:42:03.355,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:42:17.029,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > MF signups report\n-- To monitor new joins within an interval and the relevant authentication information\n-- This report runs against MF only\nWITH params AS (SELECT\n  '2017-07-01'::DATE AS start_date,\n  '2017-09-30'::DATE AS end_date\n)\n\nSELECT\n    t.*\nFROM params\nCROSS JOIN dblink('mf', $$\n\n    SELECT\n        c.date_joined::DATE AS date_joined,\n        COALESCE(cs.status, 'active') AS status,\n        cs.reason,\n        c.loginid,\n        c.first_name,\n        c.last_name,\n        c.date_of_birth,\n        c.place_of_birth,\n        c.citizen,\n        c.mifir_id,\n        c.residence,\n        c.tax_residence,\n        c.tax_identification_number,\n        c.address_line_1 || ', ' || c.address_line_2 || ', ' || c.address_city || ', ' || c.address_state || ', ' || c.address_postcode AS address,\n        ta.balance,\n        ta.currency_code,\n        c.aml_risk_classification::TEXT as aml_risk_classification\n\n    FROM\n        betonmarkets.client AS c\n    LEFT JOIN transaction.account AS ta\n        ON ta.client_loginid = c.loginid\n\n    LEFT JOIN\n        (\n            SELECT\n                client_loginid,\n                string_agg(status_code, ' \\\\ ' ORDER BY status_code) AS status,\n                string_agg(reason, ' \\\\ ' ORDER BY status_code) AS reason\n            FROM\n                betonmarkets.client_status cs\n            WHERE\n                status_code IN ('cashier_locked', 'disabled', 'unwelcome', 'withdrawal_locked')\n            GROUP BY 1\n        ) AS cs ON cs.client_loginid = c.loginid\n\n    WHERE\n        c.broker_code = 'MF'\n    AND c.date_joined >= $$ || quote_literal( params.start_date ) || $$::TIMESTAMP\n    AND c.date_joined <  $$ || quote_literal( params.end_date ) || $$::TIMESTAMP + INTERVAL '1 day'\n\n$$) AS t(\n    date_joined DATE,\n    status TEXT,\n    reason TEXT,\n    loginid TEXT,\n    first_name TEXT,\n    last_name TEXT,\n    date_of_birth DATE,\n    place_of_birth TEXT,\n    citizen TEXT,\n    mifir_id TEXT,\n    residence TEXT,\n    tax_residence TEXT,\n    tax_identification_number TEXT,\n    address TEXT,\n    balance NUMERIC,\n    currency_code TEXT,\n    aml_risk_classification TEXT\n    );""}}",Compliance > MF signups report,table,,False,False,894,,Compliance MF signups report,,native,,,,2019-04-09 09:42:17.029,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:56.367,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Compliance > MiFIR instrument list\n-- These are the only symbols we are reporting to MFSA via Datatracks\n-- Those with an underlying id = N/A are *not* reported\nSELECT * FROM test.mifir_codes\nORDER BY 4'}}",Compliance > MiFIR instrument list,table,,False,False,888,,Compliance MiFIR instrument list,,native,,,,2019-04-09 09:41:56.367,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:28.226,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Compliance > MT5 - MF - Profitability Analysis\n-- profit figures are converted to EUR\nWITH params AS (SELECT\n  \'2018-08-01\'::DATE AS start_date,\n  \'2018-10-31\'::DATE AS end_date\n),\ndeals AS (\n  SELECT\n    deals.Login,\n    deals.Time,\n    deals.Profit,\n    deals.Symbol,\n    deals.Commission,\n    deals.Storage AS Swap,\n    users.Country,\n    grp.Currency\n  FROM mt5.mt5_deals_2018 AS deals\n  JOIN mt5.mt5_users AS users ON users.Login = deals.Login\n  JOIN mt5.mt5_groups AS grp ON grp.Group = users.Group\n  CROSS JOIN params\n  WHERE deals.Action IN (0,1)\n    and deals.Time >= quote_nullable(params.start_date)::TIMESTAMP\n    and deals.Time  < quote_nullable(params.end_date)::TIMESTAMP + \'1d\'::INTERVAL\n    and users.Group LIKE \'%real\\\\maltainvest%\'\n),\nhas_crypto AS (\n    SELECT DISTINCT login, TRUE::BOOLEAN AS crypto_client\n    FROM deals\n    WHERE symbol LIKE \'%mf\'\n),\naggs AS (\n  SELECT\n    LEFT(deals.Time::TEXT, 7) AS Month,\n    deals.Country,\n    deals.Login,\n    COALESCE(has_crypto.crypto_client, FALSE) AS crypto_client,\n    \n    SUM(deals.Profit * frmACC.rate / toEUR.rate) As Total_Profit,\n    SUM(deals.Commission * frmACC.rate / toEUR.rate) As Total_Commission,\n    SUM(deals.Swap * frmACC.rate / toEUR.rate) As Total_Swaps,\n    \n    SUM(deals.Profit * frmACC.rate / toEUR.rate) FILTER (WHERE has_crypto.crypto_client) AS Total_Profit_crypto,\n    SUM(deals.Commission * frmACC.rate / toEUR.rate) FILTER (WHERE has_crypto.crypto_client) AS Total_Commission_crypto,\n    SUM(deals.Swap * frmACC.rate / toEUR.rate) FILTER (WHERE has_crypto.crypto_client) AS Total_Swaps_crypto,\n    \n    SUM(deals.Profit * frmACC.rate / toEUR.rate) FILTER (WHERE has_crypto.login IS NULL) AS Total_Profit_non_crypto,\n    SUM(deals.Commission * frmACC.rate / toEUR.rate) FILTER (WHERE has_crypto.login IS NULL) AS Total_Commission_non_crypto,\n    SUM(deals.Swap * frmACC.rate / toEUR.rate) FILTER (WHERE has_crypto.login IS NULL) AS Total_Swaps_non_crypto\n    \n  FROM deals\n  LEFT JOIN has_crypto ON has_crypto.login = deals.Login\n  JOIN data_collection.exchangeToUSD_rate(\'EUR\', deals.""time"") AS toEUR ON TRUE\n  JOIN data_collection.exchangeToUSD_rate(deals.Currency, deals.""time"") AS frmACC ON TRUE\n  GROUP BY 1,2,3,4\n)\n\nSELECT\n  Month,\n  Country,\n  Count(Login) AS Total_Clients,\n  COUNT(Login) FILTER (WHERE crypto_client) AS total_crypto_clients,\n  COUNT(Login) FILTER (WHERE NOT crypto_client) AS total_non_crypto_clients,\n  SUM(CASE WHEN ((Total_Profit + Total_Commission + Total_Swaps) > 0) THEN 1 ELSE 0 END) AS Profitable_Clients,\n  SUM(CASE WHEN ((Total_Profit + Total_Commission + Total_Swaps) > 0) THEN 1 ELSE 0 END) FILTER (WHERE crypto_client) AS Profitable_crypto_Clients,\n  SUM(CASE WHEN ((Total_Profit + Total_Commission + Total_Swaps) > 0) THEN 1 ELSE 0 END) FILTER (WHERE NOT crypto_client) AS Profitable_non_crypto_Clients,\n  transaction.round_amount(\'EUR\', SUM(Total_Profit)::NUMERIC) AS profit_excluding,\n  transaction.round_amount(\'EUR\', SUM(Total_Profit + Total_Swaps + Total_Commission)::NUMERIC) AS profit_including,\n  transaction.round_amount(\'EUR\', SUM(Total_Profit_crypto)::NUMERIC) AS crypto_profit_excluding,\n  transaction.round_amount(\'EUR\', SUM(Total_Profit_crypto + Total_Swaps_crypto + Total_Commission_crypto)::NUMERIC) AS crypto_profit_including,\n  transaction.round_amount(\'EUR\', SUM(Total_Profit_non_crypto)::NUMERIC) AS non_crypto_profit_excluding,\n  transaction.round_amount(\'EUR\', SUM(Total_Profit_non_crypto + Total_Swaps_non_crypto + Total_Commission_non_crypto)::NUMERIC) AS non_crypto_profit_including\nFROM aggs\nGROUP BY 1,2\nORDER BY 1,2'}}",Compliance > MT5 - MF - Profitability Analysis,table,,False,False,880,,Compliance MT5 - MF - Profitability Analysis,,native,,,,2019-04-09 09:41:28.226,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:40:40.326,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Compliance > New signups with MT5\n-- To monitor new joins within an interval and the associated MT5 accounts\n-- NOTES: the balance_usd value is based upon the exchange rate at the moment\nWITH params AS (SELECT\n  \'2018-06-01\'::DATE AS start_date,\n  \'2018-11-10\'::DATE AS end_date,\n  \'MF\'::VARCHAR AS broker_code -- CH, CR, MX, MLT, MF\n)\n\nSELECT\n    dbl.*,\n    ull.history_date::DATE AS last_login,\n    string_agg(ulmt.loginid ||\' - \'|| mt5u.""group"" ||\' - \'|| mt5u.Registration::DATE, \' ## \' ORDER BY mt5u.Registration DESC) AS ""MT5_logins""\nFROM params\nJOIN betonmarkets.production_servers_v2() AS ps ON params.broker_code = ANY(ps.broker_codes)\nCROSS JOIN dblink(ps.srvname, $$\n\n    SELECT\n        c.loginid,\n        c.date_joined::DATE AS date_joined,\n        c.residence,\n        c.citizen,\n        c.place_of_birth,\n        c.date_of_birth,\n        c.email,\n        c.phone,\n        c.address_line_1 || \', \' || c.address_line_2 || \', \' || c.address_city || \', \' || c.address_state || \', \' || c.address_postcode AS address,\n        data_collection.exchangetousd(ta.balance, ta.currency_code) AS balance_usd,\n        COALESCE(cs.status, \'active\') AS status,\n        fa.data,\n        CASE WHEN cam.status = \'pass\' AND cam.authentication_method_code = \'ID_NOTARIZED\'\n             THEN \'notarized\'\n             WHEN cam.status = \'pass\' AND cam.authentication_method_code = \'ID_DOCUMENT\'\n             THEN \'scans\'\n             ELSE coalesce(cam.status, \'no\')\n        END AS authentication_status\n\n    FROM\n        betonmarkets.client AS c\n    LEFT JOIN transaction.account AS ta\n        ON ta.client_loginid = c.loginid\n    LEFT JOIN betonmarkets.financial_assessment AS fa\n        ON fa.client_loginid = c.loginid\n    LEFT JOIN\n        (\n            SELECT\n                client_loginid,\n                string_agg(status_code, \' \\\\ \' ORDER BY status_code) AS status,\n                string_agg(reason, \' \\\\ \' ORDER BY status_code) AS reason\n            FROM\n                betonmarkets.client_status cs\n            WHERE\n                status_code IN (\'cashier_locked\', \'disabled\', \'unwelcome\', \'withdrawal_locked\')\n            GROUP BY 1\n        ) AS cs ON cs.client_loginid = c.loginid\n    LEFT JOIN betonmarkets.client_authentication_method AS cam\n        ON cam.client_loginid = c.loginid\n\n    WHERE\n        c.broker_code = \'MF\'\n    AND c.date_joined >= $$ || quote_literal( params.start_date ) || $$::TIMESTAMP\n    AND c.date_joined <  $$ || quote_literal( params.end_date ) || $$::TIMESTAMP + INTERVAL \'1 day\'\n\n$$) AS dbl(\n    loginid TEXT,\n    date_joined DATE,\n    residence TEXT,\n    citizen TEXT,\n    place_of_birth TEXT,\n    date_of_birth DATE,\n    email TEXT,\n    phone TEXT,\n    address TEXT,\n    balance_usd NUMERIC,\n    status TEXT,\n    submitted_financial_assessment TEXT,\n    authentication_status TEXT\n    )\nJOIN users.loginid AS ulcr ON ulcr.loginid = dbl.loginid\nJOIN users.last_login AS ull ON ull.binary_user_id = ulcr.binary_user_id\nJOIN users.loginid AS ulmt ON ulmt.binary_user_id = ulcr.binary_user_id AND ulmt.loginid LIKE \'MT%\'\nJOIN mt5.mt5_users AS mt5u ON \'MT\' || mt5u.login::TEXT = ulmt.loginid\nGROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14\nORDER BY 1\n'}}",Compliance > New signups with MT5,table,,False,False,866,,Compliance New signups with MT5,,native,,,,2019-04-09 09:40:40.326,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:45.720,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- This report will generate a list of MF, CR or MLT accounts and all the corresponding MT5 accounts.\n-- Compliance > New signups with MT5 - v2\n-- To monitor new joins within an interval and the associated MT5 accounts\n-- NOTES: the balance_usd value is based upon the exchange rate at the moment\nWITH params AS (SELECT\n  \'2018-10-01\'::DATE AS start_date,\n  \'2018-11-10\'::DATE AS end_date,\n  \'MF\'::VARCHAR AS broker_code -- CH, CR, MX, MLT, MF\n)\n\nSELECT\n    dbl.*,\n    ull.history_date::DATE AS last_login,\n    string_agg(ulmt.loginid ||\' - \'|| mt5u.""Group"" ||\' - \'|| mt5u.""Registration""::DATE, \' ## \' ORDER BY mt5u.""Registration"" DESC) AS ""MT5_logins""\nFROM params\nJOIN betonmarkets.production_servers_v2() AS ps ON params.broker_code = ANY(ps.broker_codes)\nCROSS JOIN dblink(ps.srvname, $$\n\n    SELECT\n        c.loginid,\n        c.first_name,\n        c.last_name,\n        c.date_joined::DATE AS date_joined,\n        c.residence,\n        c.citizen,\n        c.place_of_birth,\n        c.date_of_birth,\n        c.tax_residence,\n        c.tax_identification_number,\n        c.email,\n        c.phone,\n        c.account_opening_reason,\n        c.address_line_1 || \', \' || c.address_line_2 || \', \' || c.address_city || \', \' || c.address_state || \', \' || c.address_postcode AS address,\n        data_collection.exchangetousd(ta.balance, ta.currency_code) AS balance_usd,\n        COALESCE(cs.status, \'active\') AS status,\n        fa.data->>\'employment_status\',\n        fa.data->>\'estimated_worth\',\n        fa.data->>\'income_source\',\n        fa.data->>\'net_income\',\n        fa.data->>\'occupation\',\n        fa.data->>\'source_of_wealth\',\n        CASE WHEN cam.status = \'pass\' AND cam.authentication_method_code = \'ID_NOTARIZED\'\n             THEN \'notarized\'\n             WHEN cam.status = \'pass\' AND cam.authentication_method_code = \'ID_DOCUMENT\'\n             THEN \'scans\'\n             ELSE coalesce(cam.status, \'no\')\n        END AS authentication_status\n\n    FROM\n        betonmarkets.client AS c\n    LEFT JOIN transaction.account AS ta\n        ON ta.client_loginid = c.loginid\n    LEFT JOIN betonmarkets.financial_assessment AS fa\n        ON fa.client_loginid = c.loginid\n    LEFT JOIN\n        (\n            SELECT\n                client_loginid,\n                string_agg(status_code, \' \\\\ \' ORDER BY status_code) AS status,\n                string_agg(reason, \' \\\\ \' ORDER BY status_code) AS reason\n            FROM\n                betonmarkets.client_status cs\n            WHERE\n                status_code IN (\'cashier_locked\', \'disabled\', \'unwelcome\', \'withdrawal_locked\')\n            GROUP BY 1\n        ) AS cs ON cs.client_loginid = c.loginid\n    LEFT JOIN betonmarkets.client_authentication_method AS cam\n        ON cam.client_loginid = c.loginid\n\n\n    WHERE c.date_joined >= $$ || quote_literal( params.start_date ) || $$::TIMESTAMP\n      AND c.date_joined <  $$ || quote_literal( params.end_date ) || $$::TIMESTAMP + INTERVAL \'1 day\'\n\n$$) AS dbl(\n    loginid TEXT,\n    first_name TEXT,\n    last_name TEXT,\n    date_joined DATE,\n    residence TEXT,\n    citizen TEXT,\n    place_of_birth TEXT,\n    date_of_birth DATE,\n    tax_residence TEXT,\n    tax_identification_number TEXT,\n    email TEXT,\n    phone TEXT,\n    account_opening_reason TEXT,\n    address TEXT,\n    balance_usd NUMERIC,\n    status TEXT,\n    employment_status VARCHAR,\n    estimated_worth VARCHAR,\n    income_source VARCHAR,\n    net_income VARCHAR,\n    occupation VARCHAR,\n    source_of_wealth VARCHAR,\n    authentication_status TEXT\n    )\nJOIN users.loginid AS ulcr ON ulcr.loginid = dbl.loginid\nJOIN users.last_login AS ull ON ull.binary_user_id = ulcr.binary_user_id\nJOIN users.loginid AS ulmt ON ulmt.binary_user_id = ulcr.binary_user_id AND ulmt.loginid LIKE \'MT%\'\nJOIN mt5.mt5_users AS mt5u ON \'MT\' || mt5u.""Login""::TEXT = ulmt.loginid\nGROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24\nORDER BY betonmarkets.loginid_sortable(dbl.loginid);'}}","This report will generate a list of MF, CR or MLT accounts and all the corresponding MT5 accounts.",table,,False,False,885,,Compliance New signups with MT5 - v2,,native,,,,2019-04-09 09:41:45.720,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:42.201,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Compliance > New signups with MT5 - v3\n-- To monitor new joins within an interval and the associated MT5 accounts\n-- NOTES: the balance_usd value is based upon the exchange rate at the moment\nWITH params AS (SELECT\n  \'2019-01-01\'::DATE AS start_date,\n  \'2019-11-10\'::DATE AS end_date,\n  \'CR\'::VARCHAR AS broker_code, -- CH, CR, MX, MLT, MF\n  -- as of Mar 2019, these are the MT5 groups that are of interest\n  -- \'real\\costarica\',\'real\\labuan_advanced\',\'real\\malta\',\'real\\maltainvest_standard\',\'real\\maltainvest_standard_GBP\',\'real\\vanuatu_standard\'\n  ARRAY[\'real\\labuan_advanced\',\'real\\vanuatu_standard\'] AS mt5_groups\n),\nmt5u AS (\n    SELECT ""Login"", ""Registration"", ""LastAccess"", ""Group"", \'MT\'||""Login"" AS users_loginid\n    FROM params, mt5.mt5_users\n    WHERE ""Group"" = ANY(params.mt5_groups)\n    AND ""Registration"" >= params.start_date \n    AND ""Registration"" < params.end_date\n)\n\nSELECT\n    dbl.*,\n    ull.history_date::DATE AS last_login_binary,\n    ulmt.loginid AS ""MT5_logins"",\n    date(mt5u.""Registration"") AS Registration_date,\n    date(mt5u.""LastAccess"") AS last_login_MT5,\n    mt5u.""Group"" AS Group_g\nFROM params\nJOIN betonmarkets.production_servers_v2() AS ps ON params.broker_code = ANY(ps.broker_codes)\nCROSS JOIN dblink(ps.srvname, format($$\n\n    SELECT\n        c.loginid,\n        c.first_name,\n        c.last_name,\n        c.date_joined::DATE AS date_joined,\n        c.residence,\n        c.citizen,\n        c.place_of_birth,\n        c.date_of_birth,\n        c.tax_residence,\n        c.tax_identification_number,\n        c.email,\n        c.phone,\n        c.account_opening_reason,\n        c.address_line_1 || \', \' || c.address_line_2 || \', \' || c.address_city || \', \' || c.address_state || \', \' || c.address_postcode AS address,\n        ta.currency_code As binary_currency_code,\n        data_collection.exchangetousd(ta.balance, ta.currency_code) AS balance_usd,\n        COALESCE(cs.status, \'active\') AS status,\n        COALESCE(\n          (SELECT \'Yes\'\n          FROM betonmarkets.client_status cs\n          WHERE cs.client_loginid = c.loginid\n          AND cs.status_code = \'age_verification\'\n          ORDER BY last_modified_date DESC, id DESC LIMIT 1)::TEXT,\'No\') AS age_verified,\n        c.aml_risk_classification,\n        fa.data->>\'employment_status\',\n        fa.data->>\'estimated_worth\',\n        fa.data->>\'income_source\',\n        fa.data->>\'net_income\',\n        fa.data->>\'occupation\',\n        fa.data->>\'source_of_wealth\',\n        COALESCE(cam.authentication_status, \'no\') AS authentication_status,\n        cam.authentication_method_code\n\n    FROM\n        betonmarkets.client AS c\n    LEFT JOIN transaction.account AS ta\n        ON ta.client_loginid = c.loginid\n    LEFT JOIN betonmarkets.financial_assessment AS fa\n        ON fa.client_loginid = c.loginid\n    LEFT JOIN\n        (\n            SELECT\n                client_loginid,\n                string_agg(status_code, \' \\\\ \' ORDER BY status_code) AS status,\n                string_agg(reason, \' \\\\ \' ORDER BY status_code) AS reason\n            FROM\n                betonmarkets.client_status cs\n            WHERE\n                status_code IN (\'cashier_locked\', \'disabled\', \'unwelcome\', \'withdrawal_locked\')\n            GROUP BY 1\n        ) AS cs ON cs.client_loginid = c.loginid\n    LEFT JOIN reporting.get_client_authentication_methods() AS cam\n\t      ON cam.client_loginid = c.loginid\n    WHERE c.broker_code = %L\n  $$, params.broker_code)\n  ) AS dbl(\n    loginid TEXT,\n    first_name TEXT,\n    last_name TEXT,\n    date_joined DATE,\n    residence TEXT,\n    citizen TEXT,\n    place_of_birth TEXT,\n    date_of_birth DATE,\n    tax_residence TEXT,\n    tax_identification_number TEXT,\n    email TEXT,\n    phone TEXT,\n    account_opening_reason TEXT,\n    address TEXT,\n    binary_currency_code TEXT,\n    balance_usd NUMERIC,\n    status TEXT,\n    age_verified TEXT,\n    aml_risk_classification TEXT,\n    employment_status VARCHAR,\n    estimated_worth VARCHAR,\n    income_source VARCHAR,\n    net_income VARCHAR,\n    occupation VARCHAR,\n    source_of_wealth VARCHAR,\n    authentication_status TEXT,\n    authentication_method_code TEXT\n    )\nJOIN users.loginid AS ulcr ON ulcr.loginid = dbl.loginid\nJOIN users.last_login AS ull ON ull.binary_user_id = ulcr.binary_user_id\nJOIN users.loginid AS ulmt ON ulmt.binary_user_id = ulcr.binary_user_id\nJOIN mt5u ON mt5u.users_loginid = ulmt.loginid\n\nORDER BY betonmarkets.loginid_sortable(dbl.loginid);\n'}}",Compliance > New signups with MT5 - v3,table,,False,False,884,,Compliance New signups with MT5 - v3,,native,,,,2019-04-09 09:41:42.201,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:00.919,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > No bonus and no fee dormant Accounts\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF or VR\n        'MLT'::VARCHAR as broker_code,\n        \n        -- Start date\n        '2012-10-01'::TIMESTAMP as date\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM no_bonus_no_fee_dormant(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT date FROM param)::timestamp\n    );\n""}}",Compliance > No bonus and no fee dormant Accounts,table,,False,False,872,,Compliance No bonus and no fee dormant Accounts,,native,,,,2019-04-09 09:41:00.919,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:42:13.510,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Compliance > Product Appropriateness\nWITH params AS (SELECT\n-- dates are join_dates\n  \'2018-08-01\'::DATE AS start_date,\n  \'2018-10-31\'::DATE AS end_date,\n-- remove the item and the comma of any you don\'t want\n  \'{cashier_locked, disabled, unwelcome, withdrawal_locked}\'::VARCHAR[] AS include_status_codes,\n-- change the following to TRUE if you are only interested in accts that have deposited\n  FALSE::BOOLEAN AS accts_with_deposit_only,\n  \'MF\'::VARCHAR AS broker_code\n)\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT d.*\nFROM params\nJOIN betonmarkets.production_servers_v2() AS ps ON UPPER(params.broker_code) = ANY (ps.broker_codes)\nCROSS JOIN dblink(ps.srvname, $$\nSELECT\n\tbc.loginid,\n\tbc.date_joined,\n\tta.last_modified AS last_acct_activity,\n\tCOALESCE(ps.status_code, \'Retail\') AS ""Type"",\n\tbc.account_opening_reason AS ""Objectives and Needs"",\n\t\'Speculative\'::TEXT AS ""Risk Tolerance"",\n\tfa.data->>\'cfd_trading_experience\' AS ""CFD frequency"",\n\tfa.data->>\'cfd_trading_frequency\' AS ""CFD experience"",\n\tfa.data->>\'employment_status\' AS ""Employment status"",\n\tstring_agg(cs.status_code, \' \\\\ \' ORDER BY cs.status_code) AS ""Status"",\n\tstring_agg(cs.reason, \' \\\\ \' ORDER BY cs.status_code) AS ""Reason""\nFROM betonmarkets.client AS bc\nLEFT JOIN transaction.account AS ta ON ta.client_loginid=bc.loginid\nLEFT JOIN betonmarkets.financial_assessment AS fa ON fa.client_loginid=bc.loginid\nLEFT JOIN betonmarkets.client_status AS ps\n\tON bc.loginid=ps.client_loginid\n\tAND ps.status_code IN (\'professional\',\'professional_requested\')\nLEFT JOIN betonmarkets.client_status AS cs\n\tON bc.loginid=cs.client_loginid\n\tAND cs.status_code = ANY($$|| quote_literal(params.include_status_codes) ||$$)\nWHERE bc.date_joined >= $$|| quote_literal( params.start_date ) ||$$::TIMESTAMP\n  AND bc.date_joined  < $$|| quote_literal( params.end_date ) ||$$::TIMESTAMP + INTERVAL \'1 day\'\n  AND (ta.last_modified IS NOT NULL OR NOT COALESCE( $$|| params.accts_with_deposit_only ||$$::BOOLEAN, FALSE))\nGROUP BY 1,2,3,4,5,6,7,8,9\nORDER BY betonmarkets.loginid_sortable(bc.loginid)\n$$) d (\n  loginid VARCHAR,\n  date_joined DATE,\n  last_acct_activity DATE,\n  ""Type"" TEXT,\n  ""Objectives and Needs"" TEXT,\n  ""Risk Tolerance"" TEXT,\n\t""CFD frequency"" TEXT,\n\t""CFD experience"" TEXT,\n\t""Employment status"" TEXT,\n\t""Status"" TEXT,\n\t""Reason"" TEXT\n)'}}",Compliance > Product Appropriateness,table,,False,False,893,,Compliance Product Appropriateness,,native,,,,2019-04-09 09:42:13.510,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:40:33.208,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Return to Player\nWITH params AS (SELECT\n  'MLT'::VARCHAR AS broker_code,     -- MX or MLT\n  '2018-11-10'::DATE AS report_date, -- this value will determine the version of theo_rtp values used\n                                     -- it will also show up in the rpt_date column of the report\n\n-- Yes, the following seems a bit unorthodox,\n-- but for the sake of manual operation where the actual reporting interval must be different than the norm,\n-- these values cannot be hidden away and extracted from report_date.\n  '2017-11-10'::DATE AS rpt_start_date, -- The actual first day of the reporting interval - normally 1 year (365 days) behind report_date\n  '2018-11-09'::DATE AS rpt_end_date    -- the last day of the reporting interval - normally 1 day behind report_date\n)\n\n\n-- Do not change any code below here\n\n\nSELECT dbl.*\nFROM params\nJOIN betonmarkets.production_servers_v2() AS ps\n  ON params.broker_code = ANY(ps.broker_codes)\nCROSS JOIN fdw.return_to_player_on(ps.srvname, report_date, rpt_start_date, rpt_end_date) AS dbl;""}}",Compliance > Return to Player,table,,False,False,864,,Compliance Return to Player,,native,,,,2019-04-09 09:40:33.208,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:42:21.272,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > RTS27 Data - MF - Binary Options\n-- This report was requested by Derek to obtain basic trading data to manually compose the Binary portion of the RTS27 reporting\n-- It provides: trade id, purchase_time, account_id, underlying_symbol, payout_price, buy_price, bet_type\nWITH params AS (SELECT\n  '2018-09-01'::DATE AS start_date,\n  '2018-09-30'::DATE AS end_date,\n  'MF'::TEXT AS broker_code -- MX, MLT, MF\n)\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT d.*\nFROM params\nCROSS JOIN dblink( lower(broker_code), $$  \n  SELECT id,  \n         purchase_time,  \n         account_id,  \n         underlying_symbol,  \n         payout_price,  \n         buy_price,  \n         bet_type  \n  FROM   bet.financial_market_bet  \n  WHERE  purchase_time >= $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n  AND    purchase_time <  $$|| quote_nullable(params.end_date) ||$$::TIMESTAMP + '1d'::INTERVAL\nORDER BY purchase_time  \n$$) AS d (  \n  id BIGINT,  \n  purchase_time TIMESTAMP,  \n  account_id BIGINT,  \n  underlying_symbol VARCHAR,  \n  payout_price NUMERIC,  \n  buy_price NUMERIC,  \n  bet_type VARCHAR  \n);  \n""}}",Compliance > RTS27 Data - MF - Binary Options,table,,False,False,895,,Compliance RTS27 Data - MF - Binary Options,,native,,,,2019-04-09 09:42:21.272,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:41:38.715,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Compliance > Self Exclusion Analysis\nWITH params AS (SELECT\n        'MX'::VARCHAR AS broker_code, -- MX, MLT, MF, CR\n        '2018-08-01'::DATE AS start_date,\n        '2018-08-31'::DATE AS end_date  -- date is inclusive\n)\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT d.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink(ps.srvname, $$\n\n    SELECT\n        client_loginid, \n        COUNT(*) FILTER (WHERE  pg_userid = 'system') AS Limits_and_Self_Exclusion_Internally,\n        COUNT(*) FILTER (WHERE  pg_userid != 'system') AS Limits_and_Self_Exclusion_by_Client,\n        COUNT(*) FILTER (WHERE  exclude_until IS NOT NULL) AS Self_Exclusion_Internally_Plus_Client\n    FROM audit.self_exclusion\n    WHERE stamp >= $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n      AND stamp < $$|| quote_nullable(params.end_date +1) ||$$::TIMESTAMP\n    GROUP BY client_loginid\n    ORDER BY Limits_and_Self_Exclusion_by_Client DESC\n\n$$) d (\n    client_loginid VARCHAR,\n    Limits_and_Self_Exclusion_Internally BIGINT,\n    Limits_and_Self_Exclusion_by_Client BIGINT,\n    Self_Exclusion_Internally_Plus_Client BIGINT\n)\n\nWHERE params.broker_code = ANY (ps.broker_codes);\n""}}",Compliance > Self Exclusion Analysis,table,,False,False,883,,Compliance Self Exclusion Analysis,,native,,,,2019-04-09 09:41:38.715,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:13:36.665,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Compliance signups report.\n-- To monitor new joins within an interval and the relevant authentication information.\n-- This report runs against a single broker only.\n-- Please supply the broker in the params block below, no changes to the main query are necessary.\n\nWITH params AS (SELECT\n    \'2018-01-01\'::DATE AS start_date,   /* Inclusive, IE, ""date_joined >= params.start_date"" */\n    \'2018-06-30\'::DATE AS end_date,     /* Inclusive, IE, ""date_joined < params.end_date + 1 day"" */\n    \'mx\'::TEXT as broker                /* <<<---- REPLACE CODE HERE */\n)\n\n\n/* No changes are necessary to the query below. */\n\nSELECT\n    t.*\nFROM params\nCROSS JOIN dblink(LOWER(params.broker), $$\n\n    SELECT\n        c.date_joined::DATE AS date_joined,\n        COALESCE(cs.status, \'active\') AS account_status,\n        cs.reason,\n        c.loginid,\n        c.first_name,\n        c.last_name,\n        c.date_of_birth,\n        c.place_of_birth,\n        c.citizen,\n        c.residence as residency,\n        concat_ws(\', \',c.address_line_1,c.address_line_2,c.address_city,c.address_state,c.address_postcode) as address,\n        ta.balance,\n        ta.currency_code,\n        c.aml_risk_classification::TEXT as aml_risk_classification,\n        cam.authentication_method_code as ""ID Authentication"",\n        COALESCE(\n            (SELECT \'Yes\'\n            FROM betonmarkets.client_status cs\n            WHERE cs.client_loginid = c.loginid\n            AND cs.status_code = \'age_verification\'\n            ORDER BY last_modified_date DESC, id DESC LIMIT 1)::TEXT,\'No\') AS age_verified,\n        COALESCE(\n            (SELECT \'Yes\'\n            FROM betonmarkets.client_status\n            WHERE client_loginid = c.loginid\n            AND reason LIKE \'EXPERIAN PROVE ID%\'\n            ORDER BY last_modified_date DESC, id DESC LIMIT 1)::TEXT,\'No\') AS has_proveid_been_done,\n        c.account_opening_reason,\n        pp.first_payment_time AS first_payment_time,\n        pp.first_amount\n    FROM\n        betonmarkets.client AS c\n    LEFT JOIN transaction.account AS ta\n        ON ta.client_loginid = c.loginid\n    \n    LEFT JOIN LATERAL (\n        SELECT pp.payment_time AS first_payment_time, pp.amount AS first_amount\n        FROM payment.payment AS pp\n        JOIN payment.payment_filters AS pf ON (pp.payment_type_code != ANY(pf.payment_type_codes) AND pf.filter_id = 1)\n        WHERE pp.account_id = ta.id\n        AND pp.amount > 0 -- Filter out negative deposits \n        ORDER BY pp.payment_time ASC LIMIT 1) AS pp\n        ON TRUE\n\n    LEFT JOIN\n        (\n            SELECT\n                client_loginid,\n                string_agg(status_code, \' \\\\ \' ORDER BY status_code) AS status,\n                string_agg(reason, \' \\\\ \' ORDER BY status_code) AS reason\n            FROM\n                betonmarkets.client_status cs\n            WHERE\n                status_code IN (\'cashier_locked\', \'disabled\', \'unwelcome\', \'withdrawal_locked\')\n            GROUP BY 1\n        ) AS cs ON cs.client_loginid = c.loginid\n\n    LEFT JOIN LATERAL\n        (\n            SELECT\n                client_loginid,\n                string_agg(\n                    /* https://github.com/regentmarkets/bom-backoffice/blob/master/templates/backoffice/client_edit.html.tt#L266 */\n                    (CASE \n                        WHEN authentication_method_code = \'CLEAR_ALL\' THEN \'Not authenticated\'\n                        WHEN authentication_method_code = \'ID_DOCUMENT\' THEN \'Authenticated with scans\'\n                        WHEN authentication_method_code = \'ID_NOTARIZED\' THEN \'Authenticated with Notarized docs\'\n                        WHEN authentication_method_code = \'NEEDS_ACTION\' THEN \'Needs Action\' \n                        ELSE authentication_method_code\n                    END)::TEXT,\n                    \' \\ \' ORDER BY authentication_method_code) AS authentication_method_code\n            FROM\n                betonmarkets.client_authentication_method cam\n            WHERE\n                cam.client_loginid = c.loginid\n                AND cam.status = \'pass\'\n            GROUP BY 1\n        ) AS cam ON TRUE\n\n    WHERE c.broker_code = $$ || quote_literal(UPPER(params.broker)) || $$::TEXT\n    AND c.date_joined >= $$ || quote_literal( params.start_date ) || $$::TIMESTAMP\n    AND c.date_joined <  $$ || quote_literal( params.end_date ) || $$::TIMESTAMP + INTERVAL \'1 day\'\n    ORDER BY c.loginid\n\n$$) AS t(\n    date_joined DATE,\n    account_status TEXT,\n    reason TEXT,\n    loginid TEXT,\n    first_name TEXT,\n    last_name TEXT,\n    date_of_birth DATE,\n    place_of_birth TEXT,\n    citizen TEXT,\n    residency TEXT,\n    address TEXT,\n    balance NUMERIC,\n    currency_code TEXT,\n    aml_risk_classification TEXT,\n    ""ID Authentication"" TEXT,\n    age_verified TEXT,\n    has_proveid_been_done TEXT,\n    account_opening_reason TEXT,\n    first_payment_time TIMESTAMP,\n    first_amount NUMERIC\n);\n'}}",Compliance signups report.,table,,False,False,561,,Compliance signups report,,native,,,,2019-03-22 03:13:36.665,{}
False,,"{'id': 189, 'name': 'Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'compliance'}",189.0,,2019-04-09 09:40:47.153,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- requested by JP but applicable to all\n-- Compliance > T&C acknowledgement report\nWITH params AS (SELECT\n  'JP'::TEXT AS broker_code,\n  '2010-01-01'::DATE AS report_start, -- clients clicking since this date\n  '2017-12-31'::DATE AS report_end    -- clients clicking earlier than this date\n                                      -- dates are inclusive... set report_end to today's date to get a list of all\n)\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT d.*\nFROM params\nJOIN betonmarkets.production_servers_v2() AS ps ON params.broker_code = ANY( ps.broker_codes )\nCROSS JOIN dblink(ps.srvname, $$\n  SELECT DISTINCT ON (client_loginid)\n         client_loginid,\n         reason,\n         last_modified_date::DATE AS accepted_date\n    FROM betonmarkets.client_status\n   WHERE status_code = 'tnc_approval'\n     AND last_modified_date >=  $$|| quote_literal( params.report_start ) ||$$::TIMESTAMP\n     AND last_modified_date  <  $$|| quote_literal( params.report_end ) ||$$::TIMESTAMP + '1 day'::INTERVAL\n  ORDER BY client_loginid, last_modified_date DESC\n$$) AS d (client_loginid VARCHAR, reason TEXT, accepted_date TIMESTAMP)\n""}}",requested by JP but applicable to all,table,,False,False,868,,Compliance T&C acknowledgement report,,native,,,,2019-04-09 09:40:47.153,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:12.455,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- a temp snippet for compliance analysis\n-- compliance temp mifir list comparison\nSELECT m.""Database Instrument Name"" AS existing_instrument_name,\n  n.""Database Instrument Name"" AS new_instrument_name,\n  m.""Instrument Description"" AS existing_instrument_description,\n  n.""Instrument Description"" AS new_instrument_description,\n  m.""Underlying Id"" AS existing_underlying_id,\n  n.""Underlying Id"" AS new_underlying_id\n  FROM test.mifir_codes m\n  FULL JOIN test.new_mifir n ON m.""Database Instrument Name""=n.""Database Instrument Name""\n  order by 1,2'}}",a temp snippet for compliance analysis,table,,False,False,624,,compliance temp mifir list comparison,,native,,,,2019-03-22 03:27:12.455,{}
False,,"{'id': 203, 'name': 'UKGC', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/189/', 'personal_owner_id': None, 'slug': 'ukgc'}",203.0,,2019-04-09 09:42:24.890,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Compliance > UKGC/MGA lifetime limits report\nWITH params AS (SELECT\n    -- This report defaults to checking up until the end of the day yesterday.\n    -- You may replace the ""yesterday"" value with ""today"" to get up to the moment results.\n    -- The end_date in this report actually means everything UP TO the end_date. end_date is not inclusive.\n  \'yesterday\'::DATE AS end_date,\n    -- Left at TRUE, you will get all clients who have reached the reporting limits, regardless of whether they are disabled or authenticated.\n    -- Especially for MLT, this will take a very long time.\n    -- Changed to FALSE, the report will exclude disabled/authenticated clients like the email by cron does.\n  \'FALSE\'::BOOLEAN AS include_all,\n    -- The default behavior is to report on all clients.\n    -- If you provide a date below (\'2018-01-01\'::DATE), it will only consider clients who have had some sort of account activity on or after that date\n  NULL::DATE AS active_since,\n    -- The original purpose of this report was to comply with the UKGC regulation.\n    -- Later the MGA joined the bandwagon.\n  \'mlt\'::VARCHAR AS broker -- mx or mlt. Other broker codes will produce an empty report\n)\n-- When run against MX, only UK residents are considered. On MLT, all clients are considered.\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT d.*\nFROM params CROSS JOIN dblink(lower(params.broker),\n  format(\'SELECT * FROM reporting.deposit_and_stake_notification(%L::TIMESTAMP, %L::BOOLEAN, %L::TIMESTAMP)\', params.end_date +1, params.include_all, params.active_since) \n ) d (\n    loginid VARCHAR,\n    client_status TEXT,\n    account_opening_reason VARCHAR,\n    age_verified TEXT,\n    authentication_status TEXT,\n    authentication_method_code TEXT,\n    client_currency VARCHAR,\n    balance NUMERIC,\n    client_currency_total_stake NUMERIC,\n    eur_total_stake NUMERIC,\n    client_currency_total_deposits NUMERIC,\n    eur_total_deposits NUMERIC,\n    client_currency_total_withdrawals NUMERIC,\n    eur_total_withdrawals NUMERIC\n );'}}",Compliance > UKGC/MGA lifetime limits report,table,,False,False,896,,Compliance UKGC MGA lifetime limits report,,native,,,,2019-04-09 09:42:24.890,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:13:42.008,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""/*\nThe script is intended to output real money accounts which meet the following criteria:\na. Under a regulated landing company\nb. It's been inactive (no transactions) for 6 or 10 years (based on landing company)\n*/\n\n\nSELECT d.*, u.all_loginids\nFROM (VALUES ('mx', interval '6 years'),('mf', interval '10 years'),('mlt', interval '10 years')) AS ps (srvname, years_of_inactivity)\nCROSS JOIN dblink(ps.srvname, $$\n\n  /*\n    ta.last_modified IS NULL should indicate an account has been opened,\n    but never deposited into, however some old accounts do not have it filled\n    even if the account has had transactions on it. So in these cases we need\n    to check the transaction.transaction table.\n  */\n  WITH badnulls AS (SELECT DISTINCT ta.id AS account_id, ta.client_loginid\n    FROM transaction.account AS ta\n    JOIN transaction.firsts AS tf ON tf.account_id=ta.id\n    WHERE ta.last_modified IS NULL\n    AND ta.is_default IS DISTINCT FROM false\n  )\n\n  SELECT bc.loginid AS client_loginid,\n         COALESCE(tt.latest_transaction, bc.date_joined) AS last_activity,\n         ta.balance AS balance,\n         ta.currency_code AS currency,\n         cs.status_code AS disabled,\n         bc.binary_user_id AS binary_user_id\n  FROM betonmarkets.client AS bc\n  \n  LEFT JOIN transaction.account AS ta\n  ON bc.loginid = ta.client_loginid\n\n  LEFT JOIN badnulls ON badnulls.account_id=ta.id\n  \n  LEFT JOIN LATERAL(\n    SELECT MAX(transaction_time) AS latest_transaction\n    FROM transaction.transaction\n    WHERE account_id=badnulls.account_id\n  ) AS tt\n  ON TRUE\n   \n  LEFT JOIN (\n    SELECT client_loginid, status_code\n    FROM betonmarkets.client_status\n    WHERE status_code = 'disabled'\n  ) AS cs\n  ON bc.loginid = cs.client_loginid\n   \n  WHERE ta.is_default IS DISTINCT FROM false\n  AND COALESCE(ta.last_modified, tt.latest_transaction, bc.date_joined) < current_date - $$|| quote_nullable(ps.years_of_inactivity) ||$$::INTERVAL\n\n$$) AS d (\n    client_loginid VARCHAR,\n    last_activity DATE,\n    balance NUMERIC,\n    currency VARCHAR,\n    disabled VARCHAR,\n    binary_user_id BIGINT\n)\n\nLEFT JOIN dblink('users', $$\n  SELECT binary_user_id, string_agg(loginid, ' ')\n  FROM users.loginid\n  GROUP BY binary_user_id\n$$ ) AS u (\n  binary_user_id BIGINT,\n  all_loginids VARCHAR\n) ON u.binary_user_id = d.binary_user_id\n""}}",,table,,False,False,562,,"Compliance-GDPR_anonymization_clients (mx,mlt,mf)",,native,,,,2019-03-22 03:13:42.008,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:13:47.452,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""/*\nThe script is intended to output real money accounts which meet the following criteria:\na. Under costarica\nb. Residence in eu/gb\nb. It's been inactive (no transactions) for 10 years\n*/\n\n\nSELECT d.*, u.all_loginids\nFROM dblink('cr', $$\n\n/*\nta.last_modified IS NULL should indicate an account has been opened,\nbut never deposited into, however some old accounts do not have it filled\neven if the account has had transactions on it. So in these cases we need\nto check the transaction.transaction table.\n*/\nWITH badnulls AS (SELECT DISTINCT ta.id AS account_id, ta.client_loginid\n  FROM transaction.account AS ta\n  JOIN transaction.firsts AS tf ON tf.account_id=ta.id\n  WHERE ta.last_modified IS NULL\n  AND ta.is_default IS DISTINCT FROM false\n),\n\nps as(select * from (VALUES\n  (ARRAY['gb','im','es','pt','cz','lu','bg','hu','lt','lv','de','gr','si','it','hr','sk','fi','dk','fr','cy','pl','mf','ie','ee','nl','be','se','ro','at'], interval '10 years')\n) ps (residences, years_of_inactivity))\n\nSELECT bc.loginid AS client_loginid,\n        bc.residence AS residence,\n         COALESCE(ta.last_modified, tt.latest_transaction, bc.date_joined) AS last_activity,\n         ta.balance AS balance,\n         ta.currency_code AS currency,\n         cs.status_code AS disabled,\n         bc.binary_user_id AS binary_user_id\n  FROM betonmarkets.client AS bc\n  \n  LEFT JOIN transaction.account AS ta\n  ON bc.loginid = ta.client_loginid\n  \n  LEFT JOIN badnulls ON badnulls.account_id=ta.id\n\n  LEFT JOIN LATERAL(\n    SELECT MAX(transaction_time) AS latest_transaction\n    FROM transaction.transaction\n    WHERE account_id=badnulls.account_id\n  ) AS tt\n  ON TRUE\n   \n  LEFT JOIN (\n    SELECT client_loginid, status_code\n    FROM betonmarkets.client_status\n    WHERE status_code = 'disabled'\n  ) AS cs\n  ON bc.loginid = cs.client_loginid\nCROSS JOIN ps\n  WHERE ta.is_default IS DISTINCT FROM false\n  AND bc.residence = ANY(ps.residences::VARCHAR[])\n  AND COALESCE(ta.last_modified, tt.latest_transaction, bc.date_joined) < current_date - ps.years_of_inactivity\n\n$$) AS d (\n  client_loginid VARCHAR,\n  residence VARCHAR,\n  last_activity DATE,\n  balance NUMERIC,\n  currency VARCHAR,\n  disabled VARCHAR,\n  binary_user_id BIGINT\n)\n\nLEFT JOIN dblink('users', $$\n SELECT binary_user_id, string_agg(loginid, ' ') AS all_loginids\n FROM users.loginid\n GROUP BY binary_user_id\n$$ ) AS u (\n binary_user_id BIGINT,\n all_loginids VARCHAR\n) ON u.binary_user_id = d.binary_user_id""}}",,table,,False,False,563,,Compliance-GDPR_anonymization_clients_cr,,native,,,,2019-03-22 03:13:47.452,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:13:52.913,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '/*\nThe script is intended to output virtual accounts which meet the following criteria:\na. Have a residence chosen that is subject to regulation\nb. It\'s been inactive (no transactions) for 6 or 10 years (based on gb/eu residence)\nc. The user has no real money accounts open\n*/\n\n\nSELECT d.*, u.all_loginids\nFROM dblink(\'vr\', $$\n\n/*\nta.last_modified IS NULL should indicate an account has been opened,\nbut never deposited into, however some old accounts do not have it filled\neven if the account has had transactions on it. So in these cases we need\nto check the transaction.transaction table.\n*/\nWITH badnulls AS (SELECT DISTINCT ta.id AS account_id, ta.client_loginid\n  FROM transaction.account AS ta\n  JOIN transaction.firsts AS tf ON tf.account_id=ta.id\n  WHERE ta.last_modified IS NULL\n),\n\nps as(select * from (VALUES \n  (ARRAY[\'gb\',\'im\'], interval \'6 years\'),\n  (ARRAY[\'es\',\'pt\',\'cz\',\'lu\',\'bg\',\'hu\',\'lt\',\'lv\',\'de\',\'gr\',\'si\',\'it\',\'hr\',\'sk\',\'fi\',\'dk\',\'fr\',\'cy\',\'pl\',\'mf\',\'ie\',\'ee\',\'nl\',\'be\',\'se\',\'ro\',\'at\'], interval \'10 years\')\n) ps (residences, years_of_inactivity))\n\nSELECT bc.loginid AS client_loginid,\n         bc.residence AS residence,\n         COALESCE(MAX(ta.last_modified), MAX(tt.latest_transaction), MAX(bc.date_joined)) AS last_activity,\n         cs.status_code AS disabled,\n         bc.binary_user_id AS binary_user_id\n  FROM betonmarkets.client AS bc\n  \n  LEFT JOIN transaction.account AS ta\n  ON bc.loginid = ta.client_loginid\n  \n  LEFT JOIN badnulls ON badnulls.client_loginid=bc.loginid\n\n  LEFT JOIN LATERAL(\n    SELECT MAX(transaction_time) AS latest_transaction\n    FROM transaction.transaction\n    WHERE account_id=badnulls.account_id\n  ) AS tt\n  ON TRUE\n   \n  LEFT JOIN (\n    SELECT client_loginid, status_code\n    FROM betonmarkets.client_status\n    WHERE status_code = \'disabled\'\n  ) AS cs\n  ON bc.loginid = cs.client_loginid\nCROSS JOIN ps\n  WHERE bc.residence = ANY(ps.residences::VARCHAR[])\n  /* Unlike real money clients where each has a designated `default` account,\n      not all virtual clients do, so we need to amalgamate all the accounts */\n  GROUP BY bc.loginid, bc.residence, disabled, bc.binary_user_id, ps.years_of_inactivity\n  HAVING COALESCE(MAX(ta.last_modified), MAX(tt.latest_transaction), MAX(bc.date_joined)) < current_date - ps.years_of_inactivity\n\n$$) AS d (\n  client_loginid VARCHAR,\n  residence VARCHAR,\n  last_activity DATE,\n  disabled VARCHAR,\n  binary_user_id BIGINT\n)\n\n/* Inner join is for meeting criteria c. */\nINNER JOIN dblink(\'users\', $$\n SELECT binary_user_id, string_agg(loginid, \' \') AS all_loginids\n FROM users.loginid\n GROUP BY binary_user_id\n HAVING EVERY(loginid LIKE \'VR%\')\n$$ ) AS u (\n binary_user_id BIGINT,\n all_loginids VARCHAR\n) ON u.binary_user_id = d.binary_user_id\n  \n  \n/* The residence list is generated with the following Perl script:\n\nuse strict;\nuse warnings;\n\nuse Brands;\nuse List::Util qw(any);\n\nmy (@six_year, @ten_year);\nmy $countries_list = Brands->new(name => \'binary\')->countries_instance->countries_list;\n\nforeach my $country (keys %$countries_list) {\n  my $config = $countries_list->{$country};\n  my @company_types = (\'gaming_company\', \'financial_company\', \'mt_gaming_company\', \'mt_financial_company\');\n\n  if ( any { $config->{$_} eq \'iom\' } @company_types ) {\n    push @six_year, $country;\n  }\n  elsif ( any { $config->{$_} =~ \'^malta\' } @company_types ) {\n    push @ten_year, $country;\n  }\n}\n\nprint ""\\n"";\nprint ""ARRAY[\'"" . join(""\',\'"", @six_year). ""\']"";\nprint ""\\n"";\nprint ""ARRAY[\'"" . join(""\',\'"", @ten_year). ""\']"";\nprint ""\\n"";\n\n*/'}}",,table,,False,False,564,,Compliance-GDPR_anonymization_clients_virtual,,native,,,,2019-03-22 03:13:52.913,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-08 09:10:05.250,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select account_id, underlying_symbol, count(*) from bet.financial_market_bet\nwhere purchase_time >= now() + interval '-60 minute'\ngroup by 1, 2\n\nunion \n\nselect -1 , 'all' , count(*)\nfrom bet.financial_market_bet\nwhere purchase_time >= now() + '-60 minute'\n\norder by 3 desc\n""}}",,table,,False,False,698,,"contract counts for each (account, underlying) pair, for the past hour (CR only)",,native,,"[{'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1398, 'nil%': 0}, 'type': {'type/Number': {'min': -1, 'max': 12399101, 'avg': 7965158.048699764, 'sd': 3601155.179555449, 'q1': 4842633.461956386, 'q3': 11588782.40216866}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 6.216075650118204}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 121, 'nil%': 0}, 'type': {'type/Number': {'min': 1, 'max': 24511, 'avg': 23.17825059101655, 'sd': 533.8619354649479, 'q1': 1.283104654413223, 'q3': 8.098179868868506}}}}]",,2019-04-08 09:10:37.256,"{'table.column_widths': [None, None, 117], 'table.pivot_column': 'underlying_symbol', 'table.cell_column': 'account_id'}"
False,,,,,2018-11-09 04:35:31.341,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\nbet_type,\ncount(distinct client_loginid) as ""clients"",\ncount(*) as ""Contract Count""\nfrom transaction.transaction t\ninner join bet.financial_market_bet fmb\non fmb.id = t.financial_market_bet_id\ninner join transaction.account a\non a.id = t.account_id\nwhere action_type = \'buy\'\nand referrer_type = \'financial_market_bet\'\nand transaction_time > current_timestamp - interval \'1 day\'\ngroup by 1\norder by 1'}}",Summary of contract count and number of clients buying each contract type.,bar,,False,False,34,,Contract types over the last 24 hours,,native,,"[{'name': 'bet_type', 'display_name': 'bet_type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 29, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.793103448275862}}}}, {'name': 'clients', 'display_name': 'clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 26, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3.0, 'max': 2764.0, 'avg': 422.7586206896552, 'sd': 736.7924041397479, 'q1': 24.129171306613028, 'q3': 487.75}}}}, {'name': 'Contract Count', 'display_name': 'Contract Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 29, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4.0, 'max': 133459.0, 'avg': 27032.241379310344, 'sd': 43814.62520637794, 'q1': 568.0, 'q3': 33509.75}}}}]",,2019-09-22 07:21:11.026,"{'graph.dimensions': ['bet_type'], 'graph.metrics': ['clients', 'Contract Count'], 'line.interpolate': 'step-after', 'line.missing': 'none', 'graph.y_axis.scale': 'linear'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-29 05:28:01.571,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    account_id,\n    count_buy,\n    total_buy,\n    sum(1) over (order by count_buy desc rows between unbounded preceding and current row) as ""cumulative_cust_count"",\n    sum(total_buy) over (order by count_buy desc rows between unbounded preceding and current row) as ""cumulative_buy_amount"",\n    sum(count_buy) over (order by count_buy desc rows between unbounded preceding and current row) as ""cumulative_buy_count""\nfrom\n(\nSELECT\n  account_id,\n  count(*) filter (where action_type=\'buy\') as ""count_buy"",\n  sum(-1*amount) filter (where action_type=\'buy\') as ""total_buy""\nFROM transaction.transaction\nwhere transaction_time >= now() + interval \'-10 minute\' --limit 100\ngroup by 1\n) tmp\nwhere tmp.count_buy > 0\norder by 2 desc'}}",,line,,False,False,955,37.0,contracts purchased in the past 10 minutes,30fa3fad-58d3-4f29-8e42-5fb18b4f7fbe,native,,"[{'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 513, 'nil%': 0.0}, 'type': {'type/Number': {'min': 696701.0, 'max': 12771601.0, 'avg': 8666363.144249512, 'sd': 3610382.6218897356, 'q1': 5478011.224290928, 'q3': 12041262.726544172}}}}, {'name': 'count_buy', 'display_name': 'Count Buy', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 53, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 445.0, 'avg': 9.705653021442496, 'sd': 24.91503348908412, 'q1': 1.569951602185861, 'q3': 9.55323872785677}}}}, {'name': 'total_buy', 'display_name': 'Total Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 308, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.00021789999999999998, 'max': 3884.5, 'avg': 59.489561520740736, 'sd': 272.43665418239203, 'q1': 1.9775127147972942, 'q3': 25.457413767738775}}}}, {'name': 'cumulative_cust_count', 'display_name': 'Cumulative Cust Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 513, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 513.0, 'avg': 257.0, 'sd': 148.21478028101652, 'q1': 129.10723241140767, 'q3': 385.25}}}}, {'name': 'cumulative_buy_amount', 'display_name': 'Cumulative Buy Amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 513, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1568.64, 'max': 30518.14506014, 'avg': 22074.612622416957, 'sd': 7800.829142238133, 'q1': 18459.757061425724, 'q3': 28455.987080312774}}}}, {'name': 'cumulative_buy_count', 'display_name': 'Cumulative Buy Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 513, 'nil%': 0.0}, 'type': {'type/Number': {'min': 445.0, 'max': 4979.0, 'avg': 4158.738791423002, 'sd': 936.413344744876, 'q1': 3786.495046202721, 'q3': 4842.811807821773}}}}]",,2019-05-06 06:51:28.363,"{'table.pivot_column': 'account_id', 'table.cell_column': 'account_id', 'graph.metrics': ['cumulative_buy_amount', 'cumulative_buy_count'], 'graph.dimensions': ['cumulative_cust_count'], 'graph.y_axis.scale': 'linear', 'graph.x_axis.scale': 'linear'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:13:58.237,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT\n  * \n FROM\n  chronicle \n WHERE\n  category='correlation_matrices' \n ORDER BY\n  timestamp DESC limit 3\n\n\n \n""}}",,table,,False,False,565,,Correlation matrix,,native,,,,2019-03-22 03:13:58.237,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-21 05:15:10.257,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    purchase_minute,\n    market,\n    sum(count_acct) as count_active_accounts\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_acct\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            --count(*) as count_buy\n            count(distinct fmb.account_id) as count_acct\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2\ngroup by 1,2""}}",,line,,False,False,1001,,"Count of active accounts, by the minute",,native,,"[{'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 303, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T05:02:00.000Z'}}}}, {'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.905343511450382}}}}, {'name': 'count_active_accounts', 'display_name': 'count_active_accounts', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 100, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 232.0, 'avg': 89.68244274809159, 'sd': 90.72997173218064, 'q1': 4.79490230561769, 'q3': 185.35546478379743}}}}]",,2019-10-14 05:03:12.779,"{'graph.dimensions': ['purchase_minute', 'market'], 'graph.metrics': ['count_buy']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-21 05:17:31.797,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    purchase_minute,\n    market,\n    sum(count_acct) as count_active_accounts\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_acct\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            --count(*) as count_buy\n            count(distinct fmb.account_id) as count_acct\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2\ngroup by 1,2""}}",,line,,False,False,1002,,"Count of active accounts, by the minute (non-linear scale)",,native,,"[{'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 303, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T05:02:00.000Z'}}}}, {'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.905343511450382}}}}, {'name': 'count_active_accounts', 'display_name': 'count_active_accounts', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 100, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 232.0, 'avg': 89.68244274809159, 'sd': 90.72997173218064, 'q1': 4.79490230561769, 'q3': 185.35546478379743}}}}]",,2019-10-14 05:03:14.794,"{'graph.dimensions': ['purchase_minute', 'market'], 'graph.metrics': ['count_active_accounts'], 'graph.y_axis.scale': 'pow'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-03-05 20:58:25.332,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,7,"{'database': 7, 'type': 'native', 'native': {'query': 'select\n  substring(loginid,1,2) as ""broker_2_letter"",\n  history_date::date as ""history_date"",\n  count(distinct loginid) as ""count_login_id"",\n  count(distinct binary_user_id) as ""count_binary_user_id""\n\nFROM users.last_login_by_loginid_vw\nwhere history_date>= (now() + interval \'-365d\')::date\nand history_date < now()::date\nand substring(loginid,1,2) not in (\'JP\', \'CH\')\ngroup by 1,2\norder by 2 desc, 1'}}",,line,,False,False,439,,Count of Logins by 2-letter Broker,,native,,"[{'name': 'broker_2_letter', 'display_name': 'Broker 2 Letter', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'history_date', 'display_name': 'History Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 365, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-03-05T00:00:00.000Z', 'latest': '2019-03-04T00:00:00.000Z'}}}}, {'name': 'count_login_id', 'display_name': 'Count Login ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 808, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3.0, 'max': 5901.0, 'avg': 384.47351598173515, 'sd': 549.1282618223709, 'q1': 17.791819525273826, 'q3': 627.5351005706133}}}}, {'name': 'count_binary_user_id', 'display_name': 'Count Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 751, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3.0, 'max': 5799.0, 'avg': 349.8753424657535, 'sd': 515.3435509538369, 'q1': 17.697107711167742, 'q3': 546.422191413951}}}}]",,2019-03-05 21:20:22.900,"{'graph.dimensions': ['history_date', 'broker_2_letter'], 'graph.metrics': ['count_binary_user_id'], 'graph.y_axis.title_text': 'Count Binary User ID', 'graph.x_axis.title_text': 'Date', 'graph.y_axis.scale': 'pow'}"
False,,"{'id': 214, 'name': ""Waziha Raquib's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 79, 'slug': 'waziha_raquib_s_personal_collection'}",214.0,,2019-09-18 09:39:26.089,"{'email': 'waziha@binary.com', 'first_name': 'Waziha', 'last_login': '2019-10-17T08:23:58.254Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 79, 'last_name': 'Raquib', 'date_joined': '2019-09-10T07:42:40.435Z', 'common_name': 'Waziha Raquib'}",79,2,"{'database': 2, 'type': 'query', 'query': {'source-table': 86, 'filter': ['=', ['field-id', 754], 'free_gift'], 'aggregation': [['count']]}}",,scalar,,False,False,1048,,Count of Payment Gateway Code by Free Gift,,query,,"[{'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 41179.0, 'max': 41179.0, 'avg': 41179.0, 'sd': None, 'q1': 41179.0, 'q3': 41179.0}}}}]",86.0,2019-10-21 05:48:41.290,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-02 13:46:59.075,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with all_rows as (\n\twith times as (select x as purchase_minute\n\t\t\t\t   from generate_series(current_date::timestamp\n\t\t\t\t\t  , now()::timestamp + interval '-1 minute'\n\t\t\t\t\t  , interval  '1 min') t(x)\n\t), markets as (select distinct market \n\t\t\t\t   from bet.market\n\t\t\t\t   where market not in  ('stocks', 'legacy', 'cryptocurrency', 'futures'))\n\n\tselect * from markets cross join times\n\torder by 2,1\n)\n\nselect \n    all_rows.purchase_minute,\n    all_rows.market,\n    sum(coalesce(count_buy,0)) as count_buy\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_buy\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2 right join all_rows\non all_rows.purchase_minute = tmp2.purchase_minute and all_rows.market = tmp2.market\ngroup by 1,2""}}",,line,,False,False,987,,"Count of purchased contracts, by the minute",,native,,"[{'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 256, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T04:15:00.000Z'}}}}, {'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.8}}}}, {'name': 'count_buy', 'display_name': 'count_buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 160, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 615.0, 'avg': 105.04609375, 'sd': 206.7460937448997, 'q1': 0.06399506580465801, 'q3': 10.484076058996193}}}}]",,2019-10-14 04:16:46.381,"{'graph.dimensions': ['purchase_minute', 'market'], 'graph.metrics': ['count_buy'], 'graph.y_axis.scale': 'pow'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-07-15 04:22:16.011,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with all_rows as (\n\twith times as (select x as purchase_minute\n\t\t\t\t   from generate_series( {{chosen_date}}::timestamp --current_date::timestamp\n\t\t\t\t\t  , {{chosen_date}}::timestamp + interval '1 day' --now()::timestamp + interval '-1 minute'\n\t\t\t\t\t  , interval  '1 min') t(x)\n\t), markets as (select distinct market \n\t\t\t\t   from bet.market\n\t\t\t\t   where market not in  ('stocks', 'legacy', 'cryptocurrency', 'futures'))\n\n\tselect * from markets cross join times\n\torder by 2,1\n)\n\nselect \n    all_rows.purchase_minute,\n    all_rows.market,\n    sum(coalesce(count_buy,0)) as count_buy\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_buy\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= {{chosen_date}}::timestamp --\n        and purchase_time < {{chosen_date}}::timestamp + interval '1 day' --date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2 right join all_rows\non all_rows.purchase_minute = tmp2.purchase_minute and all_rows.market = tmp2.market\ngroup by 1,rollup(2)\norder by 1"", 'template-tags': {'chosen_date': {'id': 'd3e1bad7-56ee-8ae3-1f19-2ae1ba1aee1a', 'name': 'chosen_date', 'display-name': 'chosen date', 'type': 'date', 'required': True, 'default': '2019-07-01'}}}}",,table,,False,False,1019,,"Count of purchased contracts, by the minute, for a chosen date",,native,,"[{'name': 'purchase_minute', 'display_name': 'Purchase Minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 400, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-07-01T00:00:00.000Z', 'latest': '2019-07-01T06:39:00.000Z'}}}}, {'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.2}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 5.8}}}}, {'name': 'count_buy', 'display_name': 'Count Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 289, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 648, 'avg': 182.423, 'sd': 220.18096480403983, 'q1': 0.9074086307771511, 'q3': 432.74113395063324}}}}]",,2019-07-15 04:27:16.005,"{'graph.dimensions': ['purchase_minute', 'market'], 'graph.metrics': ['count_buy'], 'graph.y_axis.scale': 'pow', 'table.pivot': True, 'table.pivot_column': 'market', 'table.cell_column': 'count_buy'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-03-16 02:45:10.437,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- This is not yet finished!!!\n\nselect * from\n(\n    select\n        residence,\n        sum(turnover_usd) as turnover_usd,\n        sum(profit_usd) as profit_usd\n    from\n    (\n        select\n            residence,\n            currency_code,\n            sum(turnover)*data_collection.exchangetousd_rate(tmp.currency_code, now()::date) as ""turnover_usd"",\n            sum(loss)*data_collection.exchangetousd_rate(tmp.currency_code, now()::date) as ""profit_usd""\n        from\n        (\n            select * from bet.daily_aggregates bda left join transaction.account ta\n            on ta.id=bda.account_id\n            where bda.""day"" = (now() + interval \'-1d\')::date\n        ) tmp left join betonmarkets.client bc\n        on bc.loginid=tmp.client_loginid\n        group by 1,2\n    ) tmp \n    group by 1\n    order by 2 desc \n    limit 30\n) top30'}}",,table,,False,False,499,,Countries with significant PnL and turnover (CR),,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'turnover_usd', 'display_name': 'Turnover Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5554.089542655, 'max': 1857311.6239902324, 'avg': 141024.27631490972, 'sd': 356173.98867978906, 'q1': 10037.3008909615, 'q3': 73351.0407372657}}}}, {'name': 'profit_usd', 'display_name': 'Profit Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': -3786.4, 'max': 15483.7041643, 'avg': 2578.800346186155, 'sd': 4510.360550586, 'q1': 6.3936803335, 'q3': 2793.3545708425}}}}]",,2019-03-21 02:40:47.472,"{'graph.y_axis.scale': 'pow', 'table.pivot_column': 'residence', 'table.cell_column': 'turnover_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-05-29 04:10:05.893,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\nloginid,\nt.currency_code,\nfirst_name,\nlast_name,\nemail,\nresidence,\ncitizen,\ndate_joined\nfrom audit.client\njoin transaction.account t on loginid = t.client_loginid\nwhere date_joined >= NOW()-'1 day'::interval\nand citizen <> ''\nand residence <> citizen\ngroup by 1, 2, 3, 4, 5, 6, 7, 8\norder by date_joined desc""}}",1 more check to find Chinese gang members in advance,table,,False,False,981,,Country <> residence,,native,,"[{'name': 'loginid', 'display_name': 'loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'first_name', 'display_name': 'first_name', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'last_name', 'display_name': 'last_name', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'email', 'display_name': 'email', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'residence', 'display_name': 'residence', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'citizen', 'display_name': 'citizen', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'date_joined', 'display_name': 'date_joined', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-21 01:39:06.836,{'table.pivot_column': 'currency_code'}
False,,,,,2019-05-16 04:24:29.239,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,11,"{'database': 11, 'type': 'native', 'native': {'query': ""SELECT\n  * \n FROM\n  chronicle \n WHERE\n  category='holidays' and name='country_holiday'\n ORDER BY\n  timestamp DESC limit 3""}}",,table,,False,False,973,,Country Holiday example.,,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'timestamp', 'display_name': 'Timestamp', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-12T02:54:50.000Z', 'latest': '2019-05-28T02:08:30.000Z'}}}}, {'name': 'category', 'display_name': 'Category', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'name', 'display_name': 'Name', 'base_type': 'type/Text', 'special_type': 'type/Name', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 15.0}}}}, {'name': 'value', 'display_name': 'Value', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 1.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6819.666666666667}}}}]",,2019-06-21 06:48:10.472,"{'table.pivot_column': 'category', 'table.cell_column': 'id'}"
False,,"{'id': 74, 'name': ""Chris Tan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 54, 'slug': 'chris_tan_s_personal_collection'}",74.0,,2019-03-06 06:25:15.735,"{'email': 'chris.tan@binary.com', 'first_name': 'Chris', 'last_login': '2019-10-17T08:23:50.055Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 54, 'last_name': 'Tan', 'date_joined': '2019-01-25T07:04:08.850Z', 'common_name': 'Chris Tan'}",54,2,"{'database': 2, 'type': 'native', 'native': {'query': 'with yesterday as\n(select hour,\n        sum(deposit) as deposit\nfrom\n    (select \textract(hour from p.""payment_time"") as hour,\n    \t\t    case when ""amount"">0 then ""amount"" * data_collection.exchangetousd_rate(a.""currency_code"", p.""payment_time"") end  deposit\n    from payment.payment as p \n    left join transaction.account as a \n        on p.""account_id"" = a.""id""\n  where date_trunc(\'day\',""payment_time"") = Current_date -1) tmp\ngroup by hour\n),\n\ntoday as\n(select hour,\n        sum(deposit) as deposit \nfrom\n    (select \textract(hour from p.""payment_time"") as hour,\n    \t\t    case when ""amount"">0 then ""amount"" * data_collection.exchangetousd_rate(a.""currency_code"", p.""payment_time"") end  deposit\n    from payment.payment as p \n    left join transaction.account as a \n        on p.""account_id"" = a.""id""\n  where date_trunc(\'day\',""payment_time"") = Current_date ) tmp\ngroup by hour\n),\n\naverage as\n(select hour, avg(amount) as deposit from\n(select date,hour,sum(deposit) as amount\nfrom\n    (select \tdate_trunc(\'day\',p.""payment_time"") as date, extract(hour from p.""payment_time"") as hour,\n    \t\t    case when ""amount"">0 then ""amount"" * data_collection.exchangetousd_rate(a.""currency_code"", p.""payment_time"") end  deposit\n    from payment.payment as p \n    left join transaction.account as a \n        on p.""account_id"" = a.""id""\n  where date_trunc(\'day\',""payment_time"") > Current_date -30 ) tmp\ngroup by 1,2 ) as tmp2\ngroup by 1)\n\nselect hour,round(sum(y) over (order by hour rows between unbounded preceding and current row)::numeric,2) as yesterday_cumulative_deposit,\ncase when EXTRACT(hour from now())>=hour then round(sum(t) over (order by hour rows between unbounded preceding and current row)::numeric,2) end as today_cumulative_deposit,\nround(sum(a) over (order by hour rows between unbounded preceding and current row)::numeric,2) as avg_cumulative_deposit_last_30_days from\n(select yesterday.""hour"" as hour,yesterday.""deposit"" as y,today.""deposit"" as t,average.""deposit"" as a from \nyesterday\nleft join today\non yesterday.""hour"" = today.""hour""\nleft join average\non yesterday.""hour"" = average.""hour""\n) as tmp\norder by 1\n'}}","It show the cumulative deposit for today, yesterday, average of last 30 days by hours",line,,False,False,447,,CR  Deposit Today vs Yesterday vs last 30 days,,native,,"[{'name': 'hour', 'display_name': 'Hour', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 23.0, 'avg': 11.5, 'sd': 7.071067811865475, 'q1': 5.5, 'q3': 17.5}}}}, {'name': 'yesterday_cumulative_deposit', 'display_name': 'Yesterday Cumulative Deposit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 25597.81, 'max': 759554.68, 'avg': 482065.60791666666, 'sd': 233080.44863806944, 'q1': 287639.11, 'q3': 697550.86}}}}, {'name': 'today_cumulative_deposit', 'display_name': 'Today Cumulative Deposit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.875}, 'type': {'type/Number': {'min': 32339.21, 'max': 128338.09, 'avg': 88179.03333333334, 'sd': 49883.47494666378, 'q1': 50219.3575, 'q3': 122218.5175}}}}, {'name': 'avg_cumulative_deposit_last_30_days', 'display_name': 'Avg Cumulative Deposit Last 30 Days', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 26500.97, 'max': 581880.96, 'avg': 347572.7854166667, 'sd': 175560.1991948213, 'q1': 197654.33500000002, 'q3': 509712.89}}}}]",,2019-03-12 02:52:00.597,"{'series_settings': {'Yesterday Cumulative Deposit': {'color': '#509EE3', 'line.marker_enabled': False, 'line.missing': 'none', 'axis': 'left'}, 'Today Cumulative Deposit': {'color': '#EF8C8C', 'line.marker_enabled': False, 'line.missing': 'none', 'axis': 'left'}, 'Avg Cumulative Deposit Last 30 Days': {'color': '#98D9D9', 'line.marker_enabled': False, 'line.missing': 'none', 'axis': 'left'}}, 'graph.show_goal': False, 'graph.dimensions': ['hour'], 'graph.metrics': ['yesterday_cumulative_deposit', 'today_cumulative_deposit', 'avg_cumulative_deposit_last_30_days']}"
False,,"{'id': 74, 'name': ""Chris Tan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 54, 'slug': 'chris_tan_s_personal_collection'}",74.0,,2019-03-06 06:47:25.358,"{'email': 'chris.tan@binary.com', 'first_name': 'Chris', 'last_login': '2019-10-17T08:23:50.055Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 54, 'last_name': 'Tan', 'date_joined': '2019-01-25T07:04:08.850Z', 'common_name': 'Chris Tan'}",54,2,"{'database': 2, 'type': 'native', 'native': {'query': 'with yesterday as\n(select hour,\n        sum(net_deposit) as net_deposit\nfrom\n    (select \textract(hour from p.""payment_time"") as hour,\n    \t\t    ""amount"" * data_collection.exchangetousd_rate(a.""currency_code"", p.""payment_time"") as net_deposit\n    from payment.payment as p \n    left join transaction.account as a \n        on p.""account_id"" = a.""id""\n  where date_trunc(\'day\',""payment_time"") = Current_date -1) tmp\ngroup by hour\n),\n\ntoday as\n(select hour,\n        sum(net_deposit) as net_deposit\nfrom\n    (select \textract(hour from p.""payment_time"") as hour,\n    \t\t    ""amount"" * data_collection.exchangetousd_rate(a.""currency_code"", p.""payment_time"") as net_deposit\n    from payment.payment as p \n    left join transaction.account as a \n        on p.""account_id"" = a.""id""\n  where date_trunc(\'day\',""payment_time"") = Current_date ) tmp\ngroup by hour\n),\n\naverage as\n(select hour, avg(amount) as net_deposit from\n(select date,hour,sum(net_deposit) as amount\nfrom\n    (select \tdate_trunc(\'day\',p.""payment_time"") as date, extract(hour from p.""payment_time"") as hour,\n    \t\t    ""amount"" * data_collection.exchangetousd_rate(a.""currency_code"", p.""payment_time"") as net_deposit\n    from payment.payment as p \n    left join transaction.account as a \n        on p.""account_id"" = a.""id""\n  where date_trunc(\'day\',""payment_time"") > Current_date -30 ) tmp\ngroup by 1,2 ) as tmp2\ngroup by 1)\n\nselect hour,round(sum(y) over (order by hour rows between unbounded preceding and current row)::numeric,2) as yesterday_cumulative_net_deposit,\ncase when EXTRACT(hour from now())>=hour then round(sum(t) over (order by hour rows between unbounded preceding and current row)::numeric,2) end as today_net_deposit,\nround(sum(a) over (order by hour rows between unbounded preceding and current row)::numeric,2) as avg_cumulative_net_deposit_last_30_days from\n(select yesterday.""hour"" as hour,yesterday.""net_deposit"" as y,today.""net_deposit"" as t,average.""net_deposit"" as a from \nyesterday\nleft join today\non yesterday.""hour"" = today.""hour""\nleft join average\non yesterday.""hour"" = average.""hour""\n) as tmp\norder by 1'}}","It show the cumulative net deposit for today, yesterday, average of last 30 days by hours",line,,False,False,449,,CR  Net Deposit Today vs Yesterday vs last 30 days,,native,,"[{'name': 'hour', 'display_name': 'Hour', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 23.0, 'avg': 11.5, 'sd': 7.071067811865475, 'q1': 5.5, 'q3': 17.5}}}}, {'name': 'yesterday_cumulative_net_deposit', 'display_name': 'Yesterday Cumulative Net Deposit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 12302.43, 'max': 273229.57, 'avg': 177415.6975, 'sd': 74842.24559670266, 'q1': 132243.16499999998, 'q3': 248525.09}}}}, {'name': 'today_net_deposit', 'display_name': 'Today Net Deposit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.875}, 'type': {'type/Number': {'min': -470.89, 'max': 49978.21, 'avg': 29479.703333333335, 'sd': 26519.509412282372, 'q1': 9379.78, 'q3': 47216.604999999996}}}}, {'name': 'avg_cumulative_net_deposit_last_30_days', 'display_name': 'Avg Cumulative Net Deposit Last 30 Days', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5548.18, 'max': 112581.12, 'avg': 57431.33416666667, 'sd': 33922.73443988123, 'q1': 29630.010000000002, 'q3': 90088.475}}}}]",,2019-03-12 02:52:06.655,"{'table.pivot_column': 'today_net_deposit', 'table.cell_column': 'hour', 'series_settings': {'Yesterday Cumulative Net Deposit': {'color': '#509EE3', 'line.marker_enabled': False, 'line.missing': 'none', 'axis': 'left'}, 'Today Net Deposit': {'color': '#EF8C8C', 'line.marker_enabled': False, 'line.missing': 'none', 'axis': 'left'}, 'Avg Cumulative Net Deposit Last 30 Days': {'color': '#98D9D9', 'line.marker_enabled': False, 'line.missing': 'none', 'axis': 'left'}}, 'graph.dimensions': ['hour'], 'graph.metrics': ['yesterday_cumulative_net_deposit', 'today_net_deposit', 'avg_cumulative_net_deposit_last_30_days']}"
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-17 03:29:44.569,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select residence, count(loginid) from\n(\n    select \n      first(c.residence) as ""residence"",\n      first(ta.client_loginid) as ""loginid""\n    from transaction.firsts\n    left join transaction.account ta\n      on ta.id=account_id\n    left join betonmarkets.client as c\n      on ta.client_loginid=c.loginid\n    where action_type = \'sell\'\n    and {{period}}\n    group by ta.client_loginid\n) as t\ngroup by 1\norder by 2 desc', 'template-tags': {'period': {'widget-type': 'date/all-options', 'default': 'past1days~', 'name': 'period', 'type': 'dimension', 'id': '0ace4bf2-d168-085e-0522-6c624dc1c933', 'dimension': ['field-id', 260], 'display-name': 'Period', 'required': True}}}}",,row,,False,False,93,40.0,CR active acc by country,97a5f92a-296c-407a-9f67-29b608a436fc,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 23, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 455.0, 'avg': 23.106666666666666, 'sd': 70.24370190741413, 'q1': 1.568609754399891, 'q3': 10.12917130661303}}}}]",,2019-04-29 03:05:13.429,"{'table.pivot_column': 'count', 'table.cell_column': 'count', 'series_settings': {'Count': {'color': '#74838F'}}, 'graph.dimensions': ['residence'], 'graph.metrics': ['count']}"
False,,,,,2018-11-30 10:47:14.977,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \n  ""day"",\n--  sum(turnover) as ""turnover"",\n--  sum(loss) as ""profit"",\n  count(distinct account_id) as ""customer_count""\nfrom bet.daily_aggregates\nWHERE CAST(""bet"".""daily_aggregates"".""day"" AS date) BETWEEN CAST((NOW() + INTERVAL \'-90 day\') AS date)\n   AND CAST((NOW() + INTERVAL \'-1 day\') AS date)\nGROUP BY CAST(""bet"".""daily_aggregates"".""day"" AS date)\nORDER BY CAST(""bet"".""daily_aggregates"".""day"" AS date) DESC'}}",Three month (90-day) customer counts,line,,False,False,58,40.0,CR active customers,44fb3115-5740-4c1e-9dc5-f6b51a703d83,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 35, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-08T00:00:00.000Z', 'latest': '2019-05-12T00:00:00.000Z'}}}}, {'name': 'customer_count', 'display_name': 'Customer Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 35, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4155.0, 'max': 7199.0, 'avg': 6109.114285714286, 'sd': 1063.4540497672606, 'q1': 4861.25, 'q3': 6838.5}}}}]",,2019-05-13 01:50:26.175,"{'series_settings': {'Customer Count': {'display': 'area', 'line.interpolate': 'cardinal'}}, 'graph.show_trendline': True, 'graph.dimensions': ['day'], 'graph.metrics': ['customer_count'], 'graph.x_axis.title_text': 'Date'}"
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-19 05:02:39.971,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- active clients\nselect count(distinct account_id) from bet.daily_aggregates where {{period}}', 'template-tags': {'period': {'widget-type': 'date/all-options', 'default': 'past1days~', 'name': 'period', 'type': 'dimension', 'id': 'ca567ada-e8ed-5e10-87a7-e70aa60ac4d2', 'dimension': ['field-id', 959], 'display-name': 'Period', 'required': True}}}}",,scalar,,False,False,109,,CR active unique accounts by period,,native,,"[{'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 7837.0, 'max': 7837.0, 'avg': 7837.0, 'sd': None, 'q1': 7837.0, 'q3': 7837.0}}}}]",,2019-05-15 08:33:52.565,{}
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-17 05:38:42.684,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select avg(amount_usd) from (\nselect amount*data_collection.exchangetousd_rate(""currency_code"", transaction_time) as ""amount_usd""\nfrom transaction.firsts left join transaction.account ta\non ta.id=account_id and action_type=\'deposit\'\nwhere {{period}}\n) as t\n', 'template-tags': {'period': {'widget-type': 'date/all-options', 'default': 'past1days~', 'name': 'period', 'type': 'dimension', 'id': 'c6a31a52-4710-ad63-de43-c004e614d42b', 'dimension': ['field-id', 260], 'display-name': 'Period', 'required': True}}}}",,gauge,,False,False,95,,CR avg first deposit,,native,,"[{'name': 'avg', 'display_name': 'Avg', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 81.64648318823244, 'max': 81.64648318823244, 'avg': 81.64648318823244, 'sd': None, 'q1': 81.64648318823244, 'q3': 81.64648318823244}}}}]",,2019-04-29 03:05:14.136,"{'column_settings': {'[""name"",""avg""]': {'number_style': 'currency'}}, 'gauge.segments': [{'min': 0, 'max': 50, 'color': '#ED6E6E', 'label': ''}, {'min': 50, 'max': 150, 'color': '#F9CF48', 'label': ''}, {'min': 150, 'max': 300, 'color': '#84BB4C', 'label': ''}]}"
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-19 05:07:45.495,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- balance on active accounts\nselect sum(""balance_usd"") as ""total_active_balance_usd"" from (\n    select \n      acc.balance*data_collection.exchangetousd_rate(acc.currency_code, acc.last_modified) as ""balance_usd"" \n    from transaction.account as acc\n    where acc.balance>0 \n    and acc.is_default=True \n    and acc.id in (select distinct account_id from bet.daily_aggregates where {{period}} )\n) as t', 'template-tags': {'period': {'widget-type': 'date/all-options', 'default': 'past1days~', 'name': 'period', 'type': 'dimension', 'id': '164f9662-c13f-8882-a462-02b7463b64c8', 'dimension': ['field-id', 959], 'display-name': 'Period', 'required': True}}}}",,scalar,,False,False,110,,CR balance of unique active accounts by period,,native,,"[{'name': 'total_active_balance_usd', 'display_name': 'Total Active Balance Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1789699.2520868075, 'max': 1789699.2520868075, 'avg': 1789699.2520868075, 'sd': None, 'q1': 1789699.2520868075, 'q3': 1789699.2520868075}}}}]",,2019-05-15 08:33:53.244,"{'column_settings': {'[""name"",""total_active_balance_usd""]': {'number_style': 'currency'}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-12 10:50:27.119,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select c.residence, lower(c.address_city), sum(""amount_USD"") as ""deposit_amount_USD"", count (distinct client_loginid) as ""client_count"" from\n  (\n    select \n    a.client_loginid,\n    a.currency_code, \n    f.amount,\n    f.amount*data_collection.exchangetousd_rate(a.currency_code, CAST(now() as date))\n            as ""amount_USD"" from transaction.transaction f left join transaction.account a \n            on f.account_id = a.id\n            where f.transaction_time >= now() + interval \'-7 day\'\n            and f.action_type=\'deposit\'\n            --where date_joined >= now() + interval \'-7 day\'\n  ) aaa left join betonmarkets.client c\non aaa.client_loginid = c.loginid\ngroup by 1,2\norder by 3 desc, 4 desc\nlimit 20\n\n'}}",,bar,,False,False,78,,CR cities with high total deposits in the past week,,native,,"[{'name': 'residence', 'display_name': 'residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'lower', 'display_name': 'lower', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.7}}}}, {'name': 'deposit_amount_USD', 'display_name': 'deposit_amount_USD', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 49793.63581023939, 'max': 209019.38445667693, 'avg': 92611.17937021854, 'sd': 45269.59603766526, 'q1': 57205.28972302868, 'q3': 108893.12335082394}}}}, {'name': 'client_count', 'display_name': 'client_count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 316.0, 'avg': 103.1, 'sd': 97.69388280154548, 'q1': 27.0, 'q3': 157.5}}}}]",,2019-10-09 08:03:12.249,"{'table.pivot_column': 'residence', 'table.cell_column': 'deposit_amount_USD', 'graph.dimensions': ['lower', 'residence'], 'graph.metrics': ['deposit_amount_USD']}"
False,,"{'id': 73, 'name': ""Dwi Hadyan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 53, 'slug': 'dwi_hadyan_s_personal_collection'}",73.0,,2019-01-25 04:09:26.811,"{'email': 'dwi@binary.com', 'first_name': 'Dwi', 'last_login': '2019-06-21T06:57:40.046Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 53, 'last_name': 'Hadyan', 'date_joined': '2019-01-24T02:54:53.692Z', 'common_name': 'Dwi Hadyan'}",53,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select  date_joined::timestamp::date, count(loginid) \nfrom betonmarkets.client\nwhere date_joined::timestamp::date = now()::timestamp::date \nOR date_joined::timestamp::date = (now() - interval '1 days')::timestamp::date\nGROUP BY 1\nORDER BY 1 asc;""}}",249 Non UK & EU Countries (Forex & Vol),smartscalar,,False,False,231,,CR Client Sign Up,,native,,"[{'name': 'date_joined', 'display_name': 'Date Joined', 'base_type': 'type/Date', 'special_type': 'type/JoinDate', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-06-30T00:00:00.000Z', 'latest': '2019-07-01T00:00:00.000Z'}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 103.0, 'max': 729.0, 'avg': 416.0, 'sd': 442.64884502277874, 'q1': 103.0, 'q3': 729.0}}}}]",,2019-07-01 05:16:58.140,{'scalar.switch_positive_negative': False}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-20 13:38:50.426,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select d.""day"", d.""residence"", \n--round(d.""turnover_USD"",2) as ""turnover_USD"" \n--, round(d.""profit_USD"",2) as ""profit_USD"", \n""client_count""\nfrom\n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD"", count(distinct ""client_loginid"") as ""client_count""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-31 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\n) d right join \n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-1 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\nlimit {{country_count}}\n) e\non e.residence=d.residence\norder by 1 desc, 3 desc\n\n', 'template-tags': {'country_count': {'id': 'bd084a17-379f-9ecc-34a3-6aacc0cf1615', 'name': 'country_count', 'display-name': 'How many countries?', 'type': 'number', 'required': True, 'default': '7'}}}}",,line,,False,False,405,,"CR client-count of top-N countries, in the last 30 days",,native,,"[{'name': 'day', 'display_name': 'day', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'residence', 'display_name': 'residence', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'client_count', 'display_name': 'client_count', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-21 00:04:27.848,"{'graph.y_axis.scale': 'pow', 'graph.dimensions': ['day', 'residence'], 'graph.metrics': ['client_count']}"
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-14 07:07:50.127,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'native': {'template-tags': {'period': {'id': 'fd5839e5-089d-7e29-c39a-f35dedd88cff', 'name': 'period', 'display-name': 'period', 'type': 'dimension', 'required': True, 'default': 'yesterday', 'dimension': ['field-id', 852], 'widget-type': 'date/relative'}}, 'query': 'select residence, count(distinct loginid) from betonmarkets.client \nwhere {{period}}\ngroup by residence\norder by 2 desc'}, 'type': 'native', 'database': 2}",,map,,False,False,82,,CR clients joined by country,,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 103, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 37, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 820.0, 'avg': 47.81553398058252, 'sd': 139.91248998702346, 'q1': 1.883187145750718, 'q3': 16.129171306613028}}}}]",,2019-04-29 03:05:13.195,"{'map.region': 'world_countries', 'map.dimension': 'residence', 'map.colors': ['#ebe3f2', '#d3c0e2', '#ba9ed3', '#a27bc3', 'hsl(272, 37.5%, 45.8%)'], 'graph.dimensions': ['residence', 'date_joined'], 'graph.metrics': [None], 'map.type': 'region', 'map.latitude_column': 'count'}"
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-14 07:18:14.318,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'native': {'template-tags': {'period': {'widget-type': 'date/all-options', 'default': 'past30days~', 'name': 'period', 'type': 'dimension', 'id': '814eee4a-3694-5cee-6efb-24fa87f9de41', 'dimension': ['field-id', 852], 'display-name': 'Period', 'required': True}}, 'query': 'select residence, count(distinct loginid) from betonmarkets.client \nwhere {{period}}\ngroup by residence\norder by 2 desc'}, 'type': 'native', 'database': 2}",,row,,False,False,83,,CR clients joined by country (bar),,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 103, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 37, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 820.0, 'avg': 47.81553398058252, 'sd': 139.91248998702346, 'q1': 1.883187145750718, 'q3': 16.129171306613028}}}}]",,2019-04-29 03:05:13.164,"{'series_settings': {'Count': {'color': '#A989C5', 'display': 'bar', 'line.interpolate': 'step-after', 'line.marker_enabled': None}}, 'graph.dimensions': ['residence'], 'graph.metrics': ['count']}"
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-19 05:20:40.057,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- clients registered by period\nselect count(loginid) from betonmarkets.client where {{period}}', 'template-tags': {'period': {'widget-type': 'date/all-options', 'default': 'past1days~', 'name': 'period', 'type': 'dimension', 'id': 'c0ee434d-9863-9edc-5294-c013047e1edb', 'dimension': ['field-id', 852], 'display-name': 'Period', 'required': True}}}}",,scalar,,False,False,111,,CR clients registered by period,,native,,"[{'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 967.0, 'max': 967.0, 'avg': 967.0, 'sd': None, 'q1': 967.0, 'q3': 967.0}}}}]",,2019-05-21 06:02:36.238,{}
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-19 06:48:48.368,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- company revenue by period\nselect sum(""amount_usd"")\nfrom (\n    select coalesce(loss,0)*data_collection.exchangetousd_rate(a.currency_code, ""day"") as ""amount_usd""\n    from bet.daily_aggregates \n    join transaction.account as a \n    on a.id=account_id\n    and {{period}}\n) as t', 'template-tags': {'period': {'widget-type': 'date/all-options', 'default': 'past1days~', 'name': 'period', 'type': 'dimension', 'id': 'beb0c6a0-04ae-43ed-d6e9-8f9b4cc9f920', 'dimension': ['field-id', 959], 'display-name': 'Period', 'required': True}}}}",,scalar,,False,False,114,,CR company revenue by period,,native,,"[{'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 128945.35108139589, 'max': 128945.35108139589, 'avg': 128945.35108139589, 'sd': None, 'q1': 128945.35108139589, 'q3': 128945.35108139589}}}}]",,2019-05-15 08:33:53.411,"{'column_settings': {'[""name"",""sum""]': {'number_style': 'currency'}}}"
False,,,,,2018-11-30 02:14:59.568,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \n  ""day"",\n--  sum(turnover) as ""turnover"",\n--  sum(loss) as ""profit"",\n  count(distinct account_id) as ""customer_count""\nfrom bet.daily_aggregates\nWHERE CAST(""bet"".""daily_aggregates"".""day"" AS date) BETWEEN CAST((NOW() + INTERVAL \'-30 day\') AS date)\n   AND CAST((NOW() + INTERVAL \'-1 day\') AS date)\nGROUP BY CAST(""bet"".""daily_aggregates"".""day"" AS date)\nORDER BY CAST(""bet"".""daily_aggregates"".""day"" AS date) DESC'}}",,line,,False,False,57,37.0,CR customer counts,71f859e6-7d5e-4729-ae86-80dcc5f0ca0a,native,,"[{'name': 'day', 'display_name': 'day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-21T00:00:00.000Z', 'latest': '2019-10-18T00:00:00.000Z'}}}}, {'name': 'customer_count', 'display_name': 'customer_count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2462.0, 'max': 9262.0, 'avg': 7617.571428571428, 'sd': 1726.5499623488374, 'q1': 6003.5, 'q3': 8802.5}}}}]",,2019-10-21 00:04:03.210,"{'series_settings': {'Customer Count': {'display': 'area', 'line.interpolate': 'cardinal'}}, 'graph.show_trendline': True, 'graph.dimensions': ['day'], 'graph.metrics': ['customer_count']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-19 08:20:19.593,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'country_count': {'id': '7c2e6788-fa0a-1877-b969-ed7f2bba6908', 'name': 'country_count', 'display-name': 'How many countries?', 'type': 'number', 'required': True, 'default': '7'}}, 'query': 'select d.""day"", d.""residence"", \n--round(d.""turnover_USD"",2) as ""turnover_USD"", round(d.""profit_USD"",2) as ""profit_USD"", \n""client_count""\nfrom\n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD"", count(distinct ""client_loginid"") as ""client_count""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-31 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\n) d right join \n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-1 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\nlimit {{country_count}}\n) e\non e.residence=d.residence\norder by 1 desc, 3 desc\n\n'}, 'type': 'native', 'database': 2}",,line,,False,False,117,37.0,CR customer counts of top-N countries in the last 30 days,4d622712-84e0-4640-b2a1-7ff096d154a0,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 31, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-06-08T00:00:00.000Z', 'latest': '2019-07-08T00:00:00.000Z'}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'client_count', 'display_name': 'Client Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 184, 'nil%': 0.0}, 'type': {'type/Number': {'min': 55.0, 'max': 2359.0, 'avg': 735.2718894009216, 'sd': 702.0486921565083, 'q1': 174.24545384457048, 'q3': 1096.3686629910533}}}}]",,2019-07-09 08:07:23.767,"{'graph.dimensions': ['day', 'residence'], 'graph.metrics': ['client_count'], 'graph.y_axis.scale': 'log', 'series_settings': {'id': {'line.interpolate': 'cardinal', 'line.marker_enabled': False}, 'br': {'line.marker_enabled': False, 'line.interpolate': 'cardinal'}, 'ru': {'line.interpolate': 'cardinal', 'line.marker_enabled': False}, 'vn': {'line.interpolate': 'cardinal', 'line.marker_enabled': False}, 'th': {'line.interpolate': 'cardinal', 'line.marker_enabled': False}, 'ng': {'line.marker_enabled': False, 'line.interpolate': 'cardinal'}, 'in': {'line.marker_enabled': False, 'line.interpolate': 'cardinal'}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-03-13 02:59:32.009,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'country_count': {'id': '7c2e6788-fa0a-1877-b969-ed7f2bba6908', 'name': 'country_count', 'display-name': 'How many countries?', 'type': 'number', 'required': True, 'default': '7'}}, 'query': 'select d.""day"", d.""residence"", \n--round(d.""turnover_USD"",2) as ""turnover_USD"", round(d.""profit_USD"",2) as ""profit_USD"", \n""client_count""\nfrom\n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD"", count(distinct ""client_loginid"") as ""client_count""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-91 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\n) d right join \n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-1 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\nlimit {{country_count}}\n) e\non e.residence=d.residence\norder by 1 desc, 3 desc\n\n'}, 'type': 'native', 'database': 2}",,table,,False,False,493,,CR customer counts of top-N countries in the last 90 days,,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 35, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-14T00:00:00.000Z', 'latest': '2019-03-20T00:00:00.000Z'}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'client_count', 'display_name': 'Client Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 181, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 2774.0, 'avg': 671.9142857142857, 'sd': 800.8264134969195, 'q1': 52.85379996685289, 'q3': 928.1879537270692}}}}]",,2019-03-21 02:41:41.841,"{'graph.dimensions': ['day', 'residence'], 'graph.metrics': ['client_count'], 'graph.y_axis.scale': 'linear', 'series_settings': {'id': {'line.interpolate': 'cardinal', 'line.marker_enabled': False}, 'br': {'line.marker_enabled': False, 'line.interpolate': 'cardinal'}, 'ru': {'line.interpolate': 'cardinal', 'line.marker_enabled': False}, 'vn': {'line.interpolate': 'cardinal', 'line.marker_enabled': False}, 'th': {'line.interpolate': 'cardinal', 'line.marker_enabled': False}, 'ng': {'line.marker_enabled': False, 'line.interpolate': 'cardinal'}, 'in': {'line.marker_enabled': False, 'line.interpolate': 'cardinal'}}, 'table.pivot_column': 'residence', 'table.cell_column': 'client_count'}"
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-19 06:05:44.493,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'native': {'template-tags': {'period': {'widget-type': 'date/all-options', 'default': 'past1days~', 'name': 'period', 'type': 'dimension', 'id': '319f8c32-073a-fdec-f3b8-b0cf00aee607', 'dimension': ['field-id', 748], 'display-name': 'Period', 'required': True}}, 'query': '-- total deposits_usd\n-- this includes for example \'external_cashier\', \'crypto_cashier\', \'free_gift\', \'affiliate_reward\', \'adjustment\nselect sum(""amount_usd"")\nfrom (\n    select \n    --   coalesce(p.transfer_fees,0)*data_collection.exchangetousd_rate(a.currency_code, p.payment_time) as ""transfer_fees_usd"",\n      coalesce(amount,0)*data_collection.exchangetousd_rate(a.currency_code, payment_time) as ""amount_usd""\n    from payment.payment\n    join transaction.account as a\n    on a.id = account_id \n    and payment_type_code!=\'mt5_transfer\'\n    and payment_type_code!=\'internal_transfer\'\n    and amount>0\n    and {{period}}\n) as t'}, 'type': 'native', 'database': 2}",,scalar,,False,False,112,,CR deposits by period,,native,,"[{'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 383918.69614695583, 'max': 383918.69614695583, 'avg': 383918.69614695583, 'sd': None, 'q1': 383918.69614695583, 'q3': 383918.69614695583}}}}]",,2019-05-15 08:34:27.852,"{'column_settings': {'[""name"",""sum""]': {'number_style': 'currency'}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-12 10:10:08.014,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select c.residence, lower(c.address_city) as ""city"", sum(""amount_USD"") as ""deposit_amount_USD"", count (distinct client_loginid) as ""client_count"" from\n  (\n    select \n    a.client_loginid,\n    a.currency_code, \n    f.amount,\n    f.amount*data_collection.exchangetousd_rate(a.currency_code, CAST(now() as date))\n            as ""amount_USD"" from transaction.firsts f left join transaction.account a \n            on f.account_id = a.id\n            where f.transaction_time >= now() + interval \'-7 day\'\n            and f.action_type=\'deposit\'\n            --where date_joined >= now() + interval \'-7 day\'\n  ) aaa left join betonmarkets.client c\non aaa.client_loginid = c.loginid\ngroup by 1,2\norder by 3 desc, 4 desc\nlimit 20\n\n'}}",,bar,,False,False,77,,CR first deposits from new clients in past week,,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'city', 'display_name': 'City', 'base_type': 'type/Text', 'special_type': 'type/City', 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.2}}}}, {'name': 'deposit_amount_USD', 'display_name': 'Deposit Amount Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1500.0, 'max': 5455.301066771, 'avg': 2725.0670322223896, 'sd': 1064.252533788124, 'q1': 2000.0, 'q3': 3224.2650000000003}}}}, {'name': 'client_count', 'display_name': 'Client Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 25.0, 'avg': 7.8, 'sd': 6.7402951676739224, 'q1': 2.333333333333333, 'q3': 10.0}}}}]",,2019-02-21 03:23:40.016,"{'graph.dimensions': ['city', 'residence'], 'graph.metrics': ['deposit_amount_USD'], 'graph.y_axis.title_text': 'Total first deposits in USD', 'table.pivot_column': 'residence', 'table.cell_column': 'deposit_amount_USD'}"
False,,"{'id': 185, 'name': 'CR', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'cr'}",185.0,,2019-04-09 09:40:05.551,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- evaluation 4\n-- CR/MT5 CRS report .v4\nWITH mt AS (\n\t-- this CTE can be run by itself to see the raw MT5 results\n\tSELECT mtu.""Login"", mtu.""Registration"", mtd.""Balance"", mtd.""Currency"", deals.""profit"", deals.""swap"", deals.""eod_profit"", deals.""eod_swap"", deals.""eod_commission"", deals.""eod_correction""\n\tFROM mt5.mt5_users AS mtu\n\tJOIN (\n\t\tSELECT\t\t-- This yields one row for every Login id who did something that created a record in deal\n\t\t  ""login"",\n\t\t\tSUM(""profit"")  FILTER (WHERE ""action"" IN (0,1) AND ""entry""=1) AS profit,\t-- Only add up BUY/SELL\n\t\t\tSUM(""storage"") FILTER (WHERE ""action"" IN (0,1) AND ""entry""=1) AS swap,\n\t\t-- The following sub sets are only necessary to adjust closing balance figures\n\t\t\tSUM(""profit"")     FILTER (WHERE ""time"" > \'2017-12-31 21:00:59\' AND ""action"" IN (0,1) AND ""entry""=1) AS eod_profit,\t-- Only add up BUY/SELL records that were not reflected in the last day\'s final sums\n\t\t\tSUM(""storage"")    FILTER (WHERE ""time"" > \'2017-12-31 21:00:59\' AND ""action"" IN (0,1) AND ""entry""=1) AS eod_swap,\n\t\t\tSUM(""commission"") FILTER (WHERE ""time"" > \'2017-12-31 21:00:59\' AND ""action"" IN (0,1) AND ""entry""=1) AS eod_commission,\n\t\t\tSUM(""profit"")     FILTER (WHERE ""time"" > \'2017-12-31 21:00:59\' AND ""action""=5)                    AS eod_correction\t-- Only add up corrections records that were not reflected in the last day\'s final sums\n\t\tFROM mt5.deals_2017 deal\t\t-- this is a static local table copied directly from MT5 to speed up the process\n\t\tGROUP BY ""login""\n\t) AS deals ON deals.""login""=mtu.""Login""\n\tLEFT JOIN mt5.mt5_daily_2017 AS mtd\t-- unfortunately some clients have no entry in here, so LEFT JOIN\n\t\tON mtd.""Login""=mtu.""Login""\n\t\tAND mtd.""Datetime"" = 1514754059\t-- Sunday, December 31, 2017 10:00:59 PM (Last date/time in the mt5_daily_2017 table)\n\tWHERE mtu.""Group"" LIKE \'%real\\\\vanuatu%\'\n)\n\nSELECT\n\tcr.cr_loginid, cr.mt5_loginid,\n\tmt.""Registration"" AS mt_acct_opening_date,\n\t\'Other\'::VARCHAR AS account_type,\n\tclient.status AS account_status, client.first_name, client.last_name,\n\tbbc.country_name AS country_of_residence,\n\tUPPER(client.tax_residence) AS tax_residence,\n\tclient.tax_identification_number,\n\tclient.date_of_birth,\n\tUPPER(client.place_of_birth) AS place_of_birth, \n\tclient.address_line_1, client.address_line_2, client.address_postcode, client.address_city, client.address_state,\n\tUPPER(client.residence) AS residence,\n\ttransaction.round_amount(mt.""Currency"", mt.""Balance""::NUMERIC) AS account_balance,\n\tmt.""Currency"" AS account_currency,\n\ttransaction.round_amount(mt.""Currency"", mt.""profit""::NUMERIC) AS profit,\n\ttransaction.round_amount(mt.""Currency"", mt.""swap""::NUMERIC) AS swap,\n\ttransaction.round_amount(mt.""Currency"", mt.""eod_profit""::NUMERIC) AS eod_profit,\n\ttransaction.round_amount(mt.""Currency"", mt.""eod_swap""::NUMERIC) AS eod_swap,\n\tcr.binary_user_id\nFROM mt\nJOIN oldest_cr_sibling_mt AS cr\n\tON cr.mt5_loginid=\'MT\'||mt.""Login""::VARCHAR\nJOIN LATERAL (\n\t-- This part is the clientDB part. Rather than grabbing every client and filtering them in reportDB, we are grabbing only the ones of interest.\n\tSELECT * FROM dblink(\'cr\', $$\n\t\tSELECT\n\t\t\tbc.first_name, bc.last_name, bc.residence, bc.tax_residence, bc.tax_identification_number, bc.date_of_birth, bc.place_of_birth, \n\t\t\tbc.address_line_1, bc.address_line_2, bc.address_postcode, bc.address_city, bc.address_state,\n\t\t\tcs.status\n\t\tFROM betonmarkets.client AS bc\n\t\tLEFT JOIN LATERAL (\n\t\t\tSELECT string_agg(bcs.status_code, \', \') AS status\n              FROM betonmarkets.client_status AS bcs\n             WHERE bcs.client_loginid = bc.loginid\n               AND bcs.status_code IN (\'disabled\',\'unwelcome\',\'cashier_locked\')\n\t\t) AS cs ON TRUE\n\t\tWHERE bc.loginid= $$|| quote_literal(cr.cr_loginid) ||$$\n\t$$) AS cr (\n\t\tfirst_name VARCHAR, last_name VARCHAR, residence VARCHAR, tax_residence VARCHAR, tax_identification_number VARCHAR, date_of_birth VARCHAR, place_of_birth VARCHAR,\n\t\taddress_line_1 VARCHAR, address_line_2 VARCHAR, address_postcode VARCHAR, address_city VARCHAR, address_state VARCHAR, status VARCHAR\n\t)\n) AS client ON TRUE\n-- This is a local, static table created from the countries.yml file\nJOIN brands_binary_countries AS bbc\n\tON bbc.country_code=client.residence\nWHERE bbc.tax_details_required\nORDER BY 2'}}",evaluation 4,table,,False,False,857,,CR MT5 CRS report v4,,native,,,,2019-04-09 09:40:05.551,{}
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-17 07:22:54.693,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \n  DATE_TRUNC({{granularity}}, ""transaction_time""),\n  count(""loginid"")\nfrom (\n\n    select \n      first(transaction_time) as ""transaction_time"",\n      ta.client_loginid as ""loginid""\n    from transaction.firsts\n    left join transaction.account ta\n      on ta.id=account_id\n    where action_type = \'sell\'\n    and {{period}}\n    group by 2\n) as t\ngroup by 1\norder by 1', 'template-tags': {'granularity': {'id': 'f60c6c2f-7375-d690-3e71-a2ca8a43c259', 'name': 'granularity', 'display-name': 'time granularity', 'type': 'text', 'required': True, 'default': 'day'}, 'period': {'widget-type': 'date/all-options', 'default': 'past30days', 'name': 'period', 'type': 'dimension', 'id': '784c65b0-b2a3-e413-c90c-32c698ee0e6b', 'dimension': ['field-id', 260], 'display-name': 'Period', 'required': True}}}}",,area,,False,False,100,,CR new active by time,,native,,"[{'name': 'date_trunc', 'display_name': 'Date Trunc', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-22T00:00:00.000Z', 'latest': '2019-04-28T00:00:00.000Z'}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 144.0, 'max': 334.0, 'avg': 247.57142857142858, 'sd': 70.87749323740962, 'q1': 183.0, 'q3': 293.0}}}}]",,2019-04-29 03:05:14.508,"{'graph.dimensions': ['date_trunc'], 'graph.metrics': ['count']}"
False,,,,,2018-12-02 11:06:14.259,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select e.""date"",\nsum(e.new_deposit_count) as ""num_new_deposits"",\nsum(e.total_new_buy_count) as ""num_new_buys"",\nsum(e.new_financial_buy_count) as ""num_new_fin_buys"",\nsum(e.new_nonfinancial_buy_count) as ""num_new_nonfin_buys"",\nsum(e.new_deposit_amount*e.exchangetousd_rate) as ""new_deps_USD"",\nsum(e.total_new_buy_amount*e.exchangetousd_rate) as ""new_buys_USD"",\nsum(e.new_financial_buy_amount*e.exchangetousd_rate) as ""new_fin_buys_USD"",\nsum(e.new_nonfinancial_buy_amount*e.exchangetousd_rate) as ""new_nonfin_buys_USD""\nfrom\n(\n  select data_collection.exchangetousd_rate(d.currency_code, d.""date""), d.*\n  from\n  (\n    select \n    CAST(f.transaction_time AS date) as ""date"",\n    a.currency_code,\n    count(1) filter (where f.action_type=\'buy\') as total_new_buy_count,\n    sum(abs(f.amount)) filter (where f.action_type=\'buy\') as total_new_buy_amount,\n    count(1) filter(where f.action_type=\'deposit\') as new_deposit_count, \n    coalesce(sum(f.amount) filter (where f.action_type=\'deposit\'), 0) as new_deposit_amount, \n    count(1) filter(where f.action_type=\'buy\' and f.market_type=\'financial\') as new_financial_buy_count,\n    coalesce(sum(abs(f.amount)) filter(where f.action_type=\'buy\' and f.market_type=\'financial\'), 0) as new_financial_buy_amount,\n    count(1) filter(where f.action_type=\'buy\' and f.market_type !=\'financial\') as new_nonfinancial_buy_count,\n    coalesce(sum(abs(f.amount)) filter(where f.action_type=\'buy\' and f.market_type !=\'financial\'), 0) as new_nonfinancial_buy_amount\n    --*/\n    from transaction.firsts f left join transaction.account a\n    on f.account_id=a.id\n    WHERE CAST(transaction_time AS date) BETWEEN CAST((NOW() + INTERVAL \'-30 day\') AS date)\n       AND CAST((NOW() + INTERVAL \'-1 day\') AS date)\n    --and action_type in (\'deposit\', \'buy\')\n    GROUP BY 1,2 --,2,3\n    ORDER BY CAST(transaction_time AS date) DESC--, action_type, market_type\n    --limit 10\n  ) d\n) e\n\ngroup by 1\norder by 1 desc\n\n\n\n'}}",,line,,False,False,62,,CR new deposits and buys,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-07-09T00:00:00.000Z', 'latest': '2019-08-07T00:00:00.000Z'}}}}, {'name': 'num_new_deposits', 'display_name': 'Num New Deposits', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 27, 'nil%': 0.0}, 'type': {'type/Number': {'min': 227.0, 'max': 570.0, 'avg': 417.03333333333336, 'sd': 86.09156446054612, 'q1': 385.0, 'q3': 474.0}}}}, {'name': 'num_new_buys', 'display_name': 'Num New Buys', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 29, 'nil%': 0.0}, 'type': {'type/Number': {'min': 154.0, 'max': 489.0, 'avg': 358.1, 'sd': 101.56918824131657, 'q1': 280.8859538993036, 'q3': 424.0}}}}, {'name': 'num_new_fin_buys', 'display_name': 'Num New Fin Buys', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 22, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 203.0, 'avg': 117.9, 'sd': 74.30057780440852, 'q1': 1.0, 'q3': 166.0}}}}, {'name': 'num_new_nonfin_buys', 'display_name': 'Num New Nonfin Buys', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 25, 'nil%': 0.0}, 'type': {'type/Number': {'min': 154.0, 'max': 325.0, 'avg': 240.2, 'sd': 37.48139768490221, 'q1': 230.0, 'q3': 258.0}}}}, {'name': 'new_deps_USD', 'display_name': 'New Deps Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 17470.094348699367, 'max': 144198.7668282089, 'avg': 51495.888014159325, 'sd': 24684.388080940844, 'q1': 35368.22916833444, 'q3': 60922.17745200033}}}}, {'name': 'new_buys_USD', 'display_name': 'New Buys Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 402.557498014335, 'max': 4258.431983481675, 'avg': 1751.8010055226227, 'sd': 816.5733272608144, 'q1': 1246.17716202096, 'q3': 2265.343121468455}}}}, {'name': 'new_fin_buys_USD', 'display_name': 'New Fin Buys Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 3583.4295562, 'avg': 709.1132794009435, 'sd': 728.0178602159159, 'q1': 1.0, 'q3': 832.97074885}}}}, {'name': 'new_nonfin_buys_USD', 'display_name': 'New Nonfin Buys Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 402.557498014335, 'max': 1736.7938695792, 'avg': 1042.6877261216794, 'sd': 368.5428782937792, 'q1': 763.32572174096, 'q3': 1313.996697210905}}}}]",,2019-08-08 06:22:22.833,"{'series_settings': {'Num New Buys': {'axis': 'left'}, 'New Non Fin Buys Usd': {'axis': 'right', 'display': 'area'}, 'New Non Financial Buy Amount': {'display': 'area', 'axis': 'left', 'line.interpolate': 'linear'}, 'New Buys Usd': {'axis': 'right', 'display': 'area'}, 'Num New Deposits': {'axis': 'left'}, 'New Deposit Count': {'axis': 'right', 'line.interpolate': 'linear', 'display': 'bar'}, 'Num New Non Fin Buys': {'axis': 'left'}, 'New De Ps Usd': {'axis': 'right', 'display': 'area'}, 'New Financial Buy Amount': {'display': 'area', 'line.interpolate': 'linear'}, 'Total New Buy Count': {'axis': 'right', 'line.interpolate': 'linear', 'display': 'bar'}, 'New Non Financial Buy Count': {'axis': 'right', 'line.interpolate': 'linear', 'display': 'bar'}, 'New Deposit Amount': {'display': 'area', 'axis': 'left', 'line.interpolate': 'linear'}, 'New Financial Buy Count': {'axis': 'right', 'display': 'bar', 'line.interpolate': 'linear'}, 'New Fin Buys Usd': {'display': 'area', 'axis': 'right'}, 'Num New Fin Buys': {'axis': 'left'}, 'Total New Buy Amount': {'display': 'area', 'axis': 'left', 'line.interpolate': 'linear'}}, 'graph.dimensions': ['date'], 'graph.metrics': ['num_new_deposits', 'num_new_buys', 'num_new_fin_buys', 'num_new_nonfin_buys', 'new_deps_USD', 'new_buys_USD', 'new_fin_buys_USD', 'new_nonfin_buys_USD'], 'graph.show_trendline': False, 'graph.y_axis.title_text': '', 'graph.y_axis.auto_range': True, 'graph.y_axis.auto_split': False}"
False,,,,,2018-12-12 06:16:25.059,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select e.""date"",\nsum(e.new_deposit_count) as ""num_new_deposits"",\nsum(e.total_new_buy_count) as ""num_new_buys"",\nsum(e.new_financial_buy_count) as ""num_new_fin_buys"",\nsum(e.new_nonfinancial_buy_count) as ""num_new_nonfin_buys"",\nround(sum(e.new_deposit_amount*e.exchangetousd_rate),2) as ""new_deposits_USD"",\nround(sum(e.total_new_buy_amount*e.exchangetousd_rate),2) as ""new_buys_USD"",\nround(sum(e.new_financial_buy_amount*e.exchangetousd_rate),2) as ""new_fin_buys_USD"",\nround(sum(e.new_nonfinancial_buy_amount*e.exchangetousd_rate),2) as ""new_nonfin_buys_USD""\nfrom\n(\n  select data_collection.exchangetousd_rate(d.currency_code, d.""date""), d.*\n  from\n  (\n    select \n    CAST(f.transaction_time AS date) as ""date"",\n    a.currency_code,\n    count(distinct f.account_id) filter (where f.action_type=\'buy\') as total_new_buy_count,\n    sum(abs(f.amount)) filter (where f.action_type=\'buy\') as total_new_buy_amount,\n    count(distinct f.account_id) filter(where f.action_type=\'deposit\') as new_deposit_count, \n    coalesce(sum(f.amount) filter (where f.action_type=\'deposit\'), 0) as new_deposit_amount, \n    count(distinct account_id) filter(where f.action_type=\'buy\' and f.market_type=\'financial\') as new_financial_buy_count,\n    coalesce(sum(abs(f.amount)) filter(where f.action_type=\'buy\' and f.market_type=\'financial\'), 0) as new_financial_buy_amount,\n    count(distinct account_id) filter(where f.action_type=\'buy\' and f.market_type !=\'financial\') as new_nonfinancial_buy_count,\n    coalesce(sum(abs(f.amount)) filter(where f.action_type=\'buy\' and f.market_type !=\'financial\'), 0) as new_nonfinancial_buy_amount\n    --*/\n    from transaction.firsts f left join transaction.account a\n    on f.account_id=a.id\n    WHERE CAST(transaction_time AS date) BETWEEN CAST((NOW() + INTERVAL \'-30 day\') AS date)\n       AND CAST((NOW() + INTERVAL \'-1 day\') AS date)\n    --and action_type in (\'deposit\', \'buy\')\n    GROUP BY 1,2 --,2,3\n    ORDER BY CAST(transaction_time AS date) DESC--, action_type, market_type\n    --limit 10\n  ) d\n) e\n\ngroup by 1\norder by 1 desc\n\n\n\n'}}",,table,,False,False,75,,CR new deposits and purchases,,native,,"[{'name': 'date', 'display_name': 'date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-21T00:00:00.000Z', 'latest': '2019-10-18T00:00:00.000Z'}}}}, {'name': 'num_new_deposits', 'display_name': 'num_new_deposits', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 37.0, 'max': 872.0, 'avg': 595.25, 'sd': 183.93489689641902, 'q1': 501.0, 'q3': 733.5}}}}, {'name': 'num_new_buys', 'display_name': 'num_new_buys', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 26, 'nil%': 0.0}, 'type': {'type/Number': {'min': 44.0, 'max': 648.0, 'avg': 418.60714285714283, 'sd': 151.5249250455281, 'q1': 276.0, 'q3': 542.0}}}}, {'name': 'num_new_fin_buys', 'display_name': 'num_new_fin_buys', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 23, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 276.0, 'avg': 145.10714285714283, 'sd': 103.19465220342691, 'q1': 2.0, 'q3': 226.5}}}}, {'name': 'num_new_nonfin_buys', 'display_name': 'num_new_nonfin_buys', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 26, 'nil%': 0.0}, 'type': {'type/Number': {'min': 26.0, 'max': 462.0, 'avg': 297.89285714285717, 'sd': 79.06131670382045, 'q1': 271.0, 'q3': 334.5}}}}, {'name': 'new_deposits_USD', 'display_name': 'new_deposits_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3554.68, 'max': 92984.8, 'avg': 59819.87714285714, 'sd': 22826.45868891931, 'q1': 42286.149999999994, 'q3': 80119.94}}}}, {'name': 'new_buys_USD', 'display_name': 'new_buys_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 116.6, 'max': 5104.15, 'avg': 2002.3025, 'sd': 1143.2576551780217, 'q1': 1040.92, 'q3': 2277.5}}}}, {'name': 'new_fin_buys_USD', 'display_name': 'new_fin_buys_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 23, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 4099.52, 'avg': 953.6660714285715, 'sd': 1007.3686269254291, 'q1': 7.65, 'q3': 1127.21}}}}, {'name': 'new_nonfin_buys_USD', 'display_name': 'new_nonfin_buys_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 56.0, 'max': 2004.92, 'avg': 1048.6375, 'sd': 371.94862608843454, 'q1': 855.835, 'q3': 1204.7350000000001}}}}]",,2019-10-21 00:01:37.823,"{'graph.show_trendline': False, 'graph.y_axis.title_text': '', 'table.cell_column': 'num_new_deposits', 'graph.y_axis.auto_split': False, 'graph.metrics': ['num_new_deposits', 'num_new_buys', 'num_new_fin_buys', 'num_new_nonfin_buys', 'new_deposits_USD', 'new_buys_USD', 'new_fin_buys_USD', 'new_nonfin_buys_USD'], 'table.column_formatting': [{'max_value': 100, 'color': '#509EE3', 'columns': ['new_nonfin_buys_USD', 'num_new_nonfin_buys'], 'value': '', 'type': 'range', 'colors': ['white', '#EF8C8C'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}, {'max_value': 100, 'color': '#509EE3', 'columns': ['num_new_fin_buys', 'new_fin_buys_USD'], 'value': '', 'type': 'range', 'colors': ['white', '#A989C5'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}, {'max_value': 100, 'color': '#9CC177', 'columns': ['num_new_buys', 'new_buys_USD'], 'value': '', 'type': 'range', 'colors': ['white', '#9CC177'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}, {'max_value': 100, 'color': '#509EE3', 'columns': ['num_new_deposits', 'new_deposits_USD'], 'value': '', 'type': 'range', 'colors': ['white', '#509EE3'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}], 'table.pivot_column': 'num_new_fin_buys', 'series_settings': {'Num New Buys': {'axis': 'left'}, 'New Non Fin Buys Usd': {'axis': 'right', 'display': 'line', 'title': 'New Non Fin Buys USD'}, 'New Non Financial Buy Amount': {'display': 'area', 'axis': 'left', 'line.interpolate': 'linear'}, 'New Buys Usd': {'axis': 'right', 'display': 'line', 'title': 'New Buys USD'}, 'Num New Deposits': {'axis': 'left'}, 'New Deposit Count': {'axis': 'right', 'line.interpolate': 'linear', 'display': 'bar'}, 'Num New Non Fin Buys': {'axis': 'left'}, 'New De Ps Usd': {'axis': 'right', 'display': 'area'}, 'New Deposits Usd': {'axis': 'right', 'title': 'New Deposits USD', 'display': 'area'}, 'New Financial Buy Amount': {'display': 'area', 'line.interpolate': 'linear'}, 'Total New Buy Count': {'axis': 'right', 'line.interpolate': 'linear', 'display': 'bar'}, 'New Non Financial Buy Count': {'axis': 'right', 'line.interpolate': 'linear', 'display': 'bar'}, 'New Deposit Amount': {'display': 'area', 'axis': 'left', 'line.interpolate': 'linear'}, 'New Financial Buy Count': {'axis': 'right', 'display': 'bar', 'line.interpolate': 'linear'}, 'New Fin Buys Usd': {'display': 'line', 'axis': 'right', 'title': 'New Fin Buys USD'}, 'Num New Fin Buys': {'axis': 'left'}, 'Total New Buy Amount': {'display': 'area', 'axis': 'left', 'line.interpolate': 'linear'}}, 'graph.y_axis.auto_range': True, 'graph.dimensions': ['date']}"
False,,"{'id': 65, 'name': ""Parviz asoodefard's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 52, 'slug': 'parviz_asoodefard_s_personal_collection'}",65.0,,2019-01-24 11:57:53.206,"{'email': 'parviz@regentmarkets.com', 'first_name': 'Parviz', 'last_login': '2019-07-03T05:55:34.855Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 52, 'last_name': 'asoodefard', 'date_joined': '2019-01-08T07:10:52.493Z', 'common_name': 'Parviz asoodefard'}",52,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select e.""date"",\nsum(e.new_deposit_count) as ""num_new_deposits"",\nsum(e.total_new_buy_count) as ""num_new_buys"",\nsum(e.new_financial_buy_count) as ""num_new_fin_buys"",\nsum(e.new_nonfinancial_buy_count) as ""num_new_nonfin_buys"",\nround(sum(e.new_deposit_amount*e.exchangetousd_rate),2) as ""new_deposits_USD"",\nround(sum(e.total_new_buy_amount*e.exchangetousd_rate),2) as ""new_buys_USD"",\nround(sum(e.new_financial_buy_amount*e.exchangetousd_rate),2) as ""new_fin_buys_USD"",\nround(sum(e.new_nonfinancial_buy_amount*e.exchangetousd_rate),2) as ""new_nonfin_buys_USD""\nfrom\n(\n  select data_collection.exchangetousd_rate(d.currency_code, d.""date""), d.*\n  from\n  (\n    select \n    CAST(f.transaction_time AS date) as ""date"",\n    a.currency_code,\n    count(distinct f.account_id) filter (where f.action_type=\'buy\') as total_new_buy_count,\n    sum(abs(f.amount)) filter (where f.action_type=\'buy\') as total_new_buy_amount,\n    count(distinct f.account_id) filter(where f.action_type=\'deposit\') as new_deposit_count, \n    coalesce(sum(f.amount) filter (where f.action_type=\'deposit\'), 0) as new_deposit_amount, \n    count(distinct account_id) filter(where f.action_type=\'buy\' and f.market_type=\'financial\') as new_financial_buy_count,\n    coalesce(sum(abs(f.amount)) filter(where f.action_type=\'buy\' and f.market_type=\'financial\'), 0) as new_financial_buy_amount,\n    count(distinct account_id) filter(where f.action_type=\'buy\' and f.market_type !=\'financial\') as new_nonfinancial_buy_count,\n    coalesce(sum(abs(f.amount)) filter(where f.action_type=\'buy\' and f.market_type !=\'financial\'), 0) as new_nonfinancial_buy_amount\n    --*/\n    from transaction.firsts f left join transaction.account a\n    on f.account_id=a.id\n    WHERE CAST(transaction_time AS date) BETWEEN CAST((NOW() + INTERVAL \'-30 day\') AS date)\n       AND CAST((NOW() + INTERVAL \'-1 day\') AS date)\n    --and action_type in (\'deposit\', \'buy\')\n    GROUP BY 1,2 --,2,3\n    ORDER BY CAST(transaction_time AS date) DESC--, action_type, market_type\n    --limit 10\n  ) d\n) e\n\ngroup by 1\norder by 1 desc\n\n\n\n'}}",,table,,False,False,224,,CR new deposits and purchases 2,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-12T00:00:00.000Z', 'latest': '2019-02-10T00:00:00.000Z'}}}}, {'name': 'num_new_deposits', 'display_name': 'Num New Deposits', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 141.0, 'max': 313.0, 'avg': 238.5666666666667, 'sd': 49.218501801052724, 'q1': 195.0, 'q3': 275.0}}}}, {'name': 'num_new_buys', 'display_name': 'Num New Buys', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 126.0, 'max': 347.0, 'avg': 248.13333333333333, 'sd': 71.86324816470244, 'q1': 186.0, 'q3': 307.0}}}}, {'name': 'num_new_fin_buys', 'display_name': 'Num New Fin Buys', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 192.0, 'avg': 90.2, 'sd': 67.82553684473025, 'q1': 0.7192235935955841, 'q3': 137.26794919243113}}}}, {'name': 'num_new_nonfin_buys', 'display_name': 'Num New Non Fin Buys', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 126.0, 'max': 205.0, 'avg': 171.56666666666666, 'sd': 23.481002347948603, 'q1': 150.0, 'q3': 190.0}}}}, {'name': 'new_deposits_USD', 'display_name': 'New Deposits Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 7633.63, 'max': 49268.54, 'avg': 22125.586666666666, 'sd': 8618.826477336905, 'q1': 15018.01, 'q3': 29114.3}}}}, {'name': 'new_buys_USD', 'display_name': 'New Buys Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 422.3, 'max': 2672.43, 'avg': 1241.6076666666665, 'sd': 584.5897474220016, 'q1': 823.52, 'q3': 1599.09}}}}, {'name': 'new_fin_buys_USD', 'display_name': 'New Fin Buys Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 23, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1543.91, 'avg': 422.44533333333334, 'sd': 384.74501417964075, 'q1': 0.8, 'q3': 612.75}}}}, {'name': 'new_nonfin_buys_USD', 'display_name': 'New Non Fin Buys Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 362.46, 'max': 2291.4, 'avg': 819.1613333333333, 'sd': 466.32354829529316, 'q1': 533.4, 'q3': 1058.33}}}}]",,2019-02-11 08:05:14.292,"{'graph.show_trendline': False, 'graph.y_axis.title_text': '', 'table.cell_column': 'num_new_deposits', 'graph.y_axis.auto_split': False, 'graph.metrics': ['num_new_deposits', 'num_new_buys', 'num_new_fin_buys', 'num_new_nonfin_buys', 'new_deposits_USD', 'new_buys_USD', 'new_fin_buys_USD', 'new_nonfin_buys_USD'], 'table.column_formatting': [{'max_value': 100, 'color': '#509EE3', 'columns': ['num_new_nonfin_buys', 'new_nonfin_buys_USD'], 'value': '', 'type': 'range', 'colors': ['white', '#EF8C8C'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}, {'max_value': 100, 'color': '#509EE3', 'columns': ['num_new_fin_buys', 'new_fin_buys_USD'], 'value': '', 'type': 'range', 'colors': ['white', '#F9D45C'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}, {'max_value': 100, 'color': '#509EE3', 'columns': ['num_new_buys', 'new_buys_USD'], 'value': '', 'type': 'range', 'colors': ['white', '#9CC177'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}, {'max_value': 100, 'color': '#509EE3', 'columns': ['num_new_deposits', 'new_deposits_USD'], 'value': '', 'type': 'range', 'colors': ['white', '#509EE3'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}], 'table.pivot_column': 'num_new_fin_buys', 'column_settings': {'[""name"",""num_new_deposits""]': {'show_mini_bar': False}}, 'series_settings': {'Num New Buys': {'axis': 'left'}, 'New Non Fin Buys Usd': {'axis': 'right', 'display': 'line', 'title': 'New Non Fin Buys USD'}, 'New Non Financial Buy Amount': {'display': 'area', 'axis': 'left', 'line.interpolate': 'linear'}, 'New Buys Usd': {'axis': 'right', 'display': 'line', 'title': 'New Buys USD'}, 'Num New Deposits': {'axis': 'left'}, 'New Deposit Count': {'axis': 'right', 'line.interpolate': 'linear', 'display': 'bar'}, 'Num New Non Fin Buys': {'axis': 'left'}, 'New De Ps Usd': {'axis': 'right', 'display': 'area'}, 'New Deposits Usd': {'axis': 'right', 'title': 'New Deposits USD', 'display': 'area'}, 'New Financial Buy Amount': {'display': 'area', 'line.interpolate': 'linear'}, 'Total New Buy Count': {'axis': 'right', 'line.interpolate': 'linear', 'display': 'bar'}, 'New Non Financial Buy Count': {'axis': 'right', 'line.interpolate': 'linear', 'display': 'bar'}, 'New Deposit Amount': {'display': 'area', 'axis': 'left', 'line.interpolate': 'linear'}, 'New Financial Buy Count': {'axis': 'right', 'display': 'bar', 'line.interpolate': 'linear'}, 'New Fin Buys Usd': {'display': 'line', 'axis': 'right', 'title': 'New Fin Buys USD'}, 'Num New Fin Buys': {'axis': 'left'}, 'Total New Buy Amount': {'display': 'area', 'axis': 'left', 'line.interpolate': 'linear'}}, 'graph.y_axis.auto_range': True, 'graph.dimensions': ['date']}"
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-17 03:19:22.558,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n  c.residence,\n  count(distinct ta.client_loginid)\nfrom transaction.firsts\nleft join transaction.account ta\n  on ta.id=account_id\nleft join betonmarkets.client as c\n  on ta.client_loginid=c.loginid\nwhere action_type = 'deposit'\nand {{period}}\ngroup by 1\norder by 2 desc"", 'template-tags': {'period': {'widget-type': 'date/all-options', 'default': 'past1days~', 'name': 'period', 'type': 'dimension', 'id': '9c991ead-074d-3fb5-e10e-7e222b7e1f09', 'dimension': ['field-id', 260], 'display-name': 'Period', 'required': True}}}}",,row,,False,False,92,,CR new funded accounts by country,,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 81, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 27, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 443.0, 'avg': 25.061728395061728, 'sd': 71.48729706720844, 'q1': 1.5, 'q3': 10.25}}}}]",,2019-04-29 03:05:13.008,"{'series_settings': {'Count': {'color': '#7172AD'}}, 'graph.dimensions': ['residence'], 'graph.metrics': ['count']}"
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-17 07:02:04.334,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'native': {'template-tags': {'period': {'widget-type': 'date/all-options', 'default': 'past7days', 'name': 'period', 'type': 'dimension', 'id': 'd069c80c-d8b9-413a-be12-9aea10abc37c', 'dimension': ['field-id', 260], 'display-name': 'Period', 'required': True}, 'granularity': {'id': 'dcf48f1c-b63a-dea4-cbd9-e1e03e92ba60', 'name': 'granularity', 'display-name': 'time granularity', 'type': 'text', 'required': True, 'default': 'day'}}, 'query': ""select \n  DATE_TRUNC({{granularity}}, transaction_time),\n  count(distinct ta.client_loginid)\nfrom transaction.firsts\nleft join transaction.account ta\n  on ta.id=account_id\nwhere action_type = 'deposit'\nand {{period}}\ngroup by 1""}, 'type': 'native', 'database': 2}",,area,,False,False,99,,CR new funded accounts by time,,native,,"[{'name': 'date_trunc', 'display_name': 'Date Trunc', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-22T00:00:00.000Z', 'latest': '2019-04-28T00:00:00.000Z'}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 205.0, 'max': 361.0, 'avg': 290.0, 'sd': 58.90670590009256, 'q1': 233.25, 'q3': 323.75}}}}]",,2019-04-29 03:05:14.127,"{'series_settings': {'Count': {'display': 'area', 'color': '#7172AD'}}, 'graph.dimensions': ['date_trunc'], 'graph.metrics': ['count']}"
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-17 03:06:11.451,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \n  transaction_time::date as ""date"", \n  c.residence,\n  count(distinct ta.client_loginid)\nfrom transaction.firsts\nleft join transaction.account ta\n  on ta.id=account_id\nleft join betonmarkets.client as c\n  on ta.client_loginid=c.loginid\nwhere action_type = \'deposit\'\nand {{period}}\ngroup by 1,2\norder by 1,2', 'template-tags': {'period': {'widget-type': 'date/all-options', 'default': 'past1days~', 'name': 'period', 'type': 'dimension', 'id': 'f19e1c74-a5cc-e9c1-e508-2b2f87630e10', 'dimension': ['field-id', 260], 'display-name': 'Period', 'required': True}}}}",,table,,False,False,91,,CR new funded by day,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-05-20T00:00:00.000Z', 'latest': '2019-05-21T00:00:00.000Z'}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 17, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 64.0, 'avg': 6.793103448275862, 'sd': 13.086431463361242, 'q1': 1.165978090742544, 'q3': 5.0}}}}]",,2019-05-21 06:03:39.740,"{'table.pivot_column': 'date', 'table.cell_column': 'count'}"
False,,,,,2018-12-12 08:17:18.154,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select residence, lower(address_city) as city, count(1) from betonmarkets.client\nwhere date_joined >= now() + interval '-7 day'\ngroup by 1, 2\norder by 3 desc\nlimit 20""}}",,bar,,False,False,76,,CR new real-account sign-ups in past week,,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'city', 'display_name': 'City', 'base_type': 'type/Text', 'special_type': 'type/City', 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.5}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': 16.0, 'max': 45.0, 'avg': 26.45, 'sd': 8.708586204672406, 'q1': 19.26794919243112, 'q3': 32.5}}}}]",,2019-02-18 07:59:54.788,"{'graph.dimensions': ['address_city', 'residence'], 'graph.metrics': ['count'], 'graph.y_axis.title_text': 'New sign-ups for real account'}"
False,,,,,2018-12-17 01:29:15.258,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select residence, --lower(address_city) as city, \ncount(1) from betonmarkets.client\nwhere date_joined::timestamp::date >= (now() + interval '-30 day')::timestamp::date\nand date_joined::timestamp::date < now()::timestamp::date\ngroup by 1 --, 2\norder by 2 desc --3 desc\nlimit 20""}}",,bar,,False,False,85,,CR new sign-ups in last 30 days by country,,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 82.0, 'max': 4319.0, 'avg': 847.5, 'sd': 1107.1465694820129, 'q1': 228.0, 'q3': 984.0}}}}]",,2019-03-06 10:32:41.530,"{'graph.dimensions': ['residence'], 'graph.metrics': ['count'], 'graph.y_axis.title_text': 'New sign-ups for real account'}"
False,,,,,2018-12-14 03:12:16.968,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select residence, --lower(address_city) as city, \ncount(1) from betonmarkets.client\nwhere date_joined::timestamp::date = (now() + interval '-1 day')::timestamp::date\ngroup by 1 --, 2\norder by 2 desc --3 desc\nlimit 20""}}",,bar,,False,False,79,,CR new sign-ups yesterday by country,,native,,"[{'name': 'residence', 'display_name': 'residence', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-21 00:01:47.902,"{'graph.dimensions': ['residence'], 'graph.metrics': ['count'], 'graph.y_axis.title_text': 'New sign-ups for real account'}"
False,,,,,2018-12-17 01:35:03.926,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'query': 'select ""residence"", \n--""date"", \nsum(""amount"" * ""exchange_rate"") as ""total_first_deposits_USD"", count(1) as ""count_clients""\nfrom\n(\n    select a.*, bc.residence, data_collection.exchangetousd_rate(""currency_code"", ""date"") as ""exchange_rate""\n    from\n    (\n        select tf.amount, tf.transaction_time::date as ""date"", ta.client_loginid, ta.currency_code from transaction.firsts tf left join transaction.account ta\n        on ta.id=tf.account_id\n        where tf.action_type = \'deposit\'\n        and transaction_time >= (now() + interval \'-30 day\')::timestamp::date\n        and transaction_time < now()::timestamp::date\n    ) as a left join betonmarkets.client bc\n    on a.""client_loginid"" = bc.loginid\n) b\n/*\nwhere residence in (\'id\', \'br\', \'mx\', \'th\', \'za\', \n                    \'in\', \'ng\', \'bo\', \'tw\', \'vn\', \n                    \'ru\', \'ua\', \'do\', \'lk\', \'ke\', \n                    \'bd\', \'uy\', \'au\', \'kz\', \'co\')\n*/\ngroup by 1 --,2\norder by 2 desc --, 3 desc\nlimit 20\n'}, 'type': 'native', 'database': 2}",,bar,,False,False,86,,"CR number and total amount of FIRST deposits, by country (last 30 days)",,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'total_first_deposits_USD', 'display_name': 'Total First Deposits Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2625.120564117346, 'max': 172556.15510267805, 'avg': 32843.58921338645, 'sd': 49854.12556560041, 'q1': 4167.6066764232655, 'q3': 35576.98765661409}}}}, {'name': 'count_clients', 'display_name': 'Count Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': 23.0, 'max': 1859.0, 'avg': 340.7, 'sd': 484.28874597050486, 'q1': 45.0, 'q3': 318.0}}}}]",,2019-02-18 08:05:51.360,"{'graph.metrics': ['total_first_deposits_USD', 'count_clients'], 'graph.dimensions': ['residence'], 'table.pivot_column': 'date', 'table.cell_column': 'total_first_deposits_USD', 'series_settings': {'Count Clients': {'axis': 'right'}, 'Total First Deposits Usd': {'axis': 'left'}}}"
False,,,,,2018-12-14 03:59:10.523,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'query': 'select ""residence"", \n--""date"", \nsum(""amount"" * ""exchange_rate"") as ""total_first_deposits_USD"", count(1) as ""count_clients""\nfrom\n(\n    select a.*, bc.residence, data_collection.exchangetousd_rate(""currency_code"", ""date"") as ""exchange_rate""\n    from\n    (\n        select tf.amount, tf.transaction_time::date as ""date"", ta.client_loginid, ta.currency_code from transaction.firsts tf left join transaction.account ta\n        on ta.id=tf.account_id\n        where tf.action_type = \'deposit\'\n        and transaction_time >= (now() + interval \'-1 day\')::timestamp::date\n        and transaction_time < now()::timestamp::date\n    ) as a left join betonmarkets.client bc\n    on a.""client_loginid"" = bc.loginid\n) b\n/*\nwhere residence in (\'id\', \'br\', \'mx\', \'th\', \'za\', \n                    \'in\', \'ng\', \'bo\', \'tw\', \'vn\', \n                    \'ru\', \'ua\', \'do\', \'lk\', \'ke\', \n                    \'bd\', \'uy\', \'au\', \'kz\', \'co\')\n*/\ngroup by 1 --,2\norder by 2 desc --, 3 desc\nlimit 20\n'}, 'type': 'native', 'database': 2}",,bar,,False,False,81,,"CR number and total amount of FIRST deposits, by country (yesterday)",,native,,"[{'name': 'residence', 'display_name': 'residence', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'total_first_deposits_USD', 'display_name': 'total_first_deposits_USD', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'count_clients', 'display_name': 'count_clients', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-21 00:01:49.461,"{'graph.metrics': ['total_first_deposits_USD', 'count_clients'], 'graph.dimensions': ['residence'], 'table.pivot_column': 'date', 'table.cell_column': 'total_first_deposits_USD', 'series_settings': {'Count Clients': {'axis': 'right'}, 'Total First Deposits Usd': {'axis': 'left'}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-18 02:47:40.527,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select substr(underlying_symbol,1,3) as ""market"", count(1) as ""num_contracts"", sum(buy_USD) as ""buy_USD"", sum(payout_USD) as ""payout_USD""\nfrom\n(\nselect\n    underlying_symbol,\n    account_id,\n    buy_price*data_collection.exchangetousd_rate(currency_code, expiry_time) as buy_USD,\n    payout_price*data_collection.exchangetousd_rate(currency_code, expiry_time) as payout_USD,\n    expiry_time,\n    currency_code\nfrom \n(\nselect * \nfrom \n    bet.financial_market_bet_open fmbo left join \n    transaction.account ta\n    on fmbo.account_id=ta.id\n) x\n) y\nwhere substr(underlying_symbol,1,1)!=\'R\'\ngroup by 1\norder by 4 desc, 2 desc, 3 desc'}}",It's a bit hacky,table,,False,False,104,,CR Open Contracts by Market,,native,,"[{'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'num_contracts', 'display_name': 'num_contracts', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 832.0, 'avg': 303.3333333333333, 'sd': 459.4130313055272, 'q1': 20.0, 'q3': 643.25}}}}, {'name': 'buy_USD', 'display_name': 'buy_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 28145.4952177, 'avg': 18196.06898650155, 'sd': 15780.403071558294, 'q1': 6611.177935451161, 'q3': 27719.549348726163}}}}, {'name': 'payout_USD', 'display_name': 'payout_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.79, 'max': 59504.048327070675, 'avg': 37004.59405152525, 'sd': 32293.808269522407, 'q1': 12878.328456876274, 'q3': 57505.02220217928}}}}]",,2019-10-21 00:04:27.983,"{'table.pivot_column': 'num_contracts', 'table.cell_column': 'num_contracts'}"
False,,,,,2018-12-18 02:28:05.438,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select underlying_symbol, count(1) as ""num_contracts"", sum(buy_USD) as ""buy_USD"", sum(payout_USD) as ""payout_USD""\nfrom\n(\nselect\n    underlying_symbol,\n    account_id,\n    buy_price*data_collection.exchangetousd_rate(currency_code, expiry_time) as buy_USD,\n    payout_price*data_collection.exchangetousd_rate(currency_code, expiry_time) as payout_USD,\n    expiry_time,\n    currency_code\nfrom \n(\nselect * \nfrom \n    bet.financial_market_bet_open fmbo left join \n    transaction.account ta\n    on fmbo.account_id=ta.id\n) x\n) y\nwhere substr(underlying_symbol,1,1)!=\'R\'\ngroup by 1\norder by 4 desc, 2 desc, 3 desc'}}",,table,,False,False,103,,CR Open contracts on non-volidx,,native,,"[{'name': 'underlying_symbol', 'display_name': 'underlying_symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 43, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.604651162790697}}}}, {'name': 'num_contracts', 'display_name': 'num_contracts', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 26, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 94.0, 'avg': 21.162790697674417, 'sd': 22.16166814307355, 'q1': 2.881966011250105, 'q3': 35.5}}}}, {'name': 'buy_USD', 'display_name': 'buy_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 15735.769527, 'avg': 1269.493185104759, 'sd': 3068.88652978157, 'q1': 13.074325, 'q3': 740.7309210000001}}}}, {'name': 'payout_USD', 'display_name': 'payout_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 43, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.79, 'max': 25027.8163777, 'avg': 2581.715864059902, 'sd': 5875.546378509643, 'q1': 51.1325, 'q3': 1451.1849746}}}}]",,2019-10-21 00:04:33.747,"{'table.pivot_column': 'num_contracts', 'table.cell_column': 'num_contracts'}"
False,,,,,2018-11-30 02:13:05.287,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select t2.""day"", sum(t2.profit_USDDER) from\n    (select tmp.""day"", tmp.profit*data_collection.exchangetousd_rate(tmp.currency_code, tmp.""day"") as profit_USDDER from\n        (select \n          ""day"", a.currency_code,\n          --sum(turnover) as ""turnover"",\n          sum(loss) as ""profit""--,\n          --count(distinct account_id) as ""customer_count""\n        from bet.daily_aggregates da left join transaction.account a\n        on da.account_id=a.id\n        WHERE CAST(da.""day"" AS date) BETWEEN CAST((NOW() + INTERVAL \'-30 day\') AS date)\n           AND CAST((NOW() + INTERVAL \'-1 day\') AS date)\n        GROUP BY 1,2\n        ORDER BY 1 DESC, 2 desc\n        ) tmp\n    ) t2\ngroup by 1\norder by 1 desc'}}",,line,,False,False,56,40.0,CR profit,3b158ec1-d6ff-43fb-b3e6-bcef5bf8cedd,native,,"[{'name': 'day', 'display_name': 'day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-21T00:00:00.000Z', 'latest': '2019-10-18T00:00:00.000Z'}}}}, {'name': 'sum', 'display_name': 'sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 24641.85339501067, 'max': 298111.9190975534, 'avg': 131658.00281014483, 'sd': 57190.738011078305, 'q1': 104478.51037337047, 'q3': 161432.03372609994}}}}]",,2019-10-21 00:04:00.755,"{'series_settings': {'Profit': {'display': 'area', 'line.interpolate': 'cardinal'}, 'Sum': {'display': 'area', 'line.interpolate': 'cardinal'}}, 'graph.show_trendline': True, 'graph.dimensions': ['day'], 'graph.metrics': ['sum']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-20 13:31:09.851,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select d.""day"", d.""residence"", round(d.""profit_USD"",2) as ""profit_USD"" --, ""client_count""\nfrom\n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD"", count(distinct ""client_loginid"") as ""client_count""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-31 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\n) d right join \n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-1 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\nlimit {{country_count}}\n) e\non e.residence=d.residence\norder by 1 desc, 3 desc\n\n', 'template-tags': {'country_count': {'id': 'e463a3e6-e6c1-2f28-8857-ff9b26dd3a96', 'name': 'country_count', 'display-name': 'How many countries?', 'type': 'number', 'required': True, 'default': '7'}}}}",,line,,False,False,404,,"CR profit of top-N countries, in the last 30 days",,native,,"[{'name': 'day', 'display_name': 'day', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'residence', 'display_name': 'residence', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'profit_USD', 'display_name': 'profit_USD', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-21 00:04:27.264,"{'table.pivot_column': 'residence', 'table.cell_column': 'profit_USD', 'graph.dimensions': ['day', 'residence'], 'graph.metrics': ['profit_USD'], 'graph.y_axis.scale': 'linear', 'series_settings': {'id': {'line.interpolate': 'cardinal'}, 'br': {'line.interpolate': 'cardinal'}, 'ch': {'line.interpolate': 'cardinal'}, 'ru': {'line.interpolate': 'cardinal'}, 'th': {'line.interpolate': 'cardinal'}, 'in': {'line.interpolate': 'cardinal'}, 'ng': {'line.interpolate': 'cardinal'}}}"
False,,,,,2018-12-06 01:54:53.542,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'revenue_threshold': {'id': 'd86cf0a2-683a-c69e-1367-e1758ee46f0f', 'name': 'revenue_threshold', 'display-name': 'Rev. Threshold', 'type': 'number', 'required': True, 'default': '500'}}, 'query': 'select * from\n(\n    select\n    usdder.symbol,\n    sum(usdder.company_revenue) as ""company_revenue""\n    from\n        (\n        select \n        tmp.account_id,\n        tmp.symbol,\n        round(tmp.buy*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""total_buy"",\n        round(tmp.company_revenue*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""company_revenue""\n        from\n            (\n            select \n                account_id,\n                bm.symbol,\n                cast(purchase_time as date) as ""day"", \n                sum(buy_price) as ""buy"",\n                sum((buy_price - sell_price)) as ""company_revenue""\n            from bet.financial_market_bet fmb\n            left join bet.market bm\n            on bm.symbol=fmb.underlying_symbol\n            where purchase_time >= now() + INTERVAL \'-4 hour\'\n            --and market=\'forex\'    \n            and is_sold = TRUE\n            group by 1,2,3 \n        ) tmp\n            left join transaction.account a\n            on tmp.account_id=a.id\n        --order by 3\n        --limit 1000\n        ) usdder\n    group by symbol\n) ttt\nwhere \n--total_buy >=  500 and \nabs(company_revenue) >= {{revenue_threshold}}\norder by 2'}, 'type': 'native', 'database': 2}",,bar,,False,False,68,,CR recent P/L by underlying,,native,,"[{'name': 'symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.2}}}}, {'name': 'company_revenue', 'display_name': 'Company Revenue', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': -13531.56, 'max': 8835.63, 'avg': 702.2440000000001, 'sd': 4575.781640971768, 'q1': -292.85249999999996, 'q3': 2329.185}}}}]",,2019-03-18 05:41:34.711,"{'series_settings': {'Company Revenue': {'display': 'bar'}}, 'graph.dimensions': ['symbol'], 'graph.metrics': ['company_revenue']}"
False,,,,,2018-12-06 05:42:43.460,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select * from\n(\n    select \n    sss.residence, sum(sss.total_buy) as ""total_buy"", sum(sss.company_revenue) as ""company_revenue""\n    from\n    (\n        select bc.residence, ttt.* from\n        (\n            select \n            a.client_loginid,\n            tmp.account_id,\n            tmp.market,\n            round(tmp.total_buy*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""total_buy"",\n            round(tmp.company_revenue*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""company_revenue""\n            from\n                (\n                select \n                    account_id,\n                    bm.market,\n                    cast(purchase_time as date) as ""day"", \n                    sum(buy_price) as ""total_buy"",\n                    sum((buy_price - sell_price)) as ""company_revenue""\n                from bet.financial_market_bet fmb\n                left join bet.market bm\n                on bm.symbol=fmb.underlying_symbol\n                where purchase_time >= now() + INTERVAL \'-4 hour\'\n                --and market=\'forex\'    \n                and is_sold = TRUE\n                group by 1,2,3 \n            ) tmp\n                left join transaction.account a\n                on tmp.account_id=a.id\n        ) ttt left join betonmarkets.client bc\n        on bc.loginid=ttt.client_loginid\n    ) sss\n    group by 1\n) ttt\n\nwhere abs(company_revenue) >= 500\norder by 3'}}",,bar,,False,False,70,,CR recent revenue by country,,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'total_buy', 'display_name': 'Total Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1007.15, 'max': 381612.62, 'avg': 48220.62545454546, 'sd': 111147.35481478507, 'q1': 4321.25, 'q3': 26224.4425}}}}, {'name': 'company_revenue', 'display_name': 'Company Revenue', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Number': {'min': -4855.68, 'max': 11740.09, 'avg': 1134.9836363636364, 'sd': 3961.708722706082, 'q1': -396.3275, 'q3': 1403.335}}}}]",,2019-03-26 07:59:25.559,"{'graph.metrics': ['company_revenue'], 'graph.dimensions': ['residence']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-06 07:00:22.341,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select * from\n(\n    select\n    usdder.symbol,\n    sum(usdder.total_buy) as ""total_buy""\n    --sum(usdder.company_revenue) as ""company_revenue""\n    from\n        (\n        select \n        tmp.account_id,\n        tmp.symbol,\n        round(tmp.buy*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""total_buy"",\n        round(tmp.company_revenue*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""company_revenue""\n        from\n            (\n            select \n                account_id,\n                bm.symbol,\n                cast(purchase_time as date) as ""day"", \n                sum(buy_price) as ""buy"",\n                sum((buy_price - sell_price)) as ""company_revenue""\n            from bet.financial_market_bet fmb\n            left join bet.market bm\n            on bm.symbol=fmb.underlying_symbol\n            where purchase_time >= now() + INTERVAL \'-4 hour\'\n            --and market=\'forex\'    \n            and is_sold = TRUE\n            group by 1,2,3 \n        ) tmp\n            left join transaction.account a\n            on tmp.account_id=a.id\n        --order by 3\n        --limit 1000\n        ) usdder\n    group by symbol\n) ttt\nwhere \n--total_buy >=  500 and \nabs(total_buy) >= {{buy_threshold}}\norder by 2 desc', 'template-tags': {'buy_threshold': {'id': 'e1b03140-0e13-8238-899b-f04d38b8333a', 'name': 'buy_threshold', 'display-name': 'Total Buy', 'type': 'number', 'required': True, 'default': '1000'}}}}",,bar,,False,False,73,,CR recent total buy  by underlying symbol,,native,,"[{'name': 'symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.5}}}}, {'name': 'total_buy', 'display_name': 'Total Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1085.19, 'max': 188213.77, 'avg': 28794.877499999995, 'sd': 50890.80144716889, 'q1': 2065.775, 'q3': 26403.185}}}}]",,2019-03-18 05:44:44.934,"{'graph.y_axis.scale': 'pow', 'graph.metrics': ['total_buy'], 'graph.dimensions': ['symbol']}"
False,,,,,2018-12-06 04:02:45.992,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \nsss.residence, sum(sss.total_buy) as ""total_buy"", sum(sss.company_revenue) as ""company_revenue""\nfrom\n(\n    select bc.residence, ttt.* from\n    (\n        select \n        a.client_loginid,\n        tmp.account_id,\n        tmp.market,\n        round(tmp.total_buy*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""total_buy"",\n        round(tmp.company_revenue*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""company_revenue""\n        from\n            (\n            select \n                account_id,\n                bm.market,\n                cast(purchase_time as date) as ""day"", \n                sum(buy_price) as ""total_buy"",\n                sum((buy_price - sell_price)) as ""company_revenue""\n            from bet.financial_market_bet fmb\n            left join bet.market bm\n            on bm.symbol=fmb.underlying_symbol\n            where purchase_time >= now() + INTERVAL \'-4 hour\'\n            --and market=\'forex\'    \n            and is_sold = TRUE\n            group by 1,2,3 \n        ) tmp\n            left join transaction.account a\n            on tmp.account_id=a.id\n    ) ttt left join betonmarkets.client bc\n    on bc.loginid=ttt.client_loginid\n) sss\ngroup by 1\norder by 2 desc\n'}}",,area,,False,False,69,,CR recent turnover by country,,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 68, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'total_buy', 'display_name': 'Total Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 68, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.5, 'max': 268171.25, 'avg': 9445.602058823528, 'sd': 38795.41685246491, 'q1': 31.895, 'q3': 1769.13}}}}, {'name': 'company_revenue', 'display_name': 'Company Revenue', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 67, 'nil%': 0.0}, 'type': {'type/Number': {'min': -3182.41, 'max': 84721.32, 'avg': 1260.548823529412, 'sd': 10288.76212022381, 'q1': -25.365000000000002, 'q3': 42.15}}}}]",,2019-04-11 03:52:25.349,"{'series_settings': {'Total Buy': {'axis': 'left', 'display': 'bar'}, 'Company Revenue': {'axis': 'right'}}, 'stackable.stack_type': None, 'graph.dimensions': ['residence'], 'graph.metrics': ['total_buy']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-05 02:48:16.296,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'market1': {'id': 'b0fd1527-718b-8001-fc08-16b83de30148', 'name': 'market1', 'display-name': 'Market', 'type': 'text', 'required': True, 'default': 'forex'}}, 'query': 'select \ntmp.account_id, tmp.market,\nround(tmp.company_revenue*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""company_revenue_USDDER""\nfrom\n    (\n    select \n        account_id,\n        bm.market,\n        cast(purchase_time as date) as ""day"", \n        sum((buy_price - sell_price)) as ""company_revenue""\n    from bet.financial_market_bet fmb\n    left join bet.market bm\n    on bm.symbol=fmb.underlying_symbol\n    where purchase_time >= now() + INTERVAL \'-2 hour\'\n    and bm.market = {{market1}}   \n    and is_sold = TRUE\n    group by 1,2,3 \n) tmp\n    left join transaction.account a\n    on tmp.account_id=a.id\norder by 3\n--limit 1000'}, 'type': 'native', 'database': 2}",,table,,False,False,67,,CR recent winners by market,,native,,"[{'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 416, 'nil%': 0.0}, 'type': {'type/Number': {'min': 247261.0, 'max': 12120081.0, 'avg': 7968431.336538462, 'sd': 3619252.7564635025, 'q1': 4691058.888888889, 'q3': 11822962.57805534}}}}, {'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.0}}}}, {'name': 'company_revenue_USDDER', 'display_name': 'Company Revenue Usd Der', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 264, 'nil%': 0.0}, 'type': {'type/Number': {'min': -388.26, 'max': 325.45, 'avg': 0.243124999999999, 'sd': 42.01939444125103, 'q1': -4.246917338347429, 'q3': 11.675157285169643}}}}]",,2019-03-18 05:47:11.062,"{'table.pivot_column': 'market', 'table.cell_column': 'account_id'}"
False,,,,,2018-12-04 06:35:41.101,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \ntmp.account_id, tmp.market,\nround(tmp.company_revenue*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""company_revenue_USDDER""\nfrom\n    (\n    select \n        account_id,\n        bm.market,\n        cast(purchase_time as date) as ""day"", \n        sum((buy_price - sell_price)) as ""company_revenue""\n    from bet.financial_market_bet fmb\n    left join bet.market bm\n    on bm.symbol=fmb.underlying_symbol\n    where purchase_time >= now() + INTERVAL \'-4 hour\'\n    --and market=\'forex\'    \n    and is_sold = TRUE\n    group by 1,2,3 \n) tmp\n    left join transaction.account a\n    on tmp.account_id=a.id\norder by 3\n--limit 1000'}}",,bar,,False,False,66,,CR revenue by market in the past 4 hours.,,native,,"[{'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2510, 'nil%': 0.0}, 'type': {'type/Number': {'min': 215121.0, 'max': 11777741.0, 'avg': 8035106.530097087, 'sd': 3380572.204018076, 'q1': 5027009.633152621, 'q3': 11161291.235846149}}}}, {'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.837281553398058}}}}, {'name': 'company_revenue_USDDER', 'display_name': 'Company Revenue Usd Der', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1725, 'nil%': 0.0}, 'type': {'type/Number': {'min': -2019.41, 'max': 8755.68, 'avg': 12.168085436893206, 'sd': 293.08727148376323, 'q1': -10.526657940871832, 'q3': 6.808457451621411}}}}]",,2019-02-19 07:22:53.439,"{'table.pivot_column': 'market', 'table.cell_column': 'account_id', 'graph.dimensions': ['market'], 'graph.metrics': ['company_revenue_USDDER']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-19 08:24:46.448,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'country_count': {'id': '5716ea3c-e9ad-83bf-b457-85e6087b6d8d', 'name': 'country_count', 'display-name': 'How many countries?', 'type': 'number', 'required': True, 'default': '7'}}, 'query': 'select d.""day"", d.""residence"", round(d.""turnover_USD"",2) as ""turnover_USD"", round(d.""profit_USD"",2) as ""profit_USD"", ""client_count""\nfrom\n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD"", count(distinct ""client_loginid"") as ""client_count""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-31 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\n) d right join \n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-1 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\nlimit {{country_count}}\n) e\non e.residence=d.residence\norder by 1 desc, 3 desc\n\n'}, 'type': 'native', 'database': 2}",,line,,False,False,119,,"CR revenue from top-N countries, for the past 30 days",,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 31, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-06-08T00:00:00.000Z', 'latest': '2019-07-08T00:00:00.000Z'}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'turnover_USD', 'display_name': 'Turnover Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 217, 'nil%': 0.0}, 'type': {'type/Number': {'min': 13884.87, 'max': 1990165.33, 'avg': 468364.652718894, 'sd': 544025.1443043167, 'q1': 95513.44407552117, 'q3': 840086.8410609324}}}}, {'name': 'profit_USD', 'display_name': 'Profit Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 217, 'nil%': 0.0}, 'type': {'type/Number': {'min': -62566.44, 'max': 200861.72, 'avg': 13982.290184331796, 'sd': 25940.409724734796, 'q1': 839.1922, 'q3': 20108.627533983195}}}}, {'name': 'client_count', 'display_name': 'Client Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 184, 'nil%': 0.0}, 'type': {'type/Number': {'min': 55.0, 'max': 2359.0, 'avg': 735.2718894009216, 'sd': 702.0486921565083, 'q1': 174.24545384457048, 'q3': 1096.3686629910533}}}}]",,2019-07-09 08:07:23.340,"{'graph.metrics': ['profit_USD'], 'graph.dimensions': ['day', 'residence'], 'graph.y_axis.scale': 'pow', 'series_settings': {'id': {'line.interpolate': 'cardinal'}, 'br': {'line.interpolate': 'cardinal'}, 'ru': {'line.interpolate': 'cardinal'}, 'vn': {'line.interpolate': 'cardinal'}, 'th': {'line.interpolate': 'cardinal'}, 'ng': {'line.interpolate': 'cardinal'}, 'in': {'line.interpolate': 'cardinal'}}, 'graph.show_goal': True}"
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-17 05:37:28.996,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'native': {'template-tags': {'period': {'id': '815b20d9-6bfe-ff64-d0d4-e5bcfc0040d8', 'name': 'period', 'display-name': 'Period', 'type': 'dimension', 'dimension': ['field-id', 260], 'widget-type': 'date/all-options', 'required': True, 'default': 'past1days~'}}, 'query': 'select sum(amount_usd) from (\nselect amount*data_collection.exchangetousd_rate(""currency_code"", transaction_time) as ""amount_usd""\nfrom transaction.firsts left join transaction.account ta\non ta.id=account_id and action_type=\'deposit\'\nwhere {{period}}\n) as t\n'}, 'type': 'native', 'database': 2}",,scalar,,False,False,94,,CR sum of first deposits,,native,,"[{'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 165742.36087211187, 'max': 165742.36087211187, 'avg': 165742.36087211187, 'sd': None, 'q1': 165742.36087211187, 'q3': 165742.36087211187}}}}]",,2019-04-29 03:05:13.708,"{'progress.color': '#EF8C8C', 'progress.goal': 100000, 'column_settings': {'[""name"",""sum""]': {'prefix': '', 'number_style': 'currency', 'currency_style': 'symbol'}}}"
False,,,,,2019-02-05 07:02:55.019,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select to_char(max(transaction_time), \'YYYY-MM-DD HH:mm:SS\') as ""last_transaction_time"", \nto_char(now(), \'YYYY-MM-DD HH:mm:SS\') as ""time_now"", extract(epoch from now()-max(transaction_time))/60 as ""minutes_since_last_transaction"",\nextract(epoch from (now() - pg_last_xact_replay_timestamp()))/60 as ""minutes_since_last_replay""\nfrom transaction.transaction'}}",,table,,False,False,339,1.0,CR Sync Lag,b3b65103-4a08-4d89-81a8-02c03a4496b2,native,,"[{'name': 'last_transaction_time', 'display_name': 'last_transaction_time', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'time_now', 'display_name': 'time_now', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'minutes_since_last_transaction', 'display_name': 'minutes_since_last_transaction', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 11.584201883333332, 'max': 11.584201883333332, 'avg': 11.584201883333332, 'sd': None, 'q1': 11.584201883333332, 'q3': 11.584201883333332}}}}, {'name': 'minutes_since_last_replay', 'display_name': 'minutes_since_last_replay', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 11.583890583333334, 'max': 11.583890583333334, 'avg': 11.583890583333334, 'sd': None, 'q1': 11.583890583333334, 'q3': 11.583890583333334}}}}]",,2019-10-11 01:11:45.231,"{'table.pivot_column': 'last_transaction_time', 'table.cell_column': 'sync_lag'}"
False,,,,,2019-02-05 08:29:18.498,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select * from\n(\nselect to_char(max(transaction_time),\'YYYY-MM-DD-HH24-MI-SS\') as ""last_transaction_time"",\nto_char(now(),\'YYYY-MM-DD-HH24-MI-SS\') as ""time_now"",\nextract(epoch from now()-max(transaction_time))/60 as ""sync_lag_minutes"",\nextract(epoch from (now() - pg_last_xact_replay_timestamp()))/60 as ""replay_lag_minutes""\nfrom transaction.transaction\n) tmp\nwhere tmp.""sync_lag_minutes"" > 5 or tmp.""replay_lag_minutes"" > 5\n'}}",,table,,False,False,344,,CR Sync Lag >5 minutes,,native,,"[{'name': 'last_transaction_time', 'display_name': 'last_transaction_time', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'time_now', 'display_name': 'time_now', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'sync_lag_minutes', 'display_name': 'sync_lag_minutes', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4522.900000233333, 'max': 4522.900000233333, 'avg': 4522.900000233333, 'sd': None, 'q1': 4522.900000233333, 'q3': 4522.900000233333}}}}, {'name': 'replay_lag_minutes', 'display_name': 'replay_lag_minutes', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4522.899377016667, 'max': 4522.899377016667, 'avg': 4522.899377016667, 'sd': None, 'q1': 4522.899377016667, 'q3': 4522.899377016667}}}}]",,2019-10-21 06:00:30.349,"{'table.pivot_column': 'last_transaction_time', 'table.cell_column': 'sync_lag'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-19 07:42:46.787,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select d.""day"", d.""residence"", round(d.""turnover_USD"",2) as ""turnover_USD"", round(d.""profit_USD"",2) as ""profit_USD"", ""client_count""\nfrom\n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD"", count(distinct ""client_loginid"") as ""client_count""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-31 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\n) d right join \n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-1 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\nlimit {{country_count}}\n) e\non e.residence=d.residence\norder by 1 desc, 3 desc\n\n', 'template-tags': {'country_count': {'id': '7c2e6788-fa0a-1877-b969-ed7f2bba6908', 'name': 'country_count', 'display-name': 'How many countries?', 'type': 'number', 'required': True, 'default': '5'}}}}",,line,,False,False,116,,"CR top-N countries, in the last 30 days",,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 31, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-03-15T00:00:00.000Z', 'latest': '2019-04-14T00:00:00.000Z'}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'turnover_USD', 'display_name': 'Turnover Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 155, 'nil%': 0.0}, 'type': {'type/Number': {'min': 47337.78, 'max': 2287785.85, 'avg': 551996.2794838711, 'sd': 604901.581881028, 'q1': 110888.09830109468, 'q3': 874728.3560719158}}}}, {'name': 'profit_USD', 'display_name': 'Profit Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 155, 'nil%': 0.0}, 'type': {'type/Number': {'min': -6212.11, 'max': 126479.8, 'avg': 14993.796322580647, 'sd': 20301.39513638203, 'q1': 2102.4143846044294, 'q3': 25060.812610157183}}}}, {'name': 'client_count', 'display_name': 'Client Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 142, 'nil%': 0.0}, 'type': {'type/Number': {'min': 94.0, 'max': 2471.0, 'avg': 914.1935483870968, 'sd': 741.0063464454495, 'q1': 280.9775005104124, 'q3': 1150.7960675243285}}}}]",,2019-04-15 09:07:46.194,"{'graph.dimensions': ['day', 'residence'], 'graph.metrics': ['turnover_USD'], 'graph.y_axis.scale': 'linear'}"
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-19 06:26:10.249,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- total withdrawal_usd\n-- this includes for example \'external_cashier\', \'crypto_cashier\', \'free_gift\', \'affiliate_reward\', \'adjustment\nselect -sum(""amount_usd"")\nfrom (\n    select \n    --   coalesce(p.transfer_fees,0)*data_collection.exchangetousd_rate(a.currency_code, p.payment_time) as ""transfer_fees_usd"",\n      coalesce(amount,0)*data_collection.exchangetousd_rate(a.currency_code, payment_time) as ""amount_usd""\n    from payment.payment\n    join transaction.account as a\n    on a.id = account_id \n    and payment_type_code!=\'mt5_transfer\'\n    and payment_type_code!=\'internal_transfer\'\n    and amount<0\n    and {{period}}\n) as t', 'template-tags': {'period': {'widget-type': 'date/all-options', 'default': 'past1days~', 'name': 'period', 'type': 'dimension', 'id': '34579c21-d7b6-f5ef-9cd2-8688c20a4dd1', 'dimension': ['field-id', 748], 'display-name': 'Period', 'required': True}}}}",,scalar,,False,False,113,,CR total withdrawals by period,,native,,"[{'name': '?column?', 'display_name': '?column?', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 155976.8960546654, 'max': 155976.8960546654, 'avg': 155976.8960546654, 'sd': None, 'q1': 155976.8960546654, 'q3': 155976.8960546654}}}}]",,2019-05-15 08:34:27.719,"{'column_settings': {'[""name"",""?column?""]': {'number_style': 'currency'}}}"
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-19 06:51:45.076,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- company trading volume by period\nselect sum(""amount_usd"")\nfrom (\n    select coalesce(turnover,0)*data_collection.exchangetousd_rate(a.currency_code, ""day"") as ""amount_usd""\n    from bet.daily_aggregates \n    join transaction.account as a \n    on a.id=account_id\n    and {{period}}\n) as t', 'template-tags': {'period': {'widget-type': 'date/all-options', 'default': 'past1days~', 'name': 'period', 'type': 'dimension', 'id': 'c82bce8e-702a-f61f-ed27-bbc4853e9c56', 'dimension': ['field-id', 959], 'display-name': 'Period', 'required': True}}}}",,scalar,,False,False,115,,CR trading volume by period,,native,,"[{'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5403071.562000593, 'max': 5403071.562000593, 'avg': 5403071.562000593, 'sd': None, 'q1': 5403071.562000593, 'q3': 5403071.562000593}}}}]",,2019-05-15 08:33:53.390,"{'column_settings': {'[""name"",""sum""]': {'number_style': 'currency'}}}"
False,,,,,2018-11-30 02:10:08.294,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select t2.""day"", sum(t2.turnover_USDDER) as turnover_USD from\n    (select tmp.""day"", \n            turnover*data_collection.exchangetousd_rate(tmp.currency_code, tmp.""day"") as turnover_USDDER \n    from\n        (select \n          CAST(da.""day"" AS date) as ""day"", \n          a.currency_code,\n          sum(turnover) as ""turnover""\n          --sum(loss) as ""profit"",\n          --count(distinct account_id) as ""customer_count""\n        from bet.daily_aggregates da left join transaction.account a  \n        on da.account_id=a.id\n        WHERE CAST(da.""day"" AS date) \n            BETWEEN \n                CAST((NOW() + INTERVAL \'-30 day\') AS date) --current_date -30\n            AND CAST((NOW() + INTERVAL \'-1 day\') AS date)  --current_date \n        GROUP BY 1,2\n        ORDER BY 1 DESC, 2 DESC\n        ) tmp\n    ) t2\ngroup by 1\norder by 1 desc'}}",,line,,False,False,55,,CR turnover,,native,,"[{'name': 'day', 'display_name': 'day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-21T00:00:00.000Z', 'latest': '2019-10-18T00:00:00.000Z'}}}}, {'name': 'turnover_usd', 'display_name': 'turnover_usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 531253.0610464357, 'max': 5839322.034254314, 'avg': 4724764.883091117, 'sd': 1020519.9511435117, 'q1': 4388446.121764049, 'q3': 5337252.224067998}}}}]",,2019-10-21 00:03:53.674,"{'series_settings': {'Turnover': {'display': 'area', 'line.interpolate': 'cardinal'}, 'Turnover Usd Der': {'line.interpolate': 'cardinal', 'display': 'area'}, 'Turnover Usd': {'display': 'area', 'line.interpolate': 'cardinal'}}, 'graph.show_trendline': True, 'graph.dimensions': ['day'], 'graph.metrics': ['turnover_usd']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-19 08:22:21.796,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select d.""day"", d.""residence"", round(d.""turnover_USD"",2) as ""turnover_USD"" --, round(d.""profit_USD"",2) as ""profit_USD"", ""client_count""\nfrom\n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD"", count(distinct ""client_loginid"") as ""client_count""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-31 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\n) d right join \n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-1 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\nlimit {{country_count}}\n) e\non e.residence=d.residence\norder by 1 desc, 3 desc\n\n', 'template-tags': {'country_count': {'id': '43f06a49-94ad-4073-4f8b-62e35740a985', 'name': 'country_count', 'display-name': 'How many countries?', 'type': 'number', 'required': True, 'default': '4'}}}}",,line,,False,False,118,,"CR turnover of top-N countries, in the last 30 days",,native,,"[{'name': 'day', 'display_name': 'day', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'residence', 'display_name': 'residence', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'turnover_USD', 'display_name': 'turnover_USD', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-21 00:04:26.677,"{'graph.dimensions': ['day', 'residence'], 'graph.metrics': ['turnover_USD'], 'graph.y_axis.scale': 'log', 'series_settings': {'id': {'line.interpolate': 'cardinal'}, 'br': {'line.interpolate': 'cardinal'}, 'ru': {'line.interpolate': 'cardinal'}, 'vn': {'line.interpolate': 'cardinal'}, 'th': {'line.interpolate': 'cardinal'}, 'ng': {'line.interpolate': 'cardinal'}, 'in': {'line.interpolate': 'cardinal'}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-04 06:31:35.508,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \ntmp.account_id, tmp.market,\nround(tmp.company_revenue*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""company_revenue_USDDER""\nfrom\n    (\n    select \n        account_id,\n        bm.market,\n        cast(purchase_time as date) as ""day"", \n        sum((buy_price - sell_price)) as ""company_revenue""\n    from bet.financial_market_bet fmb\n    left join bet.market bm\n    on bm.symbol=fmb.underlying_symbol\n    where purchase_time >= now() + INTERVAL \'-4 hour\'\n    and bm.market = {{market1}}   \n    and is_sold = TRUE\n    group by 1,2,3 \n) tmp\n    left join transaction.account a\n    on tmp.account_id=a.id\norder by 3\n--limit 1000', 'template-tags': {'market1': {'id': 'b0fd1527-718b-8001-fc08-16b83de30148', 'name': 'market1', 'display-name': 'Market', 'type': 'text', 'required': True, 'default': 'forex'}}}}",,table,,False,False,65,,CR winners in the past 4 hours,,native,,"[{'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 238, 'nil%': 0.0}, 'type': {'type/Number': {'min': 294081.0, 'max': 11906901.0, 'avg': 7816950.211618258, 'sd': 3252854.417057826, 'q1': 5170651.0, 'q3': 10958683.33204064}}}}, {'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.0}}}}, {'name': 'company_revenue_USDDER', 'display_name': 'Company Revenue Usd Der', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 195, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1294.29, 'max': 2334.03, 'avg': 4.892365145228218, 'sd': 213.1902309844127, 'q1': -2.9263349575120863, 'q3': 3.853520507829485}}}}]",,2019-03-01 02:32:54.192,"{'table.pivot_column': 'market', 'table.cell_column': 'account_id'}"
False,,"{'id': 74, 'name': ""Chris Tan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 54, 'slug': 'chris_tan_s_personal_collection'}",74.0,,2019-03-06 06:39:53.182,"{'email': 'chris.tan@binary.com', 'first_name': 'Chris', 'last_login': '2019-10-17T08:23:50.055Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 54, 'last_name': 'Tan', 'date_joined': '2019-01-25T07:04:08.850Z', 'common_name': 'Chris Tan'}",54,2,"{'database': 2, 'type': 'native', 'native': {'query': 'with yesterday as\n(select hour,\n        sum(withdraw) as withdraw\nfrom\n    (select \textract(hour from p.""payment_time"") as hour,\n    \t\t    case when ""amount""<0 then ""amount"" * data_collection.exchangetousd_rate(a.""currency_code"", p.""payment_time"") end  withdraw\n    from payment.payment as p \n    left join transaction.account as a \n        on p.""account_id"" = a.""id""\n  where date_trunc(\'day\',""payment_time"") = Current_date -1) tmp\ngroup by hour\n),\n\ntoday as\n(select hour,\n        sum(withdraw) as withdraw \nfrom\n    (select \textract(hour from p.""payment_time"") as hour,\n    \t\t    case when ""amount""<0 then ""amount"" * data_collection.exchangetousd_rate(a.""currency_code"", p.""payment_time"") end  withdraw\n    from payment.payment as p \n    left join transaction.account as a \n        on p.""account_id"" = a.""id""\n  where date_trunc(\'day\',""payment_time"") = Current_date ) tmp\ngroup by hour\n),\n\naverage as\n(select hour, avg(amount) as withdraw from\n(select date,hour,sum(withdraw) as amount\nfrom\n    (select \tdate_trunc(\'day\',p.""payment_time"") as date, extract(hour from p.""payment_time"") as hour,\n    \t\t    case when ""amount""<0 then ""amount"" * data_collection.exchangetousd_rate(a.""currency_code"", p.""payment_time"") end  withdraw\n    from payment.payment as p \n    left join transaction.account as a \n        on p.""account_id"" = a.""id""\n  where date_trunc(\'day\',""payment_time"") > Current_date -30 ) tmp\ngroup by 1,2 ) as tmp2\ngroup by 1)\n\nselect hour,round(-sum(y) over (order by hour rows between unbounded preceding and current row)::numeric,2) as yesterday_cumulative_withdraw,\ncase when EXTRACT(hour from now())>=hour then round(-sum(t) over (order by hour rows between unbounded preceding and current row)::numeric,2) end as today_cumulative_withdraw,\nround(-sum(a) over (order by hour rows between unbounded preceding and current row)::numeric,2) as avg_cumulative_withdraw_last_30_days from\n(select yesterday.""hour"" as hour,yesterday.""withdraw"" as y,today.""withdraw"" as t,average.""withdraw"" as a from \nyesterday\nleft join today\non yesterday.""hour"" = today.""hour""\nleft join average\non yesterday.""hour"" = average.""hour""\n) as tmp\norder by 1'}}","It show the cumulative withdraw for today, yesterday, average of last 30 days by hours",line,,False,False,448,,CR Withdraw Today vs Yesterday vs last 30 days,,native,,"[{'name': 'hour', 'display_name': 'Hour', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 23.0, 'avg': 11.5, 'sd': 7.071067811865475, 'q1': 5.5, 'q3': 17.5}}}}, {'name': 'yesterday_cumulative_withdraw', 'display_name': 'Yesterday Cumulative Withdraw', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 13295.38, 'max': 487626.38, 'avg': 304649.9095833333, 'sd': 161456.26575494264, 'q1': 156711.005, 'q3': 449025.775}}}}, {'name': 'today_cumulative_withdraw', 'display_name': 'Today Cumulative Withdraw', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.875}, 'type': {'type/Number': {'min': 32810.1, 'max': 78359.88, 'avg': 58699.33000000001, 'sd': 23404.977150574196, 'q1': 40839.5775, 'q3': 75001.9125}}}}, {'name': 'avg_cumulative_withdraw_last_30_days', 'display_name': 'Avg Cumulative Withdraw Last 30 Days', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 20952.79, 'max': 469299.84, 'avg': 290141.45, 'sd': 143528.4993575592, 'q1': 170492.77000000002, 'q3': 419624.41000000003}}}}]",,2019-03-12 02:51:57.751,"{'table.pivot_column': 'today_cumulative_withdraw', 'table.cell_column': 'hour', 'series_settings': {'Yesterday Cumulative Withdraw': {'color': '#509EE3', 'line.marker_enabled': False, 'line.missing': 'none', 'axis': 'left'}, 'Today Cumulative Withdraw': {'color': '#EF8C8C', 'line.marker_enabled': False, 'line.missing': 'none', 'axis': 'left'}, 'Avg Cumulative Withdraw Last 30 Days': {'color': '#98D9D9', 'line.marker_enabled': False, 'line.interpolate': 'linear', 'line.missing': 'none', 'axis': 'left'}}, 'graph.dimensions': ['hour'], 'graph.metrics': ['yesterday_cumulative_withdraw', 'today_cumulative_withdraw', 'avg_cumulative_withdraw_last_30_days']}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-08-12 03:55:58.698,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,7,"{'database': 7, 'type': 'native', 'native': {'query': ""select \na.binary_user_id,\nu.loginid,\nb.email,\n--a.action,\na.history_date,\na.country,\na.ip,\na.environment\n\nfrom users.login_history a\njoin users.loginid u on u.binary_user_id = a.binary_user_id\njoin users.binary_user b on u.binary_user_id = b.id\nwhere environment like '%LANG=ZH_CN%'\nand history_date  >= NOW()-'1 day'::interval\nand action = 'login'\nand loginid like 'CR%'\norder by loginid desc""}}",,table,,False,False,1027,,CR: CN as browser lang,,native,,"[{'name': 'binary_user_id', 'display_name': 'binary_user_id', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5522743.0, 'max': 6495756.0, 'avg': 5989143.090909091, 'sd': 471547.7814322647, 'q1': 5548901.166461861, 'q3': 6475197.062380089}}}}, {'name': 'loginid', 'display_name': 'loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'email', 'display_name': 'email', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 1.0, 'average-length': 17.363636363636363}}}}, {'name': 'history_date', 'display_name': 'history_date', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-17T01:06:30.000Z', 'latest': '2019-10-17T15:06:00.000Z'}}}}, {'name': 'country', 'display_name': 'country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'ip', 'display_name': 'ip', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}}}, {'name': 'environment', 'display_name': 'environment', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 180.36363636363637}}}}]",,2019-10-18 00:34:07.227,"{'table.pivot_column': 'binary_user_id', 'table.cell_column': 'binary_user_id'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-08-29 06:27:36.786,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\ncurrency_code,\nclient_loginid,\na.citizen,\na.residence,\na.email,\namount,\nstatus,\nlast_checked\nfrom payment.cryptocurrency\njoin audit.client a on client_loginid = a.loginid\nwhere currency_code = 'ETH'\nand residence = 'ru'\nand status = 'CONFIRMED'\ngroup by 1,2,3,4,5,6,7,8\norder by client_loginid desc\nlimit 100""}}",,table,,False,False,1031,,CR: ETH deposits from Russia,,native,,"[{'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 23, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'citizen', 'display_name': 'citizen', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 1.16}}}}, {'name': 'residence', 'display_name': 'residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'email', 'display_name': 'email', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 1.0, 'average-length': 19.18}}}}, {'name': 'amount', 'display_name': 'amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 37, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0012000000000000001, 'max': 19.895, 'avg': 2.2053839101, 'sd': 5.125028409882962, 'q1': 0.0485, 'q3': 2.101580482598048}}}}, {'name': 'status', 'display_name': 'status', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'last_checked', 'display_name': 'last_checked', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 81, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-20T09:05:05.186Z', 'latest': '2019-10-16T13:02:38.378Z'}}}}]",,2019-10-21 00:00:03.737,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'amount'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-05-16 07:33:16.486,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\n    hour_of_day,\n    --sum(total_buy) as total_buy,\n    sum(total_profit) as total_profit\nfrom\n(\n    select \n        tmp.account_id,\n        tmp.hour_of_day,\n        tmp.total_buy*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as total_buy,\n        tmp.total_profit*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as total_profit\n    from\n    (\n        select \n            account_id, \n            date_part('hour', sell_time) as hour_of_day, \n            sum(coalesce(buy_price,0)) as total_buy, \n            sum(coalesce(buy_price,0) - coalesce(sell_price,0)) as total_profit\n        from only bet.financial_market_bet \n        where sell_time >= {{date_string}}::date\n        and sell_time < {{date_string}}::date + interval '1d'\n        and underlying_symbol not in ('R_100','R_50','R_25','R_75', 'R_10','RDBULL','RDBEAR', 'frxXAUUSD', 'frxXAGUSD')\n        --current_date --+ interval '-2d'\n        group by 1, 2\n    ) tmp \n    left join transaction.account ta\n    on ta.id=tmp.account_id\n) tmp2\ngroup by 1"", 'template-tags': {'date_string': {'id': '3ef4e8de-559a-cf75-c5ed-548af91c294a', 'name': 'date_string', 'display-name': 'Date', 'type': 'date'}}}}",,combo,,False,False,974,,CR: FX PL by hour,,native,,"[{'name': 'hour_of_day', 'display_name': 'hour_of_day', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 21, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 20.0, 'avg': 10.0, 'sd': 6.204836822995428, 'q1': 4.75, 'q3': 15.25}}}}, {'name': 'total_profit', 'display_name': 'total_profit', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 21, 'nil%': 0.0}, 'type': {'type/Number': {'min': -4127.047971115545, 'max': 6682.692816818597, 'avg': 655.6712884862739, 'sd': 2490.850337505441, 'q1': -552.6670394346174, 'q3': 1618.9795412170301}}}}]",,2019-09-30 04:05:38.029,"{'series_settings': {'total_buy': {'display': 'bar'}, 'total_profit': {'display': 'line'}}, 'graph.show_goal': True, 'graph.goal_value': 0, 'graph.goal_label': 'Zero', 'graph.dimensions': ['hour_of_day'], 'graph.metrics': ['total_profit']}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-04-08 03:35:45.395,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n\nFrom_account,\ncurrency_code,\nTo_account,\nsum (amount_usd) as total,\ncount (amount_usd) as operations_number\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time,\nc.amount,\n-round ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\t\nb.payment_type_code,\nsubstring (b.remark, 23, 8) as From_account,\nsubstring (b.remark, 35, 8) as To_account\n\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n\nwhere referrer_type = \'payment\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code = \'internal_transfer\'\nand payment_gateway_code != \'payment_agent_transfer\'\n) as y\ngroup by client_loginid, currency_code, From_account, To_account\norder by total desc\n\n', 'template-tags': {'startdate': {'id': '3e5f8320-439b-c375-5491-3dc74d1e699a', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'enddate': {'id': 'b7647b65-3e3f-e893-3d08-48f75137a681', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True}}}}",,table,,False,False,692,,CR: internal transfers ,,native,,"[{'name': 'from_account', 'display_name': 'From Account', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 68, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'to_account', 'display_name': 'To Account', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 68, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total', 'display_name': 'Total', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 130, 'nil%': 0.0}, 'type': {'type/Number': {'min': -5158.48, 'max': 5210.74, 'avg': 1.614926470588216, 'sd': 858.860520450031, 'q1': -44.73088242640748, 'q3': 45.09102836396107}}}}, {'name': 'operations_number', 'display_name': 'Operations Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 3.0, 'avg': 1.117647058823529, 'sd': 0.36633972351947003, 'q1': 1.0, 'q3': 1.4129385556699399}}}}]",,2019-07-01 07:41:24.458,"{'table.pivot_column': 'operations_number', 'table.cell_column': 'total', 'table.columns': [{'name': 'from_account', 'enabled': True}, {'name': 'currency_code', 'enabled': False}, {'name': 'to_account', 'enabled': True}, {'name': 'total', 'enabled': True}, {'name': 'operations_number', 'enabled': True}]}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-07-11 11:29:20.279,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\nsource,\nround (cast(sum(pl*exchange_rate) as numeric), 2) as PL_in_USD,\nround (cast(sum(buy_price*exchange_rate) as numeric), 2) as volume,\ncount (pl) as trades_number,\ncount (distinct client_loginid) as users \nfrom\n(select \n           b.purchase_time,\n           b.underlying_symbol,\n           b.payout_price,\n           b.buy_price,\n           b.sell_price,\n           b. sell_time,\n           a.client_loginid,\n           data_collection.exchangetousd_rate(a.currency_code, b.purchase_time) as ""exchange_rate"",\n\t\t   (sell_price-buy_price) as PL,\n           t.source\n    from only bet.financial_market_bet as b\n    join transaction.transaction t on b.id=t.financial_market_bet_id and t.action_type=\'buy\' --and t.source=6070\n    join transaction.account a on a.id=b.account_id\n\n    where\n         sell_time >= NOW()-\'24 hour\'::interval\n        and t.source in (\'11804\',\'13044\',\n\'13045\',\n\'13046\',\n\'13047\',\n\'13048\',\n\'13049\',\n\'13050\',\n\'13060\',\n\'18750\',\n\'18795\',\n\'18744\'\n)\n) f\n\t  group by source\n\t  order by users desc'}}",,table,,False,False,1018,,CR: PL from EOH apps,,native,,"[{'name': 'source', 'display_name': 'source', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'pl_in_usd', 'display_name': 'pl_in_usd', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'volume', 'display_name': 'volume', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'users', 'display_name': 'users', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-21 00:58:52.328,"{'table.pivot_column': 'trades_number', 'table.cell_column': 'source'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-05-14 03:43:55.258,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'native': {'template-tags': {'start_date': {'id': '3638b031-8f01-99f9-ca91-e1ac68cda961', 'name': 'start_date', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'end_date': {'id': '158549a2-9fe0-7868-1d0e-d3906ebe9ebc', 'name': 'end_date', 'display-name': 'End Date', 'type': 'date', 'required': True}, 'amount': {'id': 'd09b69ed-c7d9-933c-b3a3-ad694db4a9c7', 'name': 'amount', 'display-name': 'Amount', 'type': 'number'}}, 'query': 'select * from \n(select \n   a.client_loginid,\n   a.currency_code,\n  round((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd"",\n underlying_symbol,   \n sell_time\n\tfrom bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{start_date}}\n    and sell_time < {{end_date}}\n    \n\t\ngroup by client_loginid, currency_code, client_pnl_usd, sell_time, underlying_symbol) y\ngroup by client_loginid, currency_code, client_pnl_usd, sell_time, underlying_symbol, client_pnl_usd\nhaving client_pnl_usd > {{amount}}\norder by sell_time desc\nlimit 100\t\n'}, 'type': 'native', 'database': 2}",,table,,False,False,968,,CR: recent large closed loss,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'client_pnl_usd', 'display_name': 'Client Pnl Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 516.03, 'max': 1101.08, 'avg': 713.7666666666668, 'sd': 335.4479990003418, 'q1': 518.0699999999999, 'q3': 956.8575}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.666666666666667}}}}, {'name': 'sell_time', 'display_name': 'Sell Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-08-09T00:01:41.000Z', 'latest': '2019-08-09T00:30:18.000Z'}}}}]",,2019-08-09 00:33:23.117,"{'table.columns': [{'name': 'sell_time', 'enabled': True}, {'name': 'client_pnl_usd', 'enabled': True}, {'name': 'underlying_symbol', 'enabled': True}, {'name': 'client_loginid', 'enabled': True}, {'name': 'currency_code', 'enabled': True}], 'table.pivot_column': 'currency_code', 'table.cell_column': 'client_pnl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-05-14 02:26:44.872,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'native': {'template-tags': {'start_date': {'id': '3638b031-8f01-99f9-ca91-e1ac68cda961', 'name': 'start_date', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'end_date': {'id': '158549a2-9fe0-7868-1d0e-d3906ebe9ebc', 'name': 'end_date', 'display-name': 'End Date', 'type': 'date', 'required': True}, 'amount': {'id': 'd09b69ed-c7d9-933c-b3a3-ad694db4a9c7', 'name': 'amount', 'display-name': 'Amount', 'type': 'number'}}, 'query': 'select * from \n(select \n   a.client_loginid,\n   a.currency_code,\n  round((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd"",\n underlying_symbol,   \n sell_time\n\tfrom bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{start_date}}\n    and sell_time < {{end_date}}\n    \n\t\ngroup by client_loginid, currency_code, client_pnl_usd, sell_time, underlying_symbol) y\ngroup by client_loginid, currency_code, client_pnl_usd, sell_time, underlying_symbol, client_pnl_usd\nhaving client_pnl_usd > {{amount}}\norder by sell_time desc\nlimit 100\t\n'}, 'type': 'native', 'database': 2}",,table,,False,False,964,,CR: recent large closed PL,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'client_pnl_usd', 'display_name': 'Client Pnl Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 540.07, 'max': 2343.57, 'avg': 957.9962500000001, 'sd': 582.5696599166122, 'q1': 634.965, 'q3': 952.81}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.25}}}}, {'name': 'sell_time', 'display_name': 'Sell Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-08-15T00:06:42.000Z', 'latest': '2019-08-15T01:16:38.000Z'}}}}]",,2019-08-15 01:17:26.698,"{'table.columns': [{'name': 'sell_time', 'enabled': True}, {'name': 'client_pnl_usd', 'enabled': True}, {'name': 'underlying_symbol', 'enabled': True}, {'name': 'client_loginid', 'enabled': True}, {'name': 'currency_code', 'enabled': True}], 'table.pivot_column': 'currency_code', 'table.cell_column': 'client_pnl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-09-03 02:18:07.186,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\ndate,\nclient_loginid,\nstaff_loginid,\ncurrency_code,\nsum (amount_usd) as total_sum_USD,\ncount (amount_usd) as transactions_number\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time as date,\nc.amount,\nround ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id\n\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\nwhere referrer_type = \'payment\'\nand transaction_time >= Now()-\'1 hour\'::interval\nand client_loginid in (\'CR761794\',\n\'CR763468\',\n\'CR765505\',\n\'CR766052\',\n\'CR767372\',\n\'CR768173\',\n\'CR769520\',\n\'CR770039\',\n\'CR773185\',\n\'CR776576\',\n\'CR777094\',\n\'CR777097\',\n\'CR779198\',\n\'CR779853\',\n\'CR780320\',\n\'CR781811\',\n\'CR781902\',\n\'CR786030\',\n\'CR786112\',\n\'CR797617\',\n\'CR797774\',\n\'CR798040\',\n\'CR799702\',\n\'CR800183\',\n\'CR800391\',\n\'CR807534\',\n\'CR809994\',\n\'CR822489\',\n\'CR832613\',\n\'CR838531\',\n\'CR838531\',\n\'CR995820\',\n\'CR992655\',\n\'CR847470\',\n\'CR850941\',\n\'CR853007\',\n\'CR855948\',\n\'CR864227\',\n\'CR866768\',\n\'CR868059\',\n\'CR872550\',\n\'CR888415\',\n\'CR891958\',\n\'CR894701\',\n\'CR908635\',\n\'CR915990\',\n\'CR927944\',\n\'CR934893\',\n\'CR941785\',\n\'CR941787\',\n\'CR941919\',\n\'CR942596\',\n\'CR944140\',\n\'CR946189\',\n\'CR951398\',\n\'CR956556\',\n\'CR957934\',\n\'CR960520\',\n\'CR961777\',\n\'CR963845\',\n\'CR970103\',\n\'CR970197\',\n\'CR970539\',\n\'CR970879\'\n\'CR971696\',\n\'CR972143\',\n\'CR972244\',\n\'CR973116\',\n\'CR973737\',\n\'CR974920\',\n\'CR976627\',\n\'CR979295\',\n\'CR991631\',\n\'CR992655\',\n\'CR995261\',\n\'CR995209\',\n\'CR975792\'\n)) as y\ngroup by staff_loginid, y.client_loginid, y.date, currency_code\norder by date desc'}}",,table,,False,False,1032,,CR: suspicious people's deposits,,native,,"[{'name': 'date', 'display_name': 'date', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'staff_loginid', 'display_name': 'staff_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'total_sum_usd', 'display_name': 'total_sum_usd', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'transactions_number', 'display_name': 'transactions_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-21 06:00:00.045,"{'table.pivot_column': 'date', 'table.cell_column': 'transactions_number'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-05-15 04:32:10.613,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\nsource,\nround (cast(sum(pl*exchange_rate) as numeric), 2) as PL_in_USD,\nround (cast(sum(buy_price*exchange_rate) as numeric), 2) as volume,\ncount (pl) as trades_number,\ncount (distinct client_loginid) as users,\nround (cast(sum(app_markup) as numeric), 2) as Markups\nfrom\n(select \n           b.purchase_time,\n           b.underlying_symbol,\n           b.payout_price,\n           b.buy_price,\n           b.sell_price,\n           b. sell_time,\n           a.client_loginid,\n           data_collection.exchangetousd_rate(a.currency_code, b.purchase_time) as ""exchange_rate"",\n\t\t   (sell_price-buy_price) as PL,\n           t.source,\n           t.app_markup\n    from only bet.financial_market_bet as b\n    join transaction.transaction t on b.id=t.financial_market_bet_id and t.action_type=\'buy\' --and t.source=6070\n    join transaction.account a on a.id=b.account_id\n\n    where\n         sell_time >= NOW()-\'24 hour\'::interval\n) f\n\t  group by source\n\t  order by users desc'}}",,table,,False,False,970,,CR: top app,,native,,"[{'name': 'source', 'display_name': 'source', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'pl_in_usd', 'display_name': 'pl_in_usd', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'volume', 'display_name': 'volume', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'users', 'display_name': 'users', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'markups', 'display_name': 'markups', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-21 00:02:13.076,"{'table.pivot_column': 'users', 'table.cell_column': 'source'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-25 06:46:56.816,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\nclient_loginid,\nsum (amount_usd) as total,\ncount (amount_usd) as operations_number,\nMT5account\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time,\nc.amount,\n-round ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\t\nb.payment_type_code,\nsubstring (b.remark, 39, 6) as MT5account\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n\nwhere referrer_type = \'payment\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code = \'mt5_transfer\'\n) as y\ngroup by client_loginid, currency_code, MT5account\norder by total desc\n\n', 'template-tags': {'startdate': {'id': '3e5f8320-439b-c375-5491-3dc74d1e699a', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'enddate': {'id': 'b7647b65-3e3f-e893-3d08-48f75137a681', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True}}}}",,table,,False,False,667,,CR: Top depositors to MT,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 78, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total', 'display_name': 'total', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 62, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1216.65, 'max': 2000.0, 'avg': 25.77560975609756, 'sd': 293.5941725129677, 'q1': -16.11, 'q3': 30.89}}}}, {'name': 'operations_number', 'display_name': 'operations_number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 2.0, 'avg': 1.085365853658536, 'sd': 0.28114490408192905, 'q1': 1.0, 'q3': 1.388380552161391}}}}, {'name': 'mt5account', 'display_name': 'mt5account', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 82, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.987804878048781}}}}]",,2019-09-11 02:23:08.066,"{'table.pivot_column': 'deposit_number', 'table.cell_column': 'total_deposit', 'table.column_widths': [None, None, 160]}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-26 04:17:54.835,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'with input as (\nselect\nstaff_loginid as login,\nday,\nsum (amount_usd) as total_sum,\npayment_agent_status,\ncount (amount_usd) as transactions_number\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time::timestamp::date as day,\nc.amount,\nround ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\nb.payment_gateway_code,\t\nb.payment_type_code,\nsource,\ncase WHEN client_loginid IN (select client_loginid from betonmarkets.payment_agent) THEN \'Yes\'\nElse \'No\'\nend payment_agent_status\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n\n\nwhere referrer_type = \'payment\'\nand payment_gateway_code = \'payment_agent_transfer\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code = \'internal_transfer\') as y\n--where payment_agent_status = \'No\'\ngroup by staff_loginid, day, payment_agent_status\norder by total_sum desc)\n\nselect *\nfrom input\nwhere payment_agent_status = \'No\'\norder by total_sum desc', 'template-tags': {'startdate': {'id': '86857254-488c-c266-9912-f7f6d1dab595', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date'}, 'enddate': {'id': 'd4c80042-fd23-5105-3c03-2ae5790f10a7', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date'}}}}",,table,,False,False,671,,CR: top depositors via payment agents,,native,,"[{'name': 'login', 'display_name': 'Login', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1316, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.991641337386018}}}}, {'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-03T00:00:00.000Z', 'latest': '2019-04-03T00:00:00.000Z'}}}}, {'name': 'total_sum', 'display_name': 'Total Sum', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 582, 'nil%': 0.0}, 'type': {'type/Number': {'min': -5000.0, 'max': 6666.66, 'avg': 42.47795592705167, 'sd': 389.6566816369238, 'q1': -12.1952434571261, 'q3': 47.92801052536335}}}}, {'name': 'payment_agent_status', 'display_name': 'Payment Agent Status', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'transactions_number', 'display_name': 'Transactions Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 31.0, 'avg': 1.946048632218845, 'sd': 2.152223971850869, 'q1': 1.0, 'q3': 2.158544718178581}}}}]",,2019-08-27 04:02:46.225,"{'table.pivot_column': 'day', 'table.cell_column': 'total_sum', 'table.columns': [{'name': 'login', 'enabled': True}, {'name': 'day', 'enabled': False}, {'name': 'total_sum', 'enabled': True}, {'name': 'payment_agent_status', 'enabled': False}, {'name': 'transactions_number', 'enabled': True}], 'table.column_formatting': [{'columns': ['payment_agent_status'], 'type': 'single', 'operator': '=', 'value': 'No', 'color': '#509EE3', 'highlight_row': False}]}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-27 06:50:54.857,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'with input as (\nselect\nclient_loginid,\nsum (amount_usd) as total,\npayment_agent_status,\ncount (amount_usd) as operations_number\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time,\nc.amount,\nround ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\nb.payment_gateway_code,\t\nb.payment_type_code,\n--source,\ncase WHEN client_loginid IN (select client_loginid from betonmarkets.payment_agent) THEN \'Yes\'\nElse \'No\'\nend payment_agent_status\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n  \n\nwhere referrer_type = \'payment\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code in (\'external_cashier\', \'crypto_cashier\', \'bank_money_transfer\')\n--and c.staff_loginid like \'CR%\' \n--or c.staff_loginid = \'system\'\n) as y\n\ngroup by client_loginid, currency_code, payment_agent_status\norder by total desc)\n\nselect *\nfrom input\nwhere payment_agent_status = \'No\'\norder by total desc\n', 'template-tags': {'startdate': {'id': '3e5f8320-439b-c375-5491-3dc74d1e699a', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'enddate': {'id': 'b7647b65-3e3f-e893-3d08-48f75137a681', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True}}}}",,table,,False,False,681,,CR: Top direct depositors,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1753, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.987450085567598}}}}, {'name': 'total', 'display_name': 'Total', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 706, 'nil%': 0.0}, 'type': {'type/Number': {'min': -7984.93, 'max': 17700.0, 'avg': 57.606640045636055, 'sd': 659.5232307659569, 'q1': 0.616394498141694, 'q3': 51.14922366866393}}}}, {'name': 'payment_agent_status', 'display_name': 'Payment Agent Status', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'operations_number', 'display_name': 'Operations Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 13.0, 'avg': 1.322304620650313, 'sd': 0.872230741555252, 'q1': 1.0, 'q3': 1.5629918858273402}}}}]",,2019-08-27 04:02:46.200,"{'table.pivot_column': 'deposit_number', 'table.cell_column': 'total_deposit', 'table.columns': [{'name': 'client_loginid', 'enabled': True}, {'name': 'total', 'enabled': True}, {'name': 'payment_agent_status', 'enabled': False}, {'name': 'operations_number', 'enabled': True}], 'table.column_widths': [None, 116]}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-25 06:14:27.513,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'with input as (\nselect\nclient_loginid,\nsum (amount_usd) as total,\npayment_agent_status,\ncount (amount_usd) as operations_number\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time,\nc.amount,\nround ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\nb.payment_gateway_code,\t\nb.payment_type_code,\n--source,\ncase WHEN client_loginid IN (select client_loginid from betonmarkets.payment_agent) THEN \'Yes\'\nElse \'No\'\nend payment_agent_status\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n  \n\nwhere referrer_type = \'payment\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code in (\'external_cashier\', \'crypto_cashier\', \'bank_money_transfer\')\n) as y\n\ngroup by client_loginid, currency_code, payment_agent_status\norder by total asc)\n\nselect *\nfrom input\nwhere payment_agent_status = \'No\'\norder by total asc', 'template-tags': {'startdate': {'id': '3e5f8320-439b-c375-5491-3dc74d1e699a', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'enddate': {'id': 'b7647b65-3e3f-e893-3d08-48f75137a681', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True}}}}",,table,,False,False,662,,CR: Top direct withdrawers,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1753, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.987450085567598}}}}, {'name': 'total', 'display_name': 'Total', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 706, 'nil%': 0.0}, 'type': {'type/Number': {'min': -7984.93, 'max': 17700.0, 'avg': 57.606640045636055, 'sd': 659.5193115755665, 'q1': -0.10020109012238901, 'q3': 51.48217944158597}}}}, {'name': 'payment_agent_status', 'display_name': 'Payment Agent Status', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'operations_number', 'display_name': 'Operations Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 13.0, 'avg': 1.322304620650313, 'sd': 0.872230741555252, 'q1': 1.0, 'q3': 1.5629918858273402}}}}]",,2019-08-27 04:02:46.232,"{'table.pivot_column': 'deposit_number', 'table.cell_column': 'total_deposit', 'table.columns': [{'name': 'client_loginid', 'enabled': True}, {'name': 'total', 'enabled': True}, {'name': 'payment_agent_status', 'enabled': False}, {'name': 'operations_number', 'enabled': True}]}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-07 04:45:33.927,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    and underlying_symbol not in (\'R_100\',\'R_50\',\'R_25\',\'R_75\', \'R_10\',\'RDBULL\',\'RDBEAR\')\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD asc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}}}}",,table,,False,False,466,,CR: top losers financials,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'pl_usd', 'display_name': 'pl_usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': -135.0, 'max': -12.0, 'avg': -31.645, 'sd': 38.05926993227508, 'q1': -26.2, 'q3': -13.446149283687348}}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 18.0, 'avg': 4.0, 'sd': 5.374838498865699, 'q1': 1.127016653792583, 'q3': 4.0}}}}]",,2019-10-15 01:22:11.289,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd', 'table.column_widths': [None, None, 93]}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-21 06:37:44.671,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'native': {'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}, 'instrument': {'id': '41db7acc-30a1-0386-deda-69c32d093f3c', 'name': 'instrument', 'display-name': 'Instrument', 'type': 'text', 'required': False}}, 'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    [[and underlying_symbol = {{instrument}}]]\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD asc\nlimit 10\t\n'}, 'type': 'native', 'database': 2}",,table,,False,False,510,,CR: top losers for an instrument,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'pl_usd', 'display_name': 'Pl Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': -7251.45, 'max': -1073.75, 'avg': -2549.675, 'sd': 2077.24679581866, 'q1': -2303.04, 'q3': -1398.77}}}}, {'name': 'trades_number', 'display_name': 'Trades Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 28.0, 'max': 3569.0, 'avg': 535.4, 'sd': 1090.7579627641198, 'q1': 92.0, 'q3': 195.0}}}}]",,2019-08-27 03:55:49.413,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-07 04:34:10.138,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    and underlying_symbol in (\'R_100\',\'R_50\',\'R_25\',\'R_75\', \'R_10\',\'RDBULL\',\'RDBEAR\')\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD asc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}}}}",,table,,False,False,463,,CR: top losers not  financials,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.1}}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'pl_usd', 'display_name': 'pl_usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': -2565.92, 'max': -398.26, 'avg': -1046.364, 'sd': 745.6069246697992, 'q1': -1483.11, 'q3': -461.9}}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4.0, 'max': 336.0, 'avg': 120.1, 'sd': 114.31190275343644, 'q1': 14.0, 'q3': 211.0}}}}]",,2019-10-15 01:22:14.006,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd', 'table.column_widths': [None, None, 93]}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-07 04:27:53.494,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    and underlying_symbol not in (\'R_100\',\'R_50\',\'R_25\',\'R_75\', \'R_10\',\'RDBULL\',\'RDBEAR\')\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD desc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}}}}",,table,,False,False,460,,CR: top winners financials,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'pl_usd', 'display_name': 'pl_usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': 43.68, 'max': 214.1, 'avg': 90.34900000000002, 'sd': 47.61451726568741, 'q1': 64.40603921596548, 'q3': 100.69}}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 4.0, 'avg': 2.0, 'sd': 1.154700538379251, 'q1': 1.0, 'q3': 3.0}}}}]",,2019-10-15 01:22:11.169,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-21 05:01:00.404,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'native': {'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}, 'instrument': {'id': '41db7acc-30a1-0386-deda-69c32d093f3c', 'name': 'instrument', 'display-name': 'Instrument', 'type': 'text', 'required': False}}, 'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n    WHERE \n     sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    [[and underlying_symbol = {{instrument}}]]\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD desc\nlimit 10\t\n'}, 'type': 'native', 'database': 2}",,table,,False,False,505,,CR: top winners for an instrument,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'pl_usd', 'display_name': 'pl_usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 63.81, 'max': 1202.65, 'avg': 289.762, 'sd': 347.4806794884829, 'q1': 80.01, 'q3': 307.6}}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 50.0, 'avg': 13.3, 'sd': 19.73744326569849, 'q1': 1.0, 'q3': 14.0}}}}]",,2019-09-18 01:04:39.043,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-07 04:27:29.194,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    and underlying_symbol in (\'R_100\',\'R_50\',\'R_25\',\'R_75\', \'R_10\',\'RDBULL\',\'RDBEAR\')\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD desc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}}}}",,table,,False,False,459,,CR: top winners not financials,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'pl_usd', 'display_name': 'pl_usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 221.56, 'max': 12220.13, 'avg': 1590.0279999999998, 'sd': 3741.748674426615, 'q1': 277.59, 'q3': 489.72}}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 12.0, 'max': 493.0, 'avg': 213.2, 'sd': 156.54165224913427, 'q1': 111.0, 'q3': 312.0}}}}]",,2019-10-15 01:22:13.905,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-26 04:56:57.644,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\nclient_loginid,\nsum (amount_usd) as total,\ncount (amount_usd) as operations_number,\nMT5account\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time,\nc.amount,\n-round ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\t\nb.payment_type_code,\nsubstring (b.remark, 27, 6) as MT5account\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n\nwhere referrer_type = \'payment\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code = \'mt5_transfer\'\n) as y\ngroup by client_loginid, currency_code, MT5account\norder by total asc\n\n', 'template-tags': {'startdate': {'id': '3e5f8320-439b-c375-5491-3dc74d1e699a', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'enddate': {'id': 'b7647b65-3e3f-e893-3d08-48f75137a681', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True}}}}",,table,,False,False,672,,CR: Top withdrawers from MT,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 78, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total', 'display_name': 'total', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 62, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1216.65, 'max': 2000.0, 'avg': 25.77560975609756, 'sd': 293.5941725129677, 'q1': -16.11, 'q3': 30.89}}}}, {'name': 'operations_number', 'display_name': 'operations_number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 2.0, 'avg': 1.085365853658536, 'sd': 0.28114490408192905, 'q1': 1.0, 'q3': 1.388380552161391}}}}, {'name': 'mt5account', 'display_name': 'mt5account', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 35, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.0}}}}]",,2019-09-11 02:23:09.517,"{'table.pivot_column': 'deposit_number', 'table.cell_column': 'total_deposit', 'table.column_widths': [None, None, 160]}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-26 04:17:24.423,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'with input as\n(select\nstaff_loginid as login,\nday,\nsum (amount_usd) as total_sum,\npayment_agent_status,\ncount (amount_usd) as transactions_number\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time::timestamp::date as day,\nc.amount,\nround ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\nb.payment_gateway_code,\t\nb.payment_type_code,\nsource,\ncase WHEN client_loginid IN (select client_loginid from betonmarkets.payment_agent) THEN \'Yes\'\nElse \'No\'\nend payment_agent_status\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n\n\nwhere referrer_type = \'payment\'\nand payment_gateway_code = \'payment_agent_transfer\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code = \'internal_transfer\') as y\n--where payment_agent_status = \'No\'\ngroup by staff_loginid, day, payment_agent_status\norder by total_sum asc)\n\nselect *\nfrom input\nwhere payment_agent_status = \'No\'\norder by total_sum asc', 'template-tags': {'startdate': {'id': '86857254-488c-c266-9912-f7f6d1dab595', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date'}, 'enddate': {'id': 'd4c80042-fd23-5105-3c03-2ae5790f10a7', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date'}}}}",,table,,False,False,670,,CR: top withdrawers via payment agents,,native,,"[{'name': 'login', 'display_name': 'Login', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1316, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.991641337386018}}}}, {'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-03T00:00:00.000Z', 'latest': '2019-04-03T00:00:00.000Z'}}}}, {'name': 'total_sum', 'display_name': 'Total Sum', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 582, 'nil%': 0.0}, 'type': {'type/Number': {'min': -5000.0, 'max': 6666.66, 'avg': 42.47795592705167, 'sd': 389.66898032314293, 'q1': -10.515414381996113, 'q3': 47.497586382503144}}}}, {'name': 'payment_agent_status', 'display_name': 'Payment Agent Status', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'transactions_number', 'display_name': 'Transactions Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 31.0, 'avg': 1.946048632218845, 'sd': 2.152223971850869, 'q1': 1.0, 'q3': 2.158544718178581}}}}]",,2019-08-27 04:02:46.135,"{'table.pivot_column': 'day', 'table.cell_column': 'total_sum', 'table.columns': [{'name': 'login', 'enabled': True}, {'name': 'day', 'enabled': False}, {'name': 'total_sum', 'enabled': True}, {'name': 'payment_agent_status', 'enabled': False}, {'name': 'transactions_number', 'enabled': True}], 'table.column_formatting': [{'columns': ['payment_agent_status'], 'type': 'single', 'operator': '=', 'value': 'No', 'color': '#509EE3', 'highlight_row': False}]}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-25 02:31:21.625,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'query': 'select\n  date_trunc(\'minute\', purchase_time) as ""purchase_time"",\n  date_trunc(\'minute\', start_time) as ""start_time"",\n  date_trunc(\'minute\', expiry_time) as ""expiry_time"",\n  date_trunc(\'minute\', settlement_time) as ""settlement_time"",\n  underlying_symbol,\n  bet_type,\n  client_loginid,\n  currency_code,\n  avg(tick_count) as ""avg_tick_count"",\n  avg(buy_price) as ""avg_buy_price"",\n  avg(payout_price) as ""avg_payout_price"",\n  avg(sell_price) as ""avg_sell_price"",\n  avg(data_collection.exchangetousd_rate(currency_code, purchase_time)) as ""exchange_rate"",\n  --sum(tick_count) as ""avg_tick_count"",\n  sum(buy_price) as ""total_buy_price"",\n  sum(payout_price) as ""total_payout_price"",\n  sum(sell_price) as ""total_sell_price"",\n  count(1)\nfrom bet.financial_market_bet fmb left join transaction.account a\non fmb.account_id=a.id\nwhere purchase_time >= \'2018-12-24\'\nand purchase_time < \'2018-12-25\'\ngroup by 1,2,3,4,5,6,7,8\norder by 8,5,1,2,3,4,6,7\n'}, 'type': 'native', 'database': 2}",,table,,False,False,128,,CR_Minute_Summary_of_a_Day,,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'purchase_time', 'display_name': 'Purchase Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2005-09-19T19:08:00.000Z', 'latest': '2005-10-10T09:06:00.000Z'}}}}, {'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 200021, 'max': 200021, 'avg': 200021, 'sd': 0, 'q1': 200021, 'q3': 200021}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 9}}}}, {'name': 'payout_price', 'display_name': 'Pay Out Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0}, 'type': {'type/Number': {'min': 2, 'max': 70, 'avg': 35.8, 'sd': 22.909483722782678, 'q1': 16.24871130596428, 'q3': 52.67949192431123}}}}, {'name': 'buy_price', 'display_name': 'Buy Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0}, 'type': {'type/Number': {'min': 1, 'max': 35, 'avg': 17.9, 'sd': 11.454741861391339, 'q1': 8.12435565298214, 'q3': 26.339745962155614}}}}, {'name': 'sell_price', 'display_name': 'Sell Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 57.9, 'avg': 6.359999999999999, 'sd': 18.19769216137035, 'q1': 0, 'q3': 3.360570703802532}}}}, {'name': 'start_time', 'display_name': 'Start Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.2}, 'type': {'type/DateTime': {'earliest': '2005-09-19T19:20:00.000Z', 'latest': '2005-10-10T09:20:00.000Z'}}}}, {'name': 'expiry_time', 'display_name': 'Expiry Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.2}, 'type': {'type/DateTime': {'earliest': '2005-09-19T19:30:00.000Z', 'latest': '2005-10-10T09:30:00.000Z'}}}}, {'name': 'settlement_time', 'display_name': 'Settlement Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.2}, 'type': {'type/DateTime': {'earliest': '2005-09-19T19:30:00.000Z', 'latest': '2005-10-10T09:30:00.000Z'}}}}, {'name': 'expiry_daily', 'display_name': 'Expiry Daily', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}}}, {'name': 'is_expired', 'display_name': 'Is Expired', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}}}, {'name': 'is_sold', 'display_name': 'Is Sold', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}}}, {'name': 'bet_class', 'display_name': 'Bet Class', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 14.2}}}}, {'name': 'bet_type', 'display_name': 'Bet Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 8.6}}}}, {'name': 'remark', 'display_name': 'Remark', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.8}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 14.7}}}}, {'name': 'short_code', 'display_name': 'Short Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 37.3}}}}, {'name': 'sell_time', 'display_name': 'Sell Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.1}, 'type': {'type/DateTime': {'earliest': '2005-09-19T19:38:00.000Z', 'latest': '2005-10-10T09:43:00.000Z'}}}}, {'name': 'fixed_expiry', 'display_name': 'Fixed Expiry', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1}}}, {'name': 'tick_count', 'display_name': 'Tick Count', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1}}}, {'name': 'id_2', 'display_name': 'ID 2', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 200021, 'max': 200021, 'avg': 200021, 'sd': 0, 'q1': 200021, 'q3': 200021}}}}, {'name': 'client_loginid', 'display_name': 'Client Login ID', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 6}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 3}}}}, {'name': 'balance', 'display_name': 'Balance', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 0, 'avg': 0, 'sd': 0, 'q1': 0, 'q3': 0}}}}, {'name': 'is_default', 'display_name': 'Is Default', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}}}, {'name': 'last_modified', 'display_name': 'Last Modified', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1}}}, {'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 4852567, 'max': 4852567, 'avg': 4852567, 'sd': 0, 'q1': 4852567, 'q3': 4852567}}}}]",,2018-12-25 02:33:20.035,"{'table.pivot_column': 'account_id', 'table.cell_column': 'id'}"
False,,,,,2019-04-02 04:08:44.159,"{'email': 'denis.makagonov@binary.com', 'first_name': 'Denis', 'last_login': '2019-09-23T07:22:55.154Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 55, 'last_name': 'makagonov', 'date_joined': '2019-01-29T08:22:50.309Z', 'common_name': 'Denis makagonov'}",55,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT *, pg_size_pretty(total_bytes) AS total\n    , pg_size_pretty(index_bytes) AS INDEX\n    , pg_size_pretty(toast_bytes) AS toast\n    , pg_size_pretty(table_bytes) AS TABLE\n  FROM (\n  SELECT *, total_bytes-index_bytes-COALESCE(toast_bytes,0) AS table_bytes FROM (\n      SELECT c.oid,nspname AS table_schema, relname AS TABLE_NAME\n              , c.reltuples AS row_estimate\n              , pg_total_relation_size(c.oid) AS total_bytes\n              , pg_indexes_size(c.oid) AS index_bytes\n              , pg_total_relation_size(reltoastrelid) AS toast_bytes\n          FROM pg_class c\n          LEFT JOIN pg_namespace n ON n.oid = c.relnamespace\n          WHERE relkind = 'r'\n  ) a\n) a\norder by 5 DESC;""}}",,table,,False,False,688,,CR_tables_volumes,,native,,"[{'name': 'oid', 'display_name': 'Oid', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 196, 'nil%': 0}, 'type': {'type/Number': {'min': 826, 'max': 581612702, 'avg': 155544777.13775513, 'sd': 256125988.18559912, 'q1': 3588.875, 'q3': 558026682}}}}, {'name': 'table_schema', 'display_name': 'Table Schema', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 8.505102040816327}}}}, {'name': 'table_name', 'display_name': 'Table Name', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 167, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 14.28061224489796}}}}, {'name': 'row_estimate', 'display_name': 'Row Estimate', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 136, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 1560215296, 'avg': 22142990.224489793, 'sd': 152344943.2866503, 'q1': 47.91362369625765, 'q3': 45165.5}}}}, {'name': 'total_bytes', 'display_name': 'Total Bytes', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 108, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 1083218731008, 'avg': 10214214509.71428, 'sd': 89609048296.84358, 'q1': 72103.53693733826, 'q3': 10631133.39711179}}}}, {'name': 'index_bytes', 'display_name': 'Index Bytes', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 85, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 850196283392, 'avg': 5835426962.285714, 'sd': 63031914279.499916, 'q1': 18884.657317986395, 'q3': 2961408}}}}, {'name': 'toast_bytes', 'display_name': 'Toast Bytes', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.41836734693877503}, 'type': {'type/Number': {'min': 8192, 'max': 1728512, 'avg': 28384.56140350877, 'sd': 166251.50651267834, 'q1': 8192, 'q3': 55596.03103116574}}}}, {'name': 'table_bytes', 'display_name': 'Table Bytes', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 98, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 359341080576, 'avg': 4378771038.040816, 'sd': 33622062132.21181, 'q1': 42348.89553037698, 'q3': 5361664}}}}, {'name': 'total', 'display_name': 'Total', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 106, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 5.826530612244898}}}}, {'name': 'index', 'display_name': 'Index', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 85, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 6.071428571428571}}}}, {'name': 'toast', 'display_name': 'Toast', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.41836734693877503}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 5.760204081632653}}}}, {'name': 'table', 'display_name': 'Table', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 92, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 6.137755102040816}}}}]",,2019-04-02 04:08:44.159,"{'table.column_widths': [None, None, None, None, None, None, None, None, 115, None, None, 135], 'column_settings': {'[""name"",""total_bytes""]': {'show_mini_bar': True}}, 'table.pivot_column': 'toast', 'table.cell_column': 'oid'}"
False,,"{'id': 186, 'name': 'CS', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'cs'}",186.0,,2019-04-09 09:40:12.337,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""WITH param as (\n\tSELECT\n        -- CR, MX, MLT, MF or VRTC\n        'CR'::VARCHAR as broker_code,\n        \n        -- Start date\n        '2016-10-01'::TIMESTAMP as start_date,\n        \n        -- End date\n        '2016-10-31'::TIMESTAMP as end_date\n    )\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n    SELECT * FROM fdw.client_list_on((SELECT LOWER(broker_code) FROM param), (SELECT broker_code FROM param), (SELECT start_date FROM param), (SELECT end_date FROM param))""}}",,table,,False,False,858,,CS Audit Sample,,native,,,,2019-04-09 09:40:12.337,{}
False,,"{'id': 202, 'name': 'Profit', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/186/', 'personal_owner_id': None, 'slug': 'profit'}",202.0,,2019-04-09 09:40:15.746,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- CS > Profit/Loss (temporary)\n-- This produces a report of all closed contracts purchased AND sold with the date range specified\n-- Contracts purchased before the interval and sold during the interval are not included\n-- Contracts purchased during the interval, but sold after the interval are not included\n-- This behavior can be modified after concensus on how the open-ended contracts should be displayed\nWITH params AS (SELECT\n\t\'MF1216\'::VARCHAR AS loginid,\n\t\'2016-01-01\'::DATE AS start_date,\n\t\'2016-12-31\'::DATE AS end_date\n)\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\n\n\n\n\n,q AS (SELECT\n$$\nSELECT\n\tta.client_loginid AS loginid,\n\tta.currency_code AS currency,\n\ttb.id AS ""ref id"",\n\ttb.transaction_time::DATE AS ""Date"",\n\ttransaction.round_amount(ta.currency_code, tb.amount) AS buy_amount,\n\ttb.financial_market_bet_id AS contract_id,\n\tfmb.underlying_symbol AS underlying,\n\tfmb.bet_class AS ""class"",\n\tfmb.bet_type AS contract,\n\ttransaction.round_amount(ta.currency_code, ts.amount) AS sell_price,\n\tSUM(transaction.round_amount(ta.currency_code, tb.amount + ts.amount)) AS ""profit/loss"",\n\tSUM(transaction.round_amount(ta.currency_code, tb.amount + ts.amount)) OVER (PARTITION BY tb.account_id ORDER BY tb.id) AS ""Running profit/loss""\nFROM transaction.account ta\nJOIN transaction.transaction tb\n\tON ta.id=tb.account_id\n\tAND tb.action_type=\'buy\'\nJOIN ONLY bet.financial_market_bet fmb\n\tON fmb.id = tb.financial_market_bet_id\nJOIN transaction.transaction ts\n\tON tb.financial_market_bet_id=ts.financial_market_bet_id\n\tAND ts.action_type=\'sell\'\nWHERE ta.client_loginid= $$|| quote_literal( params.loginid ) ||$$\nAND tb.transaction_time >= $$|| quote_literal( params.start_date ) ||$$::TIMESTAMP WITHOUT TIME ZONE\nAND tb.transaction_time < $$|| quote_literal( params.end_date + 1 ) ||$$::TIMESTAMP WITHOUT TIME ZONE\nAND ts.transaction_time < $$|| quote_literal( params.end_date + 1 ) ||$$::TIMESTAMP WITHOUT TIME ZONE\n\nGROUP BY 1,2,3,4,5,6,7,8,9,ts.amount\nORDER BY tb.id\n$$::TEXT AS query\nFROM params\n)\n\nSELECT t.*\n\nFROM betonmarkets.production_servers() ps\nCROSS JOIN q\nCROSS JOIN LATERAL dblink(ps.srvname, q.query) AS t (loginid TEXT, currency TEXT, ""Ref id"" TEXT, ""Date"" DATE, buy_amount NUMERIC, contract_id TEXT, underlying TEXT, ""class"" TEXT, contract TEXT, sell_price NUMERIC, ""profit/loss"" NUMERIC, ""Running profit/loss"" NUMERIC)'}}",CS > Profit/Loss (temporary),table,,False,False,859,,CS Profit Loss (temporary),,native,,,,2019-04-09 09:40:15.746,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:19.194,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SET extra_float_digits = 0;\nselect ts,spot from feed.tick\nwhere underlying = 'SPC' and \nts >= '2016-09-05 14:41:02' and \nts <= '2016-09-05 14:42:00'\norder by ts  ASC;\n""}}",,table,,False,False,627,,cs_historical_tick,,native,,,,2019-03-22 03:27:19.194,{}
False,,"{'id': 83, 'name': 'CR', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'cr'}",83.0,,2019-02-25 07:20:51.922,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select t2.""day"", sum(t2.customer_count) as customer_count from\n    (select tmp.""day"", \n            customer_count --profit*data_collection.exchangetousd_rate(tmp.currency_code, tmp.""day"") as profit_USDDER \n    from\n        (select \n          CAST(da.""day"" AS date) as ""day"", \n          a.currency_code,\n          --sum(turnover) as ""turnover""\n          --sum(loss) as ""profit""\n          count(distinct account_id) as ""customer_count""\n        from bet.daily_aggregates da left join transaction.account a  \n        on da.account_id=a.id\n        WHERE CAST(da.""day"" AS date) \n            BETWEEN \n                CAST((NOW() + INTERVAL \'-2 day\') AS date) --current_date -30\n            AND CAST((NOW() + INTERVAL \'-1 day\') AS date)  --current_date \n        GROUP BY 1,2\n        ORDER BY 1 DESC, 2 DESC\n        ) tmp\n    ) t2\ngroup by 1\norder by 1'}}",,smartscalar,,False,False,412,,Customer count (last 2 days),,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-03-24T00:00:00.000Z', 'latest': '2019-03-25T00:00:00.000Z'}}}}, {'name': 'customer_count', 'display_name': 'Customer Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4365.0, 'max': 6619.0, 'avg': 5492.0, 'sd': 1593.818684794478, 'q1': 4365.0, 'q3': 6619.0}}}}]",,2019-03-26 03:49:22.589,"{'table.pivot_column': 'day', 'table.cell_column': 'turnover_usd'}"
False,,,,,2018-12-20 07:43:23.026,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select d.""day"", d.""residence"", round(d.""turnover_USD"",2) as ""turnover_USD"", round(d.""profit_USD"",2) as ""profit_USD"", ""client_count""\nfrom\n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD"", count(distinct ""client_loginid"") as ""client_count""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-36 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\n) d right join \n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-1 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\nlimit {{country_count}}\n) e\non e.residence=d.residence\norder by 1 desc, 3 desc\n\n', 'template-tags': {'country_count': {'id': '73208176-f3e0-12bf-8ecf-d2f7052aa107', 'name': 'country_count', 'display-name': 'How many countries?', 'type': 'number', 'required': True, 'default': '7'}}}}",,line,,False,False,121,,Customer counts of top-N countries in the last 30 days,,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 34, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-03-13T00:00:00.000Z', 'latest': '2019-04-15T00:00:00.000Z'}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'turnover_USD', 'display_name': 'Turnover Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 238, 'nil%': 0.0}, 'type': {'type/Number': {'min': 102.8, 'max': 2287785.85, 'avg': 421410.4149159664, 'sd': 564130.1569607247, 'q1': 86377.61255496184, 'q3': 643646.3533333334}}}}, {'name': 'profit_USD', 'display_name': 'Profit Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 238, 'nil%': 0.0}, 'type': {'type/Number': {'min': -40470.08, 'max': 126479.8, 'avg': 11406.601932773108, 'sd': 18708.19899285614, 'q1': 794.6915697673874, 'q3': 14085.03875}}}}, {'name': 'client_count', 'display_name': 'Client Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 183, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 2471.0, 'avg': 675.5252100840336, 'sd': 742.255883216573, 'q1': 109.29376012337976, 'q3': 1028.355191391373}}}}]",,2019-04-16 08:19:29.197,"{'series_settings': {'id': {'line.interpolate': 'cardinal', 'line.marker_enabled': False}, 'br': {'line.interpolate': 'cardinal', 'line.marker_enabled': False}, 'ru': {'line.interpolate': 'cardinal', 'line.marker_enabled': False}, 'vn': {'line.marker_enabled': False, 'line.interpolate': 'cardinal'}, 'th': {'line.interpolate': 'cardinal', 'line.marker_enabled': False}, 'ng': {'line.interpolate': 'cardinal', 'line.marker_enabled': False}, 'in': {'line.interpolate': 'cardinal', 'line.marker_enabled': False}}, 'graph.y_axis.scale': 'pow', 'graph.dimensions': ['day', 'residence'], 'graph.metrics': ['client_count']}"
False,,"{'id': 57, 'name': 'Daily Report', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'daily_report'}",57.0,,2018-12-28 07:00:59.505,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \n""day"",\nsum(""exchange_rate""*""turnover"") as ""turnover_usd"",\nsum(""profit""*""exchange_rate"") as ""profit_usd"",\nsum(""customer_count"") as ""customer_count""\nfrom\n(\nselect \n  ""day"",\n  ta.""currency_code"",\n  sum(turnover) as ""turnover"",\n  sum(loss) as ""profit"",\n  count(distinct ta.id) as ""customer_count"",\n  data_collection.exchangetousd_rate(ta.currency_code, ""day"") as ""exchange_rate""\n  --count(distinct account_id) as ""customer_count""\nfrom bet.daily_aggregates da left join transaction.account ta\non ta.id = da.account_id\nWHERE CAST(da.""day"" AS date) BETWEEN CAST((NOW() + INTERVAL \'-30 day\') AS date)\n   AND CAST((NOW() + INTERVAL \'-1 day\') AS date)\nGROUP BY CAST(da.""day"" AS date), ta.""currency_code""\nORDER BY CAST(da.""day"" AS date) DESC\n) s\ngroup by 1\norder by 1 '}}",,line,,False,False,144,,Customer counts until yesterday (CR),,native,,"[{'name': 'day', 'display_name': 'day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-21T00:00:00.000Z', 'latest': '2019-10-18T00:00:00.000Z'}}}}, {'name': 'turnover_usd', 'display_name': 'turnover_usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 531253.0610464357, 'max': 5839322.034254314, 'avg': 4724764.883091117, 'sd': 1020519.9511435117, 'q1': 4388446.121764049, 'q3': 5337252.224067998}}}}, {'name': 'profit_usd', 'display_name': 'profit_usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 24641.85339501067, 'max': 298111.9190975534, 'avg': 131658.00281014483, 'sd': 57190.738011078305, 'q1': 104478.51037337047, 'q3': 161432.03372609994}}}}, {'name': 'customer_count', 'display_name': 'customer_count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2462.0, 'max': 9262.0, 'avg': 7617.571428571428, 'sd': 1726.5499623488374, 'q1': 6003.5, 'q3': 8802.5}}}}]",,2019-10-21 00:01:29.607,"{'graph.metrics': ['customer_count', 'turnover_usd'], 'graph.dimensions': ['day'], 'series_settings': {'Customer Count': {'line.interpolate': 'cardinal'}, 'Turnover Usd': {'line.interpolate': 'cardinal', 'title': 'Turnover USD'}}, 'graph.show_trendline': False, 'graph.x_axis.title_text': 'Date', 'graph.show_goal': False}"
False,,"{'id': 54, 'name': ""Aggelos Armenatzoglou's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 47, 'slug': 'aggelos_armenatzoglou_s_personal_collection'}",54.0,,2019-02-15 07:19:37.013,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_deals_2019.""Time""), Count(Distinct(""Login"")) As Client_Trading_Activity_on_Vol\nfrom mt5_deals_2019\nWHERE ""Action"" IN (0,1) -- In Trades only\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\nand {{Time}}', 'template-tags': {'Time': {'widget-type': 'date/relative', 'default': 'today', 'name': 'Time', 'type': 'dimension', 'id': '81b21d75-0d8e-b624-9f04-bb3c2f2cd3f7', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}}}}",,table,,False,False,375,,Daily active clients Vol Indices,,native,,,,2019-02-15 07:19:37.013,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-11-28 02:46:35.533,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'type': 'native', 'database': 2, 'native': {'query': 'select \n  ""day"",\n  sum(turnover) as ""turnover"",\n  sum(loss) as ""profit"",\n  count(distinct account_id) as ""customer_count""\nfrom bet.daily_aggregates\nWHERE CAST(""bet"".""daily_aggregates"".""day"" AS date) BETWEEN CAST((NOW() + INTERVAL \'-14 day\') AS date)\n   AND CAST((NOW() + INTERVAL \'-1 day\') AS date)\nGROUP BY CAST(""bet"".""daily_aggregates"".""day"" AS date)\nORDER BY CAST(""bet"".""daily_aggregates"".""day"" AS date) DESC'}}",,bar,,False,False,51,,"Daily Aggregates, Profit, Turnover, and Customer Count",,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-01T00:00:00.000Z', 'latest': '2019-04-14T00:00:00.000Z'}}}}, {'name': 'turnover', 'display_name': 'Turnover', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2287791.21716875, 'max': 4043623.67199183, 'avg': 3382153.6934899343, 'sd': 484257.2360221789, 'q1': 3097350.42727166, 'q3': 3788512.59720056}}}}, {'name': 'profit', 'display_name': 'Profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/Number': {'min': 49636.75745696, 'max': 213837.54003416, 'avg': 106521.56070934502, 'sd': 47269.2219039092, 'q1': 79342.81814047, 'q3': 127046.59904523}}}}, {'name': 'customer_count', 'display_name': 'Customer Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4283.0, 'max': 7320.0, 'avg': 6285.5, 'sd': 1154.2026718442078, 'q1': 4956.0, 'q3': 7112.0}}}}]",,2019-04-15 00:45:22.223,"{'graph.dimensions': ['day'], 'graph.metrics': ['profit', 'turnover', 'customer_count'], 'stackable.stack_type': None}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:14:03.606,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'with market_breakdown as (with params as (select\n       \'2018-05-17\'::TIMESTAMP AS start_date,\n       \'2018-05-18\'::TIMESTAMP AS end_date\n)\n\nselect output.market as ""Market"",\n       ROUND(sum(output.buy_price_sum)-sum(output.sell_price_sum),2) as ""Buy-Sell"",\n       ROUND(sum(output.closed_buy_price_sum)-sum(output.open_buy_price_sum),2) as ""Change in Open Position USD DER"",\n       ROUND(sum(output.buy_price_sum)-sum(output.sell_price_sum) + sum(output.closed_buy_price_sum) - sum(output.open_buy_price_sum),2) as ""MtM PnL USD DER"",\n       count(DISTINCT output.client_loginid) as ""Count Clients""\nfrom params\nCROSS JOIN betonmarkets.production_servers_v2() as ps\nCROSS JOIN dblink(ps.srvname,\n$$\n     select d.market,\n              d.client_loginid,\n             sum(d.buy_price * d.exchange_rate) filter (where d.purchase_time >= $$ || quote_literal(params.start_date) || $$::TIMESTAMP \n                                                            and d.purchase_time < $$ || quote_literal(params.end_date) || $$::TIMESTAMP) as ""buy_price_sum"",\n             sum(d.sell_price * d.exchange_rate) filter (where d.sell_time >= $$ || quote_literal(params.start_date) || $$::TIMESTAMP \n                                                            and d.sell_time < $$ || quote_literal(params.end_date) || $$::TIMESTAMP) as ""sell_price_sum"",\n            sum(d.buy_price * d.exchange_rate) filter (where d.purchase_time >= $$ || quote_literal(params.start_date) || $$::TIMESTAMP \n                                                            and d.purchase_time < $$ || quote_literal(params.end_date) || $$::TIMESTAMP\n                                                            and (d.sell_time > $$ || quote_literal(params.end_date) || $$::TIMESTAMP\n                                                                  or d.sell_time is NULL)) as ""open_buy_price_sum"",\n            sum(d.buy_price * d.exchange_rate) filter (where d.purchase_time < $$ || quote_literal(params.start_date) || $$::TIMESTAMP \n                                                            and d.sell_time >= $$ || quote_literal(params.start_date) || $$::TIMESTAMP \n                                                            and d.sell_time < $$ || quote_literal(params.end_date) || $$::TIMESTAMP) as ""closed_buy_price_sum""\n     from (\n     select *,\n         data_collection.exchangetousd_rate(a.currency_code, b.purchase_time) as ""exchange_rate""\n     from bet.financial_market_bet as b\n     join transaction.transaction t on b.id=t.financial_market_bet_id and t.action_type=\'buy\'\n     join transaction.account a on a.id=b.account_id\n     join betonmarkets.client c on c.loginid=a.client_loginid\n     left join bet.market bm on b.underlying_symbol = bm.symbol\n     where (b.purchase_time >= $$ || quote_literal(params.start_date) || $$::TIMESTAMP\n     and b.purchase_time < $$ || quote_literal(params.end_date) || $$::TIMESTAMP)\n     or (b.sell_time >= $$ || quote_literal(params.start_date) || $$::TIMESTAMP\n     and b.sell_time < $$ || quote_literal(params.end_date) || $$::TIMESTAMP)) as d\n     group by 1, 2\n$$) as output(market VARCHAR, client_loginid VARCHAR, buy_price_sum NUMERIC, sell_price_sum NUMERIC, open_buy_price_sum NUMERIC, closed_buy_price_sum NUMERIC)\ngroup by 1)\n\nselect ""Market"", ""Buy-Sell"", ""Change in Open Position USD DER"", ""MtM PnL USD DER"", ""Count Clients"" from market_breakdown\nunion all\nselect \'Grand Total\', sum(""Buy-Sell""), sum(""Change in Open Position USD DER""), sum(""MtM PnL USD DER""), sum(""Count Clients"") from market_breakdown\n'}}",,table,,False,False,566,,Daily Cash Flow Summary by Market,,native,,,,2019-03-22 03:14:03.606,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:14:14.504,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select Time, -Round(sum(Profit))\nFROM mt5_deals_2017 AS deals\n    INNER JOIN mt5_users AS users\n    ON (deals.Login=users.Login)\n    WHERE users.Group LIKE '%real%costarica%'\n    and deals.Action IN (0,1)\n    group by date(Time)\n    order by date(Time) DESC\n    limit 15""}}",,table,,False,False,568,,Daily closed profit,,native,,,,2019-03-22 03:14:14.504,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:14:09.262,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'with params as (select\n       \'2018-05-15\'::TIMESTAMP AS start_date,\n       \'2018-05-16\'::TIMESTAMP AS end_date\n)\n\nselect output.market as ""Market"",\n       ROUND(sum(output.buy_price_sum)-sum(output.sell_price_sum),2) as ""Buy-Sell"",\n       ROUND(sum(output.closed_buy_price_sum)-sum(output.open_buy_price_sum),2) as ""Change in Open Position USD DER"",\n       ROUND(sum(output.buy_price_sum)-sum(output.sell_price_sum) + sum(output.closed_buy_price_sum) - sum(output.open_buy_price_sum),2) as ""MtM PnL USD DER"",\n       count(DISTINCT output.client_loginid) as ""Count Clients""\nfrom params\nCROSS JOIN betonmarkets.production_servers_v2() as ps\nCROSS JOIN dblink(ps.srvname,\n$$\n     select d.market,\n              d.client_loginid,\n             sum(d.buy_price * d.exchange_rate) filter (where d.purchase_time >= $$ || quote_literal(params.start_date) || $$::TIMESTAMP \n                                                            and d.purchase_time < $$ || quote_literal(params.end_date) || $$::TIMESTAMP) as ""buy_price_sum"",\n             sum(d.sell_price * d.exchange_rate) filter (where d.sell_time >= $$ || quote_literal(params.start_date) || $$::TIMESTAMP \n                                                            and d.sell_time < $$ || quote_literal(params.end_date) || $$::TIMESTAMP) as ""sell_price_sum"",\n            sum(d.buy_price * d.exchange_rate) filter (where d.purchase_time >= $$ || quote_literal(params.start_date) || $$::TIMESTAMP \n                                                            and d.purchase_time < $$ || quote_literal(params.end_date) || $$::TIMESTAMP\n                                                            and (d.sell_time > $$ || quote_literal(params.end_date) || $$::TIMESTAMP\n                                                                  or d.sell_time is NULL)) as ""open_buy_price_sum"",\n            sum(d.buy_price * d.exchange_rate) filter (where d.purchase_time < $$ || quote_literal(params.start_date) || $$::TIMESTAMP \n                                                            and d.sell_time >= $$ || quote_literal(params.start_date) || $$::TIMESTAMP \n                                                            and d.sell_time < $$ || quote_literal(params.end_date) || $$::TIMESTAMP) as ""closed_buy_price_sum""\n     from (\n     select *,\n         data_collection.exchangetousd_rate(a.currency_code, b.purchase_time) as ""exchange_rate""\n     from bet.financial_market_bet as b\n     join transaction.transaction t on b.id=t.financial_market_bet_id and t.action_type=\'buy\'\n     join transaction.account a on a.id=b.account_id\n     join betonmarkets.client c on c.loginid=a.client_loginid\n     left join bet.market bm on b.underlying_symbol = bm.symbol\n     where (b.purchase_time >= $$ || quote_literal(params.start_date) || $$::TIMESTAMP\n     and b.purchase_time < $$ || quote_literal(params.end_date) || $$::TIMESTAMP)\n     or (b.sell_time >= $$ || quote_literal(params.start_date) || $$::TIMESTAMP\n     and b.sell_time < $$ || quote_literal(params.end_date) || $$::TIMESTAMP)) as d\n     group by 1, 2\n$$) as output(market VARCHAR, client_loginid VARCHAR, buy_price_sum NUMERIC, sell_price_sum NUMERIC, open_buy_price_sum NUMERIC, closed_buy_price_sum NUMERIC)\ngroup by 1'}}",,table,,False,False,567,,Daily PnL (Cash-Flow) Summary - by Market,,native,,,,2019-03-22 03:14:09.262,{}
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-15 07:55:45.748,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'native': {'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'dimension', 'required': True, 'dimension': ['field-id', 7452], 'widget-type': 'date/relative', 'default': 'today'}}, 'query': 'SELECT users.""Login"" AS Login_ID, SUM((""Profit""/""RateMargin"")) AS Client_Profit\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" =  mt5_deals_2019.""Login""\nwhere   {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\nand  mt5_deals_2019.""Symbol"" IN (\'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 10 Index\',\'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\ngroup by users.""Login""\norder by SUM((""Profit""/""RateMargin"")) DESC\nlimit 15\n\n'}, 'type': 'native', 'database': 9}",,table,,False,False,379,,Daily Profitable clients,,native,,"[{'name': 'login_id', 'display_name': 'Login ID', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-03 07:49:14.673,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10', 'table.column_formatting': [{'max_value': 100, 'color': '#EF8C8C', 'columns': ['client_profit'], 'value': '', 'type': 'range', 'colors': ['white', '#EF8C8C'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}]}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-03-12 11:02:03.393,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'native': {'template-tags': {'Start_Time': {'id': '69d710f4-b127-7e27-2705-620ff4ab96b1', 'name': 'Start_Time', 'display-name': 'Start_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'End_Time': {'id': '80990277-c52e-cf0a-1c4a-68591ecc211c', 'name': 'End_Time', 'display-name': 'End_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}}, 'query': 'SELECT users.""Login"" AS Login_ID, SUM((""Profit""/""RateMargin"")) AS Client_Profit\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" =  mt5_deals_2019.""Login""\nwhere ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\nand  mt5_deals_2019.""Symbol"" IN (\'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 10 Index\',\'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\nand date(""Time"") >=  {{Start_Time}}\nand date(""Time"") <=  {{End_Time}}\ngroup by users.""Login""\norder by SUM((""Profit""/""RateMargin"")) DESC\nlimit 15\n\n'}, 'type': 'native', 'database': 9}",,table,,False,False,492,,Daily Profitable clients - by date,,native,,"[{'name': 'login_id', 'display_name': 'Login ID', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': 61981.0, 'max': 187745.0, 'avg': 142873.06666666668, 'sd': 38998.792190943306, 'q1': 112500.0, 'q3': 172162.25}}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': 506.12, 'max': 2049.4700000000003, 'avg': 1054.908, 'sd': 527.4670414375263, 'q1': 739.4075, 'q3': 1437.4724999999999}}}}]",,2019-03-21 04:32:30.887,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10', 'table.column_formatting': [{'max_value': 100, 'color': '#EF8C8C', 'columns': ['client_profit'], 'value': '', 'type': 'range', 'colors': ['white', '#EF8C8C'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}]}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-20 06:03:52.210,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select mt5_deals_2019.""Login"" as Login_ID, SUM(mt5_deals_2019.""Profit""/""RateMargin"") AS Client_Profit\r\nfrom  mt5_deals_2019\r\n    JOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\r\n    WHERE ""Action"" IN (0,1)\r\n    and ""Entry"" IN(0,1,3)\r\n    and users.""Group"" like \'%vanuatu_standard%\'\r\n    and ""Symbol"" in (\'AUDCAD\',\'AUDCHF\',\'AUDJPY\',\'AUDNZD\',\'AUDUSD\',\'EURAUD\',\'EURCAD\',\'EURCHF\',\'EURGBP\',\'EURJPY\',\'EURNZD\',\'EURUSD\',\'GBPCHF\',\'GBPJPY\',\'GBPUSD\',\'NZDUSD\',\'USDCAD\',\'USDCHF\',\'USDJPY\')\r\n    and  {{Time}}\r\n    group by mt5_deals_2019.""Login""\r\n    order by SUM(mt5_deals_2019.""Profit""/""RateMargin"") DESC\r\nlimit 5', 'template-tags': {'Time': {'widget-type': 'date/relative', 'default': 'today', 'name': 'Time', 'type': 'dimension', 'id': '16be15e9-7c5b-b437-64ed-bf882bb562a3', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}}}}",,table,,False,False,401,,Daily profitable clients B Book,,native,,"[{'name': 'login_id', 'display_name': 'Login ID', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 10863.0, 'max': 188375.0, 'avg': 133501.2, 'sd': 71356.89393954868, 'q1': 104327.25, 'q3': 178346.75}}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 12.001443782710703, 'max': 56.49952856622851, 'avg': 31.34747671024557, 'sd': 16.92201920418672, 'q1': 18.165360945677676, 'q3': 40.02238214155713}}}}]",,2019-02-28 08:47:27.109,"{'table.pivot_column': 'client_profit', 'table.cell_column': 'login_id', 'table.column_formatting': [{'max_value': 100, 'color': '#509EE3', 'columns': ['client_profit'], 'value': '', 'type': 'range', 'colors': ['white', '#EF8C8C'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}]}"
False,,,,,2018-11-08 08:32:10.249,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT  CAST(tmp.day AS date) AS day, \n        SUM(tmp.turnover) AS sum\nFROM \n    (SELECT day::date as ""day"", round(turnover*data_collection.exchangetousd_rate(a.currency_code,day), 2) as turnover\n    FROM bet.daily_aggregates\n    LEFT JOIN transaction.account a\n    ON bet.daily_aggregates.account_id=a.id\n    WHERE ""day"" >= (now() + interval \'-30 day\')::date and ""day"" < now()::date) as tmp      \nGROUP BY 1\nORDER BY 1 ASC'}}",,table,,False,False,21,,Daily Turnover,,native,,"[{'name': 'day', 'display_name': 'day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-18T00:00:00.000Z', 'latest': '2019-10-17T00:00:00.000Z'}}}}, {'name': 'sum', 'display_name': 'sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3495151.55, 'max': 5886283.57, 'avg': 4971064.199333332, 'sd': 646804.5493308761, 'q1': 4658593.92, 'q3': 5368292.95}}}}]",,2019-10-18 10:59:59.609,"{'graph.dimensions': ['day'], 'graph.metrics': ['sum'], 'table.pivot_column': 'day', 'table.cell_column': 'sum'}"
False,,,,,2018-11-28 06:59:32.371,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \n  ""day"",\n  sum(turnover) as ""turnover"",\n  --sum(loss) as ""profit"",\n  count(distinct account_id) as ""customer_count""\nfrom bet.daily_aggregates\nWHERE CAST(""bet"".""daily_aggregates"".""day"" AS date) BETWEEN {{start_date}}--CAST((NOW() + INTERVAL \'-14 day\') AS date)\n   AND CAST((NOW() + INTERVAL \'-1 day\') AS date)\nGROUP BY CAST(""bet"".""daily_aggregates"".""day"" AS date)\nORDER BY CAST(""bet"".""daily_aggregates"".""day"" AS date) ASC', 'template-tags': {'start_date': {'id': '542cbdbf-e17b-b45a-ec10-459e5a6f60e3', 'name': 'start_date', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2018-11-01'}}}}",,line,,False,False,53,,Daily turnover and customer count,,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 35, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-03-11T00:00:00.000Z', 'latest': '2019-04-14T00:00:00.000Z'}}}}, {'name': 'turnover', 'display_name': 'Turnover', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 35, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2287791.21716875, 'max': 4978992.51251887, 'avg': 3661137.5654838705, 'sd': 577368.3231412094, 'q1': 3285648.398322605, 'q3': 4038655.885870983}}}}, {'name': 'customer_count', 'display_name': 'Customer Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 35, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4283.0, 'max': 7524.0, 'avg': 6305.228571428572, 'sd': 1126.6345794578879, 'q1': 4973.75, 'q3': 7133.0}}}}]",,2019-04-15 00:45:29.835,"{'graph.metrics': ['turnover', 'customer_count'], 'graph.dimensions': ['day'], 'series_settings': {'Turnover': {'display': 'area', 'line.interpolate': 'cardinal'}, 'Customer Count': {'display': 'line', 'line.interpolate': 'cardinal'}}, 'graph.show_trendline': False, 'graph.show_goal': False}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-11-28 06:54:53.742,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'type': 'native', 'database': 2, 'native': {'query': 'select \n  ""day"",\n  sum(turnover) as ""turnover"",\n  sum(loss) as ""profit""\n  --count(distinct account_id) as ""customer_count""\nfrom bet.daily_aggregates\nWHERE CAST(""bet"".""daily_aggregates"".""day"" AS date) BETWEEN CAST((NOW() + INTERVAL \'-14 day\') AS date)\n   AND CAST((NOW() + INTERVAL \'-1 day\') AS date)\nGROUP BY CAST(""bet"".""daily_aggregates"".""day"" AS date)\nORDER BY CAST(""bet"".""daily_aggregates"".""day"" AS date) DESC'}}",,line,,False,False,52,,Daily turnover and profit,,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-01T00:00:00.000Z', 'latest': '2019-04-14T00:00:00.000Z'}}}}, {'name': 'turnover', 'display_name': 'Turnover', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2287791.21716875, 'max': 4043623.67199183, 'avg': 3382153.6934899343, 'sd': 484257.2360221789, 'q1': 3097350.42727166, 'q3': 3788512.59720056}}}}, {'name': 'profit', 'display_name': 'Profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/Number': {'min': 49636.75745696, 'max': 213837.54003416, 'avg': 106521.56070934502, 'sd': 47269.2219039092, 'q1': 79342.81814047, 'q3': 127046.59904523}}}}]",,2019-04-15 00:45:30.352,"{'graph.dimensions': ['day'], 'graph.metrics': ['profit', 'turnover'], 'stackable.stack_type': None, 'series_settings': {'Profit': {'axis': 'left', 'color': '#7172AD', 'line.interpolate': 'cardinal', 'display': 'area'}, 'Turnover': {'display': 'line', 'axis': 'right', 'line.interpolate': 'cardinal'}, 'Customer Count': {'axis': None, 'display': 'line'}}, 'graph.show_trendline': False, 'scalar.switch_positive_negative': False, 'graph.show_goal': False}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-15 07:49:46.927,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'native': {'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'dimension', 'required': True, 'dimension': ['field-id', 7452], 'widget-type': 'date/relative', 'default': 'today'}}, 'query': 'SELECT users.""Login"" AS Login_ID, SUM((""Profit""/""RateMargin"")) AS Client_Profit\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\nwhere  {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\nand mt5_deals_2019.""Symbol"" IN (\'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'Volatility 10 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\ngroup by users.""Login""\norder by SUM((""Profit""/""RateMargin"")*-1) DESC\nlimit 15\n'}, 'type': 'native', 'database': 9}",,table,,False,False,378,,Daily Unprofitable clients,,native,,"[{'name': 'login_id', 'display_name': 'Login ID', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-03 07:49:12.371,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10', 'table.column_formatting': [{'max_value': 100, 'color': '#509EE3', 'columns': ['client_profit'], 'value': '', 'type': 'range', 'colors': ['#9CC177', 'white'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}]}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-03-12 11:01:47.234,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'native': {'template-tags': {'Start_Time': {'id': '0acbe449-b227-4d90-6360-5a2fbb7081b1', 'name': 'Start_Time', 'display-name': 'Start_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'End_Time': {'id': '5f28a363-b47d-475f-eca4-77245ec5e899', 'name': 'End_Time', 'display-name': 'End_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}}, 'query': 'SELECT users.""Login"" AS Login_ID, SUM((""Profit""/""RateMargin"")) AS Client_Profit\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\nWhere ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\nand mt5_deals_2019.""Symbol"" IN (\'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'Volatility 10 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\nand date(""Time"") >=  {{Start_Time}}\nand date(""Time"") <=  {{End_Time}}\ngroup by users.""Login""\norder by SUM((""Profit""/""RateMargin"")*-1) DESC\nlimit 15\n'}, 'type': 'native', 'database': 9}",,table,,False,False,491,,Daily Unprofitable clients - by date,,native,,"[{'name': 'login_id', 'display_name': 'Login ID', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': 35969.0, 'max': 188521.0, 'avg': 144645.93333333332, 'sd': 42315.616474749535, 'q1': 144367.75, 'q3': 172623.25}}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': -8017.420000000001, 'max': -693.04, 'avg': -2200.811333333333, 'sd': 2344.267017073984, 'q1': -1578.875, 'q3': -998.3674999999998}}}}]",,2019-03-21 04:32:30.675,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10', 'table.column_formatting': [{'max_value': 100, 'color': '#509EE3', 'columns': ['client_profit'], 'value': '', 'type': 'range', 'colors': ['#9CC177', 'white'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}], 'card.title': 'Daily Unprofitable clients'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-20 05:56:20.374,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'native': {'template-tags': {'Time': {'id': '34f582cd-6d12-c11a-a7fd-5f85ff37077d', 'name': 'Time', 'display-name': 'Time', 'type': 'dimension', 'required': True, 'default': 'today', 'dimension': ['field-id', 7452], 'widget-type': 'date/relative'}}, 'query': 'Select mt5_deals_2019.""Login"" as Login_ID, SUM(mt5_deals_2019.""Profit""/""RateMargin"") AS Client_Profit\r\nfrom  mt5_deals_2019\r\n    JOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\r\n    WHERE ""Action"" IN (0,1)\r\n    and ""Entry"" IN(0,1,3)\r\n    and users.""Group"" like \'%vanuatu_standard%\'\r\n    and ""Symbol"" in (\'AUDCAD\',\'AUDCHF\',\'AUDJPY\',\'AUDNZD\',\'AUDUSD\',\'EURAUD\',\'EURCAD\',\'EURCHF\',\'EURGBP\',\'EURJPY\',\'EURNZD\',\'EURUSD\',\'GBPCHF\',\'GBPJPY\',\'GBPUSD\',\'NZDUSD\',\'USDCAD\',\'USDCHF\',\'USDJPY\')\r\n    \r\n    and  {{Time}}\r\n    group by mt5_deals_2019.""Login""\r\n    order by SUM(mt5_deals_2019.""Profit""/""RateMargin"")*-1 DESC\r\nlimit 5'}, 'type': 'native', 'database': 9}",,table,,False,False,400,,Daily unprofitable clients B Book,,native,,"[{'name': 'login_id', 'display_name': 'Login ID', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 29213.0, 'max': 173707.0, 'avg': 124495.8, 'sd': 55740.69358377235, 'q1': 103590.5, 'q3': 155143.0}}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': -151.70041500710246, 'max': -13.235068094980267, 'avg': -53.904062166575116, 'sd': 57.4138839491066, 'q1': -81.50043700715447, 'q3': -16.32201483911589}}}}]",,2019-02-21 05:07:31.802,"{'table.pivot_column': 'date', 'table.cell_column': 'company_profit', 'graph.dimensions': ['date'], 'graph.metrics': ['company_profit'], 'column_settings': {'[""name"",""company_profit""]': {'prefix': ''}}, 'pie.slice_threshold': 2.5, 'table.column_widths': [273], 'table.column_formatting': [{'max_value': 100, 'color': '#509EE3', 'columns': ['client_profit'], 'value': '', 'type': 'range', 'colors': ['#9CC177', 'white'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}]}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-11 05:28:15.800,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select sum(Daily_PnL) over (order by date_daily) +10677.79 as YTD_PnL, * \n-- Note that the +10677.79 which is the change in open positions on the 31st of Dec 2018 and 1st Jan 2019 was added \n-- manually to the Year to date so we don\'t pull data from the daily_2018 as well. Hence why the addition above\nfrom (\nSELECT Balance_EOD.*, deposit, withdrawal, agent_comms, usd_volume\nFROM(\n   select date(to_timestamp(daily.""Datetime"")) AS date_daily , \n   SUM (daily.""DailyProfit"" + daily.""DailyStorage"")*-1  + SUM(daily.""Profit"" + daily.""ProfitStorage"")*-1-LAG(SUM(daily.""Profit"" + daily.""ProfitStorage"")*-1,1) OVER (ORDER BY date(to_timestamp(daily.""Datetime"")))  as Daily_PnL,\n   SUM (daily.""DailyProfit"" + daily.""DailyStorage"")*-1 AS PnL_On_Closed_Positions,\n  SUM(daily.""Profit"" + daily.""ProfitStorage"")*-1-LAG(SUM(daily.""Profit"" + daily.""ProfitStorage"")*-1,1) OVER (ORDER BY date(to_timestamp(daily.""Datetime"")))  AS PnL_On_Open_Positions,\n      SUM (daily.""Profit"" + daily.""ProfitStorage"")*-1 AS Floating_PnL,\n\n  \n SUM(daily.""Balance"") AS Balance, SUM(daily.""ProfitEquity"") AS Equity\n   From mt5_daily_2019 daily\n   Where ""Group"" LIKE \'%costarica%\'\n   group by date(to_timestamp(daily.""Datetime""))\n   ) AS Balance_EOD \n   JOIN \n     (\n         Select date(deals.""Time"") AS date_deals ,\n         SUM(ROUND(deals.""Profit""::numeric,2)) FILTER (Where deals.""Action"" = 2 AND deals.""Profit"" > 0) AS Deposit,\n         SUM(ROUND(deals.""Profit""::numeric,2)) FILTER (Where deals.""Action"" = 2 AND deals.""Profit"" < 0) AS Withdrawal,\n         SUM(ROUND(deals.""Profit""::numeric,2)*-1) FILTER (Where deals.""Action"" = 10) AS Agent_Comms,\n         SUM((""ContractSize"")*(""Volume""/10000)*""Price"") AS usd_volume\n         FROM mt5_deals_2019 AS deals\n         JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\n         Where users.""Group"" LIKE \'%costarica%\'\n         Group by date(deals.""Time"")\n     ) AS Daily_Stat\nON  Balance_EOD.""date_daily"" = Daily_Stat.""date_deals""\norder by Balance_EOD.""date_daily"" DESC) as t \norder by t.date_daily DESC'}}",,table,,False,False,355,,Daily_PNL_VOL_Indices,,native,,"[{'name': 'ytd_pnl', 'display_name': 'Ytd Pnl', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.013333333333333001}, 'type': {'type/Number': {'min': -94787.34999999974, 'max': 982916.5199999993, 'avg': 343015.0197297299, 'sd': 242331.29867534112, 'q1': 204927.8100000006, 'q3': 447186.10068243096}}}}, {'name': 'date_daily', 'display_name': 'Date Daily', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-03-16T00:00:00.000Z'}}}}, {'name': 'daily_pnl', 'display_name': 'Daily Pnl', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.013333333333333001}, 'type': {'type/Number': {'min': -162480.00000000012, 'max': 276719.2199999998, 'avg': 9566.223648648649, 'sd': 81943.31475867081, 'q1': -39634.2299999994, 'q3': 44701.51999999958}}}}, {'name': 'pnl_on_closed_positions', 'display_name': 'Pnl On Closed Positions', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/Number': {'min': -64102.14000000003, 'max': 145680.74999999988, 'avg': 7725.206399999996, 'sd': 40135.3565471551, 'q1': -19777.207937404466, 'q3': 26272.562500000004}}}}, {'name': 'pnl_on_open_positions', 'display_name': 'Pnl On Open Positions', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.013333333333333001}, 'type': {'type/Number': {'min': -183292.51000000013, 'max': 196568.9600000002, 'avg': 1880.9170270270256, 'sd': 70967.77977279335, 'q1': -40521.920000001206, 'q3': 47994.7600000003}}}}, {'name': 'floating_pnl', 'display_name': 'Floating Pnl', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/Number': {'min': 226251.83999999985, 'max': 649853.4799999989, 'avg': 419021.6901333333, 'sd': 106160.9777561857, 'q1': 355595.4524999999, 'q3': 481046.085219418}}}}, {'name': 'balance', 'display_name': 'Balance', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/Number': {'min': 888615.3300000088, 'max': 1637683.5800000334, 'avg': 1321224.284533359, 'sd': 232438.57259510717, 'q1': 1080227.020000015, 'q3': 1512188.9804650568}}}}, {'name': 'equity', 'display_name': 'Equity', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/Number': {'min': 532821.2500000036, 'max': 1199602.9400000214, 'avg': 902212.5944000119, 'sd': 184858.47121827127, 'q1': 734329.4525000069, 'q3': 1080322.5562500171}}}}, {'name': 'deposit', 'display_name': 'Deposit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/Number': {'min': 28938.88, 'max': 114917.48, 'avg': 62998.30240000001, 'sd': 20462.872907927565, 'q1': 47923.5275, 'q3': 76383.91}}}}, {'name': 'withdrawal', 'display_name': 'Withdrawal', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/Number': {'min': -106286.08, 'max': -17218.66, 'avg': -47745.15053333333, 'sd': 17474.673016960318, 'q1': -59681.6525, 'q3': -35705.9225}}}}, {'name': 'agent_comms', 'display_name': 'Agent Comms', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1075.16, 'max': -131.43, 'avg': -515.6434666666668, 'sd': 217.60081268423113, 'q1': -643.0379898990006, 'q3': -342.153153489219}}}}, {'name': 'usd_volume', 'display_name': 'Usd Volume', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/Number': {'min': 60521787.48953792, 'max': 104868111.8956641, 'avg': 81956865.24651818, 'sd': 11074003.138290329, 'q1': 72583533.58473668, 'q3': 91062684.09213984}}}}]",,2019-04-16 01:15:55.806,"{'table.pivot_column': 'ytd_pnl', 'table.cell_column': 'ytd_pnl'}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:34.842,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'breakout': [['datetime-field', ['field-id', 852], 'day-of-week']], 'aggregation': [['count']]}}",,bar,,False,False,10,,Date Joined by day of the week,,query,,"[{'name': 'date_joined', 'display_name': 'Date Joined', 'base_type': 'type/DateTime', 'unit': 'day-of-week', 'special_type': 'type/JoinTimestamp', 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 7.0, 'avg': 4.0, 'sd': 2.160246899469287, 'q1': 2.25, 'q3': 5.75}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 89095.0, 'max': 121391.0, 'avg': 108486.42857142857, 'sd': 13339.262946369297, 'q1': 95172.5, 'q3': 118772.5}}}}]",94.0,2019-01-08 11:30:16.568,"{'graph.series_labels': ['number'], 'graph.metrics': ['count'], 'graph.dimensions': ['date_joined'], 'graph.colors': ['#F1B556'], 'graph.x_axis.title_text': 'Date Joined'}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:41.208,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'breakout': [['datetime-field', ['field-id', 852], 'hour-of-day']], 'aggregation': [['count']]}}",,bar,,False,False,13,,Date Joined by hour of the day,,query,,"[{'name': 'date_joined', 'display_name': 'Date Joined', 'base_type': 'type/DateTime', 'unit': 'hour-of-day', 'special_type': 'type/JoinTimestamp', 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 23.0, 'avg': 11.5, 'sd': 7.071067811865475, 'q1': 5.5, 'q3': 17.5}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 16429.0, 'max': 43301.0, 'avg': 31641.875, 'sd': 9048.31443497243, 'q1': 23577.5, 'q3': 39858.0}}}}]",94.0,2019-01-08 11:30:16.512,"{'graph.series_labels': ['number'], 'graph.metrics': ['count'], 'graph.dimensions': ['date_joined'], 'graph.colors': ['#F1B556'], 'graph.x_axis.title_text': 'Date Joined'}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:47.699,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'breakout': [['datetime-field', ['field-id', 852], 'month-of-year']], 'aggregation': [['count']]}}",,bar,,False,False,16,,Date Joined by month of the year,,query,,"[{'name': 'date_joined', 'display_name': 'Date Joined', 'base_type': 'type/DateTime', 'unit': 'month-of-year', 'special_type': 'type/JoinTimestamp', 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 12.0, 'avg': 6.5, 'sd': 3.605551275463989, 'q1': 3.5, 'q3': 9.5}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Number': {'min': 55784.0, 'max': 74715.0, 'avg': 63283.75, 'sd': 6543.460859723032, 'q1': 58485.5, 'q3': 68463.0}}}}]",94.0,2019-01-08 11:30:23.514,"{'graph.series_labels': ['number'], 'graph.metrics': ['count'], 'graph.dimensions': ['date_joined'], 'graph.colors': ['#F1B556'], 'graph.x_axis.title_text': 'Date Joined'}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:31.094,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'breakout': [['datetime-field', ['field-id', 816], 'day-of-week']], 'aggregation': [['count']]}}",,bar,,False,False,8,37.0,Date Of Birth by day of the week,507a42bb-0916-48a5-81be-88a2de696073,query,,"[{'name': 'date_of_birth', 'display_name': 'Date Of Birth', 'base_type': 'type/Date', 'unit': 'day-of-week', 'special_type': 'type/Birthdate', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.125}, 'type': {'type/Number': {'min': 1.0, 'max': 7.0, 'avg': 4.0, 'sd': 2.160246899469287, 'q1': 2.25, 'q3': 5.75}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 90.0, 'max': 118809.0, 'avg': 100397.125, 'sd': 40713.878786468944, 'q1': 109228.5, 'q3': 118111.5}}}}]",94.0,2019-03-21 03:13:03.997,"{'graph.series_labels': ['number'], 'graph.metrics': ['count'], 'graph.dimensions': ['date_of_birth'], 'graph.colors': ['#A989C5'], 'graph.x_axis.title_text': 'Date Of Birth'}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:36.741,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'breakout': [['datetime-field', ['field-id', 816], 'hour-of-day']], 'aggregation': [['count']]}}",,bar,,False,False,11,,Date Of Birth by hour of the day,,query,,"[{'name': 'date_of_birth', 'display_name': 'Date Of Birth', 'base_type': 'type/Date', 'unit': 'hour-of-day', 'special_type': 'type/Birthdate', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.5}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': None, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 90.0, 'max': 759315.0, 'avg': 379702.5, 'sd': 536853.1459463566, 'q1': 90.0, 'q3': 759315.0}}}}]",94.0,2019-01-08 11:30:16.312,"{'graph.series_labels': ['number'], 'graph.metrics': ['count'], 'graph.dimensions': ['date_of_birth'], 'graph.colors': ['#A989C5'], 'graph.x_axis.title_text': 'Date Of Birth'}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:43.643,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'breakout': [['datetime-field', ['field-id', 816], 'month-of-year']], 'aggregation': [['count']]}}",,bar,,False,False,14,,Date Of Birth by month of the year,,query,,"[{'name': 'date_of_birth', 'display_name': 'Date Of Birth', 'base_type': 'type/Date', 'unit': 'month-of-year', 'special_type': 'type/Birthdate', 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.07692307692307601}, 'type': {'type/Number': {'min': 1.0, 'max': 12.0, 'avg': 6.5, 'sd': 3.605551275463989, 'q1': 3.5, 'q3': 9.5}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.0}, 'type': {'type/Number': {'min': 90.0, 'max': 69729.0, 'avg': 58415.769230769234, 'sd': 17935.7705677502, 'q1': 59203.25, 'q3': 65188.5}}}}]",94.0,2019-01-08 11:30:16.638,"{'graph.series_labels': ['number'], 'graph.metrics': ['count'], 'graph.dimensions': ['date_of_birth'], 'graph.colors': ['#A989C5'], 'graph.x_axis.title_text': 'Date Of Birth'}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:49.580,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'breakout': [['datetime-field', ['field-id', 816], 'quarter-of-year']], 'aggregation': [['count']]}}",,bar,,False,False,17,,Date Of Birth by quarter of the year,,query,,"[{'name': 'date_of_birth', 'display_name': 'Date Of Birth', 'base_type': 'type/Date', 'unit': 'quarter-of-year', 'special_type': 'type/Birthdate', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.2}, 'type': {'type/Number': {'min': 1.0, 'max': 4.0, 'avg': 2.5, 'sd': 1.290994448735805, 'q1': 1.5, 'q3': 3.5}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 90.0, 'max': 198907.0, 'avg': 151881.0, 'sd': 85115.12546839134, 'q1': 135252.75, 'q3': 193393.0}}}}]",94.0,2019-01-08 11:30:23.898,"{'graph.series_labels': ['number'], 'graph.metrics': ['count'], 'graph.dimensions': ['date_of_birth'], 'graph.colors': ['#A989C5'], 'graph.x_axis.title_text': 'Date Of Birth'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:14:19.781,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- evaluation 2\n-- Derek - mt5 users eval\nWITH params AS (SELECT\n        \'2018-09-03\'::DATE AS report_date\n)\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\n-- theoretically the daily records only occur once per day, but if that somehow changes, we want the values towards the close of the day\nSELECT DISTINCT ON (mtu.Login)\n  mtu.Login AS ""Login"", mtu.Country AS ""Country"", mtd.Balance AS ""Balance"", mtd.Currency AS ""Currency""\nFROM mt5.mt5_users AS mtu\nLEFT JOIN mt5.daily AS mtd ON mtd.Login = mtu.Login\nAND to_timestamp(mtd.DateTime)::DATE = quote_nullable((SELECT report_date FROM params))::DATE\nWHERE mtu.""group"" ~ \'maltainvest\'\nAND mtd.Login IS NOT NULL\nORDER BY 1, mtd.DateTime DESC'}}",evaluation 2,table,,False,False,569,,Derek - mt5 users eval,,native,,,,2019-03-22 03:14:19.781,{}
False,,"{'id': 221, 'name': 'Samples and Proofs of concept', 'description': 'This collection contains samples and proofs of concept.', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'samples_and_proofs_of_concept'}",221.0,,2019-09-25 09:13:44.670,"{'email': 'denis.makagonov@binary.com', 'first_name': 'Denis', 'last_login': '2019-09-23T07:22:55.154Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 55, 'last_name': 'makagonov', 'date_joined': '2019-01-29T08:22:50.309Z', 'common_name': 'Denis makagonov'}",55,7,"{'database': 7, 'type': 'query', 'query': {'source-table': 621, 'filter': ['and', ['=', ['field-id', 5321], 16929], ['time-interval', ['field-id', 5316], -2, 'day', {'include-current': True}]], 'fields': [['field-id', 5321], ['field-id', 5316], ['field-id', 5320], ['field-id', 5319], ['field-id', 5328], ['field-id', 5324], ['field-id', 5318], ['field-id', 5322], ['field-id', 5315], ['field-id', 5325]]}}",,table,,False,False,1052,,Deriv signups,,query,,"[{'name': 'app_id', 'display_name': 'app_id', 'description': 'Refers to the values found in oauth.apps.id', 'base_type': 'type/BigInteger', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.10250000000000001}, 'type': {'type/Number': {'min': 1.0, 'max': 15681.0, 'avg': 547.4297493036212, 'sd': 2697.809280534125, 'q1': 1.0, 'q3': 4.8824203324950535}}}}, {'name': 'date_first_contact', 'display_name': 'date_first_contact', 'base_type': 'type/Date', 'fingerprint': {'global': {'distinct-count': 93, 'nil%': 0.6933}, 'type': {'type/DateTime': {'earliest': '2018-10-31T00:00:00.000Z', 'latest': '2019-02-08T00:00:00.000Z'}}}, 'special_type': None}, {'name': 'email', 'display_name': 'email', 'base_type': 'type/Text', 'special_type': 'type/Email', 'fingerprint': {'global': {'distinct-count': 10001, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 1.0, 'average-length': 22.3187}}}}, {'name': 'gclid_url', 'display_name': 'gclid_url', 'description': '(Google Click Identifier) to track source', 'base_type': 'type/Text', 'special_type': 'type/URL', 'fingerprint': {'global': {'distinct-count': 206, 'nil%': 0.9795}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 1.3291}}}}, {'name': 'has_social_signup', 'display_name': 'has_social_signup', 'base_type': 'type/Boolean', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0129}}}, {'name': 'id', 'display_name': 'id', 'base_type': 'type/BigInteger', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'signup_device', 'display_name': 'signup_device', 'base_type': 'type/PostgresEnum', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.7000000000000001}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 1.9482}}}}, {'name': 'utm_campaign', 'display_name': 'utm_campaign', 'description': 'Required parameter to identify a specific product promotion or strategic campaign such as a spring sale or other promotion', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.7019000000000001}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.5086}}}}, {'name': 'utm_medium', 'display_name': 'utm_medium', 'description': 'Required parameter to identify the medium the link was used upon such as: email, CPC, or other method of sharing', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.7021000000000001}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.6593999999999998}}}}, {'name': 'utm_source', 'display_name': 'utm_source', 'description': 'Required parameter to identify the source of your traffic such as: search engine, newsletter, or other referral', 'base_type': 'type/Text', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 610, 'nil%': 0.171}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 11.8913}}}}]",621.0,2019-09-25 11:00:06.020,"{'column_settings': {'[""ref"",[""field-id"",5316]]': {'time_enabled': 'seconds', 'time_style': 'k:mm'}}, 'table.pivot_column': 'app_id', 'table.cell_column': 'utm_source'}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:28.970,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'aggregation': [['distinct', ['fk->', ['field-id', 818], ['field-id', 521]]]]}}",,scalar,,False,False,7,,Distinct Broker Code,,query,,"[{'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 7.0, 'max': 7.0, 'avg': 7.0, 'sd': None, 'q1': 7.0, 'q3': 7.0}}}}]",94.0,2019-02-25 02:57:39.578,"{'graph.series_labels': ['distinct count'], 'graph.metrics': ['distinct'], 'graph.dimensions': []}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-27 03:52:52.263,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select count(distinct myaffiliates_token) from\n(select * from bet.financial_market_bet fmb left join\ntransaction.account ta \non ta.id=fmb.account_id\nwhere purchase_time >= '2019-02-26'\nand purchase_time < '2019-02-27') tmp left join\nbetonmarkets.client bc\non bc.loginid=tmp.client_loginid\n\nlimit 10""}}",,scalar,,False,False,421,,Distinct Myaffiliates Tokens in a period,,native,,"[{'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2538.0, 'max': 2538.0, 'avg': 2538.0, 'sd': None, 'q1': 2538.0, 'q3': 2538.0}}}}]",,2019-03-21 05:36:26.139,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:14:25.081,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- This removes the error we got while extracting EE older than 2016 ( error was because of timestamps being first stored as text and later as epoch)\nSELECT t.source, t.event_name, t.symbol,\n  CASE WHEN t.release_date LIKE \'%-%\' THEN t.release_date::TIMESTAMP ELSE to_timestamp(t.release_date::BIGINT) END AS release_date,\n  t.id AS event_id,\n  CASE WHEN t.recorded_date LIKE \'%-%\' THEN t.recorded_date::TIMESTAMP ELSE to_timestamp(t.recorded_date::BIGINT) END AS recorded_date\nFROM\n   chronicle AS c\n   CROSS JOIN LATERAL (SELECT * FROM json_populate_recordset(null::chronicle_economic_event2, c.value::json#>\'{events}\')) AS t\nWHERE c.category=\'economic_events\'\n  AND c.""timestamp"" >= DATE(\'2015-01-01\')\n  AND t.symbol=\'EUR\';\n'}}",This removes the error we got while extracting EE older than 2016 ( error was because of timestamps being first stored as text and later as epoch),table,,False,False,570,,Economic Events _ Fix,,native,,,,2019-03-22 03:14:25.081,{}
False,,"{'id': 74, 'name': ""Chris Tan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 54, 'slug': 'chris_tan_s_personal_collection'}",74.0,,2019-03-05 06:32:39.312,"{'email': 'parviz@regentmarkets.com', 'first_name': 'Parviz', 'last_login': '2019-07-03T05:55:34.855Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 52, 'last_name': 'asoodefard', 'date_joined': '2019-01-08T07:10:52.493Z', 'common_name': 'Parviz asoodefard'}",52,2,"{'database': 2, 'type': 'native', 'native': {'query': '\n\t'}}",,line,,False,False,431,,empty,,native,,"[{'name': 'hour_', 'display_name': 'Hour', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 23, 'avg': 11.5, 'sd': 7.071067811865475, 'q1': 5.5, 'q3': 17.5}}}}, {'name': 'yesterday_cumulative_deposit', 'display_name': 'Yesterday Cumulative Deposit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0}, 'type': {'type/Number': {'min': 20163.3161771786, 'max': 371761.45442606654, 'avg': 221981.5884721521, 'sd': 113905.90768392148, 'q1': 125645.89312769976, 'q3': 334470.1966636053}}}}, {'name': 'today_cumulative_deposit', 'display_name': 'Today Cumulative Deposit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.875}, 'type': {'type/Number': {'min': 25597.8069054875, 'max': 95962.87791833577, 'avg': 53779.81711525953, 'sd': 37213.34260648985, 'q1': 29143.046809604457, 'q3': 81916.85006924067}}}}, {'name': 'avg_cumulative_deposit_last_30_days', 'display_name': 'Avg Cumulative Deposit Last 30 Days', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0}, 'type': {'type/Number': {'min': 25609.708411801326, 'max': 558416.4134154681, 'avg': 331825.26674048044, 'sd': 168397.47812411576, 'q1': 188994.43444487615, 'q3': 487313.12196339364}}}}]",,2019-03-11 02:47:00.331,"{'graph.dimensions': ['hour_'], 'graph.metrics': ['yesterday_cumulative_deposit', 'today_cumulative_deposit', 'avg_cumulative_deposit_last_30_days'], 'series_settings': {'Today Cumulative Deposit': {'line.missing': 'none', 'line.marker_enabled': True, 'color': '#EF8C8C'}, 'Yesterday Cumulative Deposit': {'color': '#509EE3'}, 'Avg Cumulative Deposit Last 30 Days': {'color': '#98D9D9'}}, 'graph.y_axis.auto_split': False}"
False,,"{'id': 74, 'name': ""Chris Tan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 54, 'slug': 'chris_tan_s_personal_collection'}",74.0,,2019-03-05 12:42:23.397,"{'email': 'parviz@regentmarkets.com', 'first_name': 'Parviz', 'last_login': '2019-07-03T05:55:34.855Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 52, 'last_name': 'asoodefard', 'date_joined': '2019-01-08T07:10:52.493Z', 'common_name': 'Parviz asoodefard'}",52,2,"{'database': 2, 'type': 'native', 'native': {'query': ''}}",,line,,False,False,436,,Empty,,native,,"[{'name': 'hour_', 'display_name': 'Hour', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 23.0, 'avg': 11.5, 'sd': 7.071067811865475, 'q1': 5.5, 'q3': 17.5}}}}, {'name': 'yesterday_cumulative_deposit', 'display_name': 'Yesterday Cumulative Deposit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': -17879.5810943956, 'max': 24128.059583653307, 'avg': 5418.486869910282, 'sd': 14556.656062321277, 'q1': -9655.166849959725, 'q3': 18217.9301237743}}}}, {'name': 'today_cumulative_deposit', 'display_name': 'Today Cumulative Deposit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.875}, 'type': {'type/Number': {'min': 12302.4311425375, 'max': 57423.26188164458, 'avg': 27728.470402729134, 'sd': 25722.952961436786, 'q1': 12591.752902904456, 'q3': 46432.37595723477}}}}, {'name': 'avg_cumulative_deposit_last_30_days', 'display_name': 'Avg Cumulative Deposit Last 30 Days', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5093.040420583041, 'max': 100750.37783635368, 'avg': 49251.10508875016, 'sd': 30668.139721463875, 'q1': 24241.147158622236, 'q3': 78175.1057808089}}}}]",,2019-03-11 02:47:17.474,"{'graph.dimensions': ['hour_'], 'graph.metrics': ['yesterday_cumulative_deposit', 'today_cumulative_deposit', 'avg_cumulative_deposit_last_30_days'], 'series_settings': {'Today Cumulative Deposit': {'line.missing': 'none', 'line.marker_enabled': True, 'color': '#EF8C8C'}, 'Yesterday Cumulative Deposit': {'color': '#509EE3'}, 'Avg Cumulative Deposit Last 30 Days': {'color': '#98D9D9'}}, 'graph.y_axis.auto_split': False}"
False,,"{'id': 74, 'name': ""Chris Tan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 54, 'slug': 'chris_tan_s_personal_collection'}",74.0,,2019-03-05 08:01:30.396,"{'email': 'parviz@regentmarkets.com', 'first_name': 'Parviz', 'last_login': '2019-07-03T05:55:34.855Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 52, 'last_name': 'asoodefard', 'date_joined': '2019-01-08T07:10:52.493Z', 'common_name': 'Parviz asoodefard'}",52,2,"{'database': 2, 'type': 'native', 'native': {'query': ''}}",,line,,False,False,433,,Empty,,native,,"[{'name': 'hour_', 'display_name': 'Hour', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 23, 'avg': 11.5, 'sd': 7.071067811865475, 'q1': 5.5, 'q3': 17.5}}}}, {'name': 'yesterday_cumulative_deposit', 'display_name': 'Yesterday Cumulative Deposit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0}, 'type': {'type/Number': {'min': 36016.4141892665, 'max': 347633.39484241325, 'avg': 216563.10160224183, 'sd': 100170.38015183774, 'q1': 135301.0599776595, 'q3': 317955.92263231607}}}}, {'name': 'today_cumulative_deposit', 'display_name': 'Today Cumulative Deposit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.875}, 'type': {'type/Number': {'min': 13295.37576295, 'max': 38966.70603669119, 'avg': 26193.71004586373, 'sd': 12836.124094580598, 'q1': 16551.2939067, 'q3': 35804.791612005894}}}}, {'name': 'avg_cumulative_deposit_last_30_days', 'display_name': 'Avg Cumulative Deposit Last 30 Days', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0}, 'type': {'type/Number': {'min': 20516.667991218284, 'max': 457679.8126758886, 'avg': 282586.7906571066, 'sd': 139690.7968255492, 'q1': 166634.95783160446, 'q3': 409151.79327935894}}}}]",,2019-03-11 02:47:08.114,"{'graph.dimensions': ['hour_'], 'graph.metrics': ['yesterday_cumulative_deposit', 'today_cumulative_deposit', 'avg_cumulative_deposit_last_30_days'], 'series_settings': {'Yesterday Cumulative Deposit': {'color': '#509EE3'}, 'Today Cumulative Deposit': {'color': '#EF8C8C', 'line.missing': 'none', 'line.marker_enabled': True}, 'Avg Cumulative Deposit Last 30 Days': {'color': '#98D9D9'}}, 'graph.y_axis.auto_split': False}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:14:30.674,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\n\ndb.loginid,\ndb.first_name,\ndb.last_name,\ndb.payment_time\n\nfrom\n\ndblink ('mx', $$\n  select bc.loginid, bc.first_name, bc.last_name, pa.payment_time\n  from payment.payment pa, betonmarkets.client bc\n  where pa.staff_loginid = 'MX2288'\n  and bc.loginid = 'MX2288'\n$$) db (\n\nloginid VARCHAR,\nfirst_name VARCHAR,\nlast_name VARCHAR,\npayment_time date\n\n)""}}",,table,,False,False,571,,Experian check,,native,,,,2019-03-22 03:14:30.674,{}
False,,,,,2019-03-14 12:23:52.503,"{'email': 'parviz@regentmarkets.com', 'first_name': 'Parviz', 'last_login': '2019-07-03T05:55:34.855Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 52, 'last_name': 'asoodefard', 'date_joined': '2019-01-08T07:10:52.493Z', 'common_name': 'Parviz asoodefard'}",52,11,"{'database': 11, 'type': 'native', 'native': {'query': 'SELECT\n   c.timestamp,\n   x.loginid,\n   v.vals->>\'reason\' AS reason,\n   v.vals->>\'updated_by\' AS updated_by,\n   v.vals->>\'updated_on\' AS updated_on,\n   g.limitation_key,\n   g.cond::json->>\'expiry_type\' as limitation_expiry_type, \n   g.cond::json->>\'name\' as limitation_name,\n   g.cond::json->>\'risk_profile\' as limitation_rist_profile,\n   g.cond::json->>\'market\' as limitation_market,\n   g.cond::json->>\'underlying_symbol\' as limitation_underlying_symbol\nFROM (SELECT timestamp,value FROM chronicle \n    WHERE category=\'app_settings\' AND name=\'quants.custom_client_profiles\' ORDER BY ""timestamp"" DESC --LIMIT 10\n    ) AS c\nCROSS JOIN json_object_keys((c.value::json->>\'data\')::json) AS x(loginid)\nCROSS JOIN LATERAL (SELECT (((c.value::json->>\'data\')::json)->>x.loginid)::json AS vals) AS v\ncross join json_each_text(COALESCE (v.vals->>\'custom_limits\',\'{"""":{}}\')::json) AS g(limitation_key,cond)'}}",,table,,False,False,497,,Extract Watch list and limits,,native,,"[{'name': 'timestamp', 'display_name': 'Timestamp', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 33, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-11T06:53:36.000Z', 'latest': '2019-04-05T03:59:14.000Z'}}}}, {'name': 'loginid', 'display_name': 'Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 74, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.9245}}}}, {'name': 'reason', 'display_name': 'Reason', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 55, 'nil%': 0.0985}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.734}}}}, {'name': 'updated_by', 'display_name': 'Updated By', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.1705}}}}, {'name': 'updated_on', 'display_name': 'Updated On', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 52, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 10.0}}}}, {'name': 'limitation_key', 'display_name': 'Limitation Key', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.008}}}}, {'name': 'limitation_expiry_type', 'display_name': 'Limitation Expiry Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.856}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 1.104}}}}, {'name': 'limitation_name', 'display_name': 'Limitation Name', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 21, 'nil%': 0.562}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.575}}}}, {'name': 'limitation_rist_profile', 'display_name': 'Limitation Rist Profile', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.562}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.321}}}}, {'name': 'limitation_market', 'display_name': 'Limitation Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.562}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.445}}}}, {'name': 'limitation_underlying_symbol', 'display_name': 'Limitation Underlying Symbol', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}]",,2019-04-14 09:10:41.738,{'table.pivot_column': 'limitation_underlying_symbol'}
False,,,,,2019-02-14 11:42:55.915,"{'email': 'denis.makagonov@binary.com', 'first_name': 'Denis', 'last_login': '2019-09-23T07:22:55.154Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 55, 'last_name': 'makagonov', 'date_joined': '2019-01-29T08:22:50.309Z', 'common_name': 'Denis makagonov'}",55,2,"{'native': {'template-tags': {'date': {'id': '2011715a-f0a2-9a68-fedc-c72abbf21fcc', 'name': 'date', 'display-name': 'purchase_time', 'type': 'date', 'required': True, 'default': '2019-02-13'}, 'us': {'id': '01525c0a-410d-6e73-ca39-38dfa94826d3', 'name': 'us', 'display-name': 'Us', 'type': 'dimension', 'dimension': ['field-id', 179], 'widget-type': 'id'}}, 'query': 'SELECT\n  market,\n  SUM(contracts) AS contracts\nFROM (\nSELECT underlying_symbol, COUNT(*) contracts \nFROM  bet.financial_market_bet\nWHERE  purchase_time >= {{date}}  \nGROUP BY underlying_symbol) a\n  LEFT JOIN bet.market \n  ON market.symbol = a.underlying_symbol\n  where {{us}}\n Group by 1\nORDER BY 2 DESC'}, 'type': 'native', 'database': 2}",,table,,False,False,369,55.0,FilterField example,df22a230-2646-46f8-b38b-52a15a7f725f,native,,"[{'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.25}}}}, {'name': 'contracts', 'display_name': 'Contracts', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1321.0, 'max': 22808652.0, 'avg': 5855801.5, 'sd': 11305414.94547772, 'q1': 5547.5, 'q3': 11706055.499999998}}}}]",,2019-03-20 03:48:12.383,"{'table.column_widths': [None, 128], 'table.pivot_column': 'market'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:14:46.863,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""--  Financial Assessment For Maltese Financial Authorities\n  -- MF -> Maltese Financial Authorities -> Fincancial Assessment\n\nSELECT\n\n    mf.loginid,\n    mf.other_derivatives_trading_frequency,\n    mf.stocks_trading_experience,\n    mf.stocks_trading_frequency,\n    mf.other_instruments_trading_frequency,\n    mf.forex_trading_frequency,\n    mf.education_level,\n    mf.commodities_trading_frequency,\n    mf.other_derivatives_trading_experience,\n    mf.forex_trading_experience,\n    mf.employment_industry,\n    mf.income_source,\n    mf.commodities_trading_experience,\n    mf.indices_trading_frequency,\n    mf.other_instruments_trading_experience,\n    mf.indices_trading_experience,\n    mf.estimated_worth,\n    mf.net_income\n\nFROM \n\n  dblink('mf', $$\n\n    select\n    client_loginid loginid,\n    data->'other_derivatives_trading_frequency'->'score' other_derivatives_trading_frequency,\n    data->'stocks_trading_experience'->'score' stocks_trading_experience,\n    data->'stocks_trading_frequency'->'score' stocks_trading_frequency,\n    data->'other_instruments_trading_frequency'->'score' other_instruments_trading_frequency,\n    data->'forex_trading_frequency'->'score' forex_trading_frequency,\n    data->'education_level'->'score' education_level,\n    data->'commodities_trading_frequency'->'score' commodities_trading_frequency,\n    data->'other_derivatives_trading_experience'->'score' other_derivatives_trading_experience,\n    data->'forex_trading_experience'->'score' forex_trading_experience,\n    data->'employment_industry'->'score' employment_industry,\n    data->'income_source'->'score' income_source,\n    data->'commodities_trading_experience'->'score' commodities_trading_experience,\n    data->'indices_trading_frequency'->'score' indices_trading_frequency,\n    data->'other_instruments_trading_experience'->'score' other_instruments_trading_experience,\n    data->'indices_trading_experience'->'score' indices_trading_experience,\n    data->'estimated_worth'->'score' estimated_worth,\n    data->'net_income'->'score' net_income\n    from\n        betonmarkets.financial_assessment;\n\n        $$\n    ) mf (\n        \n    loginid VARCHAR,\n    other_derivatives_trading_frequency INTEGER,\n    stocks_trading_experience INTEGER,\n    stocks_trading_frequency INTEGER,\n    other_instruments_trading_frequency INTEGER,\n    forex_trading_frequency INTEGER,\n    education_level INTEGER,\n    commodities_trading_frequency INTEGER,\n    other_derivatives_trading_experience INTEGER,\n    forex_trading_experience INTEGER,\n    employment_industry INTEGER,\n    income_source INTEGER,\n    commodities_trading_experience INTEGER,\n    indices_trading_frequency INTEGER,\n    other_instruments_trading_experience INTEGER,\n    indices_trading_experience INTEGER,\n    estimated_worth INTEGER,\n    net_income INTEGER\n        \n        )""}}", Financial Assessment For Maltese Financial Authorities,table,,False,False,574,,Financial Assessment,,native,,,,2019-03-22 03:14:46.863,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:14:36.101,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- evaluation 2\n-- Financial Assessment Answers\nSELECT\n\td.loginid, d.account_opening_reason, d.account_currency, d.total_deposits, d.turnover, d.status, d.financial_risk_approval,\n\nt.cfd_score, t.financial_information_score, t.trading_score, t.total_score\n, t.account_turnover->>'answer' AS account_turnover, t.binary_options_trading_experience->>'answer' AS binary_options_trading_experience, t.binary_options_trading_frequency->>'answer' AS binary_options_trading_frequency, t.cfd_trading_experience->>'answer' AS cfd_trading_experience, t.cfd_trading_frequency->>'answer' AS cfd_trading_frequency, t.commodities_trading_experience->>'answer' AS commodities_trading_experience, t.commodities_trading_frequency->>'answer' AS commodities_trading_frequency, t.education_level->>'answer' AS education_level, t.employment_industry->>'answer' AS employment_industry, t.employment_status->>'answer' AS employment_status, t.estimated_worth->>'answer' AS estimated_worth, t.forex_trading_experience->>'answer' AS forex_trading_experience, t.forex_trading_frequency->>'answer' AS forex_trading_frequency, t.income_source->>'answer' AS income_source, t.indices_trading_experience->>'answer' AS indices_trading_experience, t.indices_trading_frequency->>'answer' AS indices_trading_frequency, t.net_income->>'answer' AS net_income, t.occupation->>'answer' AS occupation, t.other_derivatives_trading_experience->>'answer' AS other_derivatives_trading_experience, t.other_derivatives_trading_frequency->>'answer' AS other_derivatives_trading_frequency, t.other_instruments_trading_experience->>'answer' AS other_instruments_trading_experience, t.other_instruments_trading_frequency->>'answer' AS other_instruments_trading_frequency, t.source_of_wealth->>'answer' AS source_of_wealth, t.stocks_trading_experience->>'answer' AS stocks_trading_experience, t.stocks_trading_frequency->>'answer' AS stocks_trading_frequency\n\nFROM dblink('mf', $$\nWITH clients AS (\nSELECT\n    bc.loginid,\n    bc.account_opening_reason,\n    ta.id AS account_id,\n    ta.currency_code AS account_currency\nFROM\n    betonmarkets.client AS bc\nJOIN\n    transaction.account AS ta ON ta.client_loginid = bc.loginid\nWHERE\n    bc.date_joined >= '2000-01-01'::TIMESTAMP AND bc.date_joined < NOW()\nORDER BY ta.id\n--limit 1\n)\n\nSELECT\n    clients.loginid,\n    clients.account_opening_reason,\n    clients.account_currency,\n    deps.total_deposits,\n    turnover.amount AS turnover,\n    cs.status,\n    fcs.reason AS financial_risk_approval,\n    bfa.data AS financial_assessment_data\n\nFROM clients\nLEFT JOIN betonmarkets.financial_assessment AS bfa ON bfa.client_loginid = clients.loginid\n\nLEFT JOIN\n    (\n                    SELECT\n                            pp.account_id,\n                            SUM(pp.amount) AS total_deposits\n                    FROM    clients\n                    JOIN    payment.payment AS pp ON clients.account_id = pp.account_id\n                    WHERE   pp.payment_type_code NOT IN ('free_gift', 'compacted_statement', 'cancellation', 'closed_account', 'miscellaneous', 'affiliate_reward', 'payment_fee', 'virtual_credit', 'account_transfer', 'currency_conversion_transfer')\n                    AND pp.amount > 0\n                    GROUP BY 1\n                ) AS deps ON deps.account_id = clients.account_id\n\nLEFT JOIN (\nSELECT\n    tt.account_id,\n    SUM(tt.amount) * -1 AS amount\nFROM clients\nJOIN transaction.transaction AS tt ON tt.account_id = clients.account_id\nWHERE tt.action_type = 'buy'\nAND tt.transaction_time < NOW()\nGROUP BY 1\n) AS turnover ON turnover.account_id = clients.account_id\n\nLEFT JOIN (\nSELECT clients.loginid,\n    string_agg(bcs.status_code, '/' ORDER BY bcs.status_code) AS status\nFROM betonmarkets.client_status AS bcs\nJOIN clients ON clients.loginid = bcs.client_loginid\nWHERE status_code IN ('ok','disabled','unwelcome','cashier_locked','withdrawal_locked')\nGROUP BY 1\n) AS cs ON cs.loginid = clients.loginid\n\nLEFT JOIN (\nSELECT clients.loginid,\n    bcs.reason\nFROM betonmarkets.client_status AS bcs\nJOIN clients ON clients.loginid = bcs.client_loginid\nWHERE status_code = 'financial_risk_approval'\n) AS fcs ON fcs.loginid = clients.loginid\n\n$$) AS d (loginid VARCHAR, account_opening_reason VARCHAR, account_currency VARCHAR, total_deposits NUMERIC, turnover NUMERIC, status TEXT, financial_risk_approval TEXT, financial_assessment_data JSON)\n\nCROSS JOIN LATERAL (SELECT * FROM json_populate_record(null::bill.financial_assessment_data_type, d.financial_assessment_data)) AS t\n""}}",evaluation 2,table,,False,False,572,,Financial Assessment Answers,,native,,,,2019-03-22 03:14:36.101,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:14:41.448,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- To track clients who had fill up Financial Information/Assessment as 'others'.\nWITH params AS (SELECT \n  'MLT'::VARCHAR AS broker_code\n)\n\nSELECT\n\n  tb.client_loginid AS loginid,\n  tb.residence AS residence,\n  tb.status_codes AS status_codes,\n  ull.history_date::timestamp::date AS last_login\n\nFROM params\nJOIN betonmarkets.production_servers_v2() AS ps ON UPPER(params.broker_code) = ANY (ps.broker_codes)\nCROSS JOIN dblink(ps.srvname, $$\n\n  SELECT c.loginid, array_agg(cs.status_code), c.residence\n  FROM betonmarkets.financial_assessment fa\n    JOIN betonmarkets.client AS c ON fa.client_loginid = c.loginid\n    JOIN betonmarkets.client_status AS cs ON fa.client_loginid = cs.client_loginid\n  WHERE fa.data->>'occupation' = 'Others'\n    OR fa.data->>'employment_industry' = 'Other'\n    OR fa.data->>'income_source' = 'Other'\n    OR fa.data->>'source_of_wealth' = 'Other'\n    AND c.aml_risk_classification <> 'high'\n  GROUP BY c.loginid;\n\n$$) tb (\n  client_loginid VARCHAR,\n  status_codes VARCHAR[],\n  residence VARCHAR\n) \nJOIN users.loginid AS ul ON ul.loginid = tb.client_loginid\nJOIN users.last_login AS ull ON ul.binary_user_id = ull.binary_user_id\nORDER BY ull.history_date desc;""}}",To track clients who had fill up Financial Information/Assessment as 'others'.,table,,False,False,573,,Financial Assessment as 'Others',,native,,,,2019-03-22 03:14:41.448,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-08-20 04:37:46.550,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with all_accounts as(\nselect loginid, first_name, last_name, email, residence from betonmarkets.client \nwhere lower(first_name) like concat('%',{{first_name}},'%') --'%achmad%'\nand lower(last_name) like concat('%',{{last_name}},'%') --'%sugiarto%'\n)\n\nselect ta.currency_code, ta.balance, aa.* from transaction.account ta right join all_accounts aa\non aa.loginid=ta.client_loginid\norder by 2 desc"", 'template-tags': {'first_name': {'id': 'a6e149df-980d-8017-01ab-30f645b49a92', 'name': 'first_name', 'display-name': 'first name', 'type': 'text', 'required': True, 'default': 'achmad'}, 'last_name': {'id': '128c87b3-356b-144a-faac-6d95790bfe0c', 'name': 'last_name', 'display-name': 'last name', 'type': 'text', 'required': True, 'default': 'sugiarto'}}}}",,table,,False,False,1028,,Find all accounts with given first and last name,,native,,"[{'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 3}}}}, {'name': 'balance', 'display_name': 'Balance', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 21.55, 'avg': 0.6601785714285711, 'sd': 3.197587437753332, 'q1': 0, 'q3': 0.027685696044756004}}}}, {'name': 'loginid', 'display_name': 'Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 56, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 8}}}}, {'name': 'first_name', 'display_name': 'First Name', 'base_type': 'type/Text', 'special_type': 'type/Name', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 6.803571428571429}}}}, {'name': 'last_name', 'display_name': 'Last Name', 'base_type': 'type/Text', 'special_type': 'type/Name', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 8.678571428571429}}}}, {'name': 'email', 'display_name': 'Email', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 54, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 1, 'average-length': 29.392857142857142}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 2}}}}]",,2019-08-20 04:38:35.689,"{'table.pivot_column': 'residence', 'table.cell_column': 'balance'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:14:52.391,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Find Client by Email\nWITH params AS (SELECT\n    -- one or emails separated by comma\n        'teo2@regentmarkets.com ,  teo@regentmarkets.com'::VARCHAR AS email,\n        \n    -- Start date.. default is 2000-01-01\n        '2000-01-01'::DATE AS start_date,\n        \n    -- default is NULL for today's date, otherwise something like start_date above\n        NULL::DATE AS end_date,\n\n    -- leave empty to search all, otherwise one of CH, CR, MF, MLT, MX, VR\n        ''::VARCHAR as acc_prefix,\n\n    -- leave empty to search all statuses, otherwise, one or more status_codes separated by a comma like 'disabled, unwelcome'\n        ''::VARCHAR AS status_codes\n)\n\n\nSELECT\n    d.loginid,\n    d.first_name,\n    d.last_name,\n    d.email,\n    d.date_joined,\n    get_country_name_by_code(d.residence) AS residence_country_name,\n    d.total_deposit,\n    d.status\nFROM betonmarkets.production_servers_v2(TRUE) AS ps\nCROSS JOIN params\nCROSS JOIN dblink(ps.srvname, $$\n\n    SELECT\n        client.*,\n        pay.total_deposit,\n        cstat.status\n    FROM\n    (\n        SELECT\n            c.loginid,\n            c.first_name,\n            c.last_name,\n            c.email,\n            c.date_joined,\n            c.residence\n        FROM betonmarkets.client c\n        JOIN regexp_split_to_table($$ || quote_nullable(params.email) || $$, E'(\\\\s+|\\\\n+|,)') AS em ON lower(em) = c.email AND c.email > ' '\n        WHERE (\n            c.date_joined >= COALESCE($$|| quote_nullable(params.start_date) ||$$::TIMESTAMP, '2000-01-01')\n            AND\n            c.date_joined  < COALESCE($$|| quote_nullable(params.end_date) ||$$::TIMESTAMP, NOW()) + '1d'::INTERVAL\n        )\n        AND CASE WHEN COALESCE($$|| quote_nullable(params.acc_prefix) ||$$, '') = '' THEN TRUE::BOOLEAN\n                 ELSE (c.loginid ILIKE $$|| quote_nullable(params.acc_prefix) ||$$ || '%')\n            END\n    ) AS client\n\n    LEFT JOIN LATERAL\n    (\n        SELECT\n            SUM(data_collection.exchangetousd(p.amount, a.currency_code)) AS total_deposit\n        FROM transaction.account a\n        JOIN payment.payment p\n            ON p.account_id = a.id\n        WHERE a.client_loginid = client.loginid\n    ) AS pay ON true\n    \n    LEFT JOIN LATERAL\n    (\n        SELECT string_agg(status_code, ', ') AS status\n        FROM betonmarkets.client_status AS cs\n        LEFT JOIN regexp_split_to_table($$|| quote_nullable(params.status_codes) ||$$, E'(\\\\s+|\\\\n+|,)') AS st\n            ON lower(st) = cs.status_code\n        WHERE cs.client_loginid = client.loginid\n    ) AS cstat ON true\n    where CASE WHEN ($$|| COALESCE(quote_nullable(params.status_codes), '') ||$$ = '') THEN true ELSE cstat.status ~ $$|| quote_nullable(params.status_codes) ||$$ END\n\n$$) AS d(\n    loginid VARCHAR,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    date_joined DATE,\n    residence VARCHAR,\n    total_deposit NUMERIC,\n    status TEXT\n    );""}}",Find Client by Email,table,,False,False,575,,Find Client by Email,,native,,,,2019-03-22 03:14:52.391,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:14:57.805,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Join the archived or non archived OZ DB with the MT5 deals DB (you need to change the year)\nselect date_trunc(\'month\', (Temp_table.""date"")), SUM (Temp_table.""Profit"")*-1 AS Company_BBook_Trade_Profit, SUM (Temp_table.""Storage"")*-1 AS Company_BBook_Swaps_Profit\nFROM \n(\nSelect DISTINCT(ozt.""order_id""), date(ozt.""trade_time""), mtd.""Login"", mtd.""Profit"", mtd.""Volume"", mtd.""Storage"",  mtd.""Symbol""\nfrom mt5.oz_archive_trades_view ozt\nJoin mt5.mt5_deals_2018 mtd ON (ozt.order_id = (mtd.""ExternalID"")::integer)\nwhere mtd.""ExternalID"" != \'\'\nand ozt.""trade_status"" = 2 -- Trade Filled\nand ozt.""core_order_side"" IN (1,2) -- 1 is Buy and 2 is Sell\nand ozt.""maker_name"" = \'Warehouse\') Temp_table\ngroup by  date_trunc(\'month\', (Temp_table.""date""))'}}",Join the archived or non archived OZ DB with the MT5 deals DB (you need to change the year),table,,False,False,576,,Find Monthly B-Book Profit,,native,,,,2019-03-22 03:14:57.805,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-01-23 06:22:04.554,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    coalesce(source::text,\'none\') as ""source"",\n    transaction_time::date,\n    count(1) as ""deposit_count""\n    --min(transaction_time::date) as ""first_date"",\n    --max(transaction_time::date) as ""last_date""\nfrom transaction.firsts where action_type=\'deposit\'\nand transaction_time >= (now() + interval \'-181d\')::date\nand transaction_time < now()::date\ngroup by 1,2\norder by 2 desc, 3 desc'}}",,line,,False,False,220,,"First deposit counts by ""source"" (CR only)",,native,,"[{'name': 'source', 'display_name': 'Source', 'base_type': 'type/Text', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.375}}}}, {'name': 'transaction_time', 'display_name': 'Transaction Time', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 181, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-08-24T00:00:00.000Z', 'latest': '2019-02-20T00:00:00.000Z'}}}}, {'name': 'deposit_count', 'display_name': 'Deposit Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 175, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 307.0, 'avg': 64.95714285714286, 'sd': 58.47065751989217, 'q1': 23.352140766440243, 'q3': 101.7}}}}]",,2019-02-21 04:07:03.850,"{'graph.y_axis.scale': 'pow', 'graph.dimensions': ['transaction_time', 'source'], 'graph.metrics': ['deposit_count']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-01-10 00:39:13.097,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select CAST(transaction_time AS date), --action_type, market_type, sum(amount), count(amount)\n--/*\ncount(1) filter(where action_type='deposit') as num_first_deposits, \ncoalesce(sum(amount) filter (where action_type='deposit'), 0) as first_deposits_amount, \ncount(1) filter(where action_type='buy' and market_type='financial') as num_first_financial_buy,\ncoalesce(sum(abs(amount)) filter(where action_type='buy' and market_type='financial'), 0) as amount_first_financial_buy,\ncount(1) filter(where action_type='buy' and market_type !='financial') as num_first_nonfinancial_buy,\ncoalesce(sum(abs(amount)) filter(where action_type='buy' and market_type !='financial'), 0) as amount_first_nonfinancial_buy\n--*/\nfrom transaction.firsts\nWHERE CAST(transaction_time AS date) BETWEEN CAST((NOW() + INTERVAL '-42 day') AS date)\n   AND CAST((NOW() + INTERVAL '-1 day') AS date)\n--and action_type in ('deposit', 'buy')\nGROUP BY 1 --,2,3\nORDER BY CAST(transaction_time AS date) DESC--, action_type, market_type\nlimit 42""}}",,line,,False,False,195,,First deposits and buys (CR),,native,,"[{'name': 'transaction_time', 'display_name': 'Transaction Time', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-10T00:00:00.000Z', 'latest': '2019-02-20T00:00:00.000Z'}}}}, {'name': 'num_first_deposits', 'display_name': 'Num First Deposits', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 36, 'nil%': 0.0}, 'type': {'type/Number': {'min': 141.0, 'max': 380.0, 'avg': 248.4047619047619, 'sd': 53.7051841635376, 'q1': 225.0, 'q3': 278.0}}}}, {'name': 'first_deposits_amount', 'display_name': 'First Deposits Amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0.0}, 'type': {'type/Number': {'min': 6081.70005692, 'max': 32892.9323658, 'avg': 18466.90937111643, 'sd': 6839.797899926548, 'q1': 13387.99668957, 'q3': 23298.05214807}}}}, {'name': 'num_first_financial_buy', 'display_name': 'Num First Financial Buy', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 26, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 192.0, 'avg': 97.88095238095238, 'sd': 66.12117567195534, 'q1': 1.0, 'q3': 142.0}}}}, {'name': 'amount_first_financial_buy', 'display_name': 'Amount First Financial Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 33, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1578.60086144, 'avg': 392.53491839261915, 'sd': 354.0659317188004, 'q1': 2.0717967697244912, 'q3': 552.36968}}}}, {'name': 'num_first_nonfinancial_buy', 'display_name': 'Num First Non Financial Buy', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 126.0, 'max': 275.0, 'avg': 177.57142857142858, 'sd': 27.287219251781107, 'q1': 155.0, 'q3': 194.80384757729337}}}}, {'name': 'amount_first_nonfinancial_buy', 'display_name': 'Amount First Non Financial Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0.0}, 'type': {'type/Number': {'min': 259.0912902, 'max': 3399.251, 'avg': 755.2683849807141, 'sd': 611.3935081994601, 'q1': 450.8569579, 'q3': 846.06230052}}}}]",,2019-02-21 05:13:41.848,"{'graph.metrics': ['first_deposits_amount', 'amount_first_financial_buy', 'amount_first_nonfinancial_buy'], 'graph.dimensions': ['transaction_time'], 'series_settings': {'First Deposits Amount': {'title': 'Amount First Deposits'}}, 'graph.x_axis.title_text': 'Date', 'graph.y_axis.title_text': 'Amounts (USD)', 'graph.y_axis.scale': 'pow'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-13 07:55:45.881,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\nsum(Payment_Fact_successful_amount_USD)\nfrom\n(\n    select     --COUNT(0)\n    p.payment_time, p.amount * data_collection.exchangetousd_rate(acc.currency_code,p.payment_time) as Payment_Fact_successful_amount_USD\n     from payment.payment p\n    left join transaction.transaction t\n        on t.payment_id = p.id\n    left join transaction.account acc\n        on acc.id = p.account_id\n    where p.payment_time>current_date\n) tmp\n'}}",,scalar,,False,False,960,,For Parviz,,native,,"[{'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 11708.222459654067, 'max': 11708.222459654067, 'avg': 11708.222459654067, 'sd': None, 'q1': 11708.222459654067, 'q3': 11708.222459654067}}}}]",,2019-05-13 07:55:53.894,{}
False,,,,,2019-01-25 06:40:37.949,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n  purchase_date,\n  --sum(""volidx_buy_USD"") as ""volidx_buy_USD"",\n  --sum(""volidx_PnL_USD"") as ""volidx_PnL_USD""\n  sum(""forex_buy_USD"") as ""forex_buy_USD"",\n  sum(""forex_PnL_USD"") as ""forex_PnL_USD""\n  --sum(""indices_buy_USD"") as ""indices_buy_USD"",\n  --sum(""indices_PnL_USD"") as ""indices_PnL_USD"",\n  --sum(""commodities_buy_USD"") as ""commodities_buy_USD"",\n  --sum(""commodities_PnL_USD"") as ""commodities_PnL_USD""\nfrom\n(\nselect\n  ta.currency_code,\n  tmp.""purchase_date"",\n  sum(tmp.""volidx_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""volidx_buy_USD"",\n  sum(tmp.""volidx_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""volidx_PnL_USD"",\n  sum(tmp.""forex_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""forex_buy_USD"",\n  sum(tmp.""forex_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""forex_PnL_USD"",\n  sum(tmp.""indices_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""indices_buy_USD"",\n  sum(tmp.""indices_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""indices_PnL_USD"",\n  sum(tmp.""commodities_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""commodities_buy_USD"",\n  sum(tmp.""commodities_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""commodities_PnL_USD""\nfrom\n(\n    select\n      account_id,\n      purchase_time::date as ""purchase_date"",\n      sum(buy_price) filter (where bm.market=\'volidx\') as ""volidx_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'volidx\') as ""volidx_PnL"",\n      sum(buy_price) filter (where bm.market=\'forex\') as ""forex_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'forex\') as ""forex_PnL"",\n      sum(buy_price) filter (where bm.market=\'indices\') as ""indices_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'indices\') as ""indices_PnL"",\n      sum(buy_price) filter (where bm.market=\'commodities\') as ""commodities_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'commodities\') as ""commodities_PnL""\n      \n    \n    from bet.financial_market_bet fmb left join bet.market bm\n    on fmb.underlying_symbol=bm.symbol\n    where purchase_time >= (now() + interval \'-7d\')::date\n    and purchase_time < now()::date\n    group by 1,2\n) tmp left join transaction.account ta\non ta.id=tmp.account_id\ngroup by 1,2\n\n) tmp2\ngroup by 1\norder by 1 desc'}}",,table,,False,False,234,,Forex turnover and profit (CR),,native,,"[{'name': 'purchase_date', 'display_name': 'purchase_date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-10T00:00:00.000Z', 'latest': '2019-10-16T00:00:00.000Z'}}}}, {'name': 'forex_buy_USD', 'display_name': 'forex_buy_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 169.0256, 'max': 215644.12846657672, 'avg': 130501.053127635, 'sd': 91864.18444416563, 'q1': 38527.03830349379, 'q3': 200923.9987783603}}}}, {'name': 'forex_PnL_USD', 'display_name': 'forex_PnL_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 16.9776402, 'max': 21043.83755193027, 'avg': 10313.85878967373, 'sd': 9641.11949660524, 'q1': 1454.4997590297285, 'q3': 20088.8838284066}}}}]",,2019-10-17 00:18:33.000,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-07-26 03:16:17.251,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'with free_gifts as\n(\n    select \n        account_id,\n        date_trunc(\'month\', payment_time) as payment_month,\n        staff_loginid,\n        sum(amount) as amount\n    FROM ""payment"".""payment""\n    where ((payment_type_code = \'free_gift\'\n    or payment_gateway_code = \'free_gift\')\n    or remark like \'%gift%\')\n    and payment_time::timestamp >= \'2018-01-01\'::timestamp\n    group by 1,2,3\n)\n\nselect client_loginid, fg.*, currency_code\nfrom transaction.account ta right join free_gifts fg\non fg.account_id = ta.id\norder by 1,3,4'}}",,table,,False,False,1023,,free gifts,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1982, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.9985}}}}, {'name': 'account_id', 'display_name': 'account_id', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1982, 'nil%': 0.0}, 'type': {'type/Number': {'min': 778061.0, 'max': 11179461.0, 'avg': 9025882.06, 'sd': 1613927.666071454, 'q1': 8405094.716301478, 'q3': 10175747.258876499}}}}, {'name': 'payment_month', 'display_name': 'payment_month', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:00:00.000Z', 'latest': '2019-08-01T00:00:00.000Z'}}}}, {'name': 'staff_loginid', 'display_name': 'staff_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.13}}}}, {'name': 'amount', 'display_name': 'amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': -150.0, 'max': 200.0, 'avg': 13.33, 'sd': 10.397843890864555, 'q1': 6.562070741847375, 'q3': 17.013367434706215}}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}]",,2019-09-10 02:56:22.798,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'account_id'}"
False,,"{'id': 53, 'name': ""Ravi Guglani's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 49, 'slug': 'ravi_guglani_s_personal_collection'}",53.0,,2019-09-04 05:58:17.960,"{'email': 'ravi@binary.com', 'first_name': 'Ravi', 'last_login': '2019-10-21T06:23:20.369Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 49, 'last_name': 'Guglani', 'date_joined': '2018-12-31T08:36:28.850Z', 'common_name': 'Ravi Guglani'}",49,2,"{'native': {'query': ""select id,short_code,start_time from bet.financial_market_bet \nwhere underlying_symbol = 'frxGBPUSD'\nand tick_count is NOT NULL\nand purchase_time > CURRENT_DATE - interval '1' day\nand purchase_time < CURRENT_DATE\nand EXTRACT(hour from purchase_time) < 6""}, 'type': 'native', 'database': 2}",To get tick trades on GBPUSD during asian hours for yesterday (should always be empty). Consider DST,table,,False,False,1035,,GBPUSD_tick_trades_asian_hours,,native,,"[{'name': 'id', 'display_name': 'id', 'base_type': 'type/*', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'short_code', 'display_name': 'short_code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'start_time', 'display_name': 'start_time', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-20 08:00:00.053,"{'table.pivot_column': 'id', 'table.cell_column': 'start_time'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:24.485,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Analysis of users who came in on a GCLID campaign\n-- gclid_url counts\n\nSELECT * FROM dblink('users', $$\nWITH vr AS (\nSELECT bu.id, ul.loginid, date_trunc('month', ul.creation_stamp) AS signup_month\nFROM users.binary_user AS bu\nJOIN users.loginid AS ul ON ul.binary_user_id = bu.id\nWHERE bu.gclid_url > ''\nAND ul.loginid LIKE 'VR%'\n),\nnvr AS (\nSELECT vr.id, ul.loginid\nFROM users.loginid AS ul\nJOIN vr ON vr.id = ul.binary_user_id\nWHERE ul.loginid NOT LIKE 'VR%'\n),\nsubttl AS (\nSELECT COUNT(DISTINCT vr.id) AS vr_cnt, COUNT(nvr.loginid) AS non_vr_cnt, vr.signup_month::DATE::TEXT\nFROM vr\nLEFT JOIN nvr ON vr.id = nvr.id\nGROUP BY vr.signup_month\nORDER BY vr.signup_month NULLS FIRST\n)\nSELECT * FROM subttl\nUNION ALL\nSELECT COUNT(DISTINCT vr.id) AS vr_cnt, COUNT(nvr.loginid) AS non_vr_cnt, 'Totals'\nFROM vr\nLEFT JOIN nvr ON vr.id = nvr.id\n$$) dbl (vr_cnt TEXT, non_vr_cnt TEXT, signup_month TEXT);""}}",Analysis of users who came in on a GCLID campaign,table,,False,False,635,,gclid_url counts,,native,,,,2019-03-22 03:27:24.485,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:15:08.526,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Customer Support > Generate list of MT5 accounts to disable\n-- This report will display the list of MT5 accounts to disable.\n-- It also shows the balance and open positions available\n\n-- STEPS TO FOLLOW (READ CAREFULLY):\n-- 1. Get the list of IDs to disable from the CSV (it is in mt5_disable_list_XXXX_XX_XX.csv, under the MT5 IDs column)\n-- 2. Paste the copied IDs here: https://convert.town/column-to-comma-separated-list\n-- 3. The result will be copied automatically. Then, paste the result underneath\n-- 4. Generate the report/Download CSV file\n\n-- MODIFY THE CODE ACCORDINGLY\n\nWITH param AS (SELECT unnest(array[\n-- Paste the result of Step 3 in the blank space below\n183754,109689,183651,182395,182582,183618,183841,183502,183569,183597,168875,183558,183388,183472,79959,12673,15948,170709,170729,183436\n]) AS id)\n\n-- DO NOT TOUCH CODE BELOW HERE\nSELECT\n    REPLACE(CAST(param.""id"" AS varchar), \',\', \'\') AS ""MT5 ID"",\n    mt5u.""Balance"", \n    mt5u.""Group"",\n    count(mt5p.""Login"") AS ""Open positions available""\nFROM\n    param\nLEFT JOIN\n    mt5.mt5_users AS mt5u ON param.""id"" = mt5u.""Login""\nLEFT JOIN\n    mt5.mt5_positions AS mt5p ON param.""id"" = mt5p.""Login""\n--WHERE mt5u.""Group"" NOT LIKE \'%costarica%\'\nGROUP BY param.""id"", mt5u.""Balance"", mt5u.""Group""\nORDER BY param.""id"" DESC;\n'}}",Customer Support > Generate list of MT5 accounts to disable,table,,False,False,578,,Generate list of MT5 accounts to disable,,native,,,,2019-03-22 03:15:08.526,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:15:03.147,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Customer Support > Generate list of MT5 accounts to disable\n-- This report will display the list of MT5 accounts to disable.\n-- It also shows the balance and open positions available\n\n-- STEPS TO FOLLOW (READ CAREFULLY):\n-- 1. Get the list of IDs to disable from the CSV (it is in mt5_disable_list_XXXX_XX_XX.csv, under the MT5 IDs column)\n-- 2. Paste the copied IDs here: https://convert.town/column-to-comma-separated-list\n-- 3. The result will be copied automatically. Then, paste the result underneath\n-- 4. Generate the report/Download CSV file\n\n-- MODIFY THE CODE ACCORDINGLY\n\nWITH param AS (SELECT unnest(array[\n-- Paste the result of Step 3 in the blank space below\n181038,181039,182661,80331,80348,127656,128167,130166,168562,168569,181599,111815,181091,31669,42108,42178,182476,183043,183046,183063,24800,182402,183169,183198,183201,183202,183252,182534,172971,172975,181108,182266,2476,33693,181830,181832,180955,183356,182364,181604,181242,181272,183001,179740,183234,183074,175954,182540,183172,183084,183117,182058,181980,181996,181704,182129,183455,184983,182445,166325,166887,178291,180936,181132,172131,172832,181088,181415,182747,182823,182947,180932,181623,180726,181224,167360,167598,170731,181579,144827,182873,182218\n]) AS id)\n\n-- DO NOT TOUCH CODE BELOW HERE\nSELECT\n    mt5u.""Login"",\n    mt5u.""Balance"", \n    mt5u.""Group"",\n    count(mt5p.""Login"") AS ""Open positions available""\nFROM\n    param\nJOIN\n    mt5.mt5_users AS mt5u ON param.""id"" = mt5u.""Login""\nLEFT JOIN\n    mt5.mt5_positions AS mt5p ON param.""id"" = mt5p.""Login""\nWHERE mt5u.""Group"" NOT LIKE \'%costarica%\'\nGROUP BY mt5u.""Login"", mt5u.""Balance"", mt5u.""Group""\nORDER BY mt5u.""Login"";'}}",Customer Support > Generate list of MT5 accounts to disable,table,,False,False,577,,Generate MT5 Disable list CSV for CS team,,native,,,,2019-03-22 03:15:03.147,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:29.722,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT\n  * \n FROM\n  chronicle \n WHERE\n  category='corporate_actions'\n  and name = 'USMSFT'\n ORDER BY\n  timestamp DESC limit 3\n\n\n \n\n \n""}}",,table,,False,False,636,,get corporate action of an underlying,,native,,,,2019-03-22 03:27:29.722,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:15:13.797,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT\n  * \n FROM\n  chronicle \n WHERE\n  category='dividends' \n  AND name='DJI' \n ORDER BY\n  timestamp DESC limit 3\n\n\n \n\n \n""}}",,table,,False,False,579,,Get dividends of an index,,native,,,,2019-03-22 03:15:13.797,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:34.975,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT\n  * \n FROM\n  chronicle \n WHERE\n  category='partial_trading'\n  and name ='early_closes'\n ORDER BY\n  timestamp DESC limit 3\n\n\n \n\n \n""}}",,table,,False,False,638,,get early close calendar,,native,,,,2019-03-22 03:27:34.975,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:40.204,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT\n  * \n FROM\n  chronicle \n WHERE\n  category='economic_events'\n ORDER BY\n  timestamp DESC limit 3\n\n\n \n\n \n""}}",,table,,False,False,639,,get economic events,,native,,,,2019-03-22 03:27:40.204,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:45.539,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT\n  * \n FROM\n  chronicle \n WHERE\n  category='partial_trading'\n  and name ='late_opens'\n ORDER BY\n  timestamp DESC limit 3\n\n\n \n\n \n""}}",,table,,False,False,641,,get late open calendar,,native,,,,2019-03-22 03:27:45.539,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:15:19.147,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- this snippet transforms the json raw files into tables\nWITH raw AS (\n  SELECT t.*\n  FROM\n   chronicle AS c\n   CROSS JOIN LATERAL (SELECT * FROM json_populate_recordset(null::__test, c.value::json#>\'{events}\')) AS t\n  WHERE c.category=\'economic_events\'\n  AND c.""timestamp"" >= DATE(\'2017-08-01\')\n  -- limit 200\n)\nSELECT * FROM raw WHERE symbol=\'EUR\''}}",this snippet transforms the json raw files into tables,table,,False,False,580,,Get news since date,,native,,,,2019-03-22 03:15:19.147,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:15:24.472,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Get the USD value of a symbol at the specified time (from feedDB)\n-- Get symbol rate at time\nWITH params AS(SELECT\n  'frxBTCUSD'::VARCHAR AS symbol,\n  '2017-08-21 10:12:34'::TIMESTAMP AS date_time\n)\n\n\n\n\n\n\n\n\n\n-- Do not touch any code below here\n\nSELECT t.stamp::TEXT, t.rate, params.symbol\nFROM params\nCROSS JOIN LATERAL get_spot_on(params.symbol, params.date_time) AS t;\n""}}",Get the USD value of a symbol at the specified time (from feedDB),table,,False,False,581,,Get symbol rate at time,,native,,,,2019-03-22 03:15:24.472,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-14 04:59:20.636,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    underlying_symbol, \n    --bet_class, \n    date_part('hour', purchase_time) as hour_of_day,\n    sum(buy_price) as total_buy_price,\n    sum(buy_price - sell_price) as total_profit,\n    count(*) as count_closed_contracts,\n    count(distinct account_id) as count_clients\nfrom bet.financial_market_bet\nwhere purchase_time >= current_date + interval '-2d'\ngroup by cube(underlying_symbol, date_part('hour', purchase_time))\norder by underlying_symbol nulls last, date_part('hour', purchase_time) nulls last""}}",,table,,False,False,969,37.0,"group by ""cube"" example",9abd85ad-7c52-46a2-9109-398388536e2d,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 58, 'nil%': 0.025510204081632}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.696938775510204}}}}, {'name': 'hour_of_day', 'display_name': 'Hour Of Day', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 25, 'nil%': 0.05918367346938701}, 'type': {'type/Number': {'min': 0.0, 'max': 23.0, 'avg': 11.024945770065075, 'sd': 6.564837918988815, 'q1': 5.5724525711979, 'q3': 16.508822613664563}}}}, {'name': 'total_buy_price', 'display_name': 'Total Buy Price', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 873, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0035, 'max': 7680412.03751127, 'avg': 31348.620561270487, 'sd': 274395.5674615436, 'q1': 413.5837812344295, 'q3': 3754.696856145846}}}}, {'name': 'total_profit', 'display_name': 'Total Profit', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 906, 'nil%': 0.033673469387755}, 'type': {'type/Number': {'min': -11686.28323129, 'max': 180128.96472308, 'avg': 760.8404000974867, 'sd': 6844.038574966332, 'q1': -99.74523498139757, 'q3': 175.7807483861406}}}}, {'name': 'count_closed_contracts', 'display_name': 'Count Closed Contracts', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 419, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1501316.0, 'avg': 6127.820408163266, 'sd': 54297.92894604688, 'q1': 47.56584095755092, 'q3': 571.3606615101351}}}}, {'name': 'count_clients', 'display_name': 'Count Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 287, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 9155.0, 'avg': 173.17244897959185, 'sd': 514.1610149665254, 'q1': 7.959662896840349, 'q3': 83.47237733252031}}}}]",,2019-05-15 04:06:50.413,"{'graph.dimensions': ['hour_of_day'], 'graph.metrics': ['total_buy_price', 'total_profit', 'count_closed_contracts', 'count_clients'], 'table.pivot_column': 'hour_of_day', 'table.cell_column': 'hour_of_day'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-21 06:19:56.757,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    (call_buy - put_buy)/(call_buy + put_buy) as cp_metric,\n    (even_buy - odd_buy)/(odd_buy + even_buy) as oe_metric,\n    *\nfrom\n(    \n    select\n        underlying_symbol,\n        start_time,\n        expiry_time,\n        sum(buy_usd) filter (where bet_type in (\'CALL\', \'CALLE\')) as call_buy,\n        sum(buy_usd) filter (where bet_type in (\'PUT\', \'PUTE\')) as put_buy,\n        sum(buy_usd) filter (where bet_type=\'DIGITODD\') as odd_buy,\n        sum(buy_usd) filter (where bet_type=\'DIGITEVEN\') as even_buy,\n        string_agg(""fmb_id"", \', \') as ""financial_market_bet_ids"",\n        string_agg(client_loginid, \', \') as ""clients"",\n        string_agg(myaffiliates_token, \', \') as ""tokens""\n    from  \n    (\n    select\n        fmb.id::text as ""fmb_id"",\n        account_id,\n        client_loginid,\n        underlying_symbol,\n        bet_class,\n        bet_type,\n        short_code,\n        start_time,\n        expiry_time,\n        buy_price*data_collection.exchangetousd_rate(ta.currency_code, now()::date::timestamp) as ""buy_usd"",\n        sell_price*data_collection.exchangetousd_rate(ta.currency_code, now()::date::timestamp) as ""sell_usd"",\n        payout_price*data_collection.exchangetousd_rate(ta.currency_code, now()::date::timestamp) as ""payout_usd""\n    from bet.financial_market_bet fmb left join transaction.account ta\n    on ta.id=fmb.account_id\n    where purchase_time >= {{date0}}\n    and purchase_time < {{date1}} --(now() + interval \'-1d\')::date\n    ) tmp left join betonmarkets.client bc\n    on tmp.client_loginid=bc.loginid\n    group by 1,2,3\n) tmp2\nwhere \n(abs((call_buy - put_buy)/(call_buy + put_buy)) < 0.2 and (call_buy+put_buy) > 100)\nor\n(abs((even_buy - odd_buy)/(even_buy + odd_buy)) < 0.2 and (even_buy+odd_buy) > 100)', 'template-tags': {'date0': {'id': '63338092-bafc-5ce3-8d62-b4c11c876828', 'name': 'date0', 'display-name': 'start date', 'type': 'date', 'required': True, 'default': '2019-02-01'}, 'date1': {'id': '20e0473c-892a-e90d-27e4-69a220c73816', 'name': 'date1', 'display-name': 'end date', 'type': 'date', 'required': True, 'default': '2019-02-02'}}}}",,table,,False,False,509,,Hedge check (by Alok),,native,,"[{'name': 'cp_metric', 'display_name': 'Cp Metric', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.016539295083837002, 'avg': 0.008269647541918, 'sd': 0.011695047709826, 'q1': 0.0, 'q3': 0.016539295083837002}}}}, {'name': 'oe_metric', 'display_name': 'Oe Metric', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.0}}}}, {'name': 'start_time', 'display_name': 'Start Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-01T16:15:20.000Z', 'latest': '2019-02-01T17:39:20.000Z'}}}}, {'name': 'expiry_time', 'display_name': 'Expiry Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-01T16:15:30.000Z', 'latest': '2019-02-01T17:39:40.000Z'}}}}, {'name': 'call_buy', 'display_name': 'Call Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 53.0, 'max': 89.12, 'avg': 71.06, 'sd': 25.5406969364581, 'q1': 53.0, 'q3': 89.12}}}}, {'name': 'put_buy', 'display_name': 'Put Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 53.0, 'max': 86.22, 'avg': 69.61, 'sd': 23.490087271017106, 'q1': 53.0, 'q3': 86.22}}}}, {'name': 'odd_buy', 'display_name': 'Odd Buy', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'even_buy', 'display_name': 'Even Buy', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'financial_market_bet_ids', 'display_name': 'Financial Market Bet Ids', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 43.5}}}}, {'name': 'clients', 'display_name': 'Clients', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 33.0}}}}, {'name': 'tokens', 'display_name': 'Tokens', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 69.0}}}}]",,2019-06-11 07:40:40.910,"{'table.pivot_column': 'underlying_symbol', 'table.cell_column': 'call_buy'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-03-06 07:18:22.843,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    (call_buy - put_buy)/(call_buy + put_buy) as cp_metric,\n    (even_buy - odd_buy)/(odd_buy + even_buy) as oe_metric,\n    *\nfrom\n(    \n    select\n        underlying_symbol,\n        start_time,\n        expiry_time,\n        sum(buy_usd) filter (where bet_type in (\'CALL\', \'CALLE\')) as call_buy,\n        sum(buy_usd) filter (where bet_type in (\'PUT\', \'PUTE\')) as put_buy,\n        sum(buy_usd) filter (where bet_type=\'DIGITODD\') as odd_buy,\n        sum(buy_usd) filter (where bet_type=\'DIGITEVEN\') as even_buy,\n        string_agg(""fmb_id"", \', \') as ""financial_market_bet_ids"",\n        string_agg(client_loginid, \', \') as ""clients"",\n        string_agg(myaffiliates_token, \', \') as ""tokens""\n    from  \n    (\n    select\n        fmb.id::text as ""fmb_id"",\n        account_id,\n        client_loginid,\n        underlying_symbol,\n        bet_class,\n        bet_type,\n        short_code,\n        start_time,\n        expiry_time,\n        buy_price*data_collection.exchangetousd_rate(ta.currency_code, now()::date::timestamp) as ""buy_usd"",\n        sell_price*data_collection.exchangetousd_rate(ta.currency_code, now()::date::timestamp) as ""sell_usd"",\n        payout_price*data_collection.exchangetousd_rate(ta.currency_code, now()::date::timestamp) as ""payout_usd""\n    from bet.financial_market_bet fmb left join transaction.account ta\n    on ta.id=fmb.account_id\n    where purchase_time >= {{date0}}\n    and purchase_time < {{date1}} --(now() + interval \'-1d\')::date\n    ) tmp left join betonmarkets.client bc\n    on tmp.client_loginid=bc.loginid\n    group by 1,2,3\n) tmp2\nwhere \n(abs((call_buy - put_buy)/(call_buy + put_buy)) < 0.2 and (call_buy+put_buy) > 100)\nor\n(abs((even_buy - odd_buy)/(even_buy + odd_buy)) < 0.2 and (even_buy+odd_buy) > 100)', 'template-tags': {'date0': {'id': '63338092-bafc-5ce3-8d62-b4c11c876828', 'name': 'date0', 'display-name': 'start date', 'type': 'date', 'required': True, 'default': '2019-02-01'}, 'date1': {'id': '20e0473c-892a-e90d-27e4-69a220c73816', 'name': 'date1', 'display-name': 'end date', 'type': 'date', 'required': True, 'default': '2019-02-02'}}}}",,table,,False,False,450,37.0,hedge check (CR),7149d798-2cac-4d98-89eb-485c9128889c,native,,"[{'name': 'cp_metric', 'display_name': 'Cp Metric', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.016539295083837002, 'avg': 0.008269647541918, 'sd': 0.011695047709826, 'q1': 0.0, 'q3': 0.016539295083837002}}}}, {'name': 'oe_metric', 'display_name': 'Oe Metric', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.0}}}}, {'name': 'start_time', 'display_name': 'Start Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-01T16:15:20.000Z', 'latest': '2019-02-01T17:39:20.000Z'}}}}, {'name': 'expiry_time', 'display_name': 'Expiry Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-01T16:15:30.000Z', 'latest': '2019-02-01T17:39:40.000Z'}}}}, {'name': 'call_buy', 'display_name': 'Call Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 53.0, 'max': 89.12, 'avg': 71.06, 'sd': 25.5406969364581, 'q1': 53.0, 'q3': 89.12}}}}, {'name': 'put_buy', 'display_name': 'Put Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 53.0, 'max': 86.22, 'avg': 69.61, 'sd': 23.490087271017106, 'q1': 53.0, 'q3': 86.22}}}}, {'name': 'odd_buy', 'display_name': 'Odd Buy', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'even_buy', 'display_name': 'Even Buy', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'financial_market_bet_ids', 'display_name': 'Financial Market Bet Ids', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 43.5}}}}, {'name': 'clients', 'display_name': 'Clients', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 33.0}}}}, {'name': 'tokens', 'display_name': 'Tokens', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 69.0}}}}]",,2019-09-03 03:00:52.023,"{'table.pivot_column': 'underlying_symbol', 'table.cell_column': 'call_buy'}"
False,,,,,2019-05-23 04:01:29.045,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select binary_user_id, loginid, aml_risk_classification, residence, date_joined from betonmarkets.client \nwhere aml_risk_classification = 'high'\norder by 4, 5 desc""}}",Needed by Internal Audit,table,,False,False,979,,High AML risk classification clients,,native,,"[{'name': 'binary_user_id', 'display_name': 'binary_user_id', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1855, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4043530.0, 'max': 6442314.0, 'avg': 5838922.505, 'sd': 484209.4798466024, 'q1': 5601396.721356034, 'q3': 6188383.8996627545}}}}, {'name': 'loginid', 'display_name': 'loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2000, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.9935}}}}, {'name': 'aml_risk_classification', 'display_name': 'aml_risk_classification', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.0}}}}, {'name': 'residence', 'display_name': 'residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 48, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'date_joined', 'display_name': 'date_joined', 'base_type': 'type/DateTime', 'special_type': 'type/JoinTimestamp', 'fingerprint': {'global': {'distinct-count': 2000, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2004-11-25T15:01:00.000Z', 'latest': '2019-09-02T17:27:23.000Z'}}}}]",,2019-09-10 11:44:42.459,"{'table.pivot_column': 'aml_risk_classification', 'table.cell_column': 'binary_user_id'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:50.910,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT\n  * \n FROM\n  chronicle \n WHERE\n  category='holidays'\n ORDER BY\n  timestamp DESC limit 3\n\n\n \n\n \n""}}",,table,,False,False,642,,holidays calendar,,native,,,,2019-03-22 03:27:50.910,{}
False,,"{'id': 57, 'name': 'Daily Report', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'daily_report'}",57.0,,2019-01-03 06:23:50.233,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select * from\n(\nselect\npurchase_hour,\nmarket,\nsource,\nsum(total_buy_usd) as ""total_buy_usd"",\nsum(total_buy_usd - total_sell_usd) as ""PnL_usd""\nfrom\n(\n    select \n    tmp.""purchase_hour"",\n    tmp.""is_sold"",\n    tmp.""underlying_symbol"",\n    tmp.""delay_minutes"",\n    tmp.""duration_minutes"",\n    tmp.""bet_type"",\n    tmp.""client_loginid"",\n    tmp.""staff_loginid"",\n    tmp.""market"",\n    tmp.""submarket"",\n    tmp.""residence"",\n    tmp.""source"",\n    tmp.""currency_code"",\n    data_collection.exchangetousd_rate(tmp.""currency_code"", tmp.""purchase_hour"") as ""exchange_rate"",\n    data_collection.exchangetousd_rate(tmp.""currency_code"", tmp.""purchase_hour"")*tmp.""total_payout"" as ""total_payout_usd"",\n    data_collection.exchangetousd_rate(tmp.""currency_code"", tmp.""purchase_hour"")*tmp.""total_buy"" as ""total_buy_usd"",\n    data_collection.exchangetousd_rate(tmp.""currency_code"", tmp.""purchase_hour"")*tmp.""total_sell"" as ""total_sell_usd""\n    from \n    (\n    select \n        date_trunc(\'hour\', b.purchase_time) as ""purchase_hour"",\n        b.is_sold,\n        b.underlying_symbol, \n        date_trunc(\'minute\', b.start_time - b.purchase_time) as ""delay_minutes"",\n        date_trunc(\'minute\', b.expiry_time - b.start_time) as ""duration_minutes"",\n        b.bet_type, \n        a.client_loginid, \n        t.staff_loginid,\n        bm.market, \n        bm.submarket, \n        c.residence,\n        t.source,\n        a.currency_code,\n        sum(b.payout_price) as ""total_payout"", \n        sum(b.buy_price) as ""total_buy"",\n        sum(b.sell_price) as ""total_sell""\n\n    from bet.financial_market_bet as b\n    join transaction.transaction t on b.id=t.financial_market_bet_id and t.action_type=\'buy\' --and t.source=6070\n    join transaction.account a on a.id=b.account_id\n    join betonmarkets.client c on c.loginid=a.client_loginid\n    left join bet.market bm on b.underlying_symbol = bm.symbol\n    where \n    --t.staff_loginid=\'#CR382954\' and\n    --market = \'forex\' and \n    --tick_count < 31 and\n    --residence = \'in\' and\n    --client_loginid=\'CR382954\' and\n    --where market = \'forex\' and\n    --sell_time is not null and\n    purchase_time >= (now() + interval \'-1 day\')::timestamp::date\n    and purchase_time < now()::timestamp::date\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13\n    ) tmp\n) tmp2\n\ngroup by 1,2,3\n) tmp3\n--where total_buy_usd >= 500'}}",,area,,False,False,177,,Hourly total buy price (yesterday; CR),,native,,"[{'name': 'purchase_hour', 'display_name': 'Purchase Hour', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-20T00:00:00.000Z', 'latest': '2019-02-20T23:00:00.000Z'}}}}, {'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.83768115942029}}}}, {'name': 'source', 'display_name': 'Source', 'base_type': 'type/Integer', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 122, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 16060.0, 'avg': 9162.553623188405, 'sd': 6131.87813262951, 'q1': 2547.933459119609, 'q3': 15170.165807015186}}}}, {'name': 'total_buy_usd', 'display_name': 'Total Buy Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1071, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.35000000000000003, 'max': 69013.626053352, 'avg': 2221.276003570105, 'sd': 8589.143865738439, 'q1': 48.828113694016885, 'q3': 341.58862072900695}}}}, {'name': 'PnL_usd', 'display_name': 'Pn L Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1137, 'nil%': 0.0028985507246370003}, 'type': {'type/Number': {'min': -4190.267609327094, 'max': 9277.1930142323, 'avg': 62.631380960971434, 'sd': 611.8695667299717, 'q1': -25.424057722854762, 'q3': 32.62411057163343}}}}]",,2019-02-21 07:40:35.599,"{'graph.metrics': ['total_buy_usd'], 'graph.dimensions': ['purchase_hour', 'market'], 'graph.y_axis.scale': 'pow', 'series_settings': {'commodities': {'display': 'line'}, 'forex': {'display': 'line'}, 'volidx': {'display': 'line'}, 'indices': {'display': 'line'}}}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:15:29.782,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT\n                fmb.id,\n                acc.client_loginid,\n                cli.email,\n                acc.currency_code,\n                fmb.short_code,\n                fmb.buy_price,\n                txn.id AS transaction_id,\n                qbv.binaryico_number_of_tokens as number_of_tokens,\n                qbv.binaryico_per_token_bid_price as per_token_bid_price\n            FROM\n                bet.financial_market_bet_open AS fmb\n                JOIN transaction.account AS acc ON fmb.account_id = acc.id\n                JOIN transaction.transaction AS txn ON fmb.id = txn.financial_market_bet_id\n                JOIN data_collection.quants_bet_variables as qbv ON txn.id = qbv.transaction_id\n                JOIN betonmarkets.client AS cli ON cli.loginid = acc.client_loginid\n            WHERE\n                fmb.bet_class = 'coinauction_bet'""}}",,table,,False,False,582,,ICO_client,,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/*', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'client_loginid', 'display_name': 'Client Login ID', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'email', 'display_name': 'Email', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'short_code', 'display_name': 'Short Code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'buy_price', 'display_name': 'Buy Price', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'transaction_id', 'display_name': 'Transaction ID', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'number_of_tokens', 'display_name': 'Number Of Tokens', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'per_token_bid_price', 'display_name': 'Per Token Bid Price', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-03-22 03:15:29.782,{}
False,,"{'id': 65, 'name': ""Parviz asoodefard's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 52, 'slug': 'parviz_asoodefard_s_personal_collection'}",65.0,,2019-02-12 07:44:18.026,"{'email': 'parviz@regentmarkets.com', 'first_name': 'Parviz', 'last_login': '2019-07-03T05:55:34.855Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 52, 'last_name': 'asoodefard', 'date_joined': '2019-01-08T07:10:52.493Z', 'common_name': 'Parviz asoodefard'}",52,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select now() - query_start as ""duration"", query from pg_stat_activity where state <> \'idle\'\n'}}",,table,,False,False,363,,ideals query,,native,,"[{'name': 'duration', 'display_name': 'Duration', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0}}}, {'name': 'query', 'display_name': 'Query', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 752}}}}]",,2019-02-12 07:44:18.026,{'table.pivot_column': 'duration'}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-03-25 06:19:55.127,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\n    t.relname as table_name,\n    i.relname as index_name,\n    array_to_string(array_agg(a.attname), ', ') as column_names\nfrom\n    pg_class t,\n    pg_class i,\n    pg_index ix,\n    pg_attribute a\nwhere\n    t.oid = ix.indrelid\n    and i.oid = ix.indexrelid\n    and a.attrelid = t.oid\n    and a.attnum = ANY(ix.indkey)\n    and t.relkind = 'r'\ngroup by\n    t.relname,\n    i.relname\norder by\n    t.relname,\n    i.relname;""}}",,table,,False,False,663,37.0,index columns for each table,df214e9d-eafb-49c2-9f7f-92796f1fb8c9,native,,"[{'name': 'table_name', 'display_name': 'Table Name', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 149, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 14.384615384615385}}}}, {'name': 'index_name', 'display_name': 'Index Name', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 286, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 25.90909090909091}}}}, {'name': 'column_names', 'display_name': 'Column Names', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 151, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 15.706293706293707}}}}]",,2019-05-07 08:58:05.999,"{'table.pivot_column': 'table_name', 'table.column_widths': [254, None, 431]}"
False,,,,,2019-01-25 06:42:09.867,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n  purchase_date,\n  --sum(""volidx_buy_USD"") as ""volidx_buy_USD"",\n  --sum(""volidx_PnL_USD"") as ""volidx_PnL_USD""\n  --sum(""forex_buy_USD"") as ""forex_buy_USD"",\n  --sum(""forex_PnL_USD"") as ""forex_PnL_USD""\n  sum(""indices_buy_USD"") as ""indices_buy_USD"",\n  sum(""indices_PnL_USD"") as ""indices_PnL_USD""\n  --sum(""commodities_buy_USD"") as ""commodities_buy_USD"",\n  --sum(""commodities_PnL_USD"") as ""commodities_PnL_USD""\nfrom\n(\nselect\n  ta.currency_code,\n  tmp.""purchase_date"",\n  sum(tmp.""volidx_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""volidx_buy_USD"",\n  sum(tmp.""volidx_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""volidx_PnL_USD"",\n  sum(tmp.""forex_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""forex_buy_USD"",\n  sum(tmp.""forex_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""forex_PnL_USD"",\n  sum(tmp.""indices_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""indices_buy_USD"",\n  sum(tmp.""indices_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""indices_PnL_USD"",\n  sum(tmp.""commodities_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""commodities_buy_USD"",\n  sum(tmp.""commodities_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""commodities_PnL_USD""\nfrom\n(\n    select\n      account_id,\n      purchase_time::date as ""purchase_date"",\n      sum(buy_price) filter (where bm.market=\'volidx\') as ""volidx_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'volidx\') as ""volidx_PnL"",\n      sum(buy_price) filter (where bm.market=\'forex\') as ""forex_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'forex\') as ""forex_PnL"",\n      sum(buy_price) filter (where bm.market=\'indices\') as ""indices_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'indices\') as ""indices_PnL"",\n      sum(buy_price) filter (where bm.market=\'commodities\') as ""commodities_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'commodities\') as ""commodities_PnL""\n      \n    \n    from bet.financial_market_bet fmb left join bet.market bm\n    on fmb.underlying_symbol=bm.symbol\n    where purchase_time >= (now() + interval \'-7d\')::date\n    and purchase_time < now()::date\n    group by 1,2\n) tmp left join transaction.account ta\non ta.id=tmp.account_id\ngroup by 1,2\n\n) tmp2\ngroup by 1\norder by 1 desc'}}",,table,,False,False,235,,Indices turnover and profit (CR),,native,,"[{'name': 'purchase_date', 'display_name': 'purchase_date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-10T00:00:00.000Z', 'latest': '2019-10-16T00:00:00.000Z'}}}}, {'name': 'indices_buy_USD', 'display_name': 'indices_buy_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.28571428571428503}, 'type': {'type/Number': {'min': 824.510916, 'max': 1833.5487634, 'avg': 1295.6536809, 'sd': 427.7794907853656, 'q1': 926.01213495, 'q3': 1673.0410975}}}}, {'name': 'indices_PnL_USD', 'display_name': 'indices_PnL_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.28571428571428503}, 'type': {'type/Number': {'min': -699.608762, 'max': 647.0622225, 'avg': -132.34626994, 'sd': 491.453827368235, 'q1': -384.55383485, 'q3': 98.77370422499997}}}}]",,2019-10-17 00:19:21.624,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-17 03:56:08.538,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    date_joined::date as join_date, \n    count(*) filter (where residence='br') as count_brazil,\n    count(*) filter (where residence='id') as count_indonesia,\n    count(*) as count_ALL\nfrom betonmarkets.client \nwhere \n    --residence in ('id', 'br')\n    --and \n    date_joined >= current_date + interval '-31d' \n    and date_joined < current_date\ngroup by 1--,2 --date_joined::date""}}",,line,,False,False,953,37.0,Indonesia and Brazil sign-ups in the past 30 days,1f6ff6cf-1f5d-45af-ab93-efdaba1db889,native,,"[{'name': 'join_date', 'display_name': 'Join Date', 'base_type': 'type/Date', 'special_type': 'type/JoinDate', 'fingerprint': {'global': {'distinct-count': 31, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-06-17T00:00:00.000Z', 'latest': '2019-07-17T00:00:00.000Z'}}}}, {'name': 'count_brazil', 'display_name': 'Count Brazil', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 26, 'nil%': 0.0}, 'type': {'type/Number': {'min': 122.0, 'max': 242.0, 'avg': 185.41935483870967, 'sd': 35.52442745825131, 'q1': 151.0, 'q3': 218.75}}}}, {'name': 'count_indonesia', 'display_name': 'Count Indonesia', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 25, 'nil%': 0.0}, 'type': {'type/Number': {'min': 72.0, 'max': 156.0, 'avg': 105.54838709677419, 'sd': 18.11047341490078, 'q1': 90.625, 'q3': 116.25834261322606}}}}, {'name': 'count_all', 'display_name': 'Count All', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 699.0, 'max': 979.0, 'avg': 856.7096774193549, 'sd': 73.30947803587524, 'q1': 812.5, 'q3': 908.75}}}}]",,2019-07-18 01:16:54.628,"{'graph.dimensions': ['join_date'], 'graph.metrics': ['count_brazil', 'count_indonesia', 'count_all'], 'series_settings': {'count_brazil': {'color': '#74838F', 'axis': 'left', 'line.interpolate': 'linear'}, 'count_indonesia': {'color': '#7172AD', 'axis': 'left'}, 'count_brazil_and_indonesia': {'axis': 'left'}, 'count_all': {'axis': 'left'}}, 'graph.y_axis.scale': 'pow', 'graph.show_trendline': True}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-17 03:49:07.121,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    date_joined::date as join_date, \n    count(*) \nfrom betonmarkets.client \nwhere \n    residence='id' \n    and date_joined >= current_date + interval '-31d' \n    and date_joined < current_date\ngroup by date_joined::date""}}",,line,,False,False,952,37.0,Indonesia sign-ups in past 30 days,107f980f-f046-475d-ab1b-812cdf3f07b3,native,,"[{'name': 'join_date', 'display_name': 'Join Date', 'base_type': 'type/Date', 'special_type': 'type/JoinDate', 'fingerprint': {'global': {'distinct-count': 31, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-03-22T00:00:00.000Z', 'latest': '2019-04-21T00:00:00.000Z'}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 66.0, 'max': 139.0, 'avg': 106.12903225806451, 'sd': 18.83036897405159, 'q1': 93.22497216032183, 'q3': 119.7752551286084}}}}]",,2019-04-22 07:46:16.524,"{'graph.dimensions': ['join_date'], 'graph.metrics': ['count']}"
False,,,,,2018-11-08 07:56:00.704,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'query': {'source-table': 94, 'filter': ['and', ['=', ['field-id', 836], 'id'], ['time-interval', ['field-id', 852], -60, 'day', {}]], 'breakout': [['datetime-field', ['field-id', 852], 'day']], 'aggregation': [['count']]}, 'type': 'query', 'database': 2}",,bar,,False,False,20,,Indonesian real-money signups by day,,query,,"[{'name': 'date_joined', 'display_name': 'date_joined', 'base_type': 'type/DateTime', 'unit': 'day', 'special_type': 'type/JoinTimestamp', 'fingerprint': {'global': {'distinct-count': 58, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-08-22T00:00:00.000Z', 'latest': '2019-10-18T00:00:00.000Z'}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 40, 'nil%': 0.0}, 'type': {'type/Number': {'min': 7.0, 'max': 159.0, 'avg': 110.03448275862068, 'sd': 22.04378857274875, 'q1': 100.0, 'q3': 122.26794919243112}}}}]",94.0,2019-10-21 00:00:51.194,"{'graph.dimensions': ['date_joined'], 'graph.metrics': ['count']}"
False,,,,,2018-11-07 08:19:44.241,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'query': {'source-table': 94, 'filter': ['and', ['=', ['field-id', 836], 'id'], ['time-interval', ['field-id', 852], -30, 'day', {}]], 'breakout': [['datetime-field', ['field-id', 852], 'week']], 'aggregation': [['count']]}, 'type': 'query', 'database': 2}",,bar,,False,False,18,,Indonesian real-money signups by week,,query,,"[{'name': 'date_joined', 'display_name': 'date_joined', 'base_type': 'type/DateTime', 'unit': 'week', 'special_type': 'type/JoinTimestamp', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-01T00:00:00.000Z', 'latest': '2019-09-29T00:00:00.000Z'}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 391.0, 'max': 912.0, 'avg': 679.0, 'sd': 192.11585046528566, 'q1': 565.0, 'q3': 796.5}}}}]",94.0,2019-10-04 03:35:58.236,"{'graph.dimensions': ['date_joined'], 'graph.metrics': ['count']}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:56.198,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT\n  * \n FROM\n  chronicle \n WHERE\n  category='interest_rates' \n  AND name='EUR-USD' \n ORDER BY\n  timestamp DESC limit 3\n\n  \n ""}}",,table,,False,False,644,,interest rate,,native,,,,2019-03-22 03:27:56.198,{}
False,,"{'id': 184, 'name': 'Internal Audit', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'internal_audit'}",184.0,,2019-04-09 17:34:21.487,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Large Wins above 3000GBP\nselect * from bet.financial_market_bet\nwhere purchase_time >= '2018-01-01'\nand purchase_time <= '2018-12-31'\nand payout_price >= 3000\norder by payout_price desc""}}",Large Wins above 3000GBP,table,,False,False,943,,Internal Audit MX Large Wins above 3000GBP,,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'purchase_time', 'display_name': 'Purchase Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18203, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T03:14:26.000Z', 'latest': '2018-12-30T20:14:38.000Z'}}}}, {'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2797, 'nil%': 0.0}, 'type': {'type/Number': {'min': 261441.0, 'max': 11187981.0, 'avg': 6540294.782626021, 'sd': 2504344.101098194, 'q1': 4775893.825251064, 'q3': 8690247.941895012}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 50, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.666367802351066}}}}, {'name': 'payout_price', 'display_name': 'Payout Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8782, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3000.0, 'max': 50000.0, 'avg': 6607.320885136544, 'sd': 6456.345385882356, 'q1': 3747.501297636294, 'q3': 6518.057043099439}}}}, {'name': 'buy_price', 'display_name': 'Buy Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3507, 'nil%': 0.0}, 'type': {'type/Number': {'min': 75.0, 'max': 32233.81, 'avg': 2992.600942418809, 'sd': 3194.94185402371, 'q1': 1692.9611789890232, 'q3': 3125.7247109217083}}}}, {'name': 'sell_price', 'display_name': 'Sell Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5490, 'nil%': 4.981071926678621e-05}, 'type': {'type/Number': {'min': 0.0, 'max': 50000.0, 'avg': 2903.907626400999, 'sd': 5214.567395299343, 'q1': 0.6462810329552361, 'q3': 4196.005036680099}}}}, {'name': 'start_time', 'display_name': 'Start Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18189, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T03:14:26.000Z', 'latest': '2018-12-30T20:14:38.000Z'}}}}, {'name': 'expiry_time', 'display_name': 'Expiry Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18202, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T03:14:46.000Z', 'latest': '2019-07-30T23:59:59.000Z'}}}}, {'name': 'settlement_time', 'display_name': 'Settlement Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18203, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T03:14:46.000Z', 'latest': '2019-07-30T23:59:59.000Z'}}}}, {'name': 'expiry_daily', 'display_name': 'Expiry Daily', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}}}, {'name': 'is_expired', 'display_name': 'Is Expired', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}}}, {'name': 'is_sold', 'display_name': 'Is Sold', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}}}, {'name': 'bet_class', 'display_name': 'Bet Class', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 12.995865710300857}}}}, {'name': 'bet_type', 'display_name': 'Bet Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 22, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.802600119545726}}}}, {'name': 'remark', 'display_name': 'Remark', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18583, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 306.7952779438135}}}}, {'name': 'short_code', 'display_name': 'Short Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18533, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 42.64151225343694}}}}, {'name': 'sell_time', 'display_name': 'Sell Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18493, 'nil%': 4.981071926678621e-05}, 'type': {'type/DateTime': {'earliest': '2018-01-01T03:14:48.000Z', 'latest': '2019-03-23T00:00:00.000Z'}}}}, {'name': 'fixed_expiry', 'display_name': 'Fixed Expiry', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.9917812313209801}}}, {'name': 'tick_count', 'display_name': 'Tick Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.407252440725244}, 'type': {'type/Number': {'min': 5.0, 'max': 10.0, 'avg': 5.313025210084034, 'sd': 1.053369570517165, 'q1': 5.0, 'q3': 5.422014919042404}}}}]",,2019-04-09 17:34:21.487,{}
False,,"{'id': 184, 'name': 'Internal Audit', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'internal_audit'}",184.0,,2019-04-09 09:40:02.070,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select 1 /* -- Large Wins above 3000GBP\nselect * from bet.financial_market_bet\nwhere purchase_time >= '2018-01-01'\nand purchase_time <= '2018-12-31'\nand payout_price >= 3000\norder by payout_price desc */""}}",Large Wins above 3000GBP,table,,False,False,856,,Internal Audit MX Large Wins above 3000GBP,,native,,"[{'name': '?column?', 'display_name': '?column?', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1.0, 'avg': 1.0, 'sd': None, 'q1': 1.0, 'q3': 1.0}}}}]",,2019-04-09 09:40:02.070,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:28:44.663,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT\n  \'CR\' as ""database"",\n  b.payout_price, \n  b.buy_price, \n  b.sell_price,\n  b.start_time,\n  b.sell_time, \n  b.short_code,\n  b.bet_type,\n  b.underlying_symbol,\n  b.sell_time-b.start_time AS ""Duration""\n\nFROM bet.financial_market_bet b\nWHERE b.sell_time >= \'2017-08-01\'\nAND b.underlying_symbol like \'frx%\'\nAND b.bet_type in (\'CALL\',\'CALLE\', \'PUT\', \'PUTE\')\nAND b.short_code like \'%_S0P_0\' \nAND (b.sell_time - b.start_time)<INTERVAL \'8 hours\'\n'}}",,table,,False,False,654,,Intraday ATM Fx,,native,,,,2019-03-22 03:28:44.663,{}
False,,"{'id': 190, 'name': 'Japan', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'japan'}",190.0,,2019-04-09 09:42:59.426,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Japan > Answer Rate for Knowledge Test Questions\nWITH params AS (SELECT\n  '2016-10-01'::TIMESTAMP AS p_start_time,\n  '2017-12-31'::TIMESTAMP AS p_end_time\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT t.* FROM params, dblink('vr', $DBLINK$\n  SELECT\n    qa.qid,\n    COUNT(qa.*) AS times_shown,\n    COUNT(NULLIF(qa.pass,FALSE)) AS passed,\n    COUNT(CASE WHEN qa.pass IS NULL OR qa.pass = FALSE THEN TRUE END) AS failed,\n    qa.question_presented\n  FROM japan.questions_answered qa\n  JOIN betonmarkets.client bc ON bc.loginid=qa.client_loginid\n  WHERE bc.residence = 'jp'\n  AND qa.stamp > $DBLINK$ || quote_literal( p_start_time ) || $DBLINK$::TIMESTAMP WITHOUT TIME ZONE AT TIME ZONE 'JST' AT TIME ZONE 'UTC'\n  AND qa.stamp <= $DBLINK$ || quote_literal( p_end_time ) || $DBLINK$::TIMESTAMP WITHOUT TIME ZONE AT TIME ZONE 'JST' AT TIME ZONE 'UTC'\n  GROUP BY qa.question_presented, qa.qid\n  ORDER BY qa.qid\n$DBLINK$::TEXT) t (question_id INTEGER, times_shown INTEGER, passed INTEGER, failed INTEGER, question_presented TEXT)\n""}}",Japan > Answer Rate for Knowledge Test Questions,table,,False,False,906,,Japan Answer Rate for Knowledge Test Questions,,native,,,,2019-04-09 09:42:59.426,{}
False,,"{'id': 190, 'name': 'Japan', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'japan'}",190.0,,2019-04-09 09:43:06.066,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Japan > Client Statements Closed Trades\nWITH param as (\n    SELECT\n        '2016-01-01'::TIMESTAMP as start_time,\n        '2016-05-01'::TIMESTAMP as end_time,\n        \n        null as client_loginid\n        -- 'JP1030'::TEXT as client_loginid\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nselect * from fdw.japan_client_statement_closed_trades((SELECT start_time FROM param)::TIMESTAMP, (SELECT end_time FROM param)::TIMESTAMP, (SELECT client_loginid FROM param)::TEXT);\n\n""}}",Japan > Client Statements Closed Trades,table,,False,False,908,,Japan Client Statements Closed Trades,,native,,,,2019-04-09 09:43:06.065,{}
False,,"{'id': 190, 'name': 'Japan', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'japan'}",190.0,,2019-04-09 09:43:02.721,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Japan > Client Statements Payments\nWITH param as (\n    SELECT\n        '2016-01-01'::TIMESTAMP as start_time,\n        '2016-05-01'::TIMESTAMP as end_time,\n                \n        null as client_loginid\n        -- 'JP1035'::TEXT as client_loginid\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nselect * from fdw.japan_client_statement_payment((SELECT start_time FROM param)::TIMESTAMP, (SELECT end_time FROM param)::TIMESTAMP, (SELECT client_loginid FROM param)::TEXT);\n\n""}}",Japan > Client Statements Payments,table,,False,False,907,,Japan Client Statements Payments,,native,,,,2019-04-09 09:43:02.721,{}
False,,"{'id': 190, 'name': 'Japan', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'japan'}",190.0,,2019-04-09 09:42:49.085,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Japan > Judge Price (select currency spot prices)\nWITH params AS (SELECT\n\t\'2017-08-03\'::DATE AS start_date,\n\t\'2017-08-10\'::DATE AS end_date\n)\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT\n  (ct.gmt::TIMESTAMP AT TIME ZONE \'UTC\' AT TIME ZONE \'JST\')::DATE AS ""Date (JST)"",\n  (ct.gmt::TIMESTAMP AT TIME ZONE \'UTC\' AT TIME ZONE \'JST\')::TIME AS ""JST"",\n  ct.gmt::TIME AS ""GMT"",\n  ct.AUDJPY,\n  ct.AUDUSD,\n  ct.EURGBP,\n  ct.EURJPY,\n  ct.EURUSD,\n  ct.GBPJPY,\n  ct.GBPUSD,\n  ct.USDCAD,\n  ct.USDJPY\n\nFROM params\nCROSS JOIN LATERAL crosstab($$\n\tSELECT intval, undsym, spot\n\tFROM jp_spot_prices($$|| quote_literal(params.start_date) ||$$, $$|| quote_literal(params.end_date) ||$$)\n\tORDER BY intval, undsym\n$$) AS ct(\n\tgmt TIMESTAMP,\n\tAUDJPY NUMERIC(8,3),\n\tAUDUSD NUMERIC(8,5),\n\tEURGBP NUMERIC(8,5),\n\tEURJPY NUMERIC(8,3),\n\tEURUSD NUMERIC(8,5),\n\tGBPJPY NUMERIC(8,3),\n\tGBPUSD NUMERIC(8,5),\n\tUSDCAD NUMERIC(8,5),\n\tUSDJPY NUMERIC(8,3));\n'}}",Japan > Judge Price (select currency spot prices),table,,False,False,903,,Japan Judge Price (select currency spot prices),,native,,,,2019-04-09 09:42:49.085,{}
False,,"{'id': 190, 'name': 'Japan', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'japan'}",190.0,,2019-04-09 09:42:52.433,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Japan > Legal Balance\nWITH param as (\n    SELECT\n        '2016-01-01'::TIMESTAMP as start_time,\n        '2016-05-01'::TIMESTAMP as end_time,\n        \n        null as client_loginid\n        -- 'JP1035'::TEXT as client_loginid\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nselect * from fdw.japan_legal_balance((SELECT start_time FROM param)::TIMESTAMP, (SELECT end_time FROM param)::TIMESTAMP, (SELECT client_loginid FROM param)::TEXT);\n\n""}}",Japan > Legal Balance,table,,False,False,904,,Japan Legal Balance,,native,,,,2019-04-09 09:42:52.433,{}
False,,"{'id': 190, 'name': 'Japan', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'japan'}",190.0,,2019-04-09 09:42:55.805,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Japan > Legal Customer Cards\nWITH param as (\n    SELECT\n        null as client_loginid\n        -- 'JP1035'::TEXT as client_loginid\n)\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT * FROM fdw.japan_legal_customer_cards((SELECT client_loginid FROM param)::TEXT)\nORDER BY substring(loginid, '\\d+')""}}",Japan > Legal Customer Cards,table,,False,False,905,,Japan Legal Customer Cards,,native,,,,2019-04-09 09:42:55.805,{}
False,,"{'id': 190, 'name': 'Japan', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'japan'}",190.0,,2019-04-09 09:42:42.151,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Japan > Legal Trades\nWITH param as (\n    SELECT\n        '2016-03-01'::TIMESTAMP as start_time,\n        '2016-03-28'::TIMESTAMP as end_time,\n\n        null as client_loginid\n        --'JP1035'::TEXT as client_loginid\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT * FROM fdw.japan_legal_trades((SELECT start_time FROM param)::TIMESTAMP, (SELECT end_time FROM param)::TIMESTAMP, (SELECT client_loginid FROM param)::TEXT);\n""}}",Japan > Legal Trades,table,,False,False,901,,Japan Legal Trades,,native,,,,2019-04-09 09:42:42.151,{}
False,,"{'id': 190, 'name': 'Japan', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'japan'}",190.0,,2019-04-09 09:42:45.685,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- analysis of trades with less than 1 minute between\n-- Japan > rejected trades analysis\nWITH params AS (SELECT\n  '2017-01-01'::DATE AS start_date,\n  '2017-12-31'::DATE AS end_date\n)\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\n\nSELECT d.*\nFROM params\nCROSS JOIN dblink('jp', $$\nWITH dts AS (\n  select loginid, reason, (details->>'slippage')::numeric * -1 AS slippage, trade_time, lag(trade_time) over (order by id) AS last_trade_time\n  from data_collection.rejected_trades\n  where (details->>'slippage')::numeric != 0\n  and action_type='buy'\n  AND $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP <= trade_time\n  AND trade_time < $$|| quote_nullable(params.end_date) ||$$::TIMESTAMP + '1 day'::INTERVAL\n)\nselect\n\tloginid,\n\treason,\n\tcount(*) AS cnt,\n\tROUND(avg(slippage), 2) as avg_slippage,\n\tmax(slippage) AS max_slippage,\n\tmin(slippage) AS min_slippage,\n\tavg(trade_time - last_trade_time) FILTER (WHERE (trade_time - last_trade_time) < '1m'::INTERVAL) AS avg_trade_interval_under_1min,\n\tmin(trade_time - last_trade_time) AS min_trade_interval,\n\tmin(trade_time)::TIMESTAMP(0)::TEXT AS min_trade_time,\n\tmax(trade_time)::TIMESTAMP(0)::TEXT AS max_trade_time\nFROM dts\nWHERE (trade_time - last_trade_time) < '1m'::INTERVAL\nGROUP BY loginid, reason\nORDER BY 3 DESC\n$$) d (loginid VARCHAR, reason VARCHAR, cnt BIGINT, avg_slippage NUMERIC, max_slippage NUMERIC, min_slippage NUMERIC, avg_trade_interval_under_1min INTERVAL, min_trade_interval INTERVAL, min_trade_time TEXT, max_trade_time TEXT)\n""}}",analysis of trades with less than 1 minute between,table,,False,False,902,,Japan rejected trades analysis,,native,,,,2019-04-09 09:42:45.685,{}
False,,"{'id': 190, 'name': 'Japan', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'japan'}",190.0,,2019-04-09 09:42:35.271,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- VR clients with Japan as residence but no related JP landing company record\n-- Japan > Virtual only clients\nWITH param AS (\n  SELECT\n    '2001-01-01'::DATE AS virtual_start_date,\n    TRUE::BOOLEAN AS email_consent_only,  -- comment out this line and uncomment the next to ignore email_consent status\n    --NULL::BOOLEAN AS email_consent_only,\n    TRUE::BOOLEAN AS omit_binary_com      -- comment out this line and uncomment the next to include binary.com email addresses\n    --NULL::BOOLEAN AS omit_binary_com\n)\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT\n  vr.loginid, vr.date_joined, bu.email_consent, vr.email\n\nFROM (\n    SELECT * FROM param, dblink('vr', $$\n      SELECT loginid, date_joined, email, SUBSTRING(loginid FROM '\\d*$')::INTEGER AS idx\n      FROM betonmarkets.client\n      WHERE residence='jp'\n      AND date_joined >= $$|| quote_literal(param.virtual_start_date) ||$$$$::TEXT)\n        t (loginid VARCHAR, date_joined DATE, email VARCHAR, idx INTEGER)\n) vr\nJOIN users.loginid ul ON vr.loginid = ul.loginid\nJOIN users.binary_user bu ON bu.id = ul.binary_user_id\nLEFT JOIN (\n    SELECT jp.loginid, jp.date_joined, jp.email, ulj.binary_user_id\n    FROM (\n        SELECT * FROM dblink('jp', $$SELECT loginid, date_joined, email FROM betonmarkets.client$$::TEXT)\n            t (loginid VARCHAR, date_joined DATE, email VARCHAR)\n    ) jp\n    JOIN users.loginid ulj ON jp.loginid = ulj.loginid\n) jjp ON jjp.binary_user_id = ul.binary_user_id\nCROSS JOIN param\nWHERE jjp.loginid IS NULL\nAND (param.email_consent_only IS NULL OR (param.email_consent_only = bu.email_consent))\nAND (param.omit_binary_com IS NULL OR param.omit_binary_com = FALSE OR (vr.email NOT LIKE '%@binary.com'))\nORDER BY vr.idx\n""}}",VR clients with Japan as residence but no related JP landing company record,table,,False,False,899,,Japan Virtual only clients,,native,,,,2019-04-09 09:42:35.271,{}
False,,"{'id': 190, 'name': 'Japan', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'japan'}",190.0,,2019-04-09 09:42:38.807,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- An evaluation version of VR trades for the Japan team. Clients with JP residence only.\n-- Japan > VR version of ""Legal Trades""\nWITH param as (\n    SELECT\n        \'2017-07-01\'::TIMESTAMP as start_time,\n        \'2017-10-16\'::TIMESTAMP as end_time,\n\n        null as client_loginid\n        --\'VRTJ1032\'::TEXT as client_loginid\n)\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT * FROM dblink(\'vr\',\n    $$\n    SELECT\n\n        c.loginid,\n        c.last_name || \' \' || c.first_name AS name,\n        (\n            (\n                CASE WHEN t.action_type = \'buy\' THEN b.purchase_time ELSE b.sell_time END\n            ) AT TIME ZONE \'UTC\' AT TIME ZONE \'JST\'\n        )::TEXT  AS dealt_date,\n\n        \'Binary K.K\' AS counter_party,\n\n        CASE\n            WHEN b.bet_type = \'CALLE\'           THEN \'Ladder Higher\'\n            WHEN b.bet_type = \'PUT\'             THEN \'Ladder Lower\'\n\n            WHEN b.bet_type = \'ONETOUCH\'        THEN \'Touch\'\n            WHEN b.bet_type = \'NOTOUCH\'         THEN \'No Touch\'\n\n            WHEN b.bet_type = \'EXPIRYRANGEE\'    THEN \'Ends In (Ends Between)\'\n            WHEN b.bet_type = \'EXPIRYMISS\'      THEN \'Ends Out (Ends Outside)\'\n\n            WHEN b.bet_type = \'RANGE\'           THEN \'Stays In (Stays Between)\'\n            WHEN b.bet_type = \'UPORDOWN\'        THEN \'Stays Out (Goes Outside)\'\n\n            ELSE \'others\'\n        END AS bet_type_explained,\n\n        regexp_replace(b.underlying_symbol, \'frx\', \'\') AS currency_pair,\n\n        (b.start_time AT TIME ZONE \'UTC\' AT TIME ZONE \'JST\')::TEXT   AS trading_start_time,\n        (b.expiry_time AT TIME ZONE \'UTC\' AT TIME ZONE \'JST\')::TEXT  AS trading_end_time,\n        (COALESCE(qbv.trading_period_start, bqbv.trading_period_start) AT TIME ZONE \'UTC\' AT TIME ZONE \'JST\')::TEXT  AS trading_period_start_time,\n\n        CASE\n            WHEN b.bet_class = \'higher_lower_bet\'   THEN h.absolute_barrier::TEXT\n            WHEN b.bet_class = \'touch_bet\'          THEN tn.absolute_barrier::TEXT\n            WHEN b.bet_class = \'range_bet\'          THEN r.absolute_higher_barrier::TEXT || \'; \' || r.absolute_lower_barrier::TEXT\n        END AS exercise_price,\n\n        b.bet_type,\n\n        CASE\n            WHEN t.action_type = \'buy\'  THEN \'buy\'\n            WHEN t.action_type = \'sell\' THEN \'sell\'\n        END AS buy_sell,\n\n\t    t.staff_loginid AS ""AutoSell"",\n        1 AS order_amount,\n        1 AS executed_amount,\n\n        (CASE WHEN t.action_type = \'buy\' THEN (purchase_time AT TIME ZONE \'UTC\' AT TIME ZONE \'JST\') END)::TEXT AS ordered_datetime,\n\n\t    ABS(t.amount)\tAS premium_price,\n        \'Market Order\'\tAS limit_market_order,\n        t.id AS transaction_id,\n        b.id AS bet_id,\n        0 AS commission,\n\n        b.payout_price AS payout,\n        (CASE WHEN t.action_type = \'buy\' THEN b.sell_time AT TIME ZONE \'UTC\' AT TIME ZONE \'JST\' END)::TEXT AS sell_time,\n        CASE WHEN t.action_type = \'buy\' THEN b.sell_price END AS sell_price,\n        CASE WHEN t.action_type = \'buy\' AND b.is_sold THEN b.sell_price - b.buy_price END AS profit_loss,\n        qbv.requested_price AS requested_price,\n        qbv.recomputed_price AS computed_price,\n        qbv.price_slippage AS price_slippage\n\n    FROM\n\n        betonmarkets.client c\n        JOIN transaction.account a\n            ON c.loginid = a.client_loginid AND a.is_default = true\n        JOIN transaction.transaction t\n            ON a.id = t.account_id\n        JOIN bet.financial_market_bet b\n            ON t.financial_market_bet_id = b.id\n        LEFT JOIN data_collection.quants_bet_variables qbv\n            ON t.id = qbv.transaction_id\n        LEFT JOIN bet.higher_lower_bet h\n            ON t.financial_market_bet_id = h.financial_market_bet_id\n        LEFT JOIN bet.touch_bet tn\n            ON t.financial_market_bet_id = tn.financial_market_bet_id\n        LEFT JOIN bet.range_bet r\n            ON t.financial_market_bet_id = r.financial_market_bet_id\n/*\nFor sell transactions, Japan team requires the trading_period_start_time, but it is not available in the sell qbv, only in the buy.\nIt is also just AS problemmatical to look it up when selling to record it AS it is to do it retroactively here, so here is where we are doing it.\nYes these joins blow the query cost up by roughly 8x when going by date range alone, but for whatever reason, they need that value...\n*/\n\tLEFT JOIN transaction.transaction bt\n\t    ON bt.financial_market_bet_id = t.financial_market_bet_id\n-- The idea here is to only do the join for a sell transaction\n\t    AND bt.action_type = \'buy\'\n\t    AND  t.action_type = \'sell\'\n\tLEFT JOIN data_collection.quants_bet_variables bqbv\n            ON bt.id = bqbv.transaction_id\n\n    WHERE\n        t.transaction_time > $$ || quote_literal((SELECT start_time FROM param)) || $$::TIMESTAMP WITHOUT TIME ZONE AT TIME ZONE \'JST\' AT TIME ZONE \'UTC\'\n        AND t.transaction_time <= $$ || quote_literal((SELECT end_time FROM param)) || $$::TIMESTAMP WITHOUT TIME ZONE AT TIME ZONE \'JST\' AT TIME ZONE \'UTC\'\nAND c.residence=\'jp\'\nAND ( c.loginid = $$ || quote_nullable((SELECT client_loginid FROM param)::TEXT) || $$ OR $$ || quote_nullable((SELECT client_loginid FROM param)::TEXT) || $$ IS NULL )\n    ORDER BY t.transaction_time\n\n    $$\n) AS t(\n    loginid TEXT,\n    name TEXT,\n    dealt_date TEXT,\n    counter_party TEXT,\n    bet_type_explained TEXT,\n    currency_pair TEXT,\n    trading_start_time TEXT,\n    trading_end_time TEXT,\n    trading_period_start_time TEXT,\n    exercise_price TEXT,\n    bet_type TEXT,\n    buy_sell TEXT,\n    ""AutoSell"" TEXT,\n    order_amount NUMERIC,\n    executed_amount NUMERIC,\n    ordered_datetime TEXT,\n    premium_price NUMERIC,\n    limit_market_order TEXT,\n    transaction_id TEXT,\n    bet_id TEXT,\n    commission INT,\n    payout NUMERIC,\n    sell_time TEXT,\n    sell_price NUMERIC,\n    profit_loss NUMERIC,\n    requested_price NUMERIC,\n    computed_price NUMERIC,\n    price_slippage NUMERIC\n)'}}",An evaluation version of VR trades for the Japan team. Clients with JP residence only.,table,,False,False,900,,"Japan VR version of ""Legal Trades""",,native,,,,2019-04-09 09:42:38.807,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:29:08.167,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT\n  to_char(b.expiry_time::timestamp, \'HH:MI dd/mm/yyyy\') as ""expiry datetime"", \n  COUNT(b.id),\n  SUM(b.buy_price) AS sum_buy_price, \n  SUM(b.buy_price)/COUNT(b.id) AS avg_buy_price, \n  SUM(b.sell_price) AS sum_sell_price,\n  SUM(b.sell_price)/COUNT(b.id) AS avg_sell_price,\n  SUM(b.payout_price)/COUNT(b.id) AS avg_payout_price, \n  b.bet_type,\n  b.underlying_symbol\nFROM transaction.transaction t, \n  bet.financial_market_bet b, \n  transaction.account a,\n  betonmarkets.client c\nWHERE t.financial_market_bet_id = b.id\n  AND c.loginid=a.client_loginid\n  AND t.account_id = a.id  \n  AND b.underlying_symbol ~* \'AUD|CNY|NZD\'\n  AND b.expiry_time >= CURRENT_DATE - INTERVAL \'1 day\'\nGROUP BY b.expiry_time, b.underlying_symbol, b.bet_type\nORDER BY b.expiry_time, b.underlying_symbol, b.bet_type'}}",,table,,False,False,657,,Japanese Group contracts info,,native,,,,2019-03-22 03:29:08.167,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-07-18 08:05:50.707,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'pid': {'id': '366f112b-cea4-5c3e-cbb6-8ea570bde8c0', 'name': 'pid', 'display-name': 'PID', 'type': 'number', 'required': True, 'default': '-1'}}, 'query': '  select pg_cancel_backend({{pid}})\n'}, 'type': 'native', 'database': 2}",,scalar,,False,False,1022,,kill a query (pid),,native,,"[{'name': 'pg_cancel_backend', 'display_name': 'pg_cancel_backend', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}]",,2019-09-18 12:30:23.022,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-09-03 09:23:47.867,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select pid, pg_terminate_backend(pid::int)\nfrom\n(\n    select pid, now() - query_start as ""duration"", query from pg_stat_activity where state <> \'idle\'\n    and query not like \'%query_start%\'\n) tmp'}}",,table,,False,False,1033,37.0,KILL EVERYTHING ON CR!,bffe812a-5842-47bc-b6cc-c49a7ea0d4b2,native,,"[{'name': 'pid', 'display_name': 'pid', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1125.0, 'max': 3207.0, 'avg': 2166.0, 'sd': 1472.196318430392, 'q1': 1125.0, 'q3': 3207.0}}}}, {'name': 'pg_terminate_backend', 'display_name': 'pg_terminate_backend', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}]",,2019-09-18 08:33:01.792,"{'table.columns': [{'name': '?column?', 'enabled': True}, {'name': 'query', 'enabled': True}], 'table.pivot_column': 'duration', 'table.cell_column': 'pid'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:16:15.130,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- IA _LargeWins\nselect * from dblink('mx', $$\n    select \n      purchase_time, \n      account_id, \n      underlying_symbol, \n      payout_price, \n      buy_price, \n      sell_price, \n      bet_class, \n      bet_type \n    from bet.financial_market_bet\n    where purchase_time >= '2018-01-01'\n    and purchase_time <= '2018-12-31'\n    and payout_price >= 3000\n    order by payout_price desc\n$$) as t(purchase_time timestamp(0), \n          account_id integer, \n          underlying_symbol varchar, \n          payout_price numeric, \n          buy_price numeric, \n          sell_price numeric, \n          bet_class varchar, \n          bet_type varchar)""}}",IA _LargeWins,table,,False,False,583,,Large Wins,,native,,,,2019-03-22 03:16:15.130,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:16:20.515,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select * from dblink('mx', $$\n    select \n      a.client_loginid,\n      purchase_time, \n      start_time,\n      sell_time,\n      underlying_symbol, \n      bet_class, \n      bet_type,\n      a.currency_code,\n      payout_price, \n      buy_price, \n      sell_price, \n      t.balance_after+buy_Price-sell_price as balance_before,\n      t.balance_after\n    from bet.financial_market_bet as b\n    join transaction.account as a\n    on a.id=b.account_id\n    join transaction.transaction as t\n    on t.financial_market_bet_id=b.id and t.action_type='sell'\n    where purchase_time >= '2018-01-01'\n    and purchase_time <= '2018-12-31'\n    and payout_price >= 3000\n    order by b.payout_price desc\n$$) as t(\n      client_loginid varchar,\n      purchase_time timestamp(0), \n      start_time timestamp(0),\n      sell_time timestamp(0),\n      underlying_symbol varchar, \n      bet_class varchar, \n      bet_type varchar,\n      currency_code varchar,\n      payout_price numeric, \n      buy_price numeric, \n      sell_price numeric, \n      balance_before numeric,\n      balance_after numeric\n    )""}}",,table,,False,False,584,,Large Wins_Balances,,native,,,,2019-03-22 03:16:20.515,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:16:25.878,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- IA_LargeWins_Balances_Residence\nselect * from dblink('mx', $$\n    select \n      c.loginid,\n      purchase_time, \n      start_time,\n      sell_time,\n      underlying_symbol, \n      bet_class, \n      bet_type,\n      c.residence,\n      a.currency_code,\n      payout_price, \n      buy_price, \n      sell_price, \n      t.balance_after+buy_Price-sell_price as balance_before,\n      t.balance_after\n    from bet.financial_market_bet as b\n    join transaction.account as a\n    on a.id=b.account_id\n    join betonmarkets.client as c\n    on c.loginid=a.client_loginid\n    join transaction.transaction as t\n    on t.financial_market_bet_id=b.id and t.action_type='sell'\n    where purchase_time >= '2018-01-01'\n    and purchase_time <= '2018-12-31'\n    and payout_price >= 3000\n    order by b.payout_price desc\n$$) as t(\n      client_loginid varchar,\n      purchase_time timestamp(0), \n      start_time timestamp(0),\n      sell_time timestamp(0),\n      underlying_symbol varchar, \n      bet_class varchar, \n      bet_type varchar,\n      residence varchar,\n      currency_code varchar,\n      payout_price numeric, \n      buy_price numeric, \n      sell_price numeric, \n      balance_before numeric,\n      balance_after numeric\n    )""}}",IA_LargeWins_Balances_Residence,table,,False,False,585,,Large Wins_Balances_Residence,,native,,,,2019-03-22 03:16:25.878,{}
False,,"{'id': 53, 'name': ""Ravi Guglani's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 49, 'slug': 'ravi_guglani_s_personal_collection'}",53.0,,2019-09-18 04:18:28.025,"{'email': 'ravi@binary.com', 'first_name': 'Ravi', 'last_login': '2019-10-21T06:23:20.369Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 49, 'last_name': 'Guglani', 'date_joined': '2018-12-31T08:36:28.850Z', 'common_name': 'Ravi Guglani'}",49,2,"{'native': {'query': 'select date(purchase_time) + Interval \'16 hours\' as ""Trade Date"",\nsum(buy_price) as ""Turnover""\nfrom bet.financial_market_bet \nwhere extract(minutes from expiry_time - start_time) in (1,2)\nand underlying_symbol like \'frx%\'\nand purchase_time > (CURRENT_DATE - Interval \'3 days\')::date\ngroup by date(purchase_time)\n\n\n\n'}, 'type': 'native', 'database': 2}",,bar,,False,False,1046,,Last  3 Days Turnover,,native,,"[{'name': 'Trade Date', 'display_name': 'Trade Date', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-16T16:00:00.000Z', 'latest': '2019-09-18T16:00:00.000Z'}}}}, {'name': 'Turnover', 'display_name': 'Turnover', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 923.49, 'max': 6512.53962474, 'avg': 2879.6932082466665, 'sd': 3149.2409026257965, 'q1': 993.38, 'q3': 5185.1672185550005}}}}]",,2019-09-18 04:20:07.237,"{'column_settings': {'[""ref"",[""field-literal"",""profit"",""type/Decimal""]]': {'number_style': 'currency'}}, 'series_settings': {'profit': {'color': '#EF8C8C', 'title': 'PnL'}}, 'graph.show_goal': False, 'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['profit'], 'table.pivot_column': 'Trade Date', 'table.cell_column': 'Turnover'}"
False,,"{'id': 53, 'name': ""Ravi Guglani's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 49, 'slug': 'ravi_guglani_s_personal_collection'}",53.0,,2019-09-18 04:12:38.007,"{'email': 'ravi@binary.com', 'first_name': 'Ravi', 'last_login': '2019-10-21T06:23:20.369Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 49, 'last_name': 'Guglani', 'date_joined': '2018-12-31T08:36:28.850Z', 'common_name': 'Ravi Guglani'}",49,2,"{'native': {'query': ""select date(purchase_time),\nsum(buy_price - sell_price) as Profit,\nsum(buy_price) as Turnover\nfrom bet.financial_market_bet \nwhere tick_count is NULL\nand underlying_symbol like 'frx%'\nand purchase_time > (CURRENT_DATE - INTERVAL '3 day')::date\nand purchase_time < (CURRENT_DATE + INTERVAL '1 day')::date\nand EXTRACT(EPOCH FROM (expiry_time - start_time)) <= 179\ngroup by date(purchase_time)\n\n\n\n""}, 'type': 'native', 'database': 2}",,table,,False,False,1045,,Last 3 Days PnL,,native,,"[{'name': 'date', 'display_name': 'date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-17T00:00:00.000Z', 'latest': '2019-09-20T00:00:00.000Z'}}}}, {'name': 'profit', 'display_name': 'profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1660.31566964, 'max': 1135.49055631, 'avg': -173.23397891749994, 'sd': 1147.7382772683766, 'q1': -910.64323599, 'q3': 564.1752781550001}}}}, {'name': 'turnover', 'display_name': 'turnover', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 308.33, 'max': 8087.53536524, 'avg': 4917.567544765001, 'sd': 3284.436120566371, 'q1': 2908.49481237, 'q3': 6926.640277160001}}}}]",,2019-09-20 01:54:25.454,"{'column_settings': {'[""ref"",[""field-literal"",""profit"",""type/Decimal""]]': {'number_style': 'currency'}, '[""ref"",[""field-literal"",""turnover"",""type/Decimal""]]': {'number_style': 'currency'}}, 'series_settings': {'profit': {'color': '#EF8C8C', 'title': 'PnL'}}, 'graph.show_goal': False, 'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['profit'], 'table.pivot_column': 'date', 'table.cell_column': 'profit'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-28 04:32:09.995,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\ns.""underlying_symbol"",\nsum(""total_buy_USD""-""total_sell_USD"") as ""total_buyâ€“sell_USD"",\nsum(""total_buy_USD"") as ""total_buy_USD"",\nsum(""total_sell_USD"") as ""total_sell_USD"",\nsum(""contract_count"") as ""contract_count""\nfrom \n(\nselect \nt.""underlying_symbol"",\ndata_collection.exchangetousd_rate(t.""currency_code"", t.""purch_time"")*t.""total_buy"" as ""total_buy_USD"",\ndata_collection.exchangetousd_rate(t.""currency_code"", t.""purch_time"")*t.""total_sell"" as ""total_sell_USD"",\nt.""contract_count""\nfrom\n(\nselect\n  ta.currency_code,\n  fmb.underlying_symbol,\n  sum(fmb.buy_price) as ""total_buy"",\n  sum(fmb.sell_price) as ""total_sell"",\n  count(1) as ""contract_count"",\n  min(fmb.purchase_time) as ""purch_time""\nfrom only bet.financial_market_bet fmb left join transaction.account ta\non ta.id=fmb.account_id\nwhere purchase_time >= now() + interval \'-6 hours\' \ngroup by 1,2\norder by 3 desc\n) t\n) s\nwhere substr(underlying_symbol,1,1) = {{inclusion_string}}\ngroup by 1\norder by 2\n--limit 20', 'template-tags': {'inclusion_string': {'id': 'e165bd0e-7016-b2da-6bf9-fd2c638d8f7e', 'name': 'inclusion_string', 'display-name': 'Choose f, R, W, or O', 'type': 'text', 'required': True, 'default': 'f'}}}}",,table,,False,False,423,,Last 6 hours (CR),,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 26, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.0}}}}, {'name': 'total_buyâ€“sell_USD', 'display_name': 'Total Buyâ€“sell Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 26, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1192.2987876, 'max': 1009.397538788981, 'avg': 5.000454758655241, 'sd': 450.4391296052527, 'q1': -112.9138205, 'q3': 123.863476}}}}, {'name': 'total_buy_USD', 'display_name': 'Total Buy Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 26, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.5, 'max': 7342.80745660914, 'avg': 1268.26148589741, 'sd': 1795.0326719872755, 'q1': 126.69067, 'q3': 2122.95980595}}}}, {'name': 'total_sell_USD', 'display_name': 'Total Sell Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 26, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 6333.409917820159, 'avg': 1263.2610311387548, 'sd': 1671.3545971055644, 'q1': 123.16604224266, 'q3': 2319.714455851745}}}}, {'name': 'contract_count', 'display_name': 'Contract Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 25, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 637.0, 'avg': 118.46153846153847, 'sd': 165.02102430156728, 'q1': 27.0, 'q3': 96.0}}}}]",,2019-05-16 06:02:24.129,"{'table.pivot_column': 'underlying_symbol', 'table.cell_column': 'total_buyâ€“sell_USD'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:28:58.141,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT staff_loginid, MAX(transaction_time)\nFROM transaction.transaction\nWHERE action_type = 'buy'\nGROUP BY staff_loginid""}}",,table,,False,False,656,,Last Transaction Date for each client,,native,,,,2019-03-22 03:28:58.141,{}
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-10-03 07:49:59.450,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select max(transaction_time) from transaction.transaction'}}",,scalar,,False,False,1054,,Last transaction time,,native,,"[{'name': 'max', 'display_name': 'max', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-03T07:50:12.177Z', 'latest': '2019-10-03T07:50:12.177Z'}}}}]",,2019-10-03 07:50:40.045,"{'column_settings': {'[""ref"",[""field-literal"",""max"",""type/DateTime""]]': {'time_style': 'k:mm', 'date_style': 'D MMMM, YYYY'}}}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:16:51.201,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select trade_id, order_id,\ttrade_time,\tmaker_side,\ttaker_requested_volume,\tmaker_filled_volume,\tcore_symbol,\ttaker_requested_price,\tmaker_executed_price,\ntaker_executed_price,\ttaker_order_id,\ttaker_mt_order_type,\ttaker_avg_executed_price,\tcore_order_side,\tcore_order_type,\tcore_created_time,\tmaker_name,\ntrade_status,\ttaker_mt_group,\ttaker_spread,\tmaker_execution_duration,\tusd_amount,\tmaker_ccy2_amount,\ttaker_ccy2_amount,\torder_reject_reason,\nmtd.deal,\tmtd.timestamp, mtd.login,\tmtd.order,\tmtd.price,\tmtd.volume,\tmtd.profit,\tmtd.storage,\tmtd.comment,\tmtd.pricegateway\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nfrom mt5.oz_trades_view ozt\nJoin mt5.mt5_deals_2018 mtd ON mtd.deal = CAST(REPLACE(taker_order_id, '-D', '') AS int)\nWhere ozt.taker_order_id like '%-D'\nand ozt.order_result = 1 -- Order Aprooved\nand ozt.trade_status = 2 -- Trade Filled\nand ozt.core_order_side IN (1,2) -- 1 is Buy and 2 is Sell\nand date(ozt.trade_time) > '2018-09-01'\n--and date(mtd.time) > '2018-09-01'\n-- Maker Side: 1 is Buy and 2 is Sell\n-- trades for Month of september/october took 2 minutes and got 45083 rows""}}",,table,,False,False,586,,Link OZ DB with MT5 Backup DB,,native,,,,2019-03-22 03:16:51.201,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:16:59.182,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT * FROM betonmarkets.self_exclusion\n'}}",,table,,False,False,587,,List all self exclusions,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Login ID', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6742, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.973297730307076}}}}, {'name': 'max_balance', 'display_name': 'Max Balance', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 171, 'nil%': 0.794985907135439}, 'type': {'type/Number': {'min': 0.0, 'max': 1e+20, 'avg': 7.279820668283379e+17, 'sd': 8.248014871420425e+18, 'q1': 2620.6490434811208, 'q3': 274619.09693790204}}}}, {'name': 'max_turnover', 'display_name': 'Max Turnover', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 170, 'nil%': 0.7810413885180241}, 'type': {'type/Number': {'min': 0.0, 'max': 1e+20, 'avg': 7.599755940496362e+17, 'sd': 8.330914209012112e+18, 'q1': 293.4636396475248, 'q3': 52844.38775510204}}}}, {'name': 'max_open_bets', 'display_name': 'Max Open Bets', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 88, 'nil%': 0.438213914849428}, 'type': {'type/Number': {'min': 0.0, 'max': 99999999.0, 'avg': 31186.499603908105, 'sd': 1634035.355493758, 'q1': 3.554371273421058, 'q3': 9.617909898962262}}}}, {'name': 'exclude_until', 'display_name': 'Exclude Until', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 376, 'nil%': 0.9310191366266131}, 'type': {'type/DateTime': {'earliest': '2007-01-10T00:00:00.000Z', 'latest': '2024-03-14T00:00:00.000Z'}}}}, {'name': 'session_duration_limit', 'display_name': 'Session Duration Limit', 'base_type': 'type/Integer', 'special_type': 'type/Duration', 'fingerprint': {'global': {'distinct-count': 94, 'nil%': 0.8937843049992581}, 'type': {'type/Number': {'min': 0.0, 'max': 60480.0, 'avg': 3039.4539106145253, 'sd': 10644.882536849987, 'q1': 19.61150696702242, 'q3': 608.7068006749893}}}}, {'name': 'last_modified_date', 'display_name': 'Last Modified Date', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6698, 'nil%': 0.005488799881323001}, 'type': {'type/DateTime': {'earliest': '2010-05-08T09:23:29.000Z', 'latest': '2019-03-22T01:05:58.000Z'}}}}, {'name': 'max_losses', 'display_name': 'Max Losses', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 188, 'nil%': 0.34712950600801}}}, {'name': 'max_7day_turnover', 'display_name': 'Max 7day Turnover', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 161, 'nil%': 0.880284824210057}}}, {'name': 'max_7day_losses', 'display_name': 'Max 7day Losses', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 172, 'nil%': 0.8678237650200261}}}, {'name': 'max_30day_turnover', 'display_name': 'Max 30day Turnover', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 166, 'nil%': 0.8948227265984271}}}, {'name': 'max_30day_losses', 'display_name': 'Max 30day Losses', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 161, 'nil%': 0.8911140780299651}}}, {'name': 'timeout_until', 'display_name': 'Time Out Until', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 225, 'nil%': 0.9667705088265831}}}]",,2019-03-22 03:16:59.182,{}
False,,,,,2019-02-20 15:18:56.602,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select date(to_timestamp(daily.""Datetime"")) AS Date_, daily.""Group"" AS Group_, ""Login"", SUM(daily.""Balance"") AS Total_Negative_Balance\nFROM mt5_daily_2019 daily\nWhere daily.""BalancePrevDay"" > 0\nand daily.""Balance"" < 0\nand daily.""ProfitEquity"" < 0\nand daily.""Profit"" = 0\nand (daily.""Group"" LIKE \'%costarica%\' OR daily.""Group"" LIKE \'%malta\')\nGroup By date(to_timestamp(daily.""Datetime"")) , daily.""Group"", ""Login""'}}",The accounts for that day which ended into negative Balance,table,,False,False,406,,List of accounts that ended with negative balance,,native,,"[{'name': 'date_', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 45, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-03-16T00:00:00.000Z'}}}}, {'name': 'group_', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 13.971428571428572}}}}, {'name': 'Login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 131, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5492.0, 'max': 192475.0, 'avg': 126844.00714285714, 'sd': 54596.70700646033, 'q1': 89094.0105961276, 'q3': 167276.66244620187}}}}, {'name': 'total_negative_balance', 'display_name': 'Total Negative Balance', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 104, 'nil%': 0.0}, 'type': {'type/Number': {'min': -46.4, 'max': -0.01, 'avg': -2.352214285714285, 'sd': 6.03561057521952, 'q1': -1.845, 'q3': -0.18444994432064302}}}}]",,2019-04-03 07:49:16.194,"{'table.pivot_column': 'Login', 'table.cell_column': 'client_with_negative_balance', 'column_settings': {'[""name"",""date_""]': {'date_abbreviate': True, 'date_style': 'D MMMM, YYYY'}}}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:17:04.548,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- IA_List of MX Clients_with residence_total deposit amount\nselect * from \ndblink('mx',$$\n    select \n       c.loginid, \n       c.residence, \n       c.date_joined, \n       d.currency_code, \n       d.total_deposited\n    from betonmarkets.client as c\n    join\n        (select \n             a.client_loginid, \n             a.currency_code, \n             sum(t.amount) as total_deposited\n        from transaction.transaction as t\n        join transaction.account as a\n        on a.id=t.account_id\n        where t.transaction_time between '2018-01-01' and '2018-12-31'\n        and action_type='deposit'\n        group by a.client_loginid, a.currency_code\n    ) as d\n    on c.loginid=d.client_loginid\n$$) as t (\n    loginid varchar, \n    residence varchar, \n    date_joined timestamp(0), \n    currency_code varchar, \n    total_deposited numeric\n)""}}",IA_List of MX Clients_with residence_total deposit amount,table,,False,False,588,,List of MX Clients_with residence_total deposit amount,,native,,,,2019-03-22 03:17:04.548,{}
False,,,,,2018-11-16 07:59:02.380,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,7,"{'database': 7, 'type': 'query', 'query': {'source-table': 619, 'breakout': [['field-id', 5306], ['datetime-field', ['field-id', 5309], 'month']], 'aggregation': [['count']]}}",,table,,False,False,38,,"Login Count, Grouped by IP and History Date (month)",,query,,,619.0,2018-11-16 07:59:02.380,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:17:10.107,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- To track clients CR account by their MT5 LoginID\n-- Client Management > Login ID of MT5 financial account holders\n-- enter one or more mt5 id numbers separated by a comma\nWITH param AS (SELECT unnest(array[\n5437,5569,5582,5685,5565,6182,\n6381,6397,6503,6506,6597,6600,\n6666,6708,6747,6847,6887,7324,\n7335,7473,7549,7597,7894,8100,\n8103,8120,8216,8278,8332,8342,\n8619,8653,8666,8778,9024,9248,\n9350,9475,9785\n]) AS id)\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT\n   mt5u.""Login"",\n   mt5u.""Group"",\n   mt5u.""Registration"" AS ""Datejoined_MT5"",\n   mt5u.""MQID"" AS ""Real/Vanuatu login ID"",\n   bc.loginid,\n   bc.first_name AS ""First name"",\n   bc.last_name AS ""Last name"",\n   bc.residence AS ""Residence""\nFROM\n   param\nJOIN\n   mt5.mt5_users mt5u\nON param.""id"" = mt5u.""Login""\nJOIN\n   users.loginid ul\nON (\'MT\'|| mt5u.""Login""::TEXT) = ul.loginid\nJOIN\n   users.loginid crul\nON ul.binary_user_id=crul.binary_user_id\nAND crul.loginid LIKE \'CR%\'\nJOIN\n   betonmarkets.client_cr bc\nON bc.loginid = crul.loginid;'}}",To track clients CR account by their MT5 LoginID,table,,False,False,589,,Login ID of MT5 financial account holders,,native,,,,2019-03-22 03:17:10.107,{}
False,,"{'id': 41, 'name': ""Tony Cini's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 42, 'slug': 'tony_cini_s_personal_collection'}",41.0,,2019-02-22 11:12:23.158,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT deals.""Login"" AS Login, users.""Group"" AS Maltainvest_Group, \r\ndeals.""Time"" AS Transaction_Time, \r\ndeals.""Symbol"" AS Symbol,\r\ndeals.""Entry"" AS Open_Trade_0_and_Close_Trade_1, \r\ndeals.""Action"" AS BUY_Trade_0_and_SELL_Trade_1,\r\n(deals.""Volume""/10000) AS Volume_in_lots, \r\ndeals.""Profit"" AS Profit, deals.""Storage"" AS Swaps\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users users ON deals.""Login"" = users.""Login""\r\nWhere deals.""Symbol"" IN (\'DAX_30\')\r\nand users.""Group"" LIKE \'%maltainvest%\'\r\nand deals.""Action"" IN (0,1)\r\nand date(deals.""Time"") = {{Time}}', 'template-tags': {'Time': {'id': 'c3fb1c2a-173e-4da0-da37-a18ff842b764', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': True, 'default': '2019-02-22'}}}}",,table,,False,False,408,42.0,Market Abuse Regulations - MF Clients trading DAX,677a4b67-93d4-4b77-b1e3-fc8bd84c694d,native,,"[{'name': 'login', 'display_name': 'Login', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'maltainvest_group', 'display_name': 'Malta Invest Group', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'transaction_time', 'display_name': 'Transaction Time', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'symbol', 'display_name': 'Symbol', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'open_trade_0_and_close_trade_1', 'display_name': 'Open Trade 0 And Close Trade 1', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'buy_trade_0_and_sell_trade_1', 'display_name': 'Buy Trade 0 And Sell Trade 1', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'volume_in_lots', 'display_name': 'Volume In Lots', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'profit', 'display_name': 'Profit', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'swaps', 'display_name': 'Swaps', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-27 20:09:11.030,"{'table.pivot_column': 'login', 'table.cell_column': 'login'}"
False,,"{'id': 88, 'name': ""Mustofa Ghaleb Amami's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 65, 'slug': 'mustofa_ghaleb_amami_s_personal_collection'}",88.0,,2019-03-06 08:26:43.510,"{'email': 'mustofa@binary.com', 'first_name': 'Mustofa Ghaleb', 'last_login': '2019-05-23T06:57:46.611Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 65, 'last_name': 'Amami', 'date_joined': '2019-03-01T07:39:44.498Z', 'common_name': 'Mustofa Ghaleb Amami'}",65,2,"{'database': 2, 'type': 'native', 'native': {'query': ""--select count(market), market from bet.market group by market limit 8\n--select symbol, market from bet.market where market='volidx' limit 10\nwith symbols (s_value, s_name) as (\nvalues \n    ('volidx', 'Volatility Indices'),\n    ('forex', 'Forex'),\n    ('commodities', 'Commodities'),\n    ('indices', 'Indices')\n)\n\nselect s.s_name, count(f.underlying_symbol)\nfrom bet.financial_market_bet as f inner join bet.market as m on f.underlying_symbol = m.symbol inner join symbols as s on m.market = s.s_value\nwhere f.purchase_time >= now() - interval '7d'\ngroup by m.market, s.s_name\norder by count(f.underlying_symbol) desc, s.s_name asc\nlimit 5""}}",bar chart,bar,,False,False,451,,market transaction in a week,,native,,"[{'name': 's_name', 'display_name': 's_name', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 10.25}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 369.0, 'max': 6422609.0, 'avg': 1639603.75, 'sd': 3189278.8287591888, 'q1': 1214.5, 'q3': 3277993.0}}}}]",,2019-10-10 05:33:08.131,"{'graph.dimensions': ['s_name'], 'graph.metrics': ['count']}"
False,,"{'id': 88, 'name': ""Mustofa Ghaleb Amami's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 65, 'slug': 'mustofa_ghaleb_amami_s_personal_collection'}",88.0,,2019-03-06 08:59:00.919,"{'email': 'mustofa@binary.com', 'first_name': 'Mustofa Ghaleb', 'last_login': '2019-05-23T06:57:46.611Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 65, 'last_name': 'Amami', 'date_joined': '2019-03-01T07:39:44.498Z', 'common_name': 'Mustofa Ghaleb Amami'}",65,2,"{'database': 2, 'type': 'native', 'native': {'query': ""--select count(market), market from bet.market group by market limit 8\n--select symbol, market from bet.market where market='volidx' limit 10\n\nselect m.market, count(f.underlying_symbol)\nfrom bet.financial_market_bet as f inner join bet.market as m on f.underlying_symbol = m.symbol\nwhere f.purchase_time >= now() - interval '7d'\ngroup by m.market\norder by count(f.underlying_symbol) desc, m.market asc\nlimit 5""}}",pie chart,pie,,False,False,453,,market transaction in a week (CR),,native,,"[{'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.25}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 369.0, 'max': 6422609.0, 'avg': 1639603.75, 'sd': 3189278.8287591888, 'q1': 1214.5, 'q3': 3277993.0}}}}]",,2019-10-10 05:33:08.131,"{'graph.dimensions': ['market'], 'graph.metrics': ['count'], 'pie.slice_threshold': 0, 'pie.show_legend': True}"
False,,"{'id': 193, 'name': 'Marketing', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'marketing'}",193.0,,2019-04-09 09:43:47.502,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Marketing > Affiliate payment (rewards) in BOM\n-- Marketing > Affiliate payment (rewards) in BOM\nWITH param as (\n    SELECT\n        -- Start date\n        '2015-03-01'::TIMESTAMP as start_date,\n        \n        -- End date\n        '2015-04-15'::TIMESTAMP as end_date\n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM affiliate_payment(\n    (SELECT start_date FROM param)::timestamp,\n    (SELECT end_date FROM param)::timestamp\n    )\n    \n""}}",Marketing > Affiliate payment (rewards) in BOM,table,,False,False,920,,Marketing Affiliate payment (rewards) in BOM,,native,,,,2019-04-09 09:43:47.502,{}
False,,"{'id': 193, 'name': 'Marketing', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'marketing'}",193.0,,2019-04-09 09:44:22.335,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Marketing > Clients Bonus And Affiliate Token\nWITH param as (\n    SELECT\n        -- Multiple login IDs separated by comma\n        'CR287261, CR287260'::VARCHAR as login_ids\n)\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT d.*\nFROM betonmarkets.production_servers_v2() AS ps\nCROSS JOIN fdw.client_bonus_affiliate_token_on(ps.srvname,\n    (SELECT login_ids FROM param)::varchar\n    ) AS d\n""}}",Marketing > Clients Bonus And Affiliate Token,table,,False,False,930,,Marketing Clients Bonus And Affiliate Token,,native,,,,2019-04-09 09:44:22.335,{}
False,,"{'id': 193, 'name': 'Marketing', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'marketing'}",193.0,,2019-04-09 09:43:40.795,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Marketing > Current Registered MyAffiliates Token\n-- Marketing > Current Registered MyAffiliates Token\n-- No parameter required\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM current_registered_myaffiliates_token\n'}}",Marketing > Current Registered MyAffiliates Token,table,,False,False,918,,Marketing Current Registered MyAffiliates Token,,native,,,,2019-04-09 09:43:40.795,{}
False,,"{'id': 193, 'name': 'Marketing', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'marketing'}",193.0,,2019-04-09 09:44:11.635,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Marketing > Find Client by Email who matches Signup Date\n-- Marketing > Find Client by Email who matches Signup Date\nWITH param as (\n    SELECT\n        -- Multiple emails separated by comma\n        'teo@regentmarkets.com, teo2@regentmarkets.com'::VARCHAR as email,\n        \n        -- Start date\n        '2015-03-01'::TIMESTAMP as start_date,\n        \n        -- End date\n        '2015-04-15'::TIMESTAMP as end_date,\n        \n        -- Account type [VR%, CR%, MX%, MLT% or % for all]\n        'VR%'::VARCHAR as acc_prefix\n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM client_by_email_signup_date(\n    (SELECT email FROM param)::varchar,\n    (SELECT start_date FROM param)::timestamp,\n    (SELECT end_date FROM param)::timestamp\n    ) WHERE loginid LIKE (SELECT acc_prefix from param)""}}",Marketing > Find Client by Email who matches Signup Date,table,,False,False,927,,Marketing Find Client by Email who matches Signup Date,,native,,,,2019-04-09 09:44:11.635,{}
False,,"{'id': 193, 'name': 'Marketing', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'marketing'}",193.0,,2019-04-09 09:43:57.709,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Marketing > Find Clients by Emails\n-- Marketing > Find Clients by Emails\nWITH param as (\n    SELECT\n        -- Multiple emails separated by comma\n        'teo@regentmarkets.com, teo2@regentmarkets.com'::VARCHAR as email,\n        \n        -- Start date\n        '2015-04-07'::TIMESTAMP as start_date,\n        \n        -- End date\n        '2015-04-14'::TIMESTAMP as end_date\n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM client_by_email(\n    (SELECT email FROM param)::varchar,\n    (SELECT start_date FROM param)::timestamp,\n    (SELECT end_date FROM param)::timestamp\n    )\n""}}",Marketing > Find Clients by Emails,table,,False,False,923,,Marketing Find Clients by Emails,,native,,,,2019-04-09 09:43:57.709,{}
False,,"{'id': 193, 'name': 'Marketing', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'marketing'}",193.0,,2019-04-09 09:43:54.380,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- (as of 08/23/2016) loginid, first name, lastname\n-- Marketing > Find Disabled Clients by Emails (no dates)\nWITH param as (\n    SELECT\n        -- Multiple emails separated by comma\n        'teo@regentmarkets.com, teo2@regentmarkets.com'::VARCHAR as email\n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM disabled_client_by_email( (SELECT email FROM param)::varchar )""}}","(as of 08/23/2016) loginid, first name, lastname",table,,False,False,922,,Marketing Find Disabled Clients by Emails (no dates),,native,,,,2019-04-09 09:43:54.380,{}
False,,"{'id': 193, 'name': 'Marketing', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'marketing'}",193.0,,2019-04-09 09:44:08.316,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Marketing > Find Emails Funded Amount Date Joined By LoginID\nWITH param as (\n    SELECT\n        -- Multiple login IDs separated by comma\n        'CR287260, CR287261'::VARCHAR as login_ids\n)\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT d.* FROM betonmarkets.production_servers() AS ps, fdw.get_email_funded_amount_date_joined_by_loginid_on(ps.srvname,\n    (SELECT login_ids FROM param)::varchar\n    ) AS d\n""}}",Marketing > Find Emails Funded Amount Date Joined By LoginID,table,,False,False,926,,Marketing Find Emails Funded Amount Date Joined By LoginID,,native,,,,2019-04-09 09:44:08.316,{}
False,,"{'id': 193, 'name': 'Marketing', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'marketing'}",193.0,,2019-04-09 09:43:50.790,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Marketing > MyAffiliates Commission\n-- Marketing > MyAffiliates Commission\nWITH param as (\n    SELECT\n    -- Start date\n        '2015-03-01'::TIMESTAMP as start_date\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT id, affiliate_userid::text, affiliate_username, effective_date, intraday_turnover, runbet_turnover,\n    other_turnover, pnl, effective_pnl_for_commission, carry_over_to_next_month, commission\n    FROM myaffiliate_monthly_commission(\n    (SELECT start_date FROM param)::timestamp\n    )\n    \n\n\n""}}",Marketing > MyAffiliates Commission,table,,False,False,921,,Marketing MyAffiliates Commission,,native,,,,2019-04-09 09:43:50.790,{}
False,,"{'id': 193, 'name': 'Marketing', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'marketing'}",193.0,,2019-04-09 09:43:44.138,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Marketing > Number of first time funded accounts\nWITH param as (\n    SELECT\n        -- CR, MX, MLT or MF\n        'MF'::VARCHAR as broker_code,\n        \n        -- Start date\n        '2015-05-01'::TIMESTAMP as start_date,\n        \n        -- End date\n        '2015-06-15'::TIMESTAMP as end_date\n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_first_time_funded_accounts(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT start_date FROM param)::timestamp,\n    (SELECT end_date FROM param)::timestamp\n    )\n\n""}}",Marketing > Number of first time funded accounts,table,,False,False,919,,Marketing Number of first time funded accounts,,native,,,,2019-04-09 09:43:44.138,{}
False,,"{'id': 193, 'name': 'Marketing', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'marketing'}",193.0,,2019-04-09 09:44:04.768,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Marketing > Number of first time funded accounts by country\nWITH param as (\n    SELECT\n        -- CR, MX, MLT or MF\n        'CR'::VARCHAR as broker_code,\n        \n        -- Start date\n        '2015-01-01'::TIMESTAMP as start_date,\n        \n        -- End date\n        '2015-06-15'::TIMESTAMP as end_date,\n\n        -- 2 character country ISO code. E.g. id, ru, etc. Reference: https://countrycode.org\n        'ru'::VARCHAR as country\n        \n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_first_time_funded_accounts_by_country(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT start_date FROM param)::timestamp,\n    (SELECT end_date FROM param)::timestamp,\n    (SELECT country FROM param)::varchar\n    )\n\n""}}",Marketing > Number of first time funded accounts by country,table,,False,False,925,,Marketing Number of first time funded accounts by country,,native,,,,2019-04-09 09:44:04.768,{}
False,,"{'id': 193, 'name': 'Marketing', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'marketing'}",193.0,,2019-04-09 09:43:37.163,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- v2\n-- Marketing > OAuth apps developers\n-- This report will provide the app_id of the party responsible for the client signup.\n-- Along with the app_id, it will provide certain particulars from oauth.apps, the binary_user.email, app\'s client loginids and name\n\nWITH params AS (SELECT\n-- By default, the results will omit ""developers"" whose email address matches the ones in the list below.\n-- Remove any you don\'t want filtered.\n-- For example \'{}\'::TEXT[] will not filter anything.\n-- You can also add other domains like %@firstsource.io\n-- Use a comman to separate entries.\n  \'{%@regentmarkets.com,%@binary.com,%@betonmarkets.com}\'::TEXT[] AS filter_these_out\n)\n\n\n\n\n\nSELECT * FROM public.oauth_apps ((SELECT filter_these_out FROM params));\n'}}",v2,table,,False,False,917,,Marketing OAuth apps developers,,native,,,,2019-04-09 09:43:37.163,{}
False,,"{'id': 193, 'name': 'Marketing', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'marketing'}",193.0,,2019-04-09 09:44:18.775,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Marketing > PnL for interval by affiliate userid\nWITH params AS (SELECT\n  1049::BIGINT AS myaffiliate_userid,\n  '2017-05-01'::DATE AS start_date,\n  '2017-05-31'::DATE AS end_date\n)\n\n\n\n\n\n\n\n-- Do not change any code below here\n\n,tk AS (\n  SELECT tokens\n  FROM params\n  CROSS JOIN dblink('dc', $$\n    SELECT string_agg(token, ',') AS tokens\n    FROM data_collection.myaffiliates_token_details WHERE user_id = $$|| params.myaffiliate_userid ||$$\n  $$) d(tokens TEXT)\n)\n\nSELECT dbl.*\nFROM params\nCROSS JOIN tk\nCROSS JOIN betonmarkets.production_servers() ps\nCROSS JOIN LATERAL dblink(ps.srvname, $$\n  SELECT bc.loginid, sum(fmb.buy_price - fmb.sell_price) AS pnl\n  FROM betonmarkets.client bc\n  JOIN transaction.account ta ON ta.client_loginid = bc.loginid\n  JOIN ONLY bet.financial_market_bet fmb ON fmb.account_id = ta.id\n  WHERE bc.myaffiliates_token = ANY ('{$$|| tk.tokens ||$$}'::VARCHAR[])\n  AND fmb.sell_time >= $$|| quote_literal( params.start_date ) ||$$::TIMESTAMP\n  AND fmb.sell_time  < $$|| quote_literal( params.end_date   ) ||$$::TIMESTAMP + '1 day'::INTERVAL\n  GROUP BY bc.loginid\n$$) dbl(loginid VARCHAR, pnl NUMERIC)\n""}}",Marketing > PnL for interval by affiliate userid,table,,False,False,929,,Marketing PnL for interval by affiliate userid,,native,,,,2019-04-09 09:44:18.775,{}
False,,"{'id': 193, 'name': 'Marketing', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'marketing'}",193.0,,2019-04-09 09:44:15.407,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- PnL converted to USD\n-- Marketing > PnL for interval by affiliate userid - v2\nWITH params AS (SELECT\n  108920::BIGINT AS myaffiliate_userid,\n  '2017-06-01'::DATE AS start_date,\n  '2017-06-30'::DATE AS end_date\n)\n\n,tk AS (\n  SELECT tokens\n  FROM params\n  CROSS JOIN dblink('dc', $$\n    SELECT string_agg(token, ',') AS tokens\n    FROM data_collection.myaffiliates_token_details WHERE user_id = $$|| params.myaffiliate_userid ||$$\n  $$) d(tokens TEXT)\n),\ndetails AS (\n\nSELECT dbl.*\nFROM params\nCROSS JOIN tk\nCROSS JOIN betonmarkets.production_servers() ps\nCROSS JOIN LATERAL dblink(ps.srvname, $$\n    SELECT\n        c.loginid,\n        c.myaffiliates_token,\n        date_trunc('month', t.transaction_time)::DATE AS effective_date,\n\n        round( COALESCE( SUM(round(-exch.rate * t.amount, 4)) FILTER (\n                WHERE t.action_type = 'buy'\n                AND (b.expiry_time - b.start_time) < INTERVAL '1 day'\n                AND b.tick_count IS NULL\n            ), 0), 2) AS intraday_turnover,\n\n        round( COALESCE( SUM(round(-exch.rate * t.amount, 4)) FILTER (\n                WHERE t.action_type = 'buy'\n                AND b.tick_count IS NOT NULL\n            ), 0), 2) AS runbet_turnover,\n\n        round( COALESCE( SUM(round(-exch.rate * t.amount, 4)) FILTER (\n                WHERE t.action_type = 'buy'\n                AND (b.expiry_time - b.start_time) >= INTERVAL '1 day'\n                AND b.tick_count IS NULL\n            ), 0), 2) AS other_turnover,\n\n        round( COALESCE( SUM(round(exch.rate * (b.buy_price - b.sell_price), 4)) FILTER (\n                WHERE t.action_type = 'sell'\n            ), 0), 2) AS pnl\n\n    FROM\n        betonmarkets.client c\n    JOIN\n        transaction.account a ON c.loginid = a.client_loginid\n    JOIN\n        transaction.transaction t ON t.account_id = a.id\n    JOIN\n        bet.financial_market_bet b ON b.id = t.financial_market_bet_id\n        \n    LEFT JOIN data_collection.exchangetousd_rate(a.currency_code, t.transaction_time) exch(rate) ON true\n    WHERE\n        c.myaffiliates_token = ANY ('{$$|| tk.tokens ||$$}'::VARCHAR[])\n        AND t.transaction_time >= $$|| quote_literal( params.start_date ) ||$$::TIMESTAMP\n        AND t.transaction_time < $$|| quote_literal( params.end_date   ) ||$$::TIMESTAMP + '1 day'::INTERVAL\n    GROUP BY\n        1, 2, 3\n$$) dbl(loginid VARCHAR, myaffiliates_token TEXT, effective_date DATE, intraday_turnover NUMERIC, runbet_turnover NUMERIC, other_turnover NUMERIC, pnl NUMERIC)\n)\nSELECT * FROM details\nUNION ALL\nSELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL\nUNION ALL\nSELECT 'Totals',NULL,NULL, SUM(intraday_turnover), SUM(runbet_turnover), SUM(other_turnover), SUM(pnl) FROM details""}}",PnL converted to USD,table,,False,False,928,,Marketing PnL for interval by affiliate userid - v2,,native,,,,2019-04-09 09:44:15.407,{}
False,,"{'id': 193, 'name': 'Marketing', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'marketing'}",193.0,,2019-04-09 09:44:01.227,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Marketing > temp Affiliates analysis\nSELECT user_id AS myaff_user_id, username AS myaff_username, email AS myaff_email,\nSUM(ata.turnover_intradays) AS turnover_intradays,\nsum(ata.bet_count) AS bet_cnt\nFROM test.aff_token_analysis_v3 AS ata\nCROSS JOIN dblink('dc', $$\n  SELECT mtd.user_id, mtd.username, mtd.email, mtd.stamp\n  FROM data_collection.myaffiliates_token_details AS mtd\n  WHERE mtd.token= $$|| quote_literal(ata.myaffiliates_token) ||$$\n$$) AS dbl (user_id text, username VARCHAR, email VARCHAR, stamp TIMESTAMP)\nGROUP BY 1,2,3\nORDER BY SUM(ata.turnover_intradays)""}}",Marketing > temp Affiliates analysis,table,,False,False,924,,Marketing temp Affiliates analysis,,native,,,,2019-04-09 09:44:01.227,{}
False,,,,,2019-01-24 03:40:26.737,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \ntmp2.""purchase_date"",\n  --percentile_cont(0.25) within group (order by total_buy_usd asc) as perc_25_buy,\n  percentile_cont(0.50) within group (order by total_buy_usd asc) as median_total_buy_usd,\n  --percentile_cont(0.75) within group (order by total_buy_usd asc) as percentile_75,\n  --percentile_cont(0.95) within group (order by total_buy_usd asc) as percentile_95,\n  avg(total_buy_usd) as ""mean_total_buy_USD""\nfrom\n(\nselect\n  tmp.""purchase_date"",\n  tmp.""account_id"",\n  tmp.""total_buy"" * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date"") as ""total_buy_usd"",\n  tmp.""total_sell"" * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date"") as ""total_sell_usd""\n\n  --ta.currency_code,\n  --data_collection.exchangetousd_rate(ta.currency_code, tmp.purchase_date) as ""exchange_rate"" \nfrom\n(\nselect\n  purchase_time::date as ""purchase_date"",\n  account_id,\n  sum(buy_price) as ""total_buy"",\n  sum(sell_price) as ""total_sell""\nfrom bet.financial_market_bet \nwhere purchase_time >= (now() + interval \'-7d\')::date\nand purchase_time < now()::date\ngroup by 1,2\n) tmp left join transaction.account ta\non ta.id = tmp.account_id\n) tmp2\ngroup by 1\norder by 1 desc'}}",,line,,False,False,221,,Mean versus median client turnover (CR only),,native,,"[{'name': 'purchase_date', 'display_name': 'Purchase Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-11T00:00:00.000Z', 'latest': '2019-02-17T00:00:00.000Z'}}}}, {'name': 'median_total_buy_usd', 'display_name': 'Median Total Buy Usd', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 48.72, 'max': 81.655, 'avg': 60.742142857142866, 'sd': 12.250421372733422, 'q1': 52.74875, 'q3': 69.98625}}}}, {'name': 'mean_total_buy_USD', 'display_name': 'Mean Total Buy Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 476.3806489101038, 'max': 612.374630572387, 'avg': 542.3436490438917, 'sd': 40.21186473579566, 'q1': 530.4873422277403, 'q3': 552.4374732465227}}}}]",,2019-02-18 09:16:24.440,"{'graph.dimensions': ['purchase_date'], 'graph.metrics': ['median_total_buy_usd', 'mean_total_buy_USD']}"
False,,"{'id': 39, 'name': ""Eric Lopes's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 40, 'slug': 'eric_lopes_s_personal_collection'}",39.0,,2019-09-04 07:27:17.347,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,19,"{'native': {'query': 'select context, started_at::date, count(*)\nfrom query_execution \ngroup by context, started_at::date'}, 'type': 'native', 'database': 19}",,line,,False,False,1036,,metabase: usage over time,,native,,"[{'name': 'context', 'display_name': 'context', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 9.162835249042146}}}}, {'name': 'started_at', 'display_name': 'started_at', 'base_type': 'type/Date', 'special_type': 'type/CreationDate', 'fingerprint': {'global': {'distinct-count': 278, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2018-11-28T00:00:00.000Z', 'latest': '2019-09-04T00:00:00.000Z'}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 366, 'nil%': 0}, 'type': {'type/Number': {'min': 1, 'max': 6048, 'avg': 191.8735632183908, 'sd': 364.57942351433877, 'q1': 18.74134195154502, 'q3': 170.90320491738106}}}}]",,2019-09-04 07:27:17.347,"{'graph.dimensions': ['started_at', 'context'], 'graph.metrics': ['count'], 'graph.y_axis.scale': 'linear', 'graph.y_axis.axis_enabled': True}"
False,,"{'id': 73, 'name': ""Dwi Hadyan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 53, 'slug': 'dwi_hadyan_s_personal_collection'}",73.0,,2019-01-25 04:06:52.607,"{'email': 'dwi@binary.com', 'first_name': 'Dwi', 'last_login': '2019-06-21T06:57:40.046Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 53, 'last_name': 'Hadyan', 'date_joined': '2019-01-24T02:54:53.692Z', 'common_name': 'Dwi Hadyan'}",53,4,"{'database': 4, 'type': 'native', 'native': {'query': ""select  date_joined::timestamp::date, count(loginid) \nfrom betonmarkets.client\nwhere date_joined::timestamp::date = now()::timestamp::date \nOR date_joined::timestamp::date = (now() - interval '1 days')::timestamp::date\nGROUP BY 1\nORDER BY 1 asc;""}}",48 European & UK Countries (Forex),smartscalar,,False,False,229,,MF Client Sign Up,,native,,"[{'name': 'date_joined', 'display_name': 'Date Joined', 'base_type': 'type/Date', 'special_type': 'type/JoinDate', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-06-30T00:00:00.000Z', 'latest': '2019-07-01T00:00:00.000Z'}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 4.0, 'avg': 3.0, 'sd': 1.414213562373095, 'q1': 2.0, 'q3': 4.0}}}}]",,2019-07-01 05:17:27.539,"{'series_settings': {'Count': {'color': '#F2A86F'}}, 'graph.dimensions': ['date_joined'], 'graph.metrics': ['count'], 'scalar.switch_positive_negative': False}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:17:15.781,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- MF -> Maltese Financial Authorities -> Fincancial Assessment\n\nSELECT\n\n    mf.loginid,\n    mf.other_derivatives_trading_frequency,\n    mf.stocks_trading_experience,\n    mf.stocks_trading_frequency,\n    mf.other_instruments_trading_frequency,\n    mf.forex_trading_frequency,\n    mf.education_level,\n    mf.commodities_trading_frequency,\n    mf.other_derivatives_trading_experience,\n    mf.forex_trading_experience,\n    mf.employment_industry,\n    mf.income_source,\n    mf.commodities_trading_experience,\n    mf.indices_trading_frequency,\n    mf.other_instruments_trading_experience,\n    mf.indices_trading_experience,\n    mf.estimated_worth,\n    mf.net_income\n\nFROM \n\n  dblink('mf', $$\n\n    select\n    client_loginid loginid,\n    data->'other_derivatives_trading_frequency' other_derivatives_trading_frequency,\n    data->'stocks_trading_experience' stocks_trading_experience,\n    data->'stocks_trading_frequency' stocks_trading_frequency,\n    data->'other_instruments_trading_frequency' other_instruments_trading_frequency,\n    data->'forex_trading_frequency' forex_trading_frequency,\n    data->'education_level' education_level,\n    data->'commodities_trading_frequency' commodities_trading_frequency,\n    data->'other_derivatives_trading_experience' other_derivatives_trading_experience,\n    data->'forex_trading_experience' forex_trading_experience,\n    data->'employment_industry' employment_industry,\n    data->'income_source' income_source,\n    data->'commodities_trading_experience' commodities_trading_experience,\n    data->'indices_trading_frequency' indices_trading_frequency,\n    data->'other_instruments_trading_experience' other_instruments_trading_experience,\n    data->'indices_trading_experience' indices_trading_experience,\n    data->'estimated_worth' estimated_worth,\n    data->'net_income' net_income\n    from\n        betonmarkets.financial_assessment;\n\n        $$\n    ) mf (\n        \n    loginid VARCHAR,\n    other_derivatives_trading_frequency VARCHAR,\n    stocks_trading_experience VARCHAR,\n    stocks_trading_frequency VARCHAR,\n    other_instruments_trading_frequency VARCHAR,\n    forex_trading_frequency VARCHAR,\n    education_level VARCHAR,\n    commodities_trading_frequency VARCHAR,\n    other_derivatives_trading_experience VARCHAR,\n    forex_trading_experience VARCHAR,\n    employment_industry VARCHAR,\n    income_source VARCHAR,\n    commodities_trading_experience VARCHAR,\n    indices_trading_frequency VARCHAR,\n    other_instruments_trading_experience VARCHAR,\n    indices_trading_experience VARCHAR,\n    estimated_worth VARCHAR,\n    net_income VARCHAR\n        \n        )\n""}}",MF -> Maltese Financial Authorities -> Fincancial Assessment,table,,False,False,590,,MF Financial Assessment Results,,native,,,,2019-03-22 03:17:15.781,{}
False,,"{'id': 200, 'name': 'Maltese Financial Authorities', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/183/', 'personal_owner_id': None, 'slug': 'maltese_financial_authorities'}",200.0,,2019-04-09 09:39:45.571,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- MF > Maltese Financial Authorities -> Financial Assessment Profile Groupings\n\nwith mc AS (\nSELECT * FROM\ndblink('mf', $$\n  select count(*) AS cnt, data::text AS data from betonmarkets.financial_assessment\n  WHERE data->'other_derivatives_trading_frequency' IS NOT NULL\n  group by 2 having count(*) > 1 order by 1 desc $$::TEXT)\nt (cnt INTEGER, data JSON)\n)\n\nselect\n    cnt,\n    data->'other_derivatives_trading_frequency'->'score' other_derivatives_trading_frequency,\n    data->'stocks_trading_experience'->'score' stocks_trading_experience,\n    data->'stocks_trading_frequency'->'score' stocks_trading_frequency,\n    data->'other_instruments_trading_frequency'->'score' other_instruments_trading_frequency,\n    data->'forex_trading_frequency'->'score' forex_trading_frequency,\n    data->'education_level'->'score' education_level,\n    data->'commodities_trading_frequency'->'score' commodities_trading_frequency,\n    data->'other_derivatives_trading_experience'->'score' other_derivatives_trading_experience,\n    data->'forex_trading_experience'->'score' forex_trading_experience,\n    data->'employment_industry'->'score' employment_industry,\n    data->'income_source'->'score' income_source,\n    data->'commodities_trading_experience'->'score' commodities_trading_experience,\n    data->'indices_trading_frequency'->'score' indices_trading_frequency,\n    data->'other_instruments_trading_experience'->'score' other_instruments_trading_experience,\n    data->'indices_trading_experience'->'score' indices_trading_experience,\n    data->'estimated_worth'->'score' estimated_worth,\n    data->'net_income'->'score' net_income\nFROM mc;""}}",MF > Maltese Financial Authorities -> Financial Assessment Profile Groupings,table,,False,False,854,,MF Maltese Financial Authorities Financial Assessment Profile Groupings,,native,,,,2019-04-09 09:39:45.571,{}
False,,"{'id': 201, 'name': 'MLT', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/183/', 'personal_owner_id': None, 'slug': 'mlt'}",201.0,,2019-04-09 09:39:48.957,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Checks for the same email on the MF/ MLT/ CR databases and checks if any existing MT5 accounts are linked with the same email address.\nSELECT d.*, u.login, u.group,u.registration,u.name, u.country, u.city, u.state, u.balance\nFROM betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink(ps.srvname, $$\n\n   SELECT loginid AS Client_ID, email AS Email\n   from betonmarkets.client bc\n   where email IS NOT NULL\n   and  email != ''\n\n$$) d (\n   Client_ID VARCHAR,\n   Email VARCHAR\n)\n   JOIN mt5.mt5_users u ON d.email = u.email""}}",Checks for the same email on the MF/ MLT/ CR databases and checks if any existing MT5 accounts are linked with the same email address.,table,,False,False,855,,MF MLT CR - MT5 Accounts,,native,,,,2019-04-09 09:39:48.957,{}
False,,"{'id': 183, 'name': 'MF', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'mf'}",183.0,,2019-04-09 09:39:41.726,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- an eval report only - not for legal use until fully validated\n-- MF/MT5 CRS report .v5\n-- this is an eval report only - not for legal use until fully validated\nWITH mt AS (\n\t-- this CTE can be run by itself to see the raw MT5 results\n\tSELECT mtu.""Login"", mtu.""Registration"", mtd.""Balance"", mtd.""Currency"", deals.""profit"", deals.""swap"", deals.""eod_profit"", deals.""eod_swap"", deals.""eod_commission"", deals.""eod_correction""\n\tFROM mt5.mt5_users AS mtu\n\tJOIN (\n\t\tSELECT\t\t-- This yields one row for every Login id who did something that created a record in deal\n\t\t  ""Login"",\n\t\t\tSUM(""Profit"")  FILTER (WHERE ""Action"" IN (0,1) AND ""Entry""=1) AS profit,\t-- Only add up BUY/SELL\n\t\t\tSUM(""Storage"") FILTER (WHERE ""Action"" IN (0,1) AND ""Entry""=1) AS swap,\n\t\t-- The following sub sets are only necessary to adjust closing balance figures\n\t\t\tSUM(""Profit"")     FILTER (WHERE ""Time"" > \'2018-12-31 23:59:59\' AND ""Action"" IN (0,1) AND ""Entry""=1) AS eod_profit,\t-- Only add up BUY/SELL records that were not reflected in the last day\'s final sums\n\t\t\tSUM(""Storage"")    FILTER (WHERE ""Time"" > \'2018-12-31 23:59:59\' AND ""Action"" IN (0,1) AND ""Entry""=1) AS eod_swap,\n\t\t\tSUM(""Commission"") FILTER (WHERE ""Time"" > \'2018-12-31 23:59:59\' AND ""Action"" IN (0,1) AND ""Entry""=1) AS eod_commission,\n\t\t\tSUM(""Profit"")     FILTER (WHERE ""Time"" > \'2018-12-31 23:59:59\' AND ""Action""=5)                    AS eod_correction\t-- Only add up corrections records that were not reflected in the last day\'s final sums\n\t\tFROM mt5.deals_2018 deal\t\t-- this is a static local table copied directly from MT5 to speed up the process\n\t\tGROUP BY ""Login""\n\t) AS deals ON deals.""Login""=mtu.""Login""\n\tLEFT JOIN mt5.mt5_daily_2018 AS mtd\t-- unfortunately some clients have no entry in here, so LEFT JOIN\n\t\tON mtd.""Login""=mtu.""Login""\n\t\tAND mtd.""Datetime"" = 1546300799\t-- Sunday, December 31, 2018 23:59:59 PM (Last date/time in the mt5_daily_2018 table)\n\tWHERE mtu.""Group"" LIKE \'%maltainvest%\'\n)\n\nSELECT\n\tcr.cr_loginid AS mf_loginid,\n\tcr.mt5_loginid,\n\tmt.""Registration"" AS mt_acct_opening_date,\n\t\'Other\'::VARCHAR AS account_type,\n\tclient.status AS account_status, client.first_name, client.last_name,\n\tbbc.country_name AS country_of_residence,\n\tUPPER(client.tax_residence) AS tax_residence,\n\tclient.tax_identification_number,\n\tclient.date_of_birth,\n\tUPPER(client.place_of_birth) AS place_of_birth, \n\tclient.address_line_1, client.address_line_2, client.address_postcode, client.address_city, client.address_state,\n\tUPPER(client.residence) AS residence,\n\ttransaction.round_amount(mt.""Currency"", mt.""Balance""::NUMERIC) AS account_balance,\n\tmt.""Currency"" AS account_currency,\n\ttransaction.round_amount(mt.""Currency"", mt.""profit""::NUMERIC) AS profit,\n\ttransaction.round_amount(mt.""Currency"", mt.""swap""::NUMERIC) AS swap,\n\ttransaction.round_amount(mt.""Currency"", mt.""eod_profit""::NUMERIC) AS eod_profit,\n\ttransaction.round_amount(mt.""Currency"", mt.""eod_swap""::NUMERIC) AS eod_swap,\n\tcr.binary_user_id\nFROM mt\nJOIN (\n  SELECT DISTINCT ON (lgcr.binary_user_id, lgmt.loginid) lgcr.loginid AS cr_loginid,\n    lgcr.binary_user_id,\n    lgmt.loginid AS mt5_loginid,\n    ""substring""(lgmt.loginid::text, \'\\d+\'::text) AS mt5_login\n   FROM users.loginid lgmt\n     JOIN users.loginid lgcr ON lgmt.binary_user_id = lgcr.binary_user_id\n  WHERE lgmt.loginid::text ~~ \'MT%\'::text AND lgcr.loginid::text ~~ \'MF%\'::text\n  ) AS cr\n\tON cr.mt5_loginid=\'MT\'||mt.""Login""::VARCHAR\nJOIN LATERAL (\n\t-- This part is the clientDB part. Rather than grabbing every client and filtering them in reportDB, we are grabbing only the ones of interest.\n\tSELECT * FROM dblink(\'mf\', $$\n\t\tSELECT\n\t\t\tbc.first_name, bc.last_name, bc.residence, bc.tax_residence, bc.tax_identification_number, bc.date_of_birth, bc.place_of_birth, \n\t\t\tbc.address_line_1, bc.address_line_2, bc.address_postcode, bc.address_city, bc.address_state,\n\t\t\tcs.status\n\t\tFROM betonmarkets.client AS bc\n\t\tLEFT JOIN LATERAL (\n\t\t\tSELECT string_agg(bcs.status_code, \', \') AS status\n              FROM betonmarkets.client_status AS bcs\n             WHERE bcs.client_loginid = bc.loginid\n               AND bcs.status_code IN (\'disabled\',\'unwelcome\',\'cashier_locked\')\n\t\t) AS cs ON TRUE\n\t\tWHERE bc.loginid= $$|| quote_literal(cr.cr_loginid) ||$$\n\t$$) AS cr (\n\t\tfirst_name VARCHAR, last_name VARCHAR, residence VARCHAR, tax_residence VARCHAR, tax_identification_number VARCHAR, date_of_birth VARCHAR, place_of_birth VARCHAR,\n\t\taddress_line_1 VARCHAR, address_line_2 VARCHAR, address_postcode VARCHAR, address_city VARCHAR, address_state VARCHAR, status VARCHAR\n\t)\n) AS client ON TRUE\n-- This is a local, static table created from the countries.yml file\nJOIN brands_binary_countries AS bbc\n\tON bbc.country_code=client.residence\n--WHERE bbc.tax_details_required\nORDER BY 2\n'}}",an eval report only - not for legal use until fully validated,table,,False,False,853,,MF MT5 CRS report v5,,native,,,,2019-04-09 09:39:41.726,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-05 07:03:39.541,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,4,"{'database': 4, 'type': 'native', 'native': {'query': 'select to_char(max(transaction_time), \'YYYY-MM-DD HH:mm:SS\') as ""last_transaction_time"", \nto_char(now(), \'YYYY-MM-DD HH:mm:SS\') as time_now, extract(epoch from now()-max(transaction_time))/60 as ""minutes_since_last_transaction"",\nextract(epoch from (now() - pg_last_xact_replay_timestamp()))/60 as ""minutes_since_last_replay""\nfrom transaction.transaction'}}",,table,,False,False,341,,MF Sync Lag,,native,,"[{'name': 'last_transaction_time', 'display_name': 'last_transaction_time', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'time_now', 'display_name': 'time_now', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'minutes_since_last_transaction', 'display_name': 'minutes_since_last_transaction', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 252.63273061666666, 'max': 252.63273061666666, 'avg': 252.63273061666666, 'sd': None, 'q1': 252.63273061666666, 'q3': 252.63273061666666}}}}, {'name': 'minutes_since_last_replay', 'display_name': 'minutes_since_last_replay', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.437093749999999, 'max': 1.437093749999999, 'avg': 1.437093749999999, 'sd': None, 'q1': 1.437093749999999, 'q3': 1.437093749999999}}}}]",,2019-10-11 01:21:35.370,"{'table.pivot_column': 'last_transaction_time', 'table.cell_column': 'sync_lag'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:17:21.194,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- A custom report requested by Joanna, to run on MF\n-- MF traders details\nWITH params AS (SELECT\n  '2016-01-01'::DATE AS start_date,\n  '2016-12-31'::DATE AS end_date\n)\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT dbl.*\nFROM params\nCROSS JOIN LATERAL dblink('mf', $$\n\nWITH fmb AS (SELECT account_id, SUM(sell_price - buy_price) AS profit_loss\nFROM bet.financial_market_bet\nWHERE purchase_time >= $$|| quote_literal(params.start_date) ||$$::TIMESTAMP AND purchase_time < $$|| quote_literal(params.end_date) ||$$::TIMESTAMP + INTERVAL '1 day'\nGROUP BY account_id)\n\nSELECT\n\tarray_to_string(st.status, ' / ') AS status,\n\tarray_to_string(cam.authentication_method, ' / ') AS authentication_method,\n\tbc.loginid,\n\tbc.email,\n\tbc.first_name,\n\tbc.last_name,\n\tbc.date_of_birth,\n\tbc.residence,\n\tbc.citizen,\n\tbc.address_line_1,\n\tbc.address_line_2,\n\tbc.address_city,\n\tbc.address_state,\n\tbc.address_postcode,\n\tta.currency_code,\n\tta.balance,\n\tfmb.profit_loss,\n\tbc.place_of_birth,\n\tbc.tax_residence,\n\tbc.tax_identification_number\n\t\nFROM fmb\nJOIN transaction.account ta\n\tON ta.id = fmb.account_id\nJOIN betonmarkets.client bc\n\tON bc.loginid = ta.client_loginid\nLEFT JOIN LATERAL(\n\tSELECT \tbcs.client_loginid,\n\t\tarray_agg(bcs.status_code) AS status\n\tFROM\tbetonmarkets.client_status bcs\n-- Add other codes here and next line if they are desired. Here is to order them in the list\n\tJOIN (VALUES (1::INT, 'disabled'), (2::INT, 'ok'), (3::INT, 'unwelcome')) ord(o, n) ON ord.n = bcs.status_code\n\tWHERE\tbcs.status_code IN ('ok', 'disabled', 'unwelcome')\n\tAND\tbcs.client_loginid = ta.client_loginid\n\tGROUP BY bcs.client_loginid, ord.o\n\tORDER BY ord.o\n) st ON TRUE\nLEFT JOIN LATERAL(\n\tSELECT \tbcam.client_loginid,\n\t\tarray_agg(bcam.authentication_method_code) AS authentication_method\n\tFROM\tbetonmarkets.client_authentication_method bcam\n\tWHERE\tbcam.status = 'pass'\n\tAND\tbcam.client_loginid = ta.client_loginid\n\tGROUP BY bcam.client_loginid\n) cam ON TRUE\n\nORDER BY bc.loginid$$) dbl (\n\tstatus TEXT,\n\tauthentication_method TEXT,\n\tloginid TEXT,\n\temail TEXT,\n\tfirst_name TEXT,\n\tlast_name TEXT,\n\tdate_of_birth DATE,\n\tresidence TEXT,\n\tcitizen TEXT,\n\taddress_line_1 TEXT,\n\taddress_line_2 TEXT,\n\taddress_city TEXT,\n\taddress_state TEXT,\n\taddress_postcode TEXT,\n\tcurrency_code TEXT,\n\tbalance NUMERIC,\n\tprofit_loss NUMERIC,\n\tplace_of_birth TEXT,\n\ttax_residence TEXT,\n\ttax_identification_number TEXT\n)\n\n""}}","A custom report requested by Joanna, to run on MF",table,,False,False,591,,MF traders details,,native,,,,2019-03-22 03:17:21.194,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:17:26.467,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Quants > Client trades detail\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF or VR\n        'MF'::VARCHAR as broker_code,\n        \n        -- CR, MX, MLT, MF or VR\n        'MF1386'::VARCHAR as login_id,\n\n        -- Start date\n        '2016-07-03'::TIMESTAMP as start_date,\n\n        -- End date\n        '2016-09-13'::TIMESTAMP as end_date\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_client_trades_details(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT login_id FROM param)::varchar,\n    (SELECT start_date FROM param)::timestamp,\n    (SELECT end_date FROM param)::timestamp\n    );\n""}}",Quants > Client trades detail,table,,False,False,592,,MF1386_Lithouanian_guy_bets,,native,,,,2019-03-22 03:17:26.467,{}
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-05-14 02:27:50.755,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,4,"{'database': 4, 'type': 'native', 'native': {'query': 'select * from \n(select \n   a.client_loginid,\n   a.currency_code,\n  round((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd"",\n underlying_symbol,   \n sell_time\n\tfrom bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{start_date}}\n    and sell_time < {{end_date}}\n    \n\t\ngroup by client_loginid, currency_code, client_pnl_usd, sell_time, underlying_symbol) y\ngroup by client_loginid, currency_code, client_pnl_usd, sell_time, underlying_symbol, client_pnl_usd\nhaving client_pnl_usd > {{amount}}\norder by sell_time desc\nlimit 10\t\n', 'template-tags': {'start_date': {'id': '3638b031-8f01-99f9-ca91-e1ac68cda961', 'name': 'start_date', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'end_date': {'id': '158549a2-9fe0-7868-1d0e-d3906ebe9ebc', 'name': 'end_date', 'display-name': 'End Date', 'type': 'date', 'required': True}, 'amount': {'id': 'd09b69ed-c7d9-933c-b3a3-ad694db4a9c7', 'name': 'amount', 'display-name': 'Amount', 'type': 'number'}}}}",,table,,False,False,966,,MF: recent large closed PL,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 8}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 3}}}}, {'name': 'client_pnl_usd', 'display_name': 'Client Pnl Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0}, 'type': {'type/Number': {'min': 760.44, 'max': 4672.63, 'avg': 2947.981666666667, 'sd': 1938.9724538674259, 'q1': 846.77, 'q3': 4662.18}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 4.833333333333333}}}}, {'name': 'sell_time', 'display_name': 'Sell Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-05-14T00:17:44.000Z', 'latest': '2019-05-14T02:00:02.000Z'}}}}]",,2019-05-14 02:27:50.755,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'client_pnl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-07 04:49:17.641,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,4,"{'database': 4, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    --and underlying_symbol not like \'frx%\'\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD desc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}}}}",,table,,False,False,468,,MF: top,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'pl_usd', 'display_name': 'pl_usd', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-15 01:22:11.044,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd', 'table.column_widths': [None, None, 85]}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-26 05:29:54.384,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,4,"{'database': 4, 'type': 'native', 'native': {'query': 'select\nclient_loginid,\nsum (amount_usd) as total,\ncount (amount_usd) as operations_number,\nMT5account\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time,\nc.amount,\n-round ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\t\nb.payment_type_code,\nsubstring (b.remark, 39, 6) as MT5account\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n\nwhere referrer_type = \'payment\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code = \'mt5_transfer\'\n) as y\ngroup by client_loginid, currency_code, MT5account\norder by total desc\nlimit 10\n', 'template-tags': {'startdate': {'id': '3e5f8320-439b-c375-5491-3dc74d1e699a', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'enddate': {'id': 'b7647b65-3e3f-e893-3d08-48f75137a681', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True}}}}",,table,,False,False,677,,MF: Top depositors to MT,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'total', 'display_name': 'total', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'operations_number', 'display_name': 'operations_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'mt5account', 'display_name': 'mt5account', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-09-11 02:23:10.370,"{'table.pivot_column': 'client_loginid', 'table.cell_column': 'total'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-25 06:21:01.583,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,4,"{'database': 4, 'type': 'native', 'native': {'query': 'select\nclient_loginid,\nsum (amount_usd) as total,\ncount (amount_usd) as operations_number\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time,\nc.amount,\nround ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\nb.payment_gateway_code,\t\nb.payment_type_code,\nsource\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n\nwhere referrer_type = \'payment\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code in (\'external_cashier\', \'crypto_cashier\', \'bank_money_transfer\')\n) as y\ngroup by client_loginid, currency_code\norder by total desc\nlimit 10', 'template-tags': {'startdate': {'id': '3e5f8320-439b-c375-5491-3dc74d1e699a', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'enddate': {'id': 'b7647b65-3e3f-e893-3d08-48f75137a681', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True}}}}",,table,,False,False,664,,"MF: Top direct ""balance operators""",,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.666666666666667}}}}, {'name': 'total', 'display_name': 'Total', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5.61, 'max': 118.62, 'avg': 48.89666666666667, 'sd': 60.96710615843049, 'q1': 9.822500000000002, 'q3': 94.58000000000001}}}}, {'name': 'operations_number', 'display_name': 'Operations Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1.0, 'avg': 1.0, 'sd': 0.0, 'q1': 1.0, 'q3': 1.0}}}}]",,2019-08-27 03:55:23.831,"{'table.pivot_column': 'client_loginid', 'table.cell_column': 'total'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-21 06:38:24.862,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,4,"{'database': 4, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    [[and underlying_symbol = {{instrument}}]]\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD asc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}, 'instrument': {'id': '41db7acc-30a1-0386-deda-69c32d093f3c', 'name': 'instrument', 'display-name': 'Instrument', 'type': 'text', 'required': False}}}}",,table,,False,False,512,,MF: top losers for an instrument,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'pl_usd', 'display_name': 'Pl Usd', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'trades_number', 'display_name': 'Trades Number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-08-27 03:55:05.677,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-21 05:01:49.173,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,4,"{'database': 4, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    and underlying_symbol = {{instrument}}\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD desc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}, 'instrument': {'id': '41db7acc-30a1-0386-deda-69c32d093f3c', 'name': 'instrument', 'display-name': 'Instrument', 'type': 'text'}}}}",,table,,False,False,507,,MF: top winners for an instrument,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'pl_usd', 'display_name': 'pl_usd', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-09-18 01:04:37.764,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-26 05:30:58.316,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,4,"{'database': 4, 'type': 'native', 'native': {'query': 'select\nclient_loginid,\nsum (amount_usd) as total,\ncount (amount_usd) as operations_number,\nMT5account\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time,\nc.amount,\n-round ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\t\nb.payment_type_code,\nsubstring (b.remark, 27, 6) as MT5account\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n\nwhere referrer_type = \'payment\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code = \'mt5_transfer\'\n) as y\ngroup by client_loginid, currency_code, MT5account\norder by total asc\nlimit 10\n', 'template-tags': {'startdate': {'id': '3e5f8320-439b-c375-5491-3dc74d1e699a', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'enddate': {'id': 'b7647b65-3e3f-e893-3d08-48f75137a681', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True}}}}",,table,,False,False,678,,MF: Top withdrawers from MT,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'total', 'display_name': 'total', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'operations_number', 'display_name': 'operations_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'mt5account', 'display_name': 'mt5account', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-09-11 02:23:10.390,"{'table.pivot_column': 'operations_number', 'table.cell_column': 'total'}"
False,,"{'id': 73, 'name': ""Dwi Hadyan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 53, 'slug': 'dwi_hadyan_s_personal_collection'}",73.0,,2019-01-25 04:07:37.146,"{'email': 'dwi@binary.com', 'first_name': 'Dwi', 'last_login': '2019-06-21T06:57:40.046Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 53, 'last_name': 'Hadyan', 'date_joined': '2019-01-24T02:54:53.692Z', 'common_name': 'Dwi Hadyan'}",53,5,"{'database': 5, 'type': 'native', 'native': {'query': ""select  date_joined::timestamp::date, count(loginid) \nfrom betonmarkets.client\nwhere date_joined::timestamp::date = now()::timestamp::date \nOR date_joined::timestamp::date = (now() - interval '1 days')::timestamp::date\nGROUP BY 1\nORDER BY 1 asc;""}}",185 European Country (Vol),smartscalar,,False,False,230,,MLT Client Sign Up,,native,,"[{'name': 'date_joined', 'display_name': 'Date Joined', 'base_type': 'type/Date', 'special_type': 'type/JoinDate', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-06-30T00:00:00.000Z', 'latest': '2019-07-01T00:00:00.000Z'}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 8.0, 'avg': 4.5, 'sd': 4.949747468305834, 'q1': 1.0, 'q3': 8.0}}}}]",,2019-07-01 05:17:27.780,"{'series_settings': {'Count': {'color': '#9CC177'}}, 'graph.dimensions': ['date_joined'], 'graph.metrics': ['count'], 'scalar.switch_positive_negative': False}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-05 07:03:58.582,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,5,"{'database': 5, 'type': 'native', 'native': {'query': 'select to_char(max(transaction_time), \'YYYY-MM-DD HH:mm:SS\') as ""last_transaction_time"", \nto_char(now(), \'YYYY-MM-DD HH:mm:SS\') as time_now, extract(epoch from now()-max(transaction_time))/60 as ""minutes_since_last_transaction"",\nextract(epoch from (now() - pg_last_xact_replay_timestamp()))/60 as ""minutes_since_last_replay""\nfrom transaction.transaction'}}",,table,,False,False,342,,MLT Sync Lag,,native,,"[{'name': 'last_transaction_time', 'display_name': 'last_transaction_time', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'time_now', 'display_name': 'time_now', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'minutes_since_last_transaction', 'display_name': 'minutes_since_last_transaction', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.13969479999999998, 'max': 0.13969479999999998, 'avg': 0.13969479999999998, 'sd': None, 'q1': 0.13969479999999998, 'q3': 0.13969479999999998}}}}, {'name': 'minutes_since_last_replay', 'display_name': 'minutes_since_last_replay', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.13950215000000002, 'max': 0.13950215000000002, 'avg': 0.13950215000000002, 'sd': None, 'q1': 0.13950215000000002, 'q3': 0.13950215000000002}}}}]",,2019-10-11 01:11:45.200,"{'table.pivot_column': 'last_transaction_time', 'table.cell_column': 'sync_lag'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-04-08 04:25:14.255,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,4,"{'database': 4, 'type': 'native', 'native': {'query': 'select\n\nFrom_account,\ncurrency_code,\nTo_account,\nsum (amount_usd) as total,\ncount (amount_usd) as operations_number\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time,\nc.amount,\n-round ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\t\nb.payment_type_code,\nsubstring (b.remark, 22, 8) as From_account,\nsubstring (b.remark, 33, 9) as To_account\n\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n\nwhere referrer_type = \'payment\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code = \'internal_transfer\'\nand payment_gateway_code != \'payment_agent_transfer\'\n) as y\ngroup by client_loginid, currency_code, From_account, To_account\norder by total desc\n', 'template-tags': {'startdate': {'id': '5c159451-6369-5fff-d011-60effabd4d2b', 'name': 'startdate', 'display-name': 'Startdate', 'type': 'date'}, 'enddate': {'id': 'b971a8a8-211e-c29d-fae4-c3ebd7a59239', 'name': 'enddate', 'display-name': 'Enddate', 'type': 'date'}}}}",,table,,False,False,694,,MLT: incoming internal transfers,,native,,"[{'name': 'from_account', 'display_name': 'From Account', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'to_account', 'display_name': 'To Account', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'total', 'display_name': 'Total', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'operations_number', 'display_name': 'Operations Number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-07-01 07:41:22.791,"{'table.columns': [{'name': 'from_account', 'enabled': True}, {'name': 'currency_code', 'enabled': False}, {'name': 'to_account', 'enabled': True}, {'name': 'total', 'enabled': True}, {'name': 'operations_number', 'enabled': True}], 'table.pivot_column': 'currency_code', 'table.cell_column': 'total'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-04-08 04:26:36.546,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,4,"{'database': 4, 'type': 'native', 'native': {'query': 'select\n\nFrom_account,\ncurrency_code,\nTo_account,\nsum (amount_usd) as total,\ncount (amount_usd) as operations_number\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time,\nc.amount,\n-round ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\t\nb.payment_type_code,\nsubstring (b.remark, 23, 8) as From_account,\nsubstring (b.remark, 34, 9) as To_account\n\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n\nwhere referrer_type = \'payment\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code = \'internal_transfer\'\nand payment_gateway_code != \'payment_agent_transfer\'\n) as y\ngroup by client_loginid, currency_code, From_account, To_account\norder by total asc\n', 'template-tags': {'startdate': {'id': '5c159451-6369-5fff-d011-60effabd4d2b', 'name': 'startdate', 'display-name': 'Startdate', 'type': 'date'}, 'enddate': {'id': 'b971a8a8-211e-c29d-fae4-c3ebd7a59239', 'name': 'enddate', 'display-name': 'Enddate', 'type': 'date'}}}}",,table,,False,False,695,,MLT: outgoing internal transfers,,native,,"[{'name': 'from_account', 'display_name': 'From Account', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'to_account', 'display_name': 'To Account', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'total', 'display_name': 'Total', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'operations_number', 'display_name': 'Operations Number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-08 04:29:14.712,"{'table.columns': [{'name': 'from_account', 'enabled': True}, {'name': 'currency_code', 'enabled': False}, {'name': 'to_account', 'enabled': True}, {'name': 'total', 'enabled': True}, {'name': 'operations_number', 'enabled': True}], 'table.pivot_column': 'currency_code', 'table.cell_column': 'total'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-05-14 02:28:07.073,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,5,"{'database': 5, 'type': 'native', 'native': {'query': 'select * from \n(select \n   a.client_loginid,\n   a.currency_code,\n  round((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd"",\n underlying_symbol,   \n sell_time\n\tfrom bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{start_date}}\n    and sell_time < {{end_date}}\n    \n\t\ngroup by client_loginid, currency_code, client_pnl_usd, sell_time, underlying_symbol) y\ngroup by client_loginid, currency_code, client_pnl_usd, sell_time, underlying_symbol, client_pnl_usd\nhaving client_pnl_usd > {{amount}}\norder by sell_time desc\nlimit 10\t\n', 'template-tags': {'start_date': {'id': '3638b031-8f01-99f9-ca91-e1ac68cda961', 'name': 'start_date', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'end_date': {'id': '158549a2-9fe0-7868-1d0e-d3906ebe9ebc', 'name': 'end_date', 'display-name': 'End Date', 'type': 'date', 'required': True}, 'amount': {'id': 'd09b69ed-c7d9-933c-b3a3-ad694db4a9c7', 'name': 'amount', 'display-name': 'Amount', 'type': 'number'}}}}",,table,,False,False,967,,MLT: recent large closed PL,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 8}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 3}}}}, {'name': 'client_pnl_usd', 'display_name': 'Client Pnl Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0}, 'type': {'type/Number': {'min': 760.44, 'max': 4672.63, 'avg': 2947.981666666667, 'sd': 1938.9724538674259, 'q1': 846.77, 'q3': 4662.18}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 4.833333333333333}}}}, {'name': 'sell_time', 'display_name': 'Sell Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-05-14T00:17:44.000Z', 'latest': '2019-05-14T02:00:02.000Z'}}}}]",,2019-05-14 02:28:07.073,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'client_pnl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-26 05:29:07.352,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,5,"{'database': 5, 'type': 'native', 'native': {'query': 'select\nclient_loginid,\nsum (amount_usd) as total,\ncount (amount_usd) as operations_number,\nMT5account\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time,\nc.amount,\n-round ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\t\nb.payment_type_code,\nsubstring (b.remark, 39, 6) as MT5account\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n\nwhere referrer_type = \'payment\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code = \'mt5_transfer\'\n) as y\ngroup by client_loginid, currency_code, MT5account\norder by total desc\nlimit 10\n', 'template-tags': {'startdate': {'id': '3e5f8320-439b-c375-5491-3dc74d1e699a', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'enddate': {'id': 'b7647b65-3e3f-e893-3d08-48f75137a681', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True}}}}",,table,,False,False,676,,MLT: Top depositors to MT,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'total', 'display_name': 'total', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'operations_number', 'display_name': 'operations_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'mt5account', 'display_name': 'mt5account', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-09-11 02:23:10.598,{}
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-25 06:21:26.003,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,5,"{'database': 5, 'type': 'native', 'native': {'query': 'select\nclient_loginid,\nsum (amount_usd) as total,\ncount (amount_usd) as operations_number\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time,\nc.amount,\nround ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\nb.payment_gateway_code,\t\nb.payment_type_code,\nsource\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n\nwhere referrer_type = \'payment\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code in (\'external_cashier\', \'crypto_cashier\', \'bank_money_transfer\')\n) as y\ngroup by client_loginid, currency_code\norder by total desc\nlimit 10', 'template-tags': {'startdate': {'id': '3e5f8320-439b-c375-5491-3dc74d1e699a', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'enddate': {'id': 'b7647b65-3e3f-e893-3d08-48f75137a681', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True}}}}",,table,,False,False,665,,"MLT: Top direct ""balance operators""",,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total', 'display_name': 'Total', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': 100.0, 'max': 1288.54, 'avg': 380.163, 'sd': 419.1213063872771, 'q1': 112.25, 'q3': 561.72}}}}, {'name': 'operations_number', 'display_name': 'Operations Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 3.0, 'avg': 1.8, 'sd': 0.632455532033675, 'q1': 1.290994448735805, 'q3': 2.283484861008832}}}}]",,2019-08-27 03:55:26.752,"{'table.pivot_column': 'client_loginid', 'table.cell_column': 'total'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-07 04:30:14.549,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,5,"{'database': 5, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    --and underlying_symbol not like \'frx%\'\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD asc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}}}}",,table,,False,False,462,,MLT: top losers,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'pl_usd', 'display_name': 'pl_usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': -3695.95, 'max': -161.78, 'avg': -634.7299999999999, 'sd': 1097.537014420116, 'q1': -309.21, 'q3': -167.83}}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 1163.0, 'avg': 365.4, 'sd': 440.59283294720586, 'q1': 24.0, 'q3': 701.0}}}}]",,2019-10-03 07:50:15.855,"{'table.pivot_column': 'client_loginid', 'table.cell_column': 'pl_usd', 'table.column_widths': [None, None, 85]}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-21 06:38:38.715,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,5,"{'database': 5, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    [[and underlying_symbol = {{instrument}}]]\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD asc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}, 'instrument': {'id': '41db7acc-30a1-0386-deda-69c32d093f3c', 'name': 'instrument', 'display-name': 'Instrument', 'type': 'text', 'required': False}}}}",,table,,False,False,513,,MLT: top losers for an instrument,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'pl_usd', 'display_name': 'Pl Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': -197.56, 'max': -42.97, 'avg': -98.98299999999999, 'sd': 54.41911593262876, 'q1': -135.24, 'q3': -52.88}}}}, {'name': 'trades_number', 'display_name': 'Trades Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 810.0, 'avg': 172.8, 'sd': 245.583568035178, 'q1': 14.0, 'q3': 244.0}}}}]",,2019-08-27 03:55:06.935,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-07 04:28:54.866,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,5,"{'database': 5, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    --and underlying_symbol not like \'frx%\'\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD desc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}}}}",,table,,False,False,461,,MLT: top winners,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'pl_usd', 'display_name': 'pl_usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 84.55, 'max': 1160.58, 'avg': 279.424, 'sd': 334.1881824561325, 'q1': 85.0, 'q3': 402.78}}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 10.0, 'max': 494.0, 'avg': 139.7, 'sd': 161.6484869503372, 'q1': 16.0, 'q3': 181.0}}}}]",,2019-10-03 07:50:15.852,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-21 05:01:25.575,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,5,"{'database': 5, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    and underlying_symbol = {{instrument}}\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD desc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}, 'instrument': {'id': '41db7acc-30a1-0386-deda-69c32d093f3c', 'name': 'instrument', 'display-name': 'Instrument', 'type': 'text'}}}}",,table,,False,False,506,,MLT: top winners for an instrument,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'pl_usd', 'display_name': 'pl_usd', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-09-18 01:04:37.773,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-26 05:28:34.102,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,5,"{'database': 5, 'type': 'native', 'native': {'query': 'select\nclient_loginid,\nsum (amount_usd) as total,\ncount (amount_usd) as operations_number,\nMT5account\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time,\nc.amount,\n-round ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\t\nb.payment_type_code,\nsubstring (b.remark, 27, 6) as MT5account\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n\nwhere referrer_type = \'payment\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code = \'mt5_transfer\'\n) as y\ngroup by client_loginid, currency_code, MT5account\norder by total asc\nlimit 10\n', 'template-tags': {'startdate': {'id': '3e5f8320-439b-c375-5491-3dc74d1e699a', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'enddate': {'id': 'b7647b65-3e3f-e893-3d08-48f75137a681', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True}}}}",,table,,False,False,675,,MLT: Top withdrawers from MT,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'total', 'display_name': 'total', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'operations_number', 'display_name': 'operations_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'mt5account', 'display_name': 'mt5account', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-09-11 02:23:10.959,{}
False,,"{'id': 41, 'name': ""Tony Cini's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 42, 'slug': 'tony_cini_s_personal_collection'}",41.0,,2019-01-03 09:51:41.673,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(to_timestamp(daily.""Datetime"")), SUM (daily.""Balance"") AS Company_PnL_On_Open_Positions\nfrom mt5_daily_2019 daily\nWhere ""Group"" LIKE \'%costarica%\'\ngroup by date(to_timestamp(daily.""Datetime""))'}}",,line,,False,False,178,,MT5 - End of Day Total Balance on CR Accounts,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-01-02T00:00:00.000Z'}}}}, {'name': 'company_pnl_on_open_positions', 'display_name': 'Company Pnl On Open Positions', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/Number': {'min': 888615.3300000123, 'max': 893587.4700000088, 'avg': 891101.4000000106, 'sd': 3515.8339110064207, 'q1': 888615.3300000123, 'q3': 893587.4700000088}}}}]",,2019-01-03 09:51:41.673,"{'graph.dimensions': ['date'], 'graph.metrics': ['company_pnl_on_open_positions']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-03 09:52:00.392,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(to_timestamp(daily.""Datetime"")), SUM (daily.""Balance"") AS Total_Balance_on_Clients_Account\nfrom mt5_daily_2019 daily\nWhere ""Group"" LIKE \'%costarica%\'\ngroup by date(to_timestamp(daily.""Datetime""))'}}",,line,,False,False,179,,MT5 - End of Day Total Balance on CR Accounts - 2019,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 70, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-03-11T00:00:00.000Z'}}}}, {'name': 'total_balance_on_clients_account', 'display_name': 'Total Balance On Clients Account', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 70, 'nil%': 0.0}, 'type': {'type/Number': {'min': 888615.3300000088, 'max': 1637683.5800000334, 'avg': 1309798.6327143111, 'sd': 236540.18393770457, 'q1': 1067307.4700000142, 'q3': 1519242.7383569183}}}}]",,2019-03-12 07:51:47.057,"{'graph.dimensions': ['date'], 'graph.metrics': ['total_balance_on_clients_account'], 'series_settings': {'Total Balance On Clients Account': {'color': '#509EE3'}}}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:17:31.785,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- This query shows the volume of open positions (Buy, Sell, Net) and the Contract size\n-- POSITION_BUY 0\n-- POSITION_SELL 1\n-- Source: https://support.metaquotes.net/en/docs/mt5/platform/components/backup_server/sql_export/sql_mt5_positions/position_enum#enpositionaction\n-- 10000 constant is defined at: https://support.metaquotes.net/en/docs/mt5/platform/components/backup_server/sql_export/sql_mt5_positions \n\n-- About positions:\n-- A position is a trade obligation, i.e. the number of bought or sold contracts of a financial instrument. \n-- A long position is financial security bought expecting the security price go higher. \n-- A short position is an obligation to supply a security expecting the price will fall in future.\n\n-- Source: MT5 Client help:Trading Operations / Basic Principles\n\nSELECT \n  pos.Symbol, \n  pos.ContractSize, \n  sum(pos.Volume*(1-pos.Action))/10000 AS BUY_VOLUME, \n  sum(pos.Volume*pos.Action)/10000 AS SELL_VOLUME,\n  sum(pos.Volume*(1-2*pos.Action))/10000 AS NET_VOLUME,\n  sum(pos.ContractSize*pos.Volume*(1-2*pos.Action))/10000 AS NET_VALUE\nFROM mt5_positions AS pos\nINNER JOIN mt5_users AS users\nON pos.Login = users.login\nWHERE users.Group LIKE 'real%'\nAND pos.Action IN (0,1)\nGROUP BY pos.Symbol\nORDER BY pos.symbol""}}","This query shows the volume of open positions (Buy, Sell, Net) and the Contract size",table,,False,False,593,,MT5 - Open Positions,,native,,,,2019-03-22 03:17:31.785,{}
False,,,,,2019-02-13 03:48:11.578,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT concat(round(extract(epoch from (now() - pg_last_xact_replay_timestamp())))::text, \' seconds since replay\')\nas ""seconds_since_replay""'}}",,scalar,,False,False,366,,MT5 - time since pg replay (seconds),,native,,"[{'name': 'seconds_since_replay', 'display_name': 'Seconds Since Replay', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 28.0}}}}]",,2019-04-17 05:41:18.113,"{'table.pivot_column': 'time_of_last_position_update', 'table.cell_column': 'seconds_since_last_position_update'}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2018-12-18 15:09:16.066,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT date(deals.""Time""), SUM(deals.""Profit"")*-1 AS Company_Profit\r\nFROM mt5_deals_2018 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand users.""Group"" like \'%vanuatu_standard%\'\r\nand ""Symbol"" in (\'AUDCAD\',\'AUDCHF\',\'AUDJPY\',\'AUDNZD\',\'AUDUSD\',\'EURAUD\',\'EURCAD\',\'EURCHF\',\'EURGBP\',\'EURJPY\',\'EURNZD\',\'EURUSD\',\'GBPCHF\',\'GBPJPY\',\'GBPUSD\',\'NZDUSD\',\'USDCAD\',\'USDCHF\',\'USDJPY\')\r\nand date(deals.""Time"") > \'2018-12-06\'\r\nGroup by date(deals.""Time"")\r\n'}}",,area,,False,False,106,,MT5 B-Book Company Profit Table,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-12-07T00:00:00.000Z', 'latest': '2018-12-31T00:00:00.000Z'}}}}, {'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': -4179.519999999999, 'max': 4714.679999999999, 'avg': 749.3185000000002, 'sd': 1897.7623668506214, 'q1': 45.175, 'q3': 1799.4699999999998}}}}]",,2019-03-14 09:01:27.334,"{'table.column_widths': [273], 'table.pivot_column': 'date', 'table.cell_column': 'company_profit', 'graph.dimensions': ['date'], 'graph.metrics': ['company_profit']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-20 06:40:59.860,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT date(deals.""Time""), SUM(deals.""Profit"" + deals.""Storage"")*-1 AS Company_Profit\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand users.""Group"" like \'%vanuatu_standard%\'\r\nand ""Symbol"" in (\'AUDCAD\',\'AUDCHF\',\'AUDJPY\',\'AUDNZD\',\'AUDUSD\',\'EURAUD\',\'EURCAD\',\'EURCHF\',\'EURGBP\',\'EURJPY\',\'EURNZD\',\'EURUSD\',\'GBPCHF\',\'GBPJPY\',\'GBPUSD\',\'NZDUSD\',\'USDCAD\',\'USDCHF\',\'USDJPY\')\r\nGroup by date(deals.""Time"")\r\norder by date(deals.""Time"") DESC\r\n'}}",,table,,False,False,403,,MT5 B-Book Company Profit Table (Closed trades),,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 44, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-02T00:00:00.000Z', 'latest': '2019-02-21T00:00:00.000Z'}}}}, {'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 44, 'nil%': 0.0}, 'type': {'type/Number': {'min': -17882.840000000004, 'max': 5596.069999999999, 'avg': 353.4420454545454, 'sd': 3206.786899511998, 'q1': -45.82499999999984, 'q3': 1376.7350000000001}}}}]",,2019-02-21 04:16:43.391,"{'table.column_widths': [273], 'table.pivot_column': 'date', 'table.cell_column': 'company_profit', 'graph.dimensions': ['date'], 'graph.metrics': ['company_profit']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-02 12:51:44.616,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT date(deals.""Time""), SUM(deals.""Profit"" + deals.""Storage"")*-1 AS Company_Profit\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand users.""Group"" like \'%vanuatu_standard%\'\r\nand ""Symbol"" in (\'AUDCAD\',\'AUDCHF\',\'AUDJPY\',\'AUDNZD\',\'AUDUSD\',\'EURAUD\',\'EURCAD\',\'EURCHF\',\'EURGBP\',\'EURJPY\',\'EURNZD\',\'EURUSD\',\'GBPCHF\',\'GBPJPY\',\'GBPUSD\',\'NZDUSD\',\'USDCAD\',\'USDCHF\',\'USDJPY\')\r\nGroup by date(deals.""Time"")\r\n'}}",,area,,False,False,161,,MT5 B-Book Company Profit Table - 2019,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 60, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-02T00:00:00.000Z', 'latest': '2019-03-12T00:00:00.000Z'}}}}, {'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 60, 'nil%': 0.0}, 'type': {'type/Number': {'min': -17882.839999999997, 'max': 5596.069999999997, 'avg': 249.15133333333335, 'sd': 2893.4312468923654, 'q1': -360.4699999999998, 'q3': 1376.7350000000001}}}}]",,2019-03-12 07:51:46.131,"{'table.column_widths': [273], 'table.pivot_column': 'date', 'table.cell_column': 'company_profit', 'graph.dimensions': ['date'], 'graph.metrics': ['company_profit']}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:17:37.079,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select date_trunc(\'month\', (Temp_table.""date"")), SUM (Temp_table.""Profit"")*-1 AS Company_BBook_Trade_Profit, SUM (Temp_table.""Storage"")*-1 AS Company_BBook_Swaps_Profit\nFROM \n(\nSelect DISTINCT(ozt.""order_id""), date(ozt.""trade_time""), mtd.""Login"", mtd.""Profit"", mtd.""Volume"", mtd.""Storage"",  mtd.""Symbol""\nfrom mt5.oz_archive_trades_view ozt\nJoin mt5.mt5_deals_2018 mtd ON (ozt.order_id = (mtd.""ExternalID"")::integer)\nwhere mtd.""ExternalID"" != \'\'\nand ozt.""trade_status"" = 2 -- Trade Filled\nand ozt.""core_order_side"" IN (1,2) -- 1 is Buy and 2 is Sell\nand ozt.""maker_name"" = \'Warehouse\') Temp_table\ngroup by  date_trunc(\'month\', (Temp_table.""date""))\n'}}",,table,,False,False,594,,MT5 B-Book Profit (Match MT5 DB with OZ 'Warehouse') - Per Month,,native,,,,2019-03-22 03:17:37.079,{}
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-20 05:21:07.814,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'native': {'template-tags': {'Time': {'id': '34f582cd-6d12-c11a-a7fd-5f85ff37077d', 'name': 'Time', 'display-name': 'Time', 'type': 'dimension', 'required': True, 'default': 'today', 'dimension': ['field-id', 7452], 'widget-type': 'date/relative'}}, 'query': 'SELECT SUM(mt5_deals_2019.""Profit"" + mt5_deals_2019.""Storage"")*-1 AS Company_Profit\r\nFROM mt5_deals_2019 \r\nJOIN mt5_users ON mt5_users.""Login"" = mt5_deals_2019.""Login""\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand mt5_users.""Group"" like \'%vanuatu_standard%\'\r\nand ""Symbol"" in (\'AUDCAD\',\'AUDCHF\',\'AUDJPY\',\'AUDNZD\',\'AUDUSD\',\'EURAUD\',\'EURCAD\',\'EURCHF\',\'EURGBP\',\'EURJPY\',\'EURNZD\',\'EURUSD\',\'GBPCHF\',\'GBPJPY\',\'GBPUSD\',\'NZDUSD\',\'USDCAD\',\'USDCHF\',\'USDJPY\')\r\nand {{Time}}\r\ngroup by date(mt5_deals_2019.""Time"")'}, 'type': 'native', 'database': 9}",,scalar,,False,False,395,,"MT5 B-Book Profit closed Trades""",,native,,"[{'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -414.36, 'max': -414.36, 'avg': -414.36, 'sd': None, 'q1': -414.36, 'q3': -414.36}}}}]",,2019-02-21 04:16:42.526,"{'table.pivot_column': 'company_profit', 'table.cell_column': 'company_profit', 'column_settings': {'[""name"",""company_profit""]': {'number_style': 'currency'}}}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-10 11:51:11.513,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'native': {'template-tags': {'Time': {'id': '34f582cd-6d12-c11a-a7fd-5f85ff37077d', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': True, 'default': '2019-01-01'}}, 'query': 'SELECT SUM(deals.""Profit"" + deals.""Storage"")*-1 AS Company_Profit\r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand users.""Group"" like \'%vanuatu_standard%\'\r\nand ""Symbol"" in (\'AUDCAD\',\'AUDCHF\',\'AUDJPY\',\'AUDNZD\',\'AUDUSD\',\'EURAUD\',\'EURCAD\',\'EURCHF\',\'EURGBP\',\'EURJPY\',\'EURNZD\',\'EURUSD\',\'GBPCHF\',\'GBPJPY\',\'GBPUSD\',\'NZDUSD\',\'USDCAD\',\'USDCHF\',\'USDJPY\')\r\nand date(deals.""Time"") IN ({{Time}})\r\ngroup by date(deals.""Time"")'}, 'type': 'native', 'database': 9}",,scalar,,False,False,196,,MT5 B-Book Profit per day - 2019,,native,,"[{'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2705.68, 'max': 2705.68, 'avg': 2705.68, 'sd': None, 'q1': 2705.68, 'q3': 2705.68}}}}]",,2019-02-21 04:35:26.607,"{'table.column_widths': [273], 'table.pivot_column': 'date', 'table.cell_column': 'company_profit', 'graph.dimensions': ['date'], 'graph.metrics': ['company_profit'], 'column_settings': {'[""name"",""company_profit""]': {'prefix': '', 'suffix': ' USD'}}, 'card.title': 'MT5 B-Book Profit per day - (Note: We only B-Book the Vanuatu Standard Group)'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-10 12:24:20.533,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'native': {'template-tags': {'Time': {'id': '34f582cd-6d12-c11a-a7fd-5f85ff37077d', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': True, 'default': '2019-01-01'}}, 'query': 'Select ""login"", client_profit, client_swaps , Total_client_profit\r\nFROM(\r\n    SELECT deals.""Login"" AS login, SUM(deals.""Profit"") AS client_profit, SUM(deals.""Storage"") AS client_swaps, SUM(deals.""Profit"" + deals.""Storage"") AS Total_client_profit\r\n    FROM mt5_deals_2019 AS deals\r\n    JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n    WHERE ""Action"" IN (0,1) -- In Trades only\r\n    and users.""Group"" like \'%vanuatu_standard%\'\r\n    and ""Symbol"" in (\'AUDCAD\',\'AUDCHF\',\'AUDJPY\',\'AUDNZD\',\'AUDUSD\',\'EURAUD\',\'EURCAD\',\'EURCHF\',\'EURGBP\',\'EURJPY\',\'EURNZD\',\'EURUSD\',\'GBPCHF\',\'GBPJPY\',\'GBPUSD\',\'NZDUSD\',\'USDCAD\',\'USDCHF\',\'USDJPY\')\r\n    and date(deals.""Time"") = {{Time}}\r\n    group by deals.""Login""\r\n    order by Total_client_profit DESC\r\n) AS client_profit_table\r\nWhere Total_client_profit > 0'}, 'type': 'native', 'database': 9}",,table,,False,False,197,,MT5 B-Book Profit per day- Most Profitable Logins - 2019,,native,,"[{'name': 'login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 44, 'nil%': 0.0}, 'type': {'type/Number': {'min': 10863.0, 'max': 184662.0, 'avg': 129402.20454545454, 'sd': 51350.47229174328, 'q1': 97278.0, 'q3': 171598.5}}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 44, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.08, 'max': 195.0, 'avg': 16.134090909090908, 'sd': 31.574742873480808, 'q1': 1.1400000000000001, 'q3': 16.759999999999998}}}}, {'name': 'client_swaps', 'display_name': 'Client Swaps', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': -32.07, 'max': 1.26, 'avg': -0.8756818181818181, 'sd': 4.847566350687002, 'q1': -0.10500000000000001, 'q3': 0.021315565795550002}}}}, {'name': 'total_client_profit', 'display_name': 'Total Client Profit', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 44, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.08, 'max': 195.0, 'avg': 15.25840909090909, 'sd': 31.133184564561947, 'q1': 1.1400000000000001, 'q3': 15.934999999999999}}}}]",,2019-02-20 23:48:48.067,"{'table.pivot_column': 'date', 'table.cell_column': 'company_profit', 'graph.dimensions': ['date'], 'graph.metrics': ['company_profit'], 'column_settings': {'[""name"",""company_profit""]': {'prefix': ''}}, 'pie.slice_threshold': 2.5, 'table.column_widths': [273]}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-10 12:24:49.267,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'native': {'template-tags': {'Time': {'id': '34f582cd-6d12-c11a-a7fd-5f85ff37077d', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': True, 'default': '2019-01-01'}}, 'query': 'Select ""login"", client_profit, client_swaps, Total_client_profit\r\nFROM(\r\n    SELECT deals.""Login"" AS login, SUM(deals.""Profit"") AS client_profit, SUM(deals.""Storage"") AS client_swaps, SUM(deals.""Profit"" + deals.""Storage"") AS Total_client_profit\r\n    FROM mt5_deals_2019 AS deals\r\n    JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n    WHERE ""Action"" IN (0,1) -- In Trades only\r\n    and users.""Group"" like \'%vanuatu_standard%\'\r\n    and ""Symbol"" in (\'AUDCAD\',\'AUDCHF\',\'AUDJPY\',\'AUDNZD\',\'AUDUSD\',\'EURAUD\',\'EURCAD\',\'EURCHF\',\'EURGBP\',\'EURJPY\',\'EURNZD\',\'EURUSD\',\'GBPCHF\',\'GBPJPY\',\'GBPUSD\',\'NZDUSD\',\'USDCAD\',\'USDCHF\',\'USDJPY\')\r\n    and date(deals.""Time"") = {{Time}}\r\n    group by deals.""Login""\r\n    order by Total_client_profit ASC\r\n) AS client_profit_table\r\nWhere Total_client_profit < 0'}, 'type': 'native', 'database': 9}",,table,,False,False,198,,MT5 B-Book Profit per day- Most Unprofitable Logins - 2019,,native,,"[{'name': 'login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 38, 'nil%': 0.0}, 'type': {'type/Number': {'min': 28463.0, 'max': 184148.0, 'avg': 133116.68421052632, 'sd': 57384.23831063872, 'q1': 78235.0, 'q3': 179239.0}}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 38, 'nil%': 0.0}, 'type': {'type/Number': {'min': -471.73999999999995, 'max': 0.14, 'avg': -39.642105263157895, 'sd': 105.62887110853876, 'q1': -15.56, 'q3': -1.52}}}}, {'name': 'client_swaps', 'display_name': 'Client Swaps', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/Number': {'min': -32.88, 'max': 2.44, 'avg': -1.378157894736842, 'sd': 5.824752334492793, 'q1': -0.09535898384862201, 'q3': 0.017131429668360003}}}}, {'name': 'total_client_profit', 'display_name': 'Total Client Profit', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 38, 'nil%': 0.0}, 'type': {'type/Number': {'min': -485.89, 'max': -0.019999999999999, 'avg': -41.02026315789474, 'sd': 110.28530777369977, 'q1': -15.65, 'q3': -1.52}}}}]",,2019-02-20 23:48:48.935,"{'table.pivot_column': 'date', 'table.cell_column': 'company_profit', 'graph.dimensions': ['date'], 'graph.metrics': ['company_profit'], 'column_settings': {'[""name"",""company_profit""]': {'prefix': ''}}, 'pie.slice_threshold': 2.5, 'pie.show_legend': True, 'table.column_widths': [273]}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2018-12-26 13:14:24.940,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM(deals.""Profit"")*-1 AS Company_Profit\r\nFROM mt5_deals_2018 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand users.""Group"" like \'%vanuatu_standard%\'\r\nand ""Symbol"" in (\'AUDCAD\',\'AUDCHF\',\'AUDJPY\',\'AUDNZD\',\'AUDUSD\',\'EURAUD\',\'EURCAD\',\'EURCHF\',\'EURGBP\',\'EURJPY\',\'EURNZD\',\'EURUSD\',\'GBPCHF\',\'GBPJPY\',\'GBPUSD\',\'NZDUSD\',\'USDCAD\',\'USDCHF\',\'USDJPY\')\r\nand date(deals.""Time"") > \'2018-12-06\'\r\n'}}",,scalar,,False,False,129,,MT5 B-Book total Revenue,,native,,"[{'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 14986.369999999988, 'max': 14986.369999999988, 'avg': 14986.369999999988, 'sd': None, 'q1': 14986.369999999988, 'q3': 14986.369999999988}}}}]",,2019-03-14 09:01:27.423,"{'table.column_widths': [273], 'table.pivot_column': 'date', 'table.cell_column': 'company_profit', 'graph.dimensions': ['date'], 'graph.metrics': ['company_profit'], 'column_settings': {'[""name"",""company_profit""]': {'prefix': 'B-Book Profit as of 6th December 2018 = ', 'suffix': '  USD'}}}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-02 13:24:49.740,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_users.""Registration""), \nCount(Distinct(mt5_users.""Login"")) As Total_MT5_Signups,\nCount(Distinct(mt5_users.""Login"")) FILTER (Where mt5_users.""Country"" = \'Indonesia\') As Indonesia,\nCount(Distinct(mt5_users.""Login"")) FILTER (Where mt5_users.""Country"" = \'South Africa\') As South_Africa,\nCount(Distinct(mt5_users.""Login"")) FILTER (Where mt5_users.""Country"" = \'Nigeria\') As Nigeria,\nCount(Distinct(mt5_users.""Login"")) FILTER (Where mt5_users.""Country"" NOT IN (\'Indonesia\',\'South Africa\',\'Nigeria\',\'Brazil\',\'Russia\') ) As Other\nFrom mt5_users\nwhere date(mt5_users.""Registration"") > \'2018-08-01\'\ngroup by date(mt5_users.""Registration"")\nOrder by date(mt5_users.""Registration"") DESC'}}",,line,,False,False,174,,MT5 Breakdown of Client Trading Activity on Volatilities - 2019,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 223, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-08-02T00:00:00.000Z', 'latest': '2019-03-12T00:00:00.000Z'}}}}, {'name': 'total_mt5_signups', 'display_name': 'Total Mt5 Sign Ups', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 94, 'nil%': 0.0}, 'type': {'type/Number': {'min': 26.0, 'max': 146.0, 'avg': 78.98206278026906, 'sd': 29.04298045551435, 'q1': 55.005268635761446, 'q3': 101.38453902349772}}}}, {'name': 'indonesia', 'display_name': 'Indonesia', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 46, 'nil%': 0.0}, 'type': {'type/Number': {'min': 12.0, 'max': 75.0, 'avg': 33.502242152466366, 'sd': 10.180742481402305, 'q1': 26.583333333333332, 'q3': 38.26986141339219}}}}, {'name': 'south_africa', 'display_name': 'South Africa', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 41, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 51.0, 'avg': 11.928251121076233, 'sd': 10.113066211041358, 'q1': 4.40653411439156, 'q3': 16.433040958168103}}}}, {'name': 'nigeria', 'display_name': 'Nigeria', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 23, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 30.0, 'avg': 6.291479820627803, 'sd': 5.549958936484398, 'q1': 2.051866191443358, 'q3': 9.53125}}}}, {'name': 'other', 'display_name': 'Other', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 44, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3.0, 'max': 54.0, 'avg': 22.565022421524663, 'sd': 10.651059917414786, 'q1': 14.199137834914401, 'q3': 30.04181235609351}}}}]",,2019-03-12 07:51:45.278,"{'graph.dimensions': ['date'], 'graph.metrics': ['total_mt5_signups', 'indonesia', 'south_africa', 'nigeria', 'other'], 'series_settings': {'Client Trading Activity On Vol': {'color': '#A989C5', 'display': 'line'}}, 'graph.y_axis.auto_split': False, 'graph.show_trendline': True}"
False,,,,,2019-01-02 10:05:59.109,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_deals_2018.""Time""), Count(Distinct(""Login"")) As Client_Trading_Activity_on_Vol\nfrom mt5_deals_2018\nWHERE ""Action"" IN (0,1) -- In Trades only\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\ngroup by date(mt5_deals_2018.""Time"")'}}",,line,,False,False,156,,MT5 Client Trading Activity on Volatilities,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 365, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:00:00.000Z', 'latest': '2018-12-31T00:00:00.000Z'}}}}, {'name': 'client_trading_activity_on_vol', 'display_name': 'Client Trading Activity On Vol', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 236, 'nil%': 0.0}, 'type': {'type/Number': {'min': 376.0, 'max': 1128.0, 'avg': 653.172602739726, 'sd': 126.75203883586327, 'q1': 549.9346276775705, 'q3': 725.2936707359057}}}}]",,2019-03-14 09:01:41.087,"{'graph.dimensions': ['date'], 'graph.metrics': ['client_trading_activity_on_vol'], 'series_settings': {'Client Trading Activity On Vol': {'color': '#A989C5', 'display': 'line'}}}"
False,,"{'id': 41, 'name': ""Tony Cini's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 42, 'slug': 'tony_cini_s_personal_collection'}",41.0,,2018-12-28 08:09:12.801,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_deals_2018.""Time""), Count(Distinct(""Login"")) As Client_Trading_Activity_on_Vol\nfrom mt5_deals_2018\nWHERE ""Action"" IN (0,1) -- In Trades only\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\ngroup by date(mt5_deals_2018.""Time"")'}}",,line,,False,False,147,,MT5 Client Trading Activity on Volatilities,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 365, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:00:00.000Z', 'latest': '2018-12-31T00:00:00.000Z'}}}}, {'name': 'client_trading_activity_on_vol', 'display_name': 'Client Trading Activity On Vol', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 236, 'nil%': 0.0}, 'type': {'type/Number': {'min': 376.0, 'max': 1128.0, 'avg': 653.172602739726, 'sd': 126.75203883586327, 'q1': 549.9346276775705, 'q3': 725.2936707359057}}}}]",,2019-01-02 10:06:39.195,"{'graph.dimensions': ['date'], 'graph.metrics': ['client_trading_activity_on_vol'], 'series_settings': {'Client Trading Activity On Vol': {'color': '#A989C5', 'display': 'line'}}}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-02 13:22:08.787,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_deals_2019.""Time""), Count(Distinct(""Login"")) As Client_Trading_Activity_on_Vol\nfrom mt5_deals_2019\nWHERE ""Action"" IN (0,1) -- In Trades only\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\ngroup by date(mt5_deals_2019.""Time"")'}}",,line,,False,False,173,,MT5 Client Trading Activity on Volatilities - 2019,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 76, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-03-17T00:00:00.000Z'}}}}, {'name': 'client_trading_activity_on_vol', 'display_name': 'Client Trading Activity On Vol', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 71, 'nil%': 0.0}, 'type': {'type/Number': {'min': 877.0, 'max': 1621.0, 'avg': 1349.2236842105262, 'sd': 149.62868251635095, 'q1': 1261.0, 'q3': 1472.0}}}}]",,2019-04-16 01:13:04.278,"{'graph.dimensions': ['date'], 'graph.metrics': ['client_trading_activity_on_vol'], 'series_settings': {'Client Trading Activity On Vol': {'color': '#A989C5', 'display': 'line'}}}"
False,,"{'id': 194, 'name': 'MT5', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'mt5'}",194.0,,2019-04-09 09:44:25.803,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT users.Group, users.Login, users.Balance, max(deals.Time)\nFROM mt5_deals_2017 AS deals\nINNER JOIN mt5_users AS users\nON (deals.Login=users.Login)\n-- WHERE deals.Comment LIKE '%transfer from%'\nwhere date(deals.Time) = '2017-10-01'\nGROUP BY 1,2,3\n\n""}}",,table,,False,False,931,,MT5 Clients balance in each company,,native,,,,2019-04-09 09:44:25.803,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:17:58.597,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT * FROM (\n  SELECT \n    Login, \n    SUM(CASE WHEN Profit > 0\n      THEN 1\n      ELSE 0\n      END)/count(Profit) AS prob, \n    count(Profit) AS count_profitable\n  FROM mt5_deals_2018\n  WHERE Entry = 1\n  GROUP BY Login) AS t\nWHERE t.count_profitable > 32\nORDER BY prob DESC'}}",,table,,False,False,598,,MT5 clients by percentage of profitable trades,,native,,,,2019-03-22 03:17:58.597,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:18:04.012,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT Login, Balance, BalancePrevDay\nFROM mt5_users\nWHERE Balance<0 \nAND BalancePrevDay>0\nORDER BY Balance\n'}}",,table,,False,False,599,,MT5 clients that went negative yesterday,,native,,,,2019-03-22 03:18:04.012,{}
False,,"{'id': 66, 'name': 'mt5_production', 'description': 'This is a fork of the mt5 collections to organize only questions ready for production', 'color': '#509EE3', 'archived': False, 'location': '/61/', 'personal_owner_id': None, 'slug': 'mt5_production'}",66.0,,2019-01-28 04:38:16.284,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select \n  ""Date"",\n  ""CountDeals"",\n  to_timestamp(""Datetime"")::date as ""Datetime"",\n  to_timestamp(""DatetimePrev"")::date as ""DatetimePrev"",\n  ""Login"", \n  ""Group"", \n  ""Currency"", \n  ""Balance"",   \n  ""Profit"" as ""open_profit"",\n  ""DailyProfit"" as ""closed_profit"",\n  ""ProfitStorage"" as ""open_swaps"",\n  ""DailyStorage"" as ""closed_swaps"",\n  ""DailyBalance"" as ""deposits""\nfrom mt5_daily_2019\njoin (\n  select ""Login"" as ""Login2"", date(""Time"") as ""Date"", count(date(""Time"")) as ""CountDeals"" \n  from mt5_deals_2019 \n  where {{time}}\n  group by date(""Time""), ""Login2"") as t\non to_timestamp(""Datetime"")::date = t.""Date"" and ""Login""=""Login2""\nwhere ""Balance""!=""BalancePrevDay""\nand {{group}}', 'template-tags': {'time': {'widget-type': 'date/all-options', 'default': 'past30days', 'name': 'time', 'type': 'dimension', 'id': '94fb574f-88c6-cff6-20f8-b1c7ae418f6d', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}, 'group': {'widget-type': 'category', 'default': 'real\\costarica', 'name': 'group', 'type': 'dimension', 'id': '5a9988c7-2be3-6596-8da9-20293c33f7ce', 'dimension': ['field-id', 7559], 'display-name': 'Group', 'required': True}}}}",,table,,False,False,244,,mt5 daily,,native,,"[{'name': 'Date', 'display_name': 'Date', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'CountDeals', 'display_name': 'Count Deals', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Datetime', 'display_name': 'Date Time', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'DatetimePrev', 'display_name': 'Date Time Prev', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Login', 'display_name': 'Login', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Group', 'display_name': 'Group', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Currency', 'display_name': 'Currency', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Balance', 'display_name': 'Balance', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'open_profit', 'display_name': 'Open Profit', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'closed_profit', 'display_name': 'Closed Profit', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'open_swaps', 'display_name': 'Open Swaps', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'closed_swaps', 'display_name': 'Closed Swaps', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'deposits', 'display_name': 'Deposits', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-03-07 06:41:43.116,"{'table.pivot_column': 'Currency', 'table.cell_column': 'Login'}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2018-12-18 14:47:35.789,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT date(deals.""Time""), SUM(deals.""Profit"")*-1 AS Company_Profit\r\nFROM mt5_deals_2018 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand users.""Group"" like \'%vanuatu_standard%\'\r\nand ""Symbol"" in (\'AUDCAD\',\'AUDCHF\',\'AUDJPY\',\'AUDNZD\',\'AUDUSD\',\'EURAUD\',\'EURCAD\',\'EURCHF\',\'EURGBP\',\'EURJPY\',\'EURNZD\',\'EURUSD\',\'GBPCHF\',\'GBPJPY\',\'GBPUSD\',\'NZDUSD\',\'USDCAD\',\'USDCHF\',\'USDJPY\')\r\nand date(deals.""Time"") > \'2018-12-06\'\r\nGroup by date(deals.""Time"")\r\n'}}",,area,,False,False,105,,MT5 Daily B-Book Profit,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-12-07T00:00:00.000Z', 'latest': '2018-12-31T00:00:00.000Z'}}}}, {'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': -4179.52, 'max': 4714.680000000002, 'avg': 749.3185000000003, 'sd': 1897.762366850622, 'q1': 45.175, 'q3': 1799.4700000000003}}}}]",,2019-03-08 10:22:59.756,"{'table.pivot_column': 'date', 'table.cell_column': 'company_profit', 'graph.show_goal': True, 'graph.show_trendline': True, 'series_settings': {'Company Profit': {'color': '#509EE3', 'title': 'Company B-Book Profit'}}, 'graph.dimensions': ['date'], 'graph.metrics': ['company_profit']}"
False,,"{'id': 76, 'name': ""Denis makagonov's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 55, 'slug': 'denis_makagonov_s_personal_collection'}",76.0,,2019-01-30 06:56:31.339,"{'email': 'denis.makagonov@binary.com', 'first_name': 'Denis', 'last_login': '2019-09-23T07:22:55.154Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 55, 'last_name': 'makagonov', 'date_joined': '2019-01-29T08:22:50.309Z', 'common_name': 'Denis makagonov'}",55,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select y.""Date"",y.""Balance Beg"",y.""Equity Beg"",y.""Floating PnL"",y.""Closed PnL"",z.""Initial Deposit"",z.""Second Deposit"",z.""Withdrawals""\r\n,y.""Balance Beg""+y.""Closed PnL""+z.""Initial Deposit""+z.""Second Deposit""+z.""Withdrawals"" as ""Balance End""\r\nfrom \r\n    (select \r\n        to_timestamp(""Datetime"")::date as ""Date""\r\n        ,sum(""BalancePrevDay"") as ""Balance Beg"" \r\n        , sum(""EquityPrevDay"") as ""Equity Beg""\r\n        , sum(""Profit"") as ""Floating PnL""\r\n        ,SUM(""DailyProfit"") as ""Closed PnL""\r\n    from mt5_daily_2019\r\n    where to_timestamp(""Datetime"") > \'2019-01-01\'\r\n    group by to_timestamp(""Datetime"")::date\r\n    ) as y\r\nJoin\r\n    (select deposit.""Date""\r\n        ,deposit.""Initial Deposit""\r\n        ,deposit.""Second Deposit""\r\n        ,withdraw.""Withdrawals"" \r\n        from\r\n            (Select \r\n                b.""Date""\r\n                ,Sum(b.""Profit"") Filter (Where b.""row_number""=1) as ""Initial Deposit""\r\n                ,Sum(b.""Profit"") Filter (Where ""row_number""!=1) as ""Second Deposit""\r\n            from\r\n                (select \r\n                    a.""Time""::date as ""Date""\r\n                    ,""Login""\r\n                    ,""Profit"" \r\n                    ,row_number() over (partition by ""Login"" order by ""Time"") \r\n                from\r\n                    (select \r\n                        ""Time""::date\r\n                        , ""Login""\r\n                        ,""Action""\r\n                        ,""Profit""\r\n                    from mt5_deals_2019\r\n                    Where ""Action""=2\r\n                    Union\r\n                    select \r\n                        ""Time""::date\r\n                        , ""Login""\r\n                        ,""Action""\r\n                        ,""Profit""\r\n                    from mt5_deals_2018\r\n                    Where ""Action""=2\r\n                    Union\r\n                    select \r\n                        ""Time""::date\r\n                        , ""Login""\r\n                        ,""Action""\r\n                        ,""Profit""\r\n                    from mt5_deals_2017\r\n                    Where ""Action""=2\r\n                    Union\r\n                    select \r\n                        ""Time""::date\r\n                        , ""Login""\r\n                        ,""Action""\r\n                        ,""Profit""\r\n                    from mt5_deals_2016\r\n                    Where ""Action""=2\r\n                    ) as a\r\n                where a.""Action"" =2 and a.""Profit"" >0\r\n                ) as b \r\n            Group by b.""Date""\r\n        ) as deposit\r\n        join\r\n        (select \r\n            deals.""Time""::date as ""Date""\r\n            , sum(deals.""Profit"") as ""Withdrawals""\r\n        from mt5_deals_2019 as deals\r\n        where deals.""Action"" =2 and deals.""Profit"" <0 and deals.""Time"" > \'2019-01-01\'\r\n        Group by deals.""Time""::date \r\n        ) as withdraw\r\n        on withdraw.""Date""=deposit.""Date"" \r\n    ) as z\r\n on y.""Date""=z.""Date"" '}}",Daily balances Balance End must be equal to Balance Beg on the next Day,table,,False,False,276,,MT5 Daily Balances,,native,,"[{'name': 'Date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-01-28T00:00:00.000Z'}}}}, {'name': 'Balance Beg', 'display_name': 'Balance Beg', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0}, 'type': {'type/Number': {'min': 966114.4300000006, 'max': 1277508.8300000061, 'avg': 1121663.7550000027, 'sd': 87409.52681594028, 'q1': 1046028.2300000022, 'q3': 1176090.3150000009}}}}, {'name': 'Equity Beg', 'display_name': 'Equity Beg', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0}, 'type': {'type/Number': {'min': 592399.6199999987, 'max': 862581.4600000004, 'avg': 739742.797857142, 'sd': 70989.72777526417, 'q1': 687731.2199999999, 'q3': 796176.4149999998}}}}, {'name': 'Floating PnL', 'display_name': 'Floating Pn L', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0}, 'type': {'type/Number': {'min': -595216.1099999999, 'max': -258916.36000000004, 'avg': -379605.69107142865, 'sd': 91829.49748826036, 'q1': -445676.2500000001, 'q3': -296349.38999999996}}}}, {'name': 'Closed PnL', 'display_name': 'Closed Pn L', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0}, 'type': {'type/Number': {'min': -71927.38999999997, 'max': 49506.46000000001, 'avg': -2932.709999999998, 'sd': 33767.26846433819, 'q1': -23787.364999999976, 'q3': 22679.65500000002}}}}, {'name': 'Initial Deposit', 'display_name': 'Initial Deposit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0}, 'type': {'type/Number': {'min': 1559.72, 'max': 15630.429999999998, 'avg': 7263.717500000001, 'sd': 4110.23245897234, 'q1': 4136.84, 'q3': 10124.64}}}}, {'name': 'Second Deposit', 'display_name': 'Second Deposit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0}, 'type': {'type/Number': {'min': 25832.239999999994, 'max': 104973.98000000001, 'avg': 57112.66392857144, 'sd': 20646.789894498146, 'q1': 40509.77500000001, 'q3': 68088.94}}}}, {'name': 'Withdrawals', 'display_name': 'Withdrawals', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0}, 'type': {'type/Number': {'min': -91107.93, 'max': -20950.079999999994, 'avg': -52133.91571428572, 'sd': 18210.974557708316, 'q1': -65689.67500000002, 'q3': -39084.87}}}}, {'name': 'Balance End', 'display_name': 'Balance End', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0}, 'type': {'type/Number': {'min': 963654.1900000016, 'max': 1316818.170000006, 'avg': 1130973.5107142883, 'sd': 90230.0259332984, 'q1': 1069515.1300000022, 'q3': 1178289.4550000024}}}}]",,2019-01-30 06:56:31.339,"{'table.pivot_column': 'Date', 'table.cell_column': 'Balance Beg'}"
False,,"{'id': 66, 'name': 'mt5_production', 'description': 'This is a fork of the mt5 collections to organize only questions ready for production', 'color': '#509EE3', 'archived': False, 'location': '/61/', 'personal_owner_id': None, 'slug': 'mt5_production'}",66.0,,2019-01-28 05:40:11.061,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select -sum(w.""closed_profit""+w.""closed_swaps"")--last(w.""open_profit""::numeric+w.""open_swaps""::numeric)\nfrom (\n    select \n      ""Date"",\n      ""CountDeals"",\n      to_timestamp(""Datetime"")::date as ""Datetime"",\n      to_timestamp(""DatetimePrev"")::date as ""DatetimePrev"",\n      ""Login"", \n      ""Group"", \n      ""Currency"", \n      ""Balance"",   \n      ""Profit"" as ""open_profit"",\n      ""DailyProfit"" as ""closed_profit"",\n      ""ProfitStorage"" as ""open_swaps"",\n      ""DailyStorage"" as ""closed_swaps"",\n      ""DailyBalance"" as ""deposits""\n    from mt5_daily_2019\n    join (\n      select ""Login"" as ""Login2"", date(""Time"") as ""Date"", count(date(""Time"")) as ""CountDeals"" \n      from mt5_deals_2019 \n      where {{time}}\n      group by date(""Time""), ""Login2"") as t\n    on to_timestamp(""Datetime"")::date = t.""Date"" and ""Login""=""Login2""\n    where ""Balance""!=""BalancePrevDay""\n    and {{group}}\n) as w', 'template-tags': {'time': {'widget-type': 'date/all-options', 'default': 'past30days', 'name': 'time', 'type': 'dimension', 'id': 'cb6fafc2-abaa-ad7c-a976-5a940afed56b', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}, 'group': {'widget-type': 'category', 'default': 'real\\costarica', 'name': 'group', 'type': 'dimension', 'id': '177da666-80b3-9283-ff6c-7b81fa5fbb0e', 'dimension': ['field-id', 7559], 'display-name': 'Group', 'required': True}}}}",,scalar,,False,False,246,40.0,mt5 daily cumulative,0bf34d96-1ac6-45a4-9b23-4f36ba0ca2c8,native,,"[{'name': '?column?', 'display_name': '?column?', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}]",,2019-03-07 06:41:43.109,{}
False,,"{'id': 66, 'name': 'mt5_production', 'description': 'This is a fork of the mt5 collections to organize only questions ready for production', 'color': '#509EE3', 'archived': False, 'location': '/61/', 'personal_owner_id': None, 'slug': 'mt5_production'}",66.0,,2019-01-28 06:28:23.216,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select ""Date"", -sum(w.""closed_profit""+w.""closed_swaps""+w.""open_profit""+w.""open_swaps"") as ""MtM_pnl"",-sum(w.""closed_profit""+w.""closed_swaps"") as ""closed_pnl""\nfrom (\n    select \n      ""Date"",\n      ""CountDeals"",\n      to_timestamp(""Datetime"")::date as ""Datetime"",\n      to_timestamp(""DatetimePrev"")::date as ""DatetimePrev"",\n      ""Login"", \n      ""Group"", \n      ""Currency"", \n      ""Balance"",   \n      ""Profit"" as ""open_profit"",\n      ""DailyProfit"" as ""closed_profit"",\n      ""ProfitStorage"" as ""open_swaps"",\n      ""DailyStorage"" as ""closed_swaps"",\n      ""DailyBalance"" as ""deposits""\n    from mt5_daily_2019\n    join (\n      select ""Login"" as ""Login2"", date(""Time"") as ""Date"", count(date(""Time"")) as ""CountDeals"" \n      from mt5_deals_2019 \n      where {{time}}\n      group by date(""Time""), ""Login2"") as t\n    on to_timestamp(""Datetime"")::date = t.""Date"" and ""Login""=""Login2""\n    where ""Balance""!=""BalancePrevDay""\n    and {{group}}\n) as w\ngroup by ""Date""', 'template-tags': {'time': {'widget-type': 'date/all-options', 'default': 'past30days', 'name': 'time', 'type': 'dimension', 'id': '062650e8-ddd9-c217-eeca-345919dfb1e9', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}, 'group': {'widget-type': 'category', 'default': 'real\\costarica', 'name': 'group', 'type': 'dimension', 'id': 'fe8bfbda-37c2-d9d3-da4c-c852f2c9a922', 'dimension': ['field-id', 7559], 'display-name': 'Group', 'required': True}}}}",,line,,False,False,247,,mt5 daily net profit,,native,,"[{'name': 'Date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-05T00:00:00.000Z', 'latest': '2019-03-04T00:00:00.000Z'}}}}, {'name': 'MtM_pnl', 'display_name': 'Mt M Pnl', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 214139.24000000005, 'max': 597882.5299999989, 'avg': 348869.65142857144, 'sd': 89452.4048956067, 'q1': 288638.98, 'q3': 400982.6350000001}}}}, {'name': 'closed_pnl', 'display_name': 'Closed Pnl', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': -64713.63000000001, 'max': 145487.7899999999, 'avg': 2189.11035714285, 'sd': 42572.87033872047, 'q1': -27314.20499999998, 'q3': 21623.18999999999}}}}]",,2019-03-07 06:41:43.977,"{'graph.dimensions': ['Date'], 'graph.metrics': ['MtM_pnl', 'close_pnl']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-07 10:24:06.348,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select \n  date(mt5_users.""Registration""), \n  Count(distinct(mt5_users.""Login"")) As Total_MT5_Signups\nfrom mt5_users\nwhere date(mt5_users.""Registration"") > \'2018-08-01\'\nand  date(mt5_users.""Registration"") < date(NOW())\nand mt5_users.""Group"" like \'real%\'\ngroup by date(mt5_users.""Registration"")\norder by date(mt5_users.""Registration"") desc'}}",,line,,False,False,187,,MT5 Daily Signups,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 202, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-08-02T00:00:00.000Z', 'latest': '2019-02-19T00:00:00.000Z'}}}}, {'name': 'total_mt5_signups', 'display_name': 'Total Mt5 Sign Ups', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 85, 'nil%': 0.0}, 'type': {'type/Number': {'min': 9.0, 'max': 142.0, 'avg': 73.43069306930693, 'sd': 26.949125039084453, 'q1': 52.655, 'q3': 94.0}}}}]",,2019-02-20 02:03:34.661,"{'graph.dimensions': ['date'], 'graph.metrics': ['total_mt5_signups']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-07 10:19:44.896,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_users.""Registration""), \nCount(Distinct(mt5_users.""Login"")) As Total_MT5_Signups\nFrom mt5_users\nwhere date(mt5_users.""Registration"") > \'2018-08-01\'\nand  date(mt5_users.""Registration"") < date(NOW())\nand mt5_users.""Country"" = \'Brazil\'\nand mt5_users.""Group"" like \'real%\'\ngroup by date(mt5_users.""Registration"")\nOrder by date(mt5_users.""Registration"") DESC'}}",,line,,False,False,184,,MT5 Daily Signups from Brazil,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 208, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-08-02T00:00:00.000Z', 'latest': '2019-03-06T00:00:00.000Z'}}}}, {'name': 'total_mt5_signups', 'display_name': 'Total Mt5 Sign Ups', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 13.0, 'avg': 3.413461538461538, 'sd': 2.140524911572927, 'q1': 1.8237758754610751, 'q3': 4.424816186408069}}}}]",,2019-03-07 08:58:12.057,"{'graph.dimensions': ['date'], 'graph.metrics': ['total_mt5_signups']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-02 14:33:58.201,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_users.""Registration""), \nCount(Distinct(mt5_users.""Login"")) As Total_MT5_Signups\nFrom mt5_users\nwhere date(mt5_users.""Registration"") > \'2018-08-01\'\nand  date(mt5_users.""Registration"") < date(NOW())\nand mt5_users.""Country"" = \'Indonesia\'\nand mt5_users.""Group"" like \'real%\'\ngroup by date(mt5_users.""Registration"")\nOrder by date(mt5_users.""Registration"") DESC'}}",,line,,False,False,176,,MT5 Daily Signups from Indonesia,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 202, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-08-02T00:00:00.000Z', 'latest': '2019-02-19T00:00:00.000Z'}}}}, {'name': 'total_mt5_signups', 'display_name': 'Total Mt5 Sign Ups', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4.0, 'max': 67.0, 'avg': 32.73267326732673, 'sd': 9.870193422178824, 'q1': 26.142857142857142, 'q3': 37.816784043380075}}}}]",,2019-02-20 02:03:34.663,"{'graph.y_axis.auto_split': False, 'graph.dimensions': ['date'], 'graph.metrics': ['total_mt5_signups']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-07 10:22:50.464,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_users.""Registration""), \nCount(Distinct(mt5_users.""Login"")) As Total_MT5_Signups\nFrom mt5_users\nwhere date(mt5_users.""Registration"") > \'2018-08-01\'\nand  date(mt5_users.""Registration"") < date(NOW())\nand mt5_users.""Country"" = \'Nigeria\'\ngroup by date(mt5_users.""Registration"")\nOrder by date(mt5_users.""Registration"") DESC'}}",,line,,False,False,186,,MT5 Daily Signups from Nigeria,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 186, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-08-02T00:00:00.000Z', 'latest': '2019-02-18T00:00:00.000Z'}}}}, {'name': 'total_mt5_signups', 'display_name': 'Total Mt5 Sign Ups', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 22, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 30.0, 'avg': 6.516129032258065, 'sd': 5.54122223462757, 'q1': 2.262125229909748, 'q3': 9.608835008437365}}}}]",,2019-02-20 02:03:34.661,"{'graph.dimensions': ['date'], 'graph.metrics': ['total_mt5_signups']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-07 10:21:00.488,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_users.""Registration""), \nCount(Distinct(mt5_users.""Login"")) As Total_MT5_Signups\nFrom mt5_users\nwhere date(mt5_users.""Registration"") > \'2018-08-01\'\nand  date(mt5_users.""Registration"") < date(NOW())\nand mt5_users.""Country"" = \'Russia\'\nand mt5_users.""Group"" like \'real%\'\ngroup by date(mt5_users.""Registration"")\nOrder by date(mt5_users.""Registration"") DESC'}}",,line,,False,False,185,,MT5 Daily Signups from Russia,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 139, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-08-02T00:00:00.000Z', 'latest': '2019-02-14T00:00:00.000Z'}}}}, {'name': 'total_mt5_signups', 'display_name': 'Total Mt5 Sign Ups', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 5.0, 'avg': 1.935251798561151, 'sd': 1.037057103605219, 'q1': 1.11028931933115, 'q3': 2.507166334330393}}}}]",,2019-02-15 01:16:52.492,"{'graph.dimensions': ['date'], 'graph.metrics': ['total_mt5_signups']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-07 10:30:30.197,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_users.""Registration""), \nCount(Distinct(mt5_users.""Login"")) As Total_MT5_Signups\nFrom mt5_users\nwhere date(mt5_users.""Registration"") > \'2018-08-01\'\nand  date(mt5_users.""Registration"") < date(NOW())\nand mt5_users.""Country"" = \'South Africa\'\nand mt5_users.""Group"" like \'real%\'\ngroup by date(mt5_users.""Registration"")\nOrder by date(mt5_users.""Registration"") DESC'}}",,line,,False,False,188,,MT5 Daily Signups from South Africa,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 196, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-08-02T00:00:00.000Z', 'latest': '2019-02-18T00:00:00.000Z'}}}}, {'name': 'total_mt5_signups', 'display_name': 'Total Mt5 Sign Ups', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 33, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 50.0, 'avg': 10.14795918367347, 'sd': 8.355163974721222, 'q1': 4.193751525134303, 'q3': 13.26296581635734}}}}]",,2019-02-20 02:03:34.661,"{'graph.dimensions': ['date'], 'graph.metrics': ['total_mt5_signups']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-07 10:33:56.156,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_users.""Registration""), \nCount(Distinct(mt5_users.""Login"")) As Total_MT5_Signups\nFrom mt5_users\nwhere date(mt5_users.""Registration"") > \'2018-08-01\'\nand  date(mt5_users.""Registration"") < date(NOW())\nand mt5_users.""Country"" = \'Sri Lanka\'\nand mt5_users.""Group"" like \'real%\'\ngroup by date(mt5_users.""Registration"")\nOrder by date(mt5_users.""Registration"") DESC\n'}}",,line,,False,False,190,,MT5 Daily Signups from Sri Lanka,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 184, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-08-02T00:00:00.000Z', 'latest': '2019-02-26T00:00:00.000Z'}}}}, {'name': 'total_mt5_signups', 'display_name': 'Total Mt5 Sign Ups', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 7.0, 'avg': 2.581521739130434, 'sd': 1.446263650228724, 'q1': 1.392003197442556, 'q3': 3.5327485830028733}}}}]",,2019-02-27 15:04:02.450,"{'graph.dimensions': ['date'], 'graph.metrics': ['total_mt5_signups']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-07 10:32:05.952,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_users.""Registration""), \nCount(Distinct(mt5_users.""Login"")) As Total_MT5_Signups\nFrom mt5_users\nwhere date(mt5_users.""Registration"") > \'2018-08-01\'\nand  date(mt5_users.""Registration"") < date(NOW())\nand mt5_users.""Country"" = \'Zimbabwe\'\nand mt5_users.""Group"" like \'real%\'\ngroup by date(mt5_users.""Registration"")\nOrder by date(mt5_users.""Registration"") DESC'}}",,line,,False,False,189,,MT5 Daily Signups from Zimbabwe,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 162, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-08-03T00:00:00.000Z', 'latest': '2019-02-18T00:00:00.000Z'}}}}, {'name': 'total_mt5_signups', 'display_name': 'Total Mt5 Sign Ups', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 23.0, 'avg': 5.160493827160494, 'sd': 4.435757556070321, 'q1': 1.682796752283965, 'q3': 7.681145747868608}}}}]",,2019-02-20 02:03:35.352,"{'graph.dimensions': ['date'], 'graph.metrics': ['total_mt5_signups']}"
False,,"{'id': 76, 'name': ""Denis makagonov's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 55, 'slug': 'denis_makagonov_s_personal_collection'}",76.0,,2019-02-01 06:19:48.332,"{'email': 'denis.makagonov@binary.com', 'first_name': 'Denis', 'last_login': '2019-09-23T07:22:55.154Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 55, 'last_name': 'makagonov', 'date_joined': '2019-01-29T08:22:50.309Z', 'common_name': 'Denis makagonov'}",55,9,"{'database': 9, 'type': 'native', 'native': {'query': 'WITH cte as( \nSELECT ""Action"", COUNT(*) cnt,COUNT(DISTINCT ""Login"") uLogins FROM mt5_deals_2019 GROUP BY ""Action""\nunion ALL\nSELECT ""Action"", COUNT(*) cnt,COUNT(DISTINCT ""Login"") uLogins FROM mt5_deals_2018 GROUP BY ""Action""\nunion ALL\nSELECT ""Action"", COUNT(*) cnt,COUNT(DISTINCT ""Login"") uLogins FROM mt5_deals_2017 GROUP BY ""Action""\nunion ALL\nSELECT ""Action"", COUNT(*) cnt,COUNT(DISTINCT ""Login"") uLogins FROM mt5_deals_2016 GROUP BY ""Action"")\n\nSELECT ""Action"",SUM(cnt) cnt FROM cte GROUP BY ""Action""'}}",,table,,False,False,338,,MT5 Deals Exploration,,native,,"[{'name': 'Action', 'display_name': 'Action', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 19, 'avg': 5.7, 'sd': 5.538752366533259, 'q1': 2, 'q3': 7}}}}, {'name': 'cnt', 'display_name': 'Cnt', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/Number': {'min': 45, 'max': 10406563, 'avg': 2129694.6, 'sd': 4364108.033097109, 'q1': 78, 'q3': 421831}}}}]",,2019-02-01 06:19:48.332,"{'table.pivot_column': 'Action', 'table.cell_column': 'Action'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-15 07:35:12.727,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT\n  max(""Time"") as time_of_last_deal,\n  now(),\n  extract(epoch from now()-max(""Time"")) as ""seconds_since_last_deal""\nFROM mt5_deals_2019\n'}}",,table,,False,False,377,,MT5 deals sync lag_,,native,,"[{'name': 'time_of_last_deal', 'display_name': 'Time Of Last Deal', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-03-17T07:02:05.000Z', 'latest': '2019-03-17T07:02:05.000Z'}}}}, {'name': 'now', 'display_name': 'Now', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-16T01:12:53.599Z', 'latest': '2019-04-16T01:12:53.599Z'}}}}, {'name': 'seconds_since_last_deal', 'display_name': 'Seconds Since Last Deal', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2571048.59957, 'max': 2571048.59957, 'avg': 2571048.59957, 'sd': None, 'q1': 2571048.59957, 'q3': 2571048.59957}}}}]",,2019-04-16 01:12:54.914,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:17:42.719,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Look up disabled accounts on MT5 platform > Change the group name to display different group names > no date range (list exhibits all disabled accounts for MT group)\nselect ""Login"", ""Rights""::bigint & 1 = 0 as disabled ,""Group"" from mt5.mt5_users where ""Group"" Like \'%malta\' ORDER by disabled DESC'}}",Look up disabled accounts on MT5 platform > Change the group name to display different group names > no date range (list exhibits all disabled accounts for MT group),table,,False,False,595,,MT5 Disabled accounts,,native,,,,2019-03-22 03:17:42.719,{}
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-06 09:18:26.358,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select \na. ""Login"",\n--a. ""Order"",\n--a.""Symbol"",\na.""ExpertID"",\n--a.""TimeSetup"",\n--a.""TimeDone"",\n--b. ""Order"",\nsum (""Profit"") as ""ClosedPL"",\ncount (""Profit"") as ""Trades_number""\n\nfrom mt5_orders_2019 a\ninner join mt5_deals_2019 b on a.""Order""=b.""Order""\nwhere \n""TimeDone"" >= NOW()-\'2 hour\'::interval\n--and a.""Login"" = \'173703\'\nand a.""ExpertID"" = \'250916\'\ngroup by a.""Login"", a.""ExpertID""\norder by ""ClosedPL"" desc'}}",To find new accounts trading with a known dangerous EA,table,,False,False,454,,MT5 EA watchlist,,native,,"[{'name': 'Login', 'display_name': 'Login', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'ExpertID', 'display_name': 'Expertid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'ClosedPL', 'display_name': 'Closedpl', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Trades_number', 'display_name': 'Trades Number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-21 01:00:29.657,"{'table.pivot_column': 'ExpertID', 'table.cell_column': 'Login'}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2018-12-28 13:04:15.707,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(to_timestamp(daily.""Datetime"")), SUM (daily.""Profit"" + daily.""ProfitStorage"")*-1 AS Company_PnL_On_Open_Positions\nfrom mt5_daily_2018 daily\nWhere ""Group"" LIKE \'%costarica%\'\ngroup by date(to_timestamp(daily.""Datetime""))'}}",,line,,False,False,149,,MT5 End of Day PnL on Open Positions,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 276, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:00:00.000Z', 'latest': '2018-12-31T00:00:00.000Z'}}}}, {'name': 'company_pnl_on_open_positions', 'display_name': 'Company Pnl On Open Positions', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 276, 'nil%': 0.0}, 'type': {'type/Number': {'min': 46299.56999999998, 'max': 302837.58, 'avg': 172380.45268115943, 'sd': 36744.725658378986, 'q1': 147156.84424245122, 'q3': 190536.75250000003}}}}]",,2019-03-14 09:01:42.716,"{'graph.dimensions': ['date'], 'graph.metrics': ['company_pnl_on_open_positions']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-02 12:58:18.506,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(to_timestamp(daily.""Datetime"")), SUM (daily.""Profit"" + daily.""ProfitStorage"")*-1 AS Company_PnL_On_Open_Positions\nfrom mt5_daily_2019 daily\nWhere ""Group"" LIKE \'%costarica%\'\ngroup by date(to_timestamp(daily.""Datetime""))'}}",,line,,False,False,164,,MT5 End of Day PnL on Open Positions for CR accounts - 2019,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 70, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-03-11T00:00:00.000Z'}}}}, {'name': 'company_pnl_on_open_positions', 'display_name': 'Company Pnl On Open Positions', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 70, 'nil%': 0.0}, 'type': {'type/Number': {'min': 226251.83999999997, 'max': 649853.48, 'avg': 418174.73042857135, 'sd': 108478.38523107012, 'q1': 350665.19000000006, 'q3': 479055.7000000003}}}}]",,2019-03-12 07:51:45.754,"{'graph.dimensions': ['date'], 'graph.metrics': ['company_pnl_on_open_positions']}"
False,,,,,2019-01-02 10:12:28.015,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT date_trunc(\'hour\', mt5_deals_2018.""Time"") AS Date,\nSUM(mt5_deals_2018.""Profit"")*-1 AS Company_Profit,\nSUM((mt5_deals_2018.""Volume""/10000)*60*0.5) FILTER (Where  date_trunc(\'hour\', mt5_deals_2018.""Time"") >= \'2018-12-27 13:00:00\' and date(mt5_deals_2018.""Time"") <= \'2018-12-30\') AS Expected_Profit\nfrom mt5_deals_2018\nLEFT JOIN mt5_users users ON mt5_deals_2018.""Login"" = users.""Login""\nwhere  date_trunc(\'hour\', mt5_deals_2018.""Time"")  >= \'2018-12-27 13:00:00\'\nand date(mt5_deals_2018.""Time"") <= \'2018-12-31\'\nand mt5_deals_2018.""Action"" IN (0,1)\nand users.""Group"" LIKE \'%real\\\\costarica%\'\nand ""Symbol"" = \'Volatility 75 Index\'\ngroup by date_trunc(\'hour\', mt5_deals_2018.""Time"")'}}",,line,,False,False,157,,MT5 Expected VS Realized Profit,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 107, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-12-27T13:00:00.000Z', 'latest': '2018-12-31T23:00:00.000Z'}}}}, {'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 107, 'nil%': 0.0}, 'type': {'type/Number': {'min': -9298.600000000006, 'max': 44566.390000000014, 'avg': -190.74897196261668, 'sd': 4749.633758300166, 'q1': -1330.7419458526006, 'q3': 216.3289862662382}}}}, {'name': 'expected_profit', 'display_name': 'Expected Profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 83, 'nil%': 0.22429906542056002}, 'type': {'type/Number': {'min': 184.8, 'max': 1430.7, 'avg': 748.922891566265, 'sd': 322.521188309559, 'q1': 490.05, 'q3': 1055.455569977725}}}}]",,2019-03-05 08:46:37.164,"{'graph.y_axis.scale': 'linear', 'graph.y_axis.auto_range': True, 'graph.y_axis.auto_split': False, 'graph.dimensions': ['date'], 'graph.metrics': ['company_profit', 'expected_profit']}"
False,,"{'id': 41, 'name': ""Tony Cini's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 42, 'slug': 'tony_cini_s_personal_collection'}",41.0,,2018-12-27 15:02:00.326,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT date_trunc(\'hour\', mt5_deals_2018.""Time"") AS Date,\nSUM(mt5_deals_2018.""Profit"")*-1 AS Company_Profit,\nSUM((mt5_deals_2018.""Volume""/10000)*60*0.5) FILTER (Where  date_trunc(\'hour\', mt5_deals_2018.""Time"") >= \'2018-12-27 13:00:00\' and date(mt5_deals_2018.""Time"") <= \'2018-12-30\') AS Expected_Profit\nfrom mt5_deals_2018\nLEFT JOIN mt5_users users ON mt5_deals_2018.""Login"" = users.""Login""\nwhere  date_trunc(\'hour\', mt5_deals_2018.""Time"")  >= \'2018-12-27 13:00:00\'\nand date(mt5_deals_2018.""Time"") <= \'2018-12-31\'\nand mt5_deals_2018.""Action"" IN (0,1)\nand users.""Group"" LIKE \'%real\\\\costarica%\'\nand ""Symbol"" = \'Volatility 75 Index\'\ngroup by date_trunc(\'hour\', mt5_deals_2018.""Time"")'}}",,line,,False,False,136,,MT5 Expected VS Realized Profit,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 107, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-12-27T13:00:00.000Z', 'latest': '2018-12-31T23:00:00.000Z'}}}}, {'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 107, 'nil%': 0.0}, 'type': {'type/Number': {'min': -9298.599999999999, 'max': 44566.39000000001, 'avg': -190.74897196261662, 'sd': 4749.633758300165, 'q1': -1330.741945852601, 'q3': 216.3289862662382}}}}, {'name': 'expected_profit', 'display_name': 'Expected Profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 83, 'nil%': 0.22429906542056002}, 'type': {'type/Number': {'min': 184.8, 'max': 1430.7, 'avg': 748.922891566265, 'sd': 322.521188309559, 'q1': 490.05, 'q3': 1055.455569977725}}}}]",,2019-03-13 07:08:03.339,"{'graph.y_axis.scale': 'linear', 'graph.y_axis.auto_range': True, 'graph.y_axis.auto_split': False, 'graph.dimensions': ['date'], 'graph.metrics': ['company_profit', 'expected_profit']}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2019-01-29 13:50:35.327,"{'email': 'denis.makagonov@binary.com', 'first_name': 'Denis', 'last_login': '2019-09-23T07:22:55.154Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 55, 'last_name': 'makagonov', 'date_joined': '2019-01-29T08:22:50.309Z', 'common_name': 'Denis makagonov'}",55,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT date_trunc(\'month\', CAST(""public"".""mt5_deals_2018"".""Time"" AS timestamp)) AS ""Time"", sum(""public"".""mt5_deals_2018"".""Profit"") AS ""sum""\n        , sum(""public"".""mt5_deals_2018"".""Profit"") AS ""sum""\nFROM ""public"".""mt5_deals_2018""\nGROUP BY date_trunc(\'month\', CAST(""public"".""mt5_deals_2018"".""Time"" AS timestamp))\nORDER BY date_trunc(\'month\', CAST(""public"".""mt5_deals_2018"".""Time"" AS timestamp)) ASC'}}",,combo,,False,False,270,,MT5 Experimental,,native,,"[{'name': 'Time', 'display_name': 'Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:00:00.000Z', 'latest': '2018-12-01T00:00:00.000Z'}}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1377625.5399999493, 'max': 1017893.3000000027, 'avg': -23004.474999995087, 'sd': 605378.7551665165, 'q1': 243.8300000002182, 'q3': 180123.48999999347}}}}, {'name': 'sum_2', 'display_name': 'Sum 2', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1377625.5399999493, 'max': 1017893.3000000027, 'avg': -23004.474999995087, 'sd': 605378.7551665165, 'q1': 243.8300000002182, 'q3': 180123.48999999347}}}}]",,2019-02-20 07:22:10.249,"{'graph.show_goal': True, 'graph.show_trendline': True, 'table.pivot': False, 'graph.goal_label': '+100500', 'graph.goal_value': 100500, 'graph.metrics': ['sum', 'sum_2'], 'column_settings': {'[""name"",""sum""]': {'show_mini_bar': True, 'number_style': 'currency'}}, 'series_settings': {'sum': {'axis': 'left'}}, 'graph.dimensions': ['Time']}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-14 05:17:37.336,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT users.""Login"", users.""Registration"", users.""Group"", users.""Name"", users.""Country"", sum(deals.""Profit"") as sum\nFROM mt5_deals_2019 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nwhere Date(deals.""Time"") >= NOW()-\'24 hour\'::interval\nand ""PositionID""=0\n--and ""Group"" like \'%vanuatu%\'\nGroup by users.""Login"", users.""Name"", users.""Country""\norder by sum desc\n'}}",,table,,False,False,495,,MT5 fundings (all groups),,native,,"[{'name': 'Login', 'display_name': 'Login', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Registration', 'display_name': 'Registration', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Group', 'display_name': 'Group', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Name', 'display_name': 'Name', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-21 00:00:31.651,"{'table.pivot_column': 'Group', 'table.cell_column': 'Login'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-13 07:09:38.640,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT users.""Login"", users.""Registration"", users.""Group"", users.""Name"", users.""Country"", sum(deals.""Profit"") as sum\nFROM mt5_deals_2019 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nwhere Date(deals.""Time"") >= NOW()-\'24 hour\'::interval\nand ""PositionID""=0\nand ""Group"" like \'%vanuatu%\'\nGroup by users.""Login"", users.""Name"", users.""Country""\norder by sum desc\n'}}",,table,,False,False,494,,MT5 fundings (Vanuatu),,native,,"[{'name': 'Login', 'display_name': 'Login', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Registration', 'display_name': 'Registration', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Group', 'display_name': 'Group', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Name', 'display_name': 'Name', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-21 00:00:09.264,"{'table.pivot_column': 'Group', 'table.cell_column': 'Login'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:18:20.241,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT\ng.Group AS ""Group"", \nCOALESCE(s.Path, gs.Path) AS ""Path"",\ns.Symbol AS ""Symbol"",\ns.Description AS ""Description"",\ns.ContractSize AS ""Contract Size"",\nCOALESCE(gs.VolumeMin, s.VolumeMin) AS ""Volume Min"",\nCOALESCE(gs.VolumeMax, s.VolumeMax) AS ""Volume Max"",\nCOALESCE(gs.VolumeStep, s.VolumeStep) AS ""Volume Step"",\nCOALESCE(gs.VolumeLimit, s.VolumeLimit) AS ""Volume Limit"",\ns.TickSize AS ""Tick Size"",\ns.TickValue AS ""Tick Value"",\nCOALESCE(gs.MarginInitialBuy, s.MarginInitialBuy) AS ""Margin Buy"",\nCOALESCE(gs.MarginInitialSell, s.MarginInitialSell) AS ""Margin Sell"",\nCOALESCE(gs.SwapLong, s.SwapLong) AS ""Swap Long"",\nCOALESCE(gs.SwapShort, s.SwapShort) AS ""Swap Short""\nFROM mt5_symbols AS s, mt5_groups_symbols AS gs, mt5_groups AS g\nWHERE g.Group_ID=gs.Group_ID\nAND s.Symbol_ID=gs.Symbol_ID'}}",,table,,False,False,602,,MT5 group symbol specifications,,native,,,,2019-03-22 03:18:20.241,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:18:14.643,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT\ng.Group,\nCOALESCE(s.Path, gs.Path) AS ""Path"",\ns.Symbol AS ""Symbol"",\ns.Description AS ""Description"",\ns.ContractSize AS ""Contract Size"",\nCOALESCE(gs.VolumeMin, s.VolumeMin) AS ""Volume Min"",\nCOALESCE(gs.VolumeMax, s.VolumeMax) AS ""Volume Max"",\nCOALESCE(gs.VolumeStep, s.VolumeStep) AS ""Volume Step"",\nCOALESCE(gs.VolumeLimit, s.VolumeLimit) AS ""Volume Limit"",\ns.TickSize AS ""Tick Size"",\ns.TickValue AS ""Tick Value"",\nCOALESCE(gs.MarginInitialBuy, s.MarginInitialBuy) AS ""Margin Buy"",\nCOALESCE(gs.MarginInitialSell, s.MarginInitialSell) AS ""Margin Sell"",\nCOALESCE(gs.SwapLong, s.SwapLong) AS ""Swap Long"",\nCOALESCE(gs.SwapShort, s.SwapShort) AS ""Swap Short""\nFROM mt5_symbols AS s, mt5_groups_symbols AS gs, mt5_groups AS g\nWHERE gs.Path=s.Path\nAND g.Group_ID=gs.Group_ID\nORDER BY g.Group, s.Path\n'}}",,table,,False,False,601,,MT5 group symbol specifications UPDATED,,native,,,,2019-03-22 03:18:14.643,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:18:09.366,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT\ng.Group,\nCOALESCE(s.Path, gs.Path) AS ""Path"",\ns.Symbol AS ""Symbol"",\ns.Description AS ""Description"",\ns.ContractSize AS ""Contract Size"",\nCOALESCE(gs.VolumeMin, s.VolumeMin)/10000 AS ""Volume Min"",\nCOALESCE(gs.VolumeMax, s.VolumeMax)/10000 AS ""Volume Max"",\nCOALESCE(gs.VolumeStep, s.VolumeStep)/10000 AS ""Volume Step"",\nCOALESCE(gs.VolumeLimit, s.VolumeLimit)/10000 AS ""Volume Limit"",\ns.TickSize AS ""Tick Size"",\ns.TickValue AS ""Tick Value"",\nCOALESCE(gs.MarginInitialBuy, s.MarginInitialBuy) AS ""Margin Buy"",\nCOALESCE(gs.MarginInitialSell, s.MarginInitialSell) AS ""Margin Sell"",\nCOALESCE(gs.SwapLong, s.SwapLong) AS ""Swap Long"",\nCOALESCE(gs.SwapShort, s.SwapShort) AS ""Swap Short""\nFROM mt5_symbols AS s, mt5_groups_symbols AS gs, mt5_groups AS g\nWHERE gs.Path=s.Path\nAND g.Group_ID=gs.Group_ID\nORDER BY g.Group, s.Path\n'}}",,table,,False,False,600,,MT5 group symbol specifications UPDATED FINAL,,native,,,,2019-03-22 03:18:09.366,{}
False,,"{'id': 76, 'name': ""Denis makagonov's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 55, 'slug': 'denis_makagonov_s_personal_collection'}",76.0,,2019-01-30 05:25:15.075,"{'email': 'denis.makagonov@binary.com', 'first_name': 'Denis', 'last_login': '2019-09-23T07:22:55.154Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 55, 'last_name': 'makagonov', 'date_joined': '2019-01-29T08:22:50.309Z', 'common_name': 'Denis makagonov'}",55,9,"{'native': {'template-tags': {'RegistrationPeriodTo': {'id': '37fb68a3-5265-64c8-2b8d-011f688f591c', 'name': 'RegistrationPeriodTo', 'display-name': 'RegistrationPeriodTo', 'type': 'date', 'required': True, 'default': '2019-01-30'}, 'RegistrationPeriodFrom': {'id': '4ac32844-6ac2-700e-1006-6023097ece63', 'name': 'RegistrationPeriodFrom', 'display-name': 'RegistrationPeriodFrom', 'type': 'date', 'required': True, 'default': '2019-01-01'}}, 'query': 'SELECT \n    CASE WHEN ""LeadSource"" <>\'\' THEN ""LeadSource"" ELSE \'Unknown Source\' END ""LeadSource""\n    ,CASE WHEN ""LeadCampaign"" <>\'\' THEN ""LeadCampaign"" ELSE \'Unknown Campaign\' END ""LeadCampaign""\n    ,CASE WHEN ""Country"" <>\'\' THEN ""Country"" ELSE \'Unknown Country\' END  ""Country""\n    ,COUNT(*) CountOfRegisteredLeads\n    ,SUM(CASE WHEN ""Balance"" <> 0 THEN 1 ELSE 0 END) CountOfDepositedClients\n    ,SUM(CASE WHEN ""Balance"" <> 0 THEN 1 ELSE 0 END)*1.00/COUNT(*) ConversionFromLeadsToDepositedClients\n    ,SUM(""Balance"") TotalBalanceFromSource\n    ,SUM(""Balance"")/COUNT(*) avgBalanceOnSource \nFROM ""mt5_users"" \nwhere mt5_users.""Registration"" between {{RegistrationPeriodFrom}} and {{RegistrationPeriodTo}} \nand mt5_users.""Group"" IN (\'real\\costarica\')\nGroup by\n    CASE WHEN ""LeadSource"" <>\'\' THEN ""LeadSource"" ELSE \'Unknown Source\' END\n    ,CASE WHEN ""LeadCampaign"" <>\'\' THEN ""LeadCampaign"" ELSE \'Unknown Campaign\' END\n    ,CASE WHEN ""Country"" <>\'\' THEN ""Country"" ELSE \'Unknown Country\' END\nORDER BY 4 DESC '}, 'type': 'native', 'database': 9}",MT5 Lead sources costarica,scatter,,False,False,274,55.0,MT5 Lead sources CR,580e943c-8176-480e-9865-71f881a34365,native,,"[{'name': 'LeadSource', 'display_name': 'Lead Source', 'base_type': 'type/Text', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 36, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 12.424698795180722}}}}, {'name': 'LeadCampaign', 'display_name': 'Lead Campaign', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 162, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 10.80421686746988}}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 57, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.728915662650602}}}}, {'name': 'countofregisteredleads', 'display_name': 'Count Of Registered Leads', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 29, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 552.0, 'avg': 7.596385542168675, 'sd': 40.1476849047417, 'q1': 1.0, 'q3': 1.983702041870258}}}}, {'name': 'countofdepositedclients', 'display_name': 'Count Of Deposited Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 21, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 340.0, 'avg': 3.364457831325301, 'sd': 20.992222743607922, 'q1': 0.18631503415724301, 'q3': 1.3899318726322352}}}}, {'name': 'conversionfromleadstodepositedclients', 'display_name': 'Conversion From Leads To Deposited Clients', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 38, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1.0, 'avg': 0.521721203757194, 'sd': 0.45336539259211306, 'q1': 0.023153518884758, 'q3': 0.9845098579922721}}}}, {'name': 'totalbalancefromsource', 'display_name': 'Total Balance From Source', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 172, 'nil%': 0.0}, 'type': {'type/Number': {'min': -359.71000000000004, 'max': 94368.95999999998, 'avg': 565.5619578313253, 'sd': 5357.549257177402, 'q1': -50.821217470621434, 'q3': 26.67362145008154}}}}, {'name': 'avgbalanceonsource', 'display_name': 'Avg Balance On Source', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 179, 'nil%': 0.0}, 'type': {'type/Number': {'min': -32.70090909090909, 'max': 3494.51, 'avg': 61.289724470986485, 'sd': 297.28753387016457, 'q1': -0.44493146416066703, 'q3': 10.52408065333258}}}}]",,2019-01-31 05:42:30.992,"{'graph.dimensions': ['countofregisteredleads'], 'graph.metrics': ['totalbalancefromsource'], 'scatter.bubble': 'countofdepositedclients', 'graph.x_axis.title_text': 'Count of Leads', 'funnel.dimension': 'cnt', 'funnel.metric': 'cnt_2', 'table.pivot_column': 'countofdeposited', 'table.cell_column': 'cnt'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:17:47.987,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'Select date_trunc(\'month\', (ozt.""trade_time"")),\ncast(((SUM(((usd_amount)))*0.00001)) as decimal(100,3)) As LP_Commissions\nfrom mt5.oz_archive_trades_view ozt\nwhere date(ozt.trade_time) >= \'2018-01-01\'\n--and  date(ozt.trade_time) <= \'2018-03-31\'\nand ozt.order_result NOT IN (0,2) -- Ignore trades done when there are swaps or Rejected\nand ozt.trade_status = 2 -- Trade Filled\nand ozt.""taker_mt_group"" like \'%vanuatu%\'\nand ozt.core_order_side IN (1,2) -- 1 is Buy and 2 is Sell\nand ozt.maker_name NOT IN (\'Warehouse\',\'FXOpen\',\'FXOpenUK\') -- Means ignore B-Booked Trades and Trades on Cryptos\n-- and ozt.taker_name != \'Warehouse\' -- Means ignore Rebalancing BUT WE WILL NEED TO CONSIDER TRADES USED FOR REBALANCING \ngroup by date_trunc(\'month\', (ozt.""trade_time""))\n'}}",,table,,False,False,596,,MT5 LP Commission - Per Month,,native,,,,2019-03-22 03:17:47.987,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-20 05:54:56.604,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'query': {'source-table': 759, 'filter': ['time-interval', ['field-id', 7018], -90, 'day', {}], 'aggregation': [['count']], 'breakout': [['datetime-field', ['field-id', 7018], 'day']], 'order-by': [['desc', ['datetime-field', ['field-id', 7018], 'day']]]}, 'type': 'query', 'database': 9}",,table,,False,False,399,,MT5 new sign-ups by date,,query,,"[{'name': 'Registration', 'display_name': 'Registration', 'base_type': 'type/DateTime', 'unit': 'day', 'fingerprint': {'global': {'distinct-count': 9979, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2016-07-07T03:45:11.000Z', 'latest': '2018-12-18T08:06:08.000Z'}}}, 'special_type': None}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 63, 'nil%': 0.0}, 'type': {'type/Number': {'min': 36.0, 'max': 146.0, 'avg': 96.62222222222222, 'sd': 26.118820016439987, 'q1': 80.0, 'q3': 116.58113883008419}}}}]",759.0,2019-02-21 05:09:18.983,"{'table.pivot': True, 'table.pivot_column': 'Country', 'table.cell_column': 'count'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-06 09:42:11.087,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select \n""Login"",\n--a. ""Order"",\n--a.""Symbol"",\n--a.""ExpertID"",\n--a.""TimeSetup"",\n--a.""TimeDone"",\n--b. ""Order"",\nsum (""Profit"") as ""ClosedPL"",\ncount (""Profit"") as ""Trades_number""\nFROM mt5_deals_2019\nwhere \n(""Time"" > {{since1}})\n      and\n      (""Time"" < {{since2}})\nand ""Login"" in (\'104375\', \'72870\', \'189071\')\nand ""Action"" in (0, 1)\nGroup by ""Login""\norder by ""ClosedPL"" desc', 'template-tags': {'since1': {'id': '9cbdf275-aba2-7510-fcca-56ca17fdb625', 'name': 'since1', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-13'}, 'since2': {'id': '6479c9d3-ebe7-3a08-ff5c-5cc88172ff89', 'name': 'since2', 'display-name': 'End Date not inclusive', 'type': 'date', 'required': True, 'default': '2019-03-06'}}}}",,table,,False,False,455,,MT5 news traders,,native,,"[{'name': 'Login', 'display_name': 'Login', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'ClosedPL', 'display_name': 'Closed Pl', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'Trades_number', 'display_name': 'Trades Number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-03-08 03:16:28.925,"{'table.pivot_column': 'Login', 'table.cell_column': 'Login'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:18:25.525,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT * from (SELECT\n   users.Group AS user_group, \n   users.Login AS user_login, \n   pos.Symbol AS pos_symbol,\n   sum(CASE  WHEN pos.Profit>=0 THEN pos.Volume\n              WHEN pos.Profit<0 THEN -pos.Volume\n          END) AS diff_volume, \n   count(pos.Profit) AS count_pos,\n   sum(pos.Profit) AS total_profit\n  FROM mt5_positions AS pos\n  INNER JOIN mt5_users AS users\n  ON (pos.Login=users.Login)\n  GROUP BY users.Group, users.Login, pos.Symbol) AS t\nWHERE t.diff_volume=0\nORDER BY t.user_group, t.user_login, t.pos_symbol'}}",,table,,False,False,603,,MT5 perfect hedge,,native,,,,2019-03-22 03:18:25.525,{}
False,,,,,2019-02-13 02:39:11.903,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT\n  max(""TimeUpdate"") as ""time_of_last_position_update"",\n  --max(""Time"") as time_of_last_deal,\n  now(),\n  extract(epoch from now()-max(""TimeUpdate"")) as ""seconds_since_last_position_update""\nFROM mt5_positions\nlimit 10'}}",,table,,False,False,365,,MT5 Positions Sync Delays,,native,,"[{'name': 'time_of_last_position_update', 'display_name': 'Time Of Last Position Update', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-03-05T07:30:06.000Z', 'latest': '2019-03-05T07:30:06.000Z'}}}}, {'name': 'now', 'display_name': 'Now', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-03-06T02:11:51.912Z', 'latest': '2019-03-06T02:11:51.912Z'}}}}, {'name': 'seconds_since_last_position_update', 'display_name': 'Seconds Since Last Position Update', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 67305.912615, 'max': 67305.912615, 'avg': 67305.912615, 'sd': None, 'q1': 67305.912615, 'q3': 67305.912615}}}}]",,2019-03-06 02:11:53.034,"{'table.pivot_column': 'time_of_last_position_update', 'table.cell_column': 'seconds_since_last_position_update'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:17:53.333,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'Select ozt.core_symbol,\ncast(SUM(((maker_filled_volume))) as decimal(100,3)) As Filled_Volume,\ncast(SUM(((usd_amount))) as decimal(100,3)) As Volume_in_USD,\ncast(SUM(((maker_filled_volume)*(ABS(core_total_spread))*(term_ref_conversion_ratio))) as decimal(100,3)) As Spread_Revenue\nfrom mt5.oz_trades_view ozt\nwhere date(ozt.trade_time) >= \'2018-01-01\'\n--and  date(ozt.trade_time) <= \'2018-10-31\'\nand ozt.order_result NOT IN (0,2) -- Ignore trades done when there are swaps or Rejected\nand ozt.trade_status = 2 -- Trade Filled\nand ozt.""taker_mt_group"" like \'%vanuatu%\'\nand ozt.core_order_side IN (1,2) -- 1 is Buy and 2 is Sell\nand ozt.maker_name NOT IN (\'Warehouse\',\'FXOpen\',\'FXOpenUK\') -- Means ignore B-Booked Trades and Trades on Cryptos\nand ozt.taker_name != \'Warehouse\' -- Means ignore Rebalancing \ngroup by ozt.core_symbol\n'}}",,table,,False,False,597,,MT5 Spread Revenue - per month,,native,,,,2019-03-22 03:17:53.333,{}
False,,,,,2019-02-06 02:14:40.235,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT\n  to_char(max(""Time""), \'YYYY-MM-DD HH:mm:SS\') as time_of_last_deal,\n  to_char(now(), \'YYYY-MM-DD HH:mm:SS\') as time_now,\n  extract(epoch from now()-max(""Time"")) as ""seconds_since_last_deal""\nFROM mt5_deals_2019\n'}}",,table,,False,False,346,,MT5 sync lag,,native,,"[{'name': 'time_of_last_deal', 'display_name': 'Time Of Last Deal', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'time_now', 'display_name': 'Time Now', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'seconds_since_last_deal', 'display_name': 'Seconds Since Last Deal', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2998697.130047, 'max': 2998697.130047, 'avg': 2998697.130047, 'sd': None, 'q1': 2998697.130047, 'q3': 2998697.130047}}}}]",,2019-04-21 00:00:23.442,"{'table.pivot_column': 'time_of_last_deal', 'table.cell_column': 'seconds_since_last_deal'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:18:31.036,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT\n users.Group AS user_group, \n ROUND(SUM(deals.Profit), 2) AS balance, \n COUNT(deals.Profit) AS count_transfers\nFROM mt5_deals_2017 AS deals\nINNER JOIN mt5_users AS users\nON (deals.Login=users.Login)\nWHERE deals.Comment LIKE '%transfer from%'\nAND deals.Time >= DATE('2017-10-01')\nAND deals.Time <= DATE('2017-12-31')\nGROUP BY users.Group""}}",,table,,False,False,604,,MT5 total balance for each group,,native,,,,2019-03-22 03:18:31.036,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:18:36.449,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT SUM(deals.Profit)\nFROM mt5_deals_2017 AS deals\nINNER JOIN mt5_users AS users\nON (deals.Login=users.Login)\nWHERE (users.Group LIKE '%real%' AND users.Group NOT LIKE '%real%costarica' )\nAND deals.Comment LIKE '%transfer from%'\nAND deals.Time >= DATE('2017-10-01')\nAND deals.Time <= DATE('2017-12-31')""}}",,table,,False,False,605,,MT5 total balance of Forex accounts,,native,,,,2019-03-22 03:18:36.449,{}
False,,,,,2019-03-07 06:45:37.847,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'query', 'query': {'source-table': 759, 'filter': ['>', ['field-id', 7020], 1], 'breakout': [['field-id', 7005]], 'aggregation': [['count']], 'order-by': [['desc', ['aggregation', 0]]]}}",,table,,False,False,469,37.0,"Mt5 Users, Count, Grouped by Country, Filtered by Balance, Sorted by [Unknown Field] descending",10d61f8f-d743-46ff-915b-c622337b73fd,query,,"[{'name': 'Country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 129, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.2302}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1919.0, 'avg': 36.743362831858406, 'sd': 192.5232258141238, 'q1': 1.3085180724846301, 'q3': 7.724744871391589}}}}]",759.0,2019-03-11 02:32:08.890,"{'table.pivot_column': 'Country', 'table.cell_column': 'count'}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2018-12-24 13:52:00.278,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM((ROUND(((""Volume""/10000)*(0.25/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Commissions_Vol_10,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Commissions_Vol_25,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Commissions_Vol_50,\nSUM((ROUND(((""Volume""/10000)*(2.25/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Commissions_Vol_75,\nSUM((ROUND(((""Volume""/10000)*(0.75/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Commissions_Vol_100,\nSUM((ROUND(((""Volume""/10000)*(0.25/-2)),2))) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Commissions_HF_Vol_10,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Commissions_HF_Vol_50,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Commissions_HF_Vol_100\nFROM mt5_deals_2018 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nand date(""Time"") = {{Time}}\nand users.""Agent"" != 0\nand ""Entry"" IN (0,1,3)\n', 'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': False}}}}",,table,,False,False,123,,MT5 Vol Agent Commission per day,,native,,"[{'name': 'commissions_vol_10', 'display_name': 'Commissions Vol 10', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -3.55, 'max': -3.55, 'avg': -3.55, 'sd': None, 'q1': -3.55, 'q3': -3.55}}}}, {'name': 'commissions_vol_25', 'display_name': 'Commissions Vol 25', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -10.75, 'max': -10.75, 'avg': -10.75, 'sd': None, 'q1': -10.75, 'q3': -10.75}}}}, {'name': 'commissions_vol_50', 'display_name': 'Commissions Vol 50', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -0.08, 'max': -0.08, 'avg': -0.08, 'sd': None, 'q1': -0.08, 'q3': -0.08}}}}, {'name': 'commissions_vol_75', 'display_name': 'Commissions Vol 75', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -76.28, 'max': -76.28, 'avg': -76.28, 'sd': None, 'q1': -76.28, 'q3': -76.28}}}}, {'name': 'commissions_vol_100', 'display_name': 'Commissions Vol 100', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -46.11, 'max': -46.11, 'avg': -46.11, 'sd': None, 'q1': -46.11, 'q3': -46.11}}}}, {'name': 'commissions_hf_vol_10', 'display_name': 'Commissions Hf Vol 10', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -0.54, 'max': -0.54, 'avg': -0.54, 'sd': None, 'q1': -0.54, 'q3': -0.54}}}}, {'name': 'commissions_hf_vol_50', 'display_name': 'Commissions Hf Vol 50', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -0.12, 'max': -0.12, 'avg': -0.12, 'sd': None, 'q1': -0.12, 'q3': -0.12}}}}, {'name': 'commissions_hf_vol_100', 'display_name': 'Commissions Hf Vol 100', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1.53, 'max': -1.53, 'avg': -1.53, 'sd': None, 'q1': -1.53, 'q3': -1.53}}}}]",,2019-03-13 07:08:03.338,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-02 12:59:07.273,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM((ROUND(((""Volume""/10000)*(0.25/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Commissions_Vol_10,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Commissions_Vol_25,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Commissions_Vol_50,\nSUM((ROUND(((""Volume""/10000)*(2.25/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Commissions_Vol_75,\nSUM((ROUND(((""Volume""/10000)*(0.75/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Commissions_Vol_100,\nSUM((ROUND(((""Volume""/10000)*(0.25/-2)),2))) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Commissions_HF_Vol_10,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Commissions_HF_Vol_50,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Commissions_HF_Vol_100\nFROM mt5_deals_2019 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nand date(""Time"") = {{Time}}\nand users.""Agent"" != 0\nand ""Entry"" IN (0,1,3)\n', 'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': False}}}}",,table,,False,False,165,,MT5 Vol Agent Commission per day - 2019,,native,,"[{'name': 'commissions_vol_10', 'display_name': 'Commissions Vol 10', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -0.9500000000000001, 'max': -0.9500000000000001, 'avg': -0.9500000000000001, 'sd': None, 'q1': -0.9500000000000001, 'q3': -0.9500000000000001}}}}, {'name': 'commissions_vol_25', 'display_name': 'Commissions Vol 25', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -6.32, 'max': -6.32, 'avg': -6.32, 'sd': None, 'q1': -6.32, 'q3': -6.32}}}}, {'name': 'commissions_vol_50', 'display_name': 'Commissions Vol 50', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -26.5, 'max': -26.5, 'avg': -26.5, 'sd': None, 'q1': -26.5, 'q3': -26.5}}}}, {'name': 'commissions_vol_75', 'display_name': 'Commissions Vol 75', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -140.68, 'max': -140.68, 'avg': -140.68, 'sd': None, 'q1': -140.68, 'q3': -140.68}}}}, {'name': 'commissions_vol_100', 'display_name': 'Commissions Vol 100', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -51.45, 'max': -51.45, 'avg': -51.45, 'sd': None, 'q1': -51.45, 'q3': -51.45}}}}, {'name': 'commissions_hf_vol_10', 'display_name': 'Commissions Hf Vol 10', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -9.12, 'max': -9.12, 'avg': -9.12, 'sd': None, 'q1': -9.12, 'q3': -9.12}}}}, {'name': 'commissions_hf_vol_50', 'display_name': 'Commissions Hf Vol 50', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -27.0, 'max': -27.0, 'avg': -27.0, 'sd': None, 'q1': -27.0, 'q3': -27.0}}}}, {'name': 'commissions_hf_vol_100', 'display_name': 'Commissions Hf Vol 100', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -8.38, 'max': -8.38, 'avg': -8.38, 'sd': None, 'q1': -8.38, 'q3': -8.38}}}}]",,2019-02-20 07:22:06.571,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-11 13:34:36.345,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT users.""Group"", SUM((ROUND(((""Volume""/10000)*(0.25/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Commissions_Vol_10,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Commissions_Vol_25,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Commissions_Vol_50,\nSUM((ROUND(((""Volume""/10000)*(2.25/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Commissions_Vol_75,\nSUM((ROUND(((""Volume""/10000)*(0.75/-2)),2))) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Commissions_Vol_100,\nSUM((ROUND(((""Volume""/10000)*(0.25/-2)),2))) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Commissions_HF_Vol_10,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Commissions_HF_Vol_50,\nSUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Commissions_HF_Vol_100\nFROM mt5_deals_2019 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nand date(""Time"") = {{Time}}\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\nand users.""Agent"" != 0\ngroup by users.""Group""', 'template-tags': {'Time': {'id': 'c9f7a9c5-4c76-5b8b-9b74-4bd5d73b76a2', 'name': 'Time', 'display-name': 'Time', 'type': 'date'}}}}",,table,,False,False,204,,MT5 Vol Agent Commission per day per group - 2019,,native,,"[{'name': 'Group', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 14.0}}}}, {'name': 'commissions_vol_10', 'display_name': 'Commissions Vol 10', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -6.76, 'max': -6.76, 'avg': -6.76, 'sd': None, 'q1': -6.76, 'q3': -6.76}}}}, {'name': 'commissions_vol_25', 'display_name': 'Commissions Vol 25', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -25.36, 'max': -25.36, 'avg': -25.36, 'sd': None, 'q1': -25.36, 'q3': -25.36}}}}, {'name': 'commissions_vol_50', 'display_name': 'Commissions Vol 50', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -3.55, 'max': -3.55, 'avg': -3.55, 'sd': None, 'q1': -3.55, 'q3': -3.55}}}}, {'name': 'commissions_vol_75', 'display_name': 'Commissions Vol 75', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -88.49, 'max': -88.49, 'avg': -88.49, 'sd': None, 'q1': -88.49, 'q3': -88.49}}}}, {'name': 'commissions_vol_100', 'display_name': 'Commissions Vol 100', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -142.28, 'max': -142.28, 'avg': -142.28, 'sd': None, 'q1': -142.28, 'q3': -142.28}}}}, {'name': 'commissions_hf_vol_10', 'display_name': 'Commissions Hf Vol 10', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -9.06, 'max': -9.06, 'avg': -9.06, 'sd': None, 'q1': -9.06, 'q3': -9.06}}}}, {'name': 'commissions_hf_vol_50', 'display_name': 'Commissions Hf Vol 50', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -22.51, 'max': -22.51, 'avg': -22.51, 'sd': None, 'q1': -22.51, 'q3': -22.51}}}}, {'name': 'commissions_hf_vol_100', 'display_name': 'Commissions Hf Vol 100', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -222.59, 'max': -222.59, 'avg': -222.59, 'sd': None, 'q1': -222.59, 'q3': -222.59}}}}]",,2019-02-20 23:48:51.065,"{'table.pivot_column': 'Group', 'table.cell_column': 'commissions_vol_10'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-15 06:55:50.302,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'native': {'template-tags': {'Time': {'widget-type': 'date/all-options', 'default': 'thisday', 'name': 'Time', 'type': 'dimension', 'id': '96c8877d-6bd0-a599-d59a-5445351e7c2f', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}}, 'query': 'SELECT ""Symbol"",\n       SUM(""Profit""/""RateMargin""+""Storage""/""RateMargin"")*-1 AS Profit_including_swaps\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\nWhere ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\', \'Volatility 50 Index\', \'Volatility 75 Index\', \'Volatility 100 Index\', \'HF Volatility 10 Index\',\'HF Volatility 50 Index\', \'HF Volatility 100 Index\')\nand {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\ngroup by ""Symbol""\nOrder by Profit_including_swaps DESC\n\n'}, 'type': 'native', 'database': 9}",,row,,False,False,374,,MT5 Vol Indices closed PnL per Symbol (including swaps),,native,,"[{'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'profit_including_swaps', 'display_name': 'Profit Including Swaps', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-03 07:49:14.508,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10', 'table.column_widths': [None, None, None, None, None, None, None, 140], 'graph.dimensions': ['Symbol'], 'graph.metrics': ['profit_including_swaps'], 'gauge.segments': [{'min': 0, 'max': -27.410000000000004, 'color': '#ED6E6E', 'label': ''}, {'min': -27.410000000000004, 'max': -54.82000000000001, 'color': '#F9CF48', 'label': ''}, {'min': -54.82000000000001, 'max': -109.64000000000001, 'color': '#84BB4C', 'label': ''}, {'min': -109.64000000000001, 'max': -219.28000000000003, 'color': '#509EE3', 'label': ''}, {'min': -219.28000000000003, 'max': -438.56000000000006, 'color': '#9CC177', 'label': ''}], 'table.column_formatting': [{'max_value': 100, 'color': '#509EE3', 'columns': ['profit_including_swaps'], 'value': '', 'type': 'range', 'colors': ['#ED6E6E', 'white', '#84BB4C'], 'highlight_row': False, 'min_value': 0, 'min_type': 'custom', 'operator': '=', 'max_type': 'custom'}, {'max_value': 100, 'color': '#EF8C8C', 'columns': ['sum'], 'value': '', 'type': 'range', 'colors': ['#ED6E6E', 'white', '#84BB4C'], 'highlight_row': False, 'min_value': 0, 'min_type': 'custom', 'operator': '=', 'max_type': 'custom'}], 'series_settings': {'Profit Including Swaps': {'display': 'bar', 'color': '#F2A86F'}}}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-03-12 10:42:08.403,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT ""Symbol"",\n       SUM(""Profit""/""RateMargin""+""Storage""/""RateMargin"")*-1 AS Profit_including_swaps\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\nWhere ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\', \'Volatility 50 Index\', \'Volatility 75 Index\', \'Volatility 100 Index\', \'HF Volatility 10 Index\',\'HF Volatility 50 Index\', \'HF Volatility 100 Index\')\nand date(""Time"") >=  {{Start_Time}}\nand date(""Time"") <=  {{End_Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\ngroup by ""Symbol""\nOrder by Profit_including_swaps DESC\n\n', 'template-tags': {'Start_Time': {'id': 'f899e10c-6561-a29f-ae03-1f753f65ec35', 'name': 'Start_Time', 'display-name': 'Start_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'End_Time': {'id': 'd01d8815-5a02-08c3-c7d8-a01c92bdc7ff', 'name': 'End_Time', 'display-name': 'End_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,row,,False,False,487,,MT5 Vol Indices closed PnL per Symbol (including swaps) - by date range,,native,,"[{'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.375}}}}, {'name': 'profit_including_swaps', 'display_name': 'Profit Including Swaps', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': -3086.476309200009, 'max': 9749.988041899993, 'avg': 1515.6041957249981, 'sd': 4082.989548290429, 'q1': -752.3934398499999, 'q3': 3317.7043172000003}}}}]",,2019-03-21 04:32:30.089,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10', 'table.column_widths': [None, None, None, None, None, None, None, 140], 'graph.dimensions': ['Symbol'], 'graph.metrics': ['profit_including_swaps'], 'gauge.segments': [{'min': 0, 'max': -27.410000000000004, 'color': '#ED6E6E', 'label': ''}, {'min': -27.410000000000004, 'max': -54.82000000000001, 'color': '#F9CF48', 'label': ''}, {'min': -54.82000000000001, 'max': -109.64000000000001, 'color': '#84BB4C', 'label': ''}, {'min': -109.64000000000001, 'max': -219.28000000000003, 'color': '#509EE3', 'label': ''}, {'min': -219.28000000000003, 'max': -438.56000000000006, 'color': '#9CC177', 'label': ''}], 'table.column_formatting': [{'max_value': 100, 'color': '#509EE3', 'columns': ['profit_including_swaps'], 'value': '', 'type': 'range', 'colors': ['#ED6E6E', 'white', '#84BB4C'], 'highlight_row': False, 'min_value': 0, 'min_type': 'custom', 'operator': '=', 'max_type': 'custom'}, {'max_value': 100, 'color': '#EF8C8C', 'columns': ['sum'], 'value': '', 'type': 'range', 'colors': ['#ED6E6E', 'white', '#84BB4C'], 'highlight_row': False, 'min_value': 0, 'min_type': 'custom', 'operator': '=', 'max_type': 'custom'}], 'series_settings': {'Profit Including Swaps': {'display': 'bar', 'color': '#F2A86F'}}}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2018-12-24 15:40:33.655,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Profit_Vol_10,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Profit_Vol_25,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Profit_Vol_50,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Profit_Vol_75,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Profit_Vol_100,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Profit_HF_Vol_10,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Profit_HF_Vol_50,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Profit_HF_Vol_100\nFROM mt5_deals_2018 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nand date(""Time"") = {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\n\n', 'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': False}}}}",,table,,False,False,125,,MT5 Vol Profit per day,,native,,"[{'name': 'profit_vol_10', 'display_name': 'Profit Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 53.980000000000004, 'max': 53.980000000000004, 'avg': 53.980000000000004, 'sd': None, 'q1': 53.980000000000004, 'q3': 53.980000000000004}}}}, {'name': 'profit_vol_25', 'display_name': 'Profit Vol 25', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -421.3499999999999, 'max': -421.3499999999999, 'avg': -421.3499999999999, 'sd': None, 'q1': -421.3499999999999, 'q3': -421.3499999999999}}}}, {'name': 'profit_vol_50', 'display_name': 'Profit Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 39.17000000000001, 'max': 39.17000000000001, 'avg': 39.17000000000001, 'sd': None, 'q1': 39.17000000000001, 'q3': 39.17000000000001}}}}, {'name': 'profit_vol_75', 'display_name': 'Profit Vol 75', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 26362.61, 'max': 26362.61, 'avg': 26362.61, 'sd': None, 'q1': 26362.61, 'q3': 26362.61}}}}, {'name': 'profit_vol_100', 'display_name': 'Profit Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 399.0899999999995, 'max': 399.0899999999995, 'avg': 399.0899999999995, 'sd': None, 'q1': 399.0899999999995, 'q3': 399.0899999999995}}}}, {'name': 'profit_hf_vol_10', 'display_name': 'Profit Hf Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -4.320000000000001, 'max': -4.320000000000001, 'avg': -4.320000000000001, 'sd': None, 'q1': -4.320000000000001, 'q3': -4.320000000000001}}}}, {'name': 'profit_hf_vol_50', 'display_name': 'Profit Hf Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 7.34, 'max': 7.34, 'avg': 7.34, 'sd': None, 'q1': 7.34, 'q3': 7.34}}}}, {'name': 'profit_hf_vol_100', 'display_name': 'Profit Hf Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -188.28000000000003, 'max': -188.28000000000003, 'avg': -188.28000000000003, 'sd': None, 'q1': -188.28000000000003, 'q3': -188.28000000000003}}}}]",,2019-03-13 07:08:06.631,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10'}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2019-01-02 10:52:18.653,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Profit_Vol_10,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Profit_Vol_25,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Profit_Vol_50,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Profit_Vol_75,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Profit_Vol_100,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Profit_HF_Vol_10,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Profit_HF_Vol_50,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Profit_HF_Vol_100\nFROM mt5_deals_2018 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nand date(""Time"") = {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\n\n', 'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': False}}}}",,table,,False,False,159,,MT5 Vol Profit per day,,native,,"[{'name': 'profit_vol_10', 'display_name': 'Profit Vol 10', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'profit_vol_25', 'display_name': 'Profit Vol 25', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'profit_vol_50', 'display_name': 'Profit Vol 50', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'profit_vol_75', 'display_name': 'Profit Vol 75', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'profit_vol_100', 'display_name': 'Profit Vol 100', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'profit_hf_vol_10', 'display_name': 'Profit Hf Vol 10', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'profit_hf_vol_50', 'display_name': 'Profit Hf Vol 50', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'profit_hf_vol_100', 'display_name': 'Profit Hf Vol 100', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}]",,2019-01-31 08:07:19.342,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-02 13:00:13.740,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM(""Profit""/""RateMargin"")*-1 AS Company_profit,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Profit_Vol_10,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Profit_Vol_25,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Profit_Vol_50,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Profit_Vol_75,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Profit_Vol_100,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Profit_HF_Vol_10,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Profit_HF_Vol_50,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Profit_HF_Vol_100\nFROM mt5_deals_2019 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nand date(""Time"") = {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\n\n', 'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': False}}}}",,table,,False,False,167,,MT5 Vol Profit per day - 2019,,native,,"[{'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 8817.828823199989, 'max': 8817.828823199989, 'avg': 8817.828823199989, 'sd': None, 'q1': 8817.828823199989, 'q3': 8817.828823199989}}}}, {'name': 'profit_vol_10', 'display_name': 'Profit Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -84.96, 'max': -84.96, 'avg': -84.96, 'sd': None, 'q1': -84.96, 'q3': -84.96}}}}, {'name': 'profit_vol_25', 'display_name': 'Profit Vol 25', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -210.6373854, 'max': -210.6373854, 'avg': -210.6373854, 'sd': None, 'q1': -210.6373854, 'q3': -210.6373854}}}}, {'name': 'profit_vol_50', 'display_name': 'Profit Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -438.38000000000005, 'max': -438.38000000000005, 'avg': -438.38000000000005, 'sd': None, 'q1': -438.38000000000005, 'q3': -438.38000000000005}}}}, {'name': 'profit_vol_75', 'display_name': 'Profit Vol 75', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 9022.082314800005, 'max': 9022.082314800005, 'avg': 9022.082314800005, 'sd': None, 'q1': 9022.082314800005, 'q3': 9022.082314800005}}}}, {'name': 'profit_vol_100', 'display_name': 'Profit Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 451.7238938000007, 'max': 451.7238938000007, 'avg': 451.7238938000007, 'sd': None, 'q1': 451.7238938000007, 'q3': 451.7238938000007}}}}, {'name': 'profit_hf_vol_10', 'display_name': 'Profit Hf Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -5.060000000000031, 'max': -5.060000000000031, 'avg': -5.060000000000031, 'sd': None, 'q1': -5.060000000000031, 'q3': -5.060000000000031}}}}, {'name': 'profit_hf_vol_50', 'display_name': 'Profit Hf Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -29.839999999999996, 'max': -29.839999999999996, 'avg': -29.839999999999996, 'sd': None, 'q1': -29.839999999999996, 'q3': -29.839999999999996}}}}, {'name': 'profit_hf_vol_100', 'display_name': 'Profit Hf Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 112.83999999999986, 'max': 112.83999999999986, 'avg': 112.83999999999986, 'sd': None, 'q1': 112.83999999999986, 'q3': 112.83999999999986}}}}]",,2019-02-20 07:22:04.711,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-02 10:55:11.590,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Profit_Vol_10,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Profit_Vol_25,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Profit_Vol_50,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Profit_Vol_75,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Profit_Vol_100,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Profit_HF_Vol_10,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Profit_HF_Vol_50,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Profit_HF_Vol_100\nFROM mt5_deals_2019 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nand date(""Time"") = {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\n\n', 'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': False}}}}",,table,,False,False,160,,MT5 Vol Profit per day - 2019,,native,,"[{'name': 'profit_vol_10', 'display_name': 'Profit Vol 10', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'profit_vol_25', 'display_name': 'Profit Vol 25', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'profit_vol_50', 'display_name': 'Profit Vol 50', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'profit_vol_75', 'display_name': 'Profit Vol 75', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'profit_vol_100', 'display_name': 'Profit Vol 100', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'profit_hf_vol_10', 'display_name': 'Profit Hf Vol 10', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'profit_hf_vol_50', 'display_name': 'Profit Hf Vol 50', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'profit_hf_vol_100', 'display_name': 'Profit Hf Vol 100', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}]",,2019-01-02 10:56:56.751,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-02 12:59:46.365,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Profit_Vol_10,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Profit_Vol_25,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Profit_Vol_50,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Profit_Vol_75,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Profit_Vol_100,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Profit_HF_Vol_10,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Profit_HF_Vol_50,\nSUM((""Profit"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Profit_HF_Vol_100\nFROM mt5_deals_2019 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nand date(""Time"") = {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\n\n', 'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': False}}}}",,table,,False,False,166,,MT5 Vol Profit per day - 2019,,native,,"[{'name': 'profit_vol_10', 'display_name': 'Profit Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1026.31, 'max': -1026.31, 'avg': -1026.31, 'sd': None, 'q1': -1026.31, 'q3': -1026.31}}}}, {'name': 'profit_vol_25', 'display_name': 'Profit Vol 25', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -8.210000000000022, 'max': -8.210000000000022, 'avg': -8.210000000000022, 'sd': None, 'q1': -8.210000000000022, 'q3': -8.210000000000022}}}}, {'name': 'profit_vol_50', 'display_name': 'Profit Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 709.73, 'max': 709.73, 'avg': 709.73, 'sd': None, 'q1': 709.73, 'q3': 709.73}}}}, {'name': 'profit_vol_75', 'display_name': 'Profit Vol 75', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -64854.409999999996, 'max': -64854.409999999996, 'avg': -64854.409999999996, 'sd': None, 'q1': -64854.409999999996, 'q3': -64854.409999999996}}}}, {'name': 'profit_vol_100', 'display_name': 'Profit Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1220.8500000000026, 'max': 1220.8500000000026, 'avg': 1220.8500000000026, 'sd': None, 'q1': 1220.8500000000026, 'q3': 1220.8500000000026}}}}, {'name': 'profit_hf_vol_10', 'display_name': 'Profit Hf Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -397.9200000000002, 'max': -397.9200000000002, 'avg': -397.9200000000002, 'sd': None, 'q1': -397.9200000000002, 'q3': -397.9200000000002}}}}, {'name': 'profit_hf_vol_50', 'display_name': 'Profit Hf Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -11.369999999999997, 'max': -11.369999999999997, 'avg': -11.369999999999997, 'sd': None, 'q1': -11.369999999999997, 'q3': -11.369999999999997}}}}, {'name': 'profit_hf_vol_100', 'display_name': 'Profit Hf Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -562.559999999998, 'max': -562.559999999998, 'avg': -562.559999999998, 'sd': None, 'q1': -562.559999999998, 'q3': -562.559999999998}}}}]",,2019-02-11 01:14:11.609,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-11 13:35:50.311,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT users.""Group"", SUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Profit_Vol_10,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Profit_Vol_25,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Profit_Vol_50,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Profit_Vol_75,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Profit_Vol_100,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Profit_HF_Vol_10,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Profit_HF_Vol_50,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Profit_HF_Vol_100\nFROM mt5_deals_2019 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nand date(""Time"") = {{Time}}\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\ngroup by users.""Group""', 'template-tags': {'Time': {'id': 'c9f7a9c5-4c76-5b8b-9b74-4bd5d73b76a2', 'name': 'Time', 'display-name': 'Time', 'type': 'date'}}}}",,table,,False,False,206,,MT5 Vol Profit per day per group - 2019,,native,,"[{'name': 'Group', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 12.0}}}}, {'name': 'profit_vol_10', 'display_name': 'Profit Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': -380.5300000000001, 'max': -0.102169799999999, 'avg': -190.31608490000005, 'sd': 269.0030984865045, 'q1': -380.5300000000001, 'q3': -0.102169799999999}}}}, {'name': 'profit_vol_25', 'display_name': 'Profit Vol 25', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.5}, 'type': {'type/Number': {'min': 2140.4100000000008, 'max': 2140.4100000000008, 'avg': 2140.4100000000008, 'sd': None, 'q1': 2140.4100000000008, 'q3': 2140.4100000000008}}}}, {'name': 'profit_vol_50', 'display_name': 'Profit Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.5}, 'type': {'type/Number': {'min': 397.50999999999993, 'max': 397.50999999999993, 'avg': 397.50999999999993, 'sd': None, 'q1': 397.50999999999993, 'q3': 397.50999999999993}}}}, {'name': 'profit_vol_75', 'display_name': 'Profit Vol 75', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1456.92000000003, 'max': -338.4171842999999, 'avg': -897.668592150015, 'sd': 790.9009257577385, 'q1': -1456.92000000003, 'q3': -338.4171842999999}}}}, {'name': 'profit_vol_100', 'display_name': 'Profit Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': -2228.5799999999895, 'max': 603.2346150000002, 'avg': -812.6726924999946, 'sd': 2002.3953173296647, 'q1': -2228.5799999999895, 'q3': 603.2346150000002}}}}, {'name': 'profit_hf_vol_10', 'display_name': 'Profit Hf Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.5}, 'type': {'type/Number': {'min': -2781.17, 'max': -2781.17, 'avg': -2781.17, 'sd': None, 'q1': -2781.17, 'q3': -2781.17}}}}, {'name': 'profit_hf_vol_50', 'display_name': 'Profit Hf Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.5}, 'type': {'type/Number': {'min': 1167.82, 'max': 1167.82, 'avg': 1167.82, 'sd': None, 'q1': 1167.82, 'q3': 1167.82}}}}, {'name': 'profit_hf_vol_100', 'display_name': 'Profit Hf Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.5}, 'type': {'type/Number': {'min': 705.6600000000013, 'max': 705.6600000000013, 'avg': 705.6600000000013, 'sd': None, 'q1': 705.6600000000013, 'q3': 705.6600000000013}}}}]",,2019-02-20 23:48:49.775,"{'table.pivot_column': 'Group', 'table.cell_column': 'profit_vol_10'}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2018-12-24 15:51:52.869,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT users.""Login"" AS Login_ID, SUM((""Profit"")) AS Client_Profit\nFROM mt5_deals_2018 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nwhere date(""Time"") = {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\nand deals.""Symbol"" IN (\'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\ngroup by users.""Login""\norder by SUM((""Profit"")) DESC\nlimit 15\n', 'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': False}}}}",,table,,False,False,126,,MT5 Vol Profitable Clients per day,,native,,"[{'name': 'login_id', 'display_name': 'Login ID', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': 13419.0, 'max': 152897.0, 'avg': 111500.2, 'sd': 37144.16320846578, 'q1': 102959.75, 'q3': 130272.75}}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': 491.13, 'max': 2722.83, 'avg': 1005.5333333333333, 'sd': 652.4574776146244, 'q1': 517.9025, 'q3': 1103.1}}}}]",,2019-03-13 07:08:06.650,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-02 13:00:53.139,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'native': {'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'dimension', 'required': True, 'dimension': ['field-id', 7452], 'widget-type': 'date/relative', 'default': 'today'}}, 'query': 'SELECT users.""Login"" AS Login_ID, SUM((""Profit""/""RateMargin"")) AS Client_Profit\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" =  mt5_deals_2019.""Login""\nwhere  = {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\nand  mt5_deals_2019.""Symbol"" IN (\'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\ngroup by users.""Login""\norder by SUM((""Profit""/""RateMargin"")) DESC\nlimit 15\n'}, 'type': 'native', 'database': 9}",,table,,False,False,168,,MT5 Vol Profitable Clients per day - 2019,,native,,"[{'name': 'login_id', 'display_name': 'Login ID', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-02-15 07:52:13.095,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10', 'table.column_formatting': [{'max_value': 100, 'color': '#EF8C8C', 'columns': ['client_profit'], 'value': '', 'type': 'range', 'colors': ['white', '#EF8C8C'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}]}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2018-12-24 15:36:34.762,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM((""Storage"")*-1) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Swaps_Vol_10,\nSUM((""Storage"")*-1) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Swaps_Vol_25,\nSUM((""Storage"")*-1) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Swaps_Vol_50,\nSUM((""Storage"")*-1) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Swaps_Vol_75,\nSUM((""Storage"")*-1) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Swaps_Vol_100,\nSUM((""Storage"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Swaps_HF_Vol_10,\nSUM((""Storage"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Swaps_HF_Vol_50,\nSUM((""Storage"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Swaps_HF_Vol_100\nFROM mt5_deals_2018 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nand date(""Time"") = {{Time}}\nand ""Entry"" IN (0,1,3)\n', 'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': False}}}}",,table,,False,False,124,,MT5 Vol Swaps per day,,native,,"[{'name': 'swaps_vol_10', 'display_name': 'Swaps Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4.12, 'max': 4.12, 'avg': 4.12, 'sd': None, 'q1': 4.12, 'q3': 4.12}}}}, {'name': 'swaps_vol_25', 'display_name': 'Swaps Vol 25', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 22.72, 'max': 22.72, 'avg': 22.72, 'sd': None, 'q1': 22.72, 'q3': 22.72}}}}, {'name': 'swaps_vol_50', 'display_name': 'Swaps Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 13.63, 'max': 13.63, 'avg': 13.63, 'sd': None, 'q1': 13.63, 'q3': 13.63}}}}, {'name': 'swaps_vol_75', 'display_name': 'Swaps Vol 75', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 219.55000000000018, 'max': 219.55000000000018, 'avg': 219.55000000000018, 'sd': None, 'q1': 219.55000000000018, 'q3': 219.55000000000018}}}}, {'name': 'swaps_vol_100', 'display_name': 'Swaps Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 13.959999999999997, 'max': 13.959999999999997, 'avg': 13.959999999999997, 'sd': None, 'q1': 13.959999999999997, 'q3': 13.959999999999997}}}}, {'name': 'swaps_hf_vol_10', 'display_name': 'Swaps Hf Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.68, 'max': 2.68, 'avg': 2.68, 'sd': None, 'q1': 2.68, 'q3': 2.68}}}}, {'name': 'swaps_hf_vol_50', 'display_name': 'Swaps Hf Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': None, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'swaps_hf_vol_100', 'display_name': 'Swaps Hf Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.64, 'max': 2.64, 'avg': 2.64, 'sd': None, 'q1': 2.64, 'q3': 2.64}}}}]",,2019-03-13 07:08:02.793,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-02 13:01:16.648,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM(""Storage""/""RateMargin"")*-1 AS Total_Swaps,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Swaps_Vol_10,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Swaps_Vol_25,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Swaps_Vol_50,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Swaps_Vol_75,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Swaps_Vol_100,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Swaps_HF_Vol_10,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Swaps_HF_Vol_50,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Swaps_HF_Vol_100\nFROM mt5_deals_2019 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nand date(""Time"") = {{Time}}\nand ""Entry"" IN (1,3)\nand users.""Group"" LIKE \'%costarica%\'\n\n', 'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': False}}}}",,table,,False,False,169,,MT5 Vol Swaps per day - 2019,,native,,"[{'name': 'total_swaps', 'display_name': 'Total Swaps', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 730.970000000001, 'max': 730.970000000001, 'avg': 730.970000000001, 'sd': None, 'q1': 730.970000000001, 'q3': 730.970000000001}}}}, {'name': 'swaps_vol_10', 'display_name': 'Swaps Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 9.389999999999999, 'max': 9.389999999999999, 'avg': 9.389999999999999, 'sd': None, 'q1': 9.389999999999999, 'q3': 9.389999999999999}}}}, {'name': 'swaps_vol_25', 'display_name': 'Swaps Vol 25', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.94, 'max': 2.94, 'avg': 2.94, 'sd': None, 'q1': 2.94, 'q3': 2.94}}}}, {'name': 'swaps_vol_50', 'display_name': 'Swaps Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 6.820000000000002, 'max': 6.820000000000002, 'avg': 6.820000000000002, 'sd': None, 'q1': 6.820000000000002, 'q3': 6.820000000000002}}}}, {'name': 'swaps_vol_75', 'display_name': 'Swaps Vol 75', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 694.7600000000008, 'max': 694.7600000000008, 'avg': 694.7600000000008, 'sd': None, 'q1': 694.7600000000008, 'q3': 694.7600000000008}}}}, {'name': 'swaps_vol_100', 'display_name': 'Swaps Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 14.649999999999988, 'max': 14.649999999999988, 'avg': 14.649999999999988, 'sd': None, 'q1': 14.649999999999988, 'q3': 14.649999999999988}}}}, {'name': 'swaps_hf_vol_10', 'display_name': 'Swaps Hf Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.8900000000000001, 'max': 1.8900000000000001, 'avg': 1.8900000000000001, 'sd': None, 'q1': 1.8900000000000001, 'q3': 1.8900000000000001}}}}, {'name': 'swaps_hf_vol_50', 'display_name': 'Swaps Hf Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.13, 'max': 0.13, 'avg': 0.13, 'sd': None, 'q1': 0.13, 'q3': 0.13}}}}, {'name': 'swaps_hf_vol_100', 'display_name': 'Swaps Hf Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.39, 'max': 0.39, 'avg': 0.39, 'sd': None, 'q1': 0.39, 'q3': 0.39}}}}]",,2019-02-20 07:22:04.780,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-11 13:35:16.026,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT users.""Group"",SUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Swaps_Vol_10,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Swaps_Vol_25,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Swaps_Vol_50,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Swaps_Vol_75,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Swaps_Vol_100,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Swaps_HF_Vol_10,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Swaps_HF_Vol_50,\nSUM((""Storage""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Swaps_HF_Vol_100\nFROM mt5_deals_2019 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nand date(""Time"") = {{Time}}\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\ngroup by users.""Group""', 'template-tags': {'Time': {'id': 'c9f7a9c5-4c76-5b8b-9b74-4bd5d73b76a2', 'name': 'Time', 'display-name': 'Time', 'type': 'date'}}}}",,table,,False,False,205,,MT5 Vol Swaps per day per group - 2019,,native,,"[{'name': 'Group', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 12.0}}}}, {'name': 'swaps_vol_10', 'display_name': 'Swaps Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1.35, 'avg': 0.675, 'sd': 0.954594154601839, 'q1': 0.0, 'q3': 1.35}}}}, {'name': 'swaps_vol_25', 'display_name': 'Swaps Vol 25', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.5}, 'type': {'type/Number': {'min': 28.08999999999999, 'max': 28.08999999999999, 'avg': 28.08999999999999, 'sd': None, 'q1': 28.08999999999999, 'q3': 28.08999999999999}}}}, {'name': 'swaps_vol_50', 'display_name': 'Swaps Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.5}, 'type': {'type/Number': {'min': 9.24, 'max': 9.24, 'avg': 9.24, 'sd': None, 'q1': 9.24, 'q3': 9.24}}}}, {'name': 'swaps_vol_75', 'display_name': 'Swaps Vol 75', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.134208, 'max': 1073.9700000000005, 'avg': 537.5521040000002, 'sd': 758.6094636228408, 'q1': 1.134208, 'q3': 1073.9700000000005}}}}, {'name': 'swaps_vol_100', 'display_name': 'Swaps Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 13.7163516, 'max': 22.839999999999968, 'avg': 18.278175799999985, 'sd': 6.451393652801772, 'q1': 13.7163516, 'q3': 22.839999999999968}}}}, {'name': 'swaps_hf_vol_10', 'display_name': 'Swaps Hf Vol 10', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.5}, 'type': {'type/Number': {'min': 1.339999999999999, 'max': 1.339999999999999, 'avg': 1.339999999999999, 'sd': None, 'q1': 1.339999999999999, 'q3': 1.339999999999999}}}}, {'name': 'swaps_hf_vol_50', 'display_name': 'Swaps Hf Vol 50', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.5}, 'type': {'type/Number': {'min': 19.62999999999999, 'max': 19.62999999999999, 'avg': 19.62999999999999, 'sd': None, 'q1': 19.62999999999999, 'q3': 19.62999999999999}}}}, {'name': 'swaps_hf_vol_100', 'display_name': 'Swaps Hf Vol 100', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.5}, 'type': {'type/Number': {'min': 11.829999999999995, 'max': 11.829999999999995, 'avg': 11.829999999999995, 'sd': None, 'q1': 11.829999999999995, 'q3': 11.829999999999995}}}}]",,2019-02-20 23:48:49.793,"{'table.pivot_column': 'Group', 'table.cell_column': 'swaps_vol_10'}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2018-12-24 16:04:54.224,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT users.""Login"" AS Login_ID, SUM((""Profit"")) AS Client_Profit\nFROM mt5_deals_2018 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nwhere date(""Time"") = {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\nand deals.""Symbol"" IN (\'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\ngroup by users.""Login""\norder by SUM((""Profit"")*-1) DESC\nlimit 15\n', 'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'date', 'required': False}}}}",,table,,False,False,127,,MT5 Vol Unprofitable Clients per day,,native,,"[{'name': 'login_id', 'display_name': 'Login ID', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': 33861.0, 'max': 153141.0, 'avg': 117070.66666666667, 'sd': 39014.07748981068, 'q1': 97570.25, 'q3': 150532.5}}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': -9001.189999999999, 'max': -620.15, 'avg': -2201.0, 'sd': 2179.7056706353724, 'q1': -2548.0925, 'q3': -905.0675000000003}}}}]",,2019-03-13 07:08:06.835,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-02 13:03:20.862,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'native': {'template-tags': {'Time': {'id': '0de49848-193c-3277-1964-ea81a50d3c16', 'name': 'Time', 'display-name': 'Time', 'type': 'dimension', 'required': True, 'dimension': ['field-id', 7452], 'widget-type': 'date/relative', 'default': 'today'}}, 'query': 'SELECT users.""Login"" AS Login_ID, SUM((""Profit""/""RateMargin"")) AS Client_Profit\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\nwhere  {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\nand deals.""Symbol"" IN (\'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\ngroup by users.""Login""\norder by SUM((""Profit""/""RateMargin"")*-1) DESC\nlimit 15\n'}, 'type': 'native', 'database': 9}",,table,,False,False,170,,MT5 Vol Unprofitable Clients per day,,native,,"[{'name': 'login_id', 'display_name': 'Login ID', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4481.0, 'max': 157350.0, 'avg': 121679.6, 'sd': 41674.68265163258, 'q1': 100472.25, 'q3': 150098.5}}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': -7214.58, 'max': -527.19, 'avg': -2171.4053333333336, 'sd': 1965.6168711042149, 'q1': -3210.84, 'q3': -738.37}}}}]",,2019-02-15 07:48:44.589,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10', 'table.column_formatting': [{'max_value': 100, 'color': '#509EE3', 'columns': ['client_profit'], 'value': '', 'type': 'range', 'colors': ['#9CC177', 'white'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}]}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-11 12:58:51.841,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'native': {'template-tags': {'Time': {'id': 'f4be2acf-a26f-32de-b409-f0462c3d6063', 'name': 'Time', 'display-name': 'Time', 'type': 'date'}}, 'query': 'Select ""login"", client_profit, client_swaps, Total_client_profit\r\nFROM(\r\n    SELECT deals.""Login"" AS login, SUM((deals.""Profit"")/""RateMargin"") AS client_profit, SUM((deals.""Storage"")/""RateMargin"") AS client_swaps, SUM((deals.""Profit"" + deals.""Storage"")/""RateMargin"") AS Total_client_profit\r\n    FROM mt5_deals_2019 AS deals\r\n    JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n    WHERE ""Action"" IN (0,1) -- In Trades only\r\n    and users.""Group"" like \'%malta\'\r\n    and ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\n    and date(deals.""Time"") = {{Time}}\r\n    group by deals.""Login""\r\n    order by Total_client_profit DESC\r\n) AS client_profit_table\r\nWhere Total_client_profit > 0'}, 'type': 'native', 'database': 9}",,table,,False,False,203,,MT5 Volatilities  real/malta Profit per day- Most Profitable Logins - 2019,,native,,"[{'name': 'login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 87401.0, 'max': 181254.0, 'avg': 141565.875, 'sd': 33078.399384481796, 'q1': 115535.0, 'q3': 161358.5}}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.37476780000000004, 'max': 240.837496, 'avg': 46.3181220125, 'sd': 81.59449269371237, 'q1': 3.9702999, 'q3': 52.216016149999994}}}}, {'name': 'client_swaps', 'display_name': 'Client Swaps', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': -0.90722, 'max': 0.0, 'avg': -0.14177599999999999, 'sd': 0.31932254341608, 'q1': -0.16118464445302602, 'q3': 0.0}}}}, {'name': 'total_client_profit', 'display_name': 'Total Client Profit', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.37476780000000004, 'max': 239.930276, 'avg': 46.1763460125, 'sd': 81.28648959584382, 'q1': 3.9702999, 'q3': 52.10252215}}}}]",,2019-02-20 23:48:49.168,"{'table.pivot_column': 'login', 'table.cell_column': 'login'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-11 12:55:23.766,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select ""login"", client_profit, client_swaps, Total_client_profit\r\nFROM(\r\n    SELECT deals.""Login"" AS login,SUM(deals.""Profit"") AS client_profit, SUM(deals.""Storage"") AS client_swaps, SUM(deals.""Profit"" + deals.""Storage"") AS Total_client_profit\r\n    FROM mt5_deals_2019 AS deals\r\n    JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n    WHERE ""Action"" IN (0,1) -- In Trades only\r\n    and users.""Group"" like \'%costarica%\'\r\n    and ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\n    and date(deals.""Time"") = {{Time}}\r\n    group by deals.""Login""\r\n    order by Total_client_profit DESC\r\n) AS client_profit_table\r\nWhere Total_client_profit > 0', 'template-tags': {'Time': {'id': 'ad36669c-b3a8-cdbd-7f14-87892a8b1d36', 'name': 'Time', 'display-name': 'Time', 'type': 'date'}}}}",,table,,False,False,200,,MT5 Volatilities Costarica Profit per day- Most Profitable Logins - 2019,,native,,"[{'name': 'login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 810, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1591.0, 'max': 184606.0, 'avg': 133597.02592592593, 'sd': 46901.08345808907, 'q1': 108301.09790573924, 'q3': 168878.7608144045}}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 740, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.009999999999999001, 'max': 2513.58, 'avg': 63.08892592592593, 'sd': 167.38411550299324, 'q1': 5.5522988721440125, 'q3': 52.1728581555943}}}}, {'name': 'client_swaps', 'display_name': 'Client Swaps', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 93, 'nil%': 0.0}, 'type': {'type/Number': {'min': -148.26999999999998, 'max': 0.0, 'avg': -0.776012345679012, 'sd': 5.817121299535603, 'q1': -0.241715230508478, 'q3': -0.0002199471476498928}}}}, {'name': 'total_client_profit', 'display_name': 'Total Client Profit', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 740, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.009999999999998, 'max': 2497.5499999999997, 'avg': 62.31291358024692, 'sd': 165.785065055899, 'q1': 5.636414673697255, 'q3': 51.85322885952974}}}}]",,2019-02-20 23:48:48.973,"{'pie.slice_threshold': 1.5, 'table.pivot_column': 'client_swaps', 'table.cell_column': 'login'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-11 12:56:40.741,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select ""login"", client_profit, client_swaps, Total_client_profit\r\nFROM(\r\n    SELECT deals.""Login"" AS login,SUM(deals.""Profit"") AS client_profit, SUM(deals.""Storage"") AS client_swaps, SUM(deals.""Profit"" + deals.""Storage"") AS Total_client_profit\r\n    FROM mt5_deals_2019 AS deals\r\n    JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n    WHERE ""Action"" IN (0,1) -- In Trades only\r\n    and users.""Group"" like \'%costarica%\'\r\n    and ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\n    and date(deals.""Time"") = {{Time}}\r\n    group by deals.""Login""\r\n    order by Total_client_profit ASC\r\n) AS client_profit_table\r\nWhere Total_client_profit < 0', 'template-tags': {'Time': {'id': '3dcb7055-9731-4f63-c765-9730d522be5e', 'name': 'Time', 'display-name': 'Time', 'type': 'date'}}}}",,table,,False,False,201,,MT5 Volatilities Costarica Profit per day- Most Unprofitable Logins - 2019,,native,,"[{'name': 'login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 571, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1759.0, 'max': 184656.0, 'avg': 134354.79509632225, 'sd': 50439.66613117657, 'q1': 106158.76956362004, 'q3': 172942.6985540758}}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 549, 'nil%': 0.0}, 'type': {'type/Number': {'min': -6711.77, 'max': 1.37, 'avg': -85.2298248686515, 'sd': 398.9177958826278, 'q1': -47.785043656082145, 'q3': -4.662834359452307}}}}, {'name': 'client_swaps', 'display_name': 'Client Swaps', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 87, 'nil%': 0.0}, 'type': {'type/Number': {'min': -89.47, 'max': 0.0, 'avg': -0.9452189141856391, 'sd': 5.838816025731003, 'q1': -0.22927058334805503, 'q3': 0.0}}}}, {'name': 'total_client_profit', 'display_name': 'Total Client Profit', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 546, 'nil%': 0.0}, 'type': {'type/Number': {'min': -6746.119999999999, 'max': -0.01, 'avg': -86.17504378283712, 'sd': 403.57399244376666, 'q1': -47.65248058986028, 'q3': -4.915897567380281}}}}]",,2019-02-20 23:48:49.010,"{'table.pivot_column': 'client_swaps', 'table.cell_column': 'login'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-17 14:45:11.561,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select ""symbol"", Company_PnL_on_Closed_Positions,Number_of_Trades, Active_Clients\r\nFROM(\r\n    SELECT deals.""Symbol"" AS Symbol, SUM(deals.""Profit"" + deals.""Storage"")*-1 AS Company_PnL_on_Closed_Positions, Count(Distinct(deals.""Deal"")) AS Number_of_Trades, Count(Distinct(deals.""Login"")) As Active_Clients\r\n    FROM mt5_deals_2019 AS deals\r\n    JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n    WHERE ""Action"" IN (0,1) -- In Trades only\r\n    and users.""Group"" like \'%costarica%\'\r\n    and ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\n    and date(deals.""Time"") = {{Time}}\r\n    group by deals.""Symbol""\r\n) AS client_profit_table', 'template-tags': {'Time': {'id': 'ad36669c-b3a8-cdbd-7f14-87892a8b1d36', 'name': 'Time', 'display-name': 'Time', 'type': 'date'}}}}",,table,,False,False,213,,MT5 Volatilities Costarica Profit per day- Profit per symbol - 2019,,native,,"[{'name': 'symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 20.375}}}}, {'name': 'company_pnl_on_closed_positions', 'display_name': 'Company Pnl On Closed Positions', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0}, 'type': {'type/Number': {'min': -2070.36, 'max': 32287.31000000006, 'avg': 3191.3375000000083, 'sd': 11784.061519178917, 'q1': -1639.999999999996, 'q3': 40.86999999999985}}}}, {'name': 'number_of_trades', 'display_name': 'Number Of Trades', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0}, 'type': {'type/Number': {'min': 205, 'max': 22165, 'avg': 5166.375, 'sd': 7753.751275304471, 'q1': 1134.5, 'q3': 6862}}}}, {'name': 'active_clients', 'display_name': 'Active Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0}, 'type': {'type/Number': {'min': 21, 'max': 907, 'avg': 189.625, 'sd': 311.14715742141783, 'q1': 31, 'q3': 211.5}}}}]",,2019-01-17 14:45:11.561,"{'pie.slice_threshold': 1.5, 'table.pivot_column': 'client_swaps', 'table.cell_column': 'login'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-11 12:57:41.490,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select ""login"", client_profit, client_swaps, Total_client_profit\r\nFROM(\r\n    SELECT deals.""Login"" AS login, SUM((deals.""Profit"")/""RateMargin"") AS client_profit, SUM((deals.""Storage"")/""RateMargin"") AS client_swaps, SUM((deals.""Profit"" + deals.""Storage"")/""RateMargin"") AS Total_client_profit\r\n    FROM mt5_deals_2019 AS deals\r\n    JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\n    WHERE ""Action"" IN (0,1) -- In Trades only\r\n    and users.""Group"" like \'%malta\'\r\n    and ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\n    and date(deals.""Time"") = {{Time}}\r\n    group by deals.""Login""\r\n    order by Total_client_profit ASC\r\n) AS client_profit_table\r\nWhere Total_client_profit < 0', 'template-tags': {'Time': {'id': '3cdb8e7c-3b92-0884-56d1-910a9ecddd53', 'name': 'Time', 'display-name': 'Time', 'type': 'date'}}}}",,table,,False,False,202,,MT5 Volatilities real/Malta Profit per day- Most Unprofitable Logins - 2019,,native,,"[{'name': 'login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 110394.0, 'max': 182675.0, 'avg': 158197.5, 'sd': 32914.929039368544, 'q1': 136703.0, 'q3': 179692.0}}}}, {'name': 'client_profit', 'display_name': 'Client Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': -604.3836934000001, 'max': -3.2171792, 'avg': -158.81505925000002, 'sd': 297.17267659295567, 'q1': -313.45369840000006, 'q3': -4.1764201}}}}, {'name': 'client_swaps', 'display_name': 'Client Swaps', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': -13.7163516, 'max': 0.0, 'avg': -3.4290879, 'sd': 6.8581758000000015, 'q1': -8.69581846716067, 'q3': 0.0}}}}, {'name': 'total_client_profit', 'display_name': 'Total Client Profit', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': -618.1000450000003, 'max': -3.2171792, 'avg': -162.24414715000006, 'sd': 304.0279893705193, 'q1': -320.31187420000015, 'q3': -4.1764201}}}}]",,2019-02-20 23:48:49.194,"{'table.pivot_column': 'client_swaps', 'table.cell_column': 'login'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-10 16:05:29.538,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'native': {'template-tags': {'Time': {'id': '2d99d52b-d56b-e032-c2b9-f37b186e03b9', 'name': 'Time', 'display-name': 'Time', 'type': 'date'}}, 'query': 'SELECT SUM((deals.""Profit"" + deals.""Storage"")/""RateMargin"")*-1 AS company_profit \r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\nand date(deals.""Time"") = {{Time}}\r\n'}, 'type': 'native', 'database': 9}",,scalar,,False,False,199,,MT5 Volatilities Revenue  Per Group - 2019,,native,,"[{'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -987.9441795000732, 'max': -987.9441795000732, 'avg': -987.9441795000732, 'sd': None, 'q1': -987.9441795000732, 'q3': -987.9441795000732}}}}]",,2019-02-20 23:48:49.123,"{'graph.dimensions': ['Group'], 'graph.metrics': ['company_profit'], 'scalar.field': 'company_profit', 'column_settings': {'[""name"",""company_profit""]': {'prefix': '', 'suffix': ' USD'}}, 'card.title': 'Company Profit from real/costarica'}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2018-12-26 13:34:43.306,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT date(deals.""Time""), SUM(""Profit"")*-1 AS Company_profit\r\nFROM mt5_deals_2018 AS deals\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\ngroup by date(deals.""Time"")'}}",,bar,,False,False,130,,MT5 Volatilities Revenue Bar Chart,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 365, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:00:00.000Z', 'latest': '2018-12-31T00:00:00.000Z'}}}}, {'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 365, 'nil%': 0.0}, 'type': {'type/Number': {'min': -42850.39000000016, 'max': 66677.60999999994, 'avg': 5014.8934246575245, 'sd': 13862.074971046159, 'q1': -2337.960964946592, 'q3': 10453.087492775197}}}}]",,2019-03-14 09:01:29.109,"{'graph.dimensions': ['date'], 'graph.metrics': ['company_profit']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-02 13:04:02.026,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT date(deals.""Time""), SUM((""Profit"" + deals.""Storage"")/deals.""RateMargin"")*-1 AS Company_profit\r\nFROM mt5_deals_2019 AS deals\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\ngroup by date(deals.""Time"")'}}",,bar,,False,False,171,,MT5 Volatilities Revenue Bar Chart - 2019,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 71, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-03-12T00:00:00.000Z'}}}}, {'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 71, 'nil%': 0.0}, 'type': {'type/Number': {'min': -64023.962720600124, 'max': 146368.6026362, 'avg': 8545.44644247175, 'sd': 41027.90433684765, 'q1': -20961.274173805275, 'q3': 26323.427332825042}}}}]",,2019-03-12 07:51:46.807,"{'graph.dimensions': ['date'], 'graph.metrics': ['company_profit']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-17 13:55:23.820,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'native': {'template-tags': {'Time': {'id': '2d99d52b-d56b-e032-c2b9-f37b186e03b9', 'name': 'Time', 'display-name': 'Time', 'type': 'date'}}, 'query': 'SELECT SUM((deals.""Profit"" + deals.""Storage"")/""RateMargin"")*-1 AS company_profit \r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\nand date(deals.""Time"") = {{Time}}\r\nand users.""Group""like \'%costarica%\'\r\n'}, 'type': 'native', 'database': 9}",,scalar,,False,False,212,,MT5 Volatilities Revenue Per Group (real/costarica) - 2019,,native,,"[{'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1267.5100000001057, 'max': -1267.5100000001057, 'avg': -1267.5100000001057, 'sd': None, 'q1': -1267.5100000001057, 'q3': -1267.5100000001057}}}}]",,2019-02-20 23:48:48.162,"{'graph.dimensions': ['Group'], 'graph.metrics': ['company_profit'], 'scalar.field': 'company_profit', 'column_settings': {'[""name"",""company_profit""]': {'prefix': '', 'suffix': ' USD'}}, 'card.title': 'Company Profit from real/costarica'}"
False,,"{'id': 41, 'name': ""Tony Cini's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 42, 'slug': 'tony_cini_s_personal_collection'}",41.0,,2019-01-17 13:52:11.764,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'native': {'template-tags': {'Time': {'id': '2d99d52b-d56b-e032-c2b9-f37b186e03b9', 'name': 'Time', 'display-name': 'Time', 'type': 'date'}}, 'query': 'SELECT users.""Group"",  SUM((deals.""Profit"" + deals.""Storage"")/""RateMargin"")*-1 AS company_profit \r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\nand date(deals.""Time"") = {{Time}}\r\nand users.""Group"" like \'%costarica%\'\r\ngroup by users.""Group""\r\n'}, 'type': 'native', 'database': 9}",,table,,False,False,211,,MT5 Volatilities Revenue Per Group (real/costarica) - 2019,,native,,"[{'name': 'Group', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 14}}}}, {'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': -4448.680000000051, 'max': -4448.680000000051, 'avg': -4448.680000000051, 'sd': None, 'q1': -4448.680000000051, 'q3': -4448.680000000051}}}}]",,2019-01-17 13:52:11.764,"{'graph.dimensions': ['Group'], 'graph.metrics': ['company_profit'], 'scalar.field': 'company_profit', 'column_settings': {'[""name"",""company_profit""]': {'prefix': '', 'suffix': ' USD'}}, 'card.title': 'Company Profit from real/costarica', 'table.pivot_column': 'Group', 'table.cell_column': 'company_profit'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-17 13:48:14.951,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'native': {'template-tags': {'Time': {'id': '2d99d52b-d56b-e032-c2b9-f37b186e03b9', 'name': 'Time', 'display-name': 'Time', 'type': 'date'}}, 'query': 'SELECT users.""Group"",  SUM((deals.""Profit"" + deals.""Storage"")/""RateMargin"")*-1 AS company_profit \r\nFROM mt5_deals_2019 AS deals\r\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\nand date(deals.""Time"") = {{Time}}\r\nand users.""Group"" like \'%malta\'\r\ngroup by users.""Group""\r\n'}, 'type': 'native', 'database': 9}",,scalar,,False,False,210,,MT5 Volatilities Revenue Per Group (real/malta) - 2019,,native,,"[{'name': 'Group', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 10.0}}}}, {'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 279.56582050000037, 'max': 279.56582050000037, 'avg': 279.56582050000037, 'sd': None, 'q1': 279.56582050000037, 'q3': 279.56582050000037}}}}]",,2019-02-20 23:48:48.129,"{'graph.dimensions': ['Group'], 'graph.metrics': ['company_profit'], 'scalar.field': 'company_profit', 'column_settings': {'[""name"",""company_profit""]': {'prefix': 'Company Profit from real/malta: ', 'suffix': ' EUR'}}}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2018-12-26 13:36:49.638,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM(""Profit"")*-1 AS Company_profit\r\nFROM mt5_deals_2018 AS deals\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')'}}",,scalar,,False,False,131,,MT5 Volatilities Total Revenue,,native,,"[{'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1830436.09999967, 'max': 1830436.09999967, 'avg': 1830436.09999967, 'sd': None, 'q1': 1830436.09999967, 'q3': 1830436.09999967}}}}]",,2019-03-14 09:01:27.350,"{'graph.dimensions': ['date'], 'graph.metrics': ['company_profit'], 'column_settings': {'[""name"",""company_profit""]': {'prefix': 'Volatilities  Profit as of 1st January 2018 = ', 'suffix': ' USD'}}}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-01-02 13:04:38.486,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM((""Profit"" + deals.""Storage"")/deals.""RateMargin"")*-1 AS Company_profit\r\nFROM mt5_deals_2019 AS deals\r\nWHERE ""Action"" IN (0,1) -- In Trades only\r\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')'}}",,scalar,,False,False,172,,MT5 Volatilities Total Revenue - 2019,,native,,"[{'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 606726.6974156157, 'max': 606726.6974156157, 'avg': 606726.6974156157, 'sd': None, 'q1': 606726.6974156157, 'q3': 606726.6974156157}}}}]",,2019-03-12 07:51:46.006,"{'graph.dimensions': ['date'], 'graph.metrics': ['company_profit'], 'column_settings': {'[""name"",""company_profit""]': {'prefix': 'Volatilities  Profit as of 1st January 2019 = ', 'suffix': ' USD'}}}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:18:41.693,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT users.Group, users.Login, users.Balance, max(deals.Time)\nFROM mt5_deals_2017 AS deals\nINNER JOIN mt5_users AS users\nON (deals.Login=users.Login)\n-- WHERE deals.Comment LIKE '%transfer from%'\nwhere date(deals.Time) = '2017-10-01'\nGROUP BY 1,2,3\nlimit 5""}}",,table,,False,False,606,,MT5- Login Balance,,native,,,,2019-03-22 03:18:41.693,{}
False,,"{'id': 76, 'name': ""Denis makagonov's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 55, 'slug': 'denis_makagonov_s_personal_collection'}",76.0,,2019-01-29 14:14:58.177,"{'email': 'denis.makagonov@binary.com', 'first_name': 'Denis', 'last_login': '2019-09-23T07:22:55.154Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 55, 'last_name': 'makagonov', 'date_joined': '2019-01-29T08:22:50.309Z', 'common_name': 'Denis makagonov'}",55,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT \ndate_trunc(\'month\', CAST(""mt5_deals"".""Time"" AS timestamp)) AS ""Time""\n, sum(""mt5_deals"".""Profit"") AS ""sum"", sum(""mt5_deals"".""Profit"") AS ""sum""\n, count(distinct ""mt5_deals"".""Login"") AS ""ActiveClients""\nFROM \n(SELECT ""Time"",""Profit"",""Login"" FROM mt5_deals_2019\nUNION all\nSELECT ""Time"",""Profit"",""Login"" FROM mt5_deals_2018\nUNION all\nSELECT ""Time"",""Profit"",""Login"" FROM mt5_deals_2017)   as ""mt5_deals""\nGROUP BY date_trunc(\'month\', CAST(""mt5_deals"".""Time"" AS timestamp))\nORDER BY date_trunc(\'month\', CAST(""mt5_deals"".""Time"" AS timestamp)) ASC'}}",MT5-2017-2019 YTD profit and Active Clients (accounts),combo,,False,False,271,,MT5-2017-2019 YTD profit and Active Clients (accounts),,native,,"[{'name': 'Time', 'display_name': 'Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 27, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2017-01-01T00:00:00.000Z', 'latest': '2019-03-01T00:00:00.000Z'}}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 27, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1377625.5399993907, 'max': 10035071.78999934, 'avg': 505084.7266666965, 'sd': 1970770.0927150024, 'q1': 5248.162499998013, 'q3': 313607.3849999873}}}}, {'name': 'sum_2', 'display_name': 'Sum 2', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 27, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1377625.5399993907, 'max': 10035071.78999934, 'avg': 505084.7266666965, 'sd': 1970770.0927150024, 'q1': 5248.162499998013, 'q3': 313607.3849999873}}}}, {'name': 'ActiveClients', 'display_name': 'Active Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 27, 'nil%': 0.0}, 'type': {'type/Number': {'min': 961.0, 'max': 5861.0, 'avg': 2404.185185185185, 'sd': 1288.575959285677, 'q1': 1273.25, 'q3': 3088.75}}}}]",,2019-03-08 03:15:14.122,"{'series_settings': {'Active Clients': {'axis': 'right'}, 'Sum 2': {'axis': 'left'}, 'Sum': {'axis': 'left', 'line.interpolate': 'cardinal'}}, 'graph.y_axis.auto_split': True, 'graph.y_axis.auto_range': True, 'column_settings': {'[""name"",""ActiveClients""]': {'number_separators': ', '}, '[""name"",""sum""]': {'number_separators': ', '}}, 'graph.y_axis.scale': 'linear', 'graph.dimensions': ['Time'], 'graph.metrics': ['sum', 'sum_2', 'ActiveClients']}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2019-01-29 09:11:23.405,"{'email': 'denis.makagonov@binary.com', 'first_name': 'Denis', 'last_login': '2019-09-23T07:22:55.154Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 55, 'last_name': 'makagonov', 'date_joined': '2019-01-29T08:22:50.309Z', 'common_name': 'Denis makagonov'}",55,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT COUNT(*) over () negativeBalancesCount, * FROM (\nselect to_timestamp(mt5_daily_2018.""Datetime""),COUNT(*) over () cnt,RANK() OVER (partition by mt5_daily_2018.""Login"" ORDER BY mt5_daily_2018.""Datetime"" DESC) islastday,*  \nFROM mt5_daily_2018 WHERE mt5_daily_2018.""Balance"" <0  ORDER BY ""Balance"" asc) as a \nWHERE ""islastday""=1'}}",just to have list of accounts with negative last balance,table,,False,False,257,,MT5_2018_negative_balances,,native,,"[{'name': 'negativebalancescount', 'display_name': 'Negative Balances Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 805.0, 'max': 805.0, 'avg': 805.0, 'sd': 0.0, 'q1': 805.0, 'q3': 805.0}}}}, {'name': 'to_timestamp', 'display_name': 'To Timestamp', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 197, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T21:00:59.000Z', 'latest': '2018-12-31T23:59:59.000Z'}}}}, {'name': 'cnt', 'display_name': 'Cnt', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 69381.0, 'max': 69381.0, 'avg': 69381.0, 'sd': 0.0, 'q1': 69381.0, 'q3': 69381.0}}}}, {'name': 'islastday', 'display_name': 'Is Last Day', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1.0, 'avg': 1.0, 'sd': 0.0, 'q1': 1.0, 'q3': 1.0}}}}, {'name': 'Datetime', 'display_name': 'Date Time', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 197, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1514840459.0000002, 'max': 1546300799.0, 'avg': 1537294932.490683, 'sd': 10523323.31945561, 'q1': 1529964722.590321, 'q3': 1546270768.44192}}}}, {'name': 'Login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 805, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1738.0, 'max': 155224.0, 'avg': 64135.54534161491, 'sd': 38305.87120891033, 'q1': 32754.028131389696, 'q3': 90877.06911272618}}}}, {'name': 'Timestamp', 'display_name': 'Timestamp', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 805, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.315931406883535e+17, 'max': 1.319077441530033e+17, 'avg': 1.3181768545601731e+17, 'sd': 105233295148726.19, 'q1': 1.3174438327486722e+17, 'q3': 1.3190746345218592e+17}}}}, {'name': 'DatetimePrev', 'display_name': 'Date Time Prev', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 197, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1514754059.0, 'max': 1546214399.0000002, 'avg': 1537197155.5962732, 'sd': 10528249.369202161, 'q1': 1529867010.636807, 'q3': 1546186336.2920232}}}}, {'name': 'Name', 'display_name': 'Name', 'base_type': 'type/Text', 'special_type': 'type/Name', 'fingerprint': {'global': {'distinct-count': 786, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 15.496894409937887}}}}, {'name': 'Group', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 16.516770186335403}}}}, {'name': 'Currency', 'display_name': 'Currency', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'Company', 'display_name': 'Company', 'base_type': 'type/Text', 'special_type': 'type/Company', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 17.608695652173914}}}}, {'name': 'EMail', 'display_name': 'Email', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 792, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.998757763975155, 'average-length': 21.982608695652175}}}}, {'name': 'Balance', 'display_name': 'Balance', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 568, 'nil%': 0.0}, 'type': {'type/Number': {'min': -13376.55, 'max': -0.01, 'avg': -83.0119254658385, 'sd': 601.5281002498285, 'q1': -15.393214016246468, 'q3': -1.2775775923623591}}}}, {'name': 'Credit', 'display_name': 'Credit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 12.0, 'avg': 1.070807453416149, 'sd': 3.098901260741454, 'q1': 0.0, 'q3': 4.160104381590552}}}}, {'name': 'InterestRate', 'display_name': 'Interest Rate', 'base_type': 'type/Float', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'CommissionDaily', 'display_name': 'Commission Daily', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'CommissionMonthly', 'display_name': 'Commission Monthly', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'AgentDaily', 'display_name': 'Agent Daily', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'AgentMonthly', 'display_name': 'Agent Monthly', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'BalancePrevDay', 'display_name': 'Balance Prev Day', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 614, 'nil%': 0.0}, 'type': {'type/Number': {'min': -13376.55, 'max': 6478.22, 'avg': -31.26314285714286, 'sd': 692.915175286296, 'q1': -19.293400044576984, 'q3': 2.803935633240708}}}}, {'name': 'BalancePrevMonth', 'display_name': 'Balance Prev Month', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 582, 'nil%': 0.0}, 'type': {'type/Number': {'min': -7728.78, 'max': 90269.91, 'avg': 251.53222360248446, 'sd': 3903.277974038582, 'q1': -16.614642150928436, 'q3': 7.896475903994147}}}}, {'name': 'EquityPrevDay', 'display_name': 'Equity Prev Day', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 600, 'nil%': 0.0}, 'type': {'type/Number': {'min': -7728.78, 'max': 7070.32, 'avg': 6.000298136645961, 'sd': 576.5637238820802, 'q1': -16.15380928883796, 'q3': 3.144400417466753}}}}, {'name': 'EquityPrevMonth', 'display_name': 'Equity Prev Month', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 555, 'nil%': 0.0}, 'type': {'type/Number': {'min': -7728.78, 'max': 11665.34, 'avg': 41.88408695652174, 'sd': 714.6428972792932, 'q1': -9.991600235944487, 'q3': 6.021832698652594}}}}, {'name': 'Margin', 'display_name': 'Margin', 'base_type': 'type/Float', 'special_type': 'type/GrossMargin', 'fingerprint': {'global': {'distinct-count': 71, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 3129.02, 'avg': 14.614086956521739, 'sd': 172.59948918162945, 'q1': 0.0, 'q3': 0.025037772787173004}}}}, {'name': 'MarginFree', 'display_name': 'Margin Free', 'base_type': 'type/Float', 'special_type': 'type/GrossMargin', 'fingerprint': {'global': {'distinct-count': 535, 'nil%': 0.0}, 'type': {'type/Number': {'min': -7728.78, 'max': 3256.26, 'avg': -39.506509316770185, 'sd': 391.4194452954258, 'q1': -10.260993028782675, 'q3': 1.206379068835879}}}}, {'name': 'MarginLevel', 'display_name': 'Margin Level', 'base_type': 'type/Float', 'special_type': 'type/GrossMargin', 'fingerprint': {'global': {'distinct-count': 79, 'nil%': 0.0}, 'type': {'type/Number': {'min': -446.1538461538462, 'max': 4766.666666666666, 'avg': 88.9936988874644, 'sd': 434.3772497728167, 'q1': -7.736006343005446, 'q3': 27.64678959349146}}}}, {'name': 'MarginLeverage', 'display_name': 'Margin Leverage', 'base_type': 'type/Decimal', 'special_type': 'type/GrossMargin', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 50.0, 'max': 1000.0, 'avg': 552.8571428571429, 'sd': 187.85721717321746, 'q1': 444.0602681997757, 'q3': 719.8331184102449}}}}, {'name': 'Profit', 'display_name': 'Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 137, 'nil%': 0.0}, 'type': {'type/Number': {'min': -16.34, 'max': 15781.33, 'avg': 62.76268322981366, 'sd': 693.0965223687183, 'q1': -3.705245540707841, 'q3': 0.6042141595139521}}}}, {'name': 'ProfitStorage', 'display_name': 'Profit Storage', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 62, 'nil%': 0.0}, 'type': {'type/Number': {'min': -583.51, 'max': 0.38, 'avg': -2.402409937888198, 'sd': 32.38123664212861, 'q1': -0.003956726156365001, 'q3': 0.010761703283529002}}}}, {'name': 'ProfitCommission', 'display_name': 'Profit Commission', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'ProfitEquity', 'display_name': 'Profit Equity', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 576, 'nil%': 0.0}, 'type': {'type/Number': {'min': -7728.78, 'max': 6385.28, 'avg': -21.580844720496895, 'sd': 480.23727537414436, 'q1': -8.74987545672203, 'q3': 1.367123942735042}}}}, {'name': 'DailyProfit', 'display_name': 'Daily Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 142, 'nil%': 0.0}, 'type': {'type/Number': {'min': -6779.28, 'max': 126.19, 'avg': -50.770012422360246, 'sd': 401.76510322480317, 'q1': -1.631843009068775, 'q3': 1.460379240865725}}}}, {'name': 'DailyBalance', 'display_name': 'Daily Balance', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 47, 'nil%': 0.0}, 'type': {'type/Number': {'min': -550.0, 'max': 207.0, 'avg': 0.17988819875776302, 'sd': 28.64937733622938, 'q1': -0.550961689760162, 'q3': 0.45194098773919206}}}}, {'name': 'DailyCredit', 'display_name': 'Daily Credit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'DailyCharge', 'display_name': 'Daily Charge', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'DailyCorrection', 'display_name': 'Daily Correction', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'DailyBonus', 'display_name': 'Daily Bonus', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'DailyStorage', 'display_name': 'Daily Storage', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 58, 'nil%': 0.0}, 'type': {'type/Number': {'min': -93.8, 'max': 231.58, 'avg': -0.19684472049689403, 'sd': 9.49575972307617, 'q1': -0.0041414015547230005, 'q3': 0.036457710357857005}}}}, {'name': 'DailyCommInstant', 'display_name': 'Daily Co Mm Instant', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': -0.68, 'max': 0.0, 'avg': -0.0008447204968944099, 'sd': 0.023966850812908003, 'q1': -0.200013467504458, 'q3': 0.0}}}}, {'name': 'DailyCommRound', 'display_name': 'Daily Co Mm Round', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'DailyAgent', 'display_name': 'Daily Agent', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 101.6, 'avg': 0.126211180124223, 'sd': 3.580929474399225, 'q1': 0.0, 'q3': 29.884365144783803}}}}, {'name': 'DailyInterest', 'display_name': 'Daily Interest', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}]",,2019-02-11 06:05:53.315,"{'table.pivot_column': 'negativebalancescount', 'table.cell_column': 'negativebalancescount'}"
False,,,,,2019-03-08 03:34:59.949,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select ""Login"", SUM(""Profit"")\nfrom mt5_deals_2019\nwhere Date(""Time"") >= \'2019-01-01\'\nand Date(""Time"") <= \'2019-01-31\'\nand (""Comment"" like \'%%invest%%\' OR ""Comment"" like \'%%win%%\' OR ""Comment"" like \'%%payout%%\' OR ""Comment"" like \'%%refunded%%\')\nGroup by ""Login""'}}",,table,,False,False,474,,mt5_jackdb_BO_trades_for_accounts_team,,native,,"[{'name': 'Login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 73, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2487.0, 'max': 173687.0, 'avg': 130833.17808219178, 'sd': 50258.81934719383, 'q1': 118552.25, 'q3': 163943.25}}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 52, 'nil%': 0.0}, 'type': {'type/Number': {'min': -152.16000000000292, 'max': 98.01000000000005, 'avg': -4.265479452054834, 'sd': 26.544169114949824, 'q1': -5.0925, 'q3': -0.027132034355964}}}}]",,2019-03-08 03:34:59.949,{}
False,,,,,2019-03-08 03:40:06.192,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'native', 'native': {'query': ""/*\nThe script is intended to output real money accounts which meet the following criteria:\na. Under a regulated landing company\nb. It's been inactive (no transactions) for 6 or 10 years (based on landing company)\n*/\n\n\nSELECT d.*, u.all_loginids\nFROM (VALUES ('mx', interval '6 years'),('mf', interval '10 years'),('mlt', interval '10 years')) AS ps (srvname, years_of_inactivity)\nCROSS JOIN dblink(ps.srvname, $$\n\n  /*\n    ta.last_modified IS NULL should indicate an account has been opened,\n    but never deposited into, however some old accounts do not have it filled\n    even if the account has had transactions on it. So in these cases we need\n    to check the transaction.transaction table.\n  */\n  WITH badnulls AS (SELECT DISTINCT ta.id AS account_id, ta.client_loginid\n    FROM transaction.account AS ta\n    JOIN transaction.firsts AS tf ON tf.account_id=ta.id\n    WHERE ta.last_modified IS NULL\n    AND ta.is_default IS DISTINCT FROM false\n  )\n\n  SELECT bc.loginid AS client_loginid,\n         COALESCE(tt.latest_transaction, bc.date_joined) AS last_activity,\n         ta.balance AS balance,\n         ta.currency_code AS currency,\n         cs.status_code AS disabled,\n         bc.binary_user_id AS binary_user_id\n  FROM betonmarkets.client AS bc\n  \n  LEFT JOIN transaction.account AS ta\n  ON bc.loginid = ta.client_loginid\n\n  LEFT JOIN badnulls ON badnulls.account_id=ta.id\n  \n  LEFT JOIN LATERAL(\n    SELECT MAX(transaction_time) AS latest_transaction\n    FROM transaction.transaction\n    WHERE account_id=badnulls.account_id\n  ) AS tt\n  ON TRUE\n   \n  LEFT JOIN (\n    SELECT client_loginid, status_code\n    FROM betonmarkets.client_status\n    WHERE status_code = 'disabled'\n  ) AS cs\n  ON bc.loginid = cs.client_loginid\n   \n  WHERE ta.is_default IS DISTINCT FROM false\n  AND COALESCE(ta.last_modified, tt.latest_transaction, bc.date_joined) < current_date - $$|| quote_nullable(ps.years_of_inactivity) ||$$::INTERVAL\n\n$$) AS d (\n    client_loginid VARCHAR,\n    last_activity DATE,\n    balance NUMERIC,\n    currency VARCHAR,\n    disabled VARCHAR,\n    binary_user_id BIGINT\n)\n\nLEFT JOIN dblink('users', $$\n  SELECT binary_user_id, string_agg(loginid, ' ')\n  FROM users.loginid\n  GROUP BY binary_user_id\n$$ ) AS u (\n  binary_user_id BIGINT,\n  all_loginids VARCHAR\n) ON u.binary_user_id = d.binary_user_id\n""}}",,table,,False,False,478,,"mt5_jackdb_Compliance-GDPR_anonymization_clients (mx,mlt,mf)",,native,,,,2019-03-08 03:40:06.192,{}
False,,,,,2019-03-08 03:39:08.031,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'native', 'native': {'query': ""/*\nThe script is intended to output real money accounts which meet the following criteria:\na. Under costarica\nb. Residence in eu/gb\nb. It's been inactive (no transactions) for 10 years\n*/\n\n\nSELECT d.*, u.all_loginids\nFROM dblink('cr', $$\n\n/*\nta.last_modified IS NULL should indicate an account has been opened,\nbut never deposited into, however some old accounts do not have it filled\neven if the account has had transactions on it. So in these cases we need\nto check the transaction.transaction table.\n*/\nWITH badnulls AS (SELECT DISTINCT ta.id AS account_id, ta.client_loginid\n  FROM transaction.account AS ta\n  JOIN transaction.firsts AS tf ON tf.account_id=ta.id\n  WHERE ta.last_modified IS NULL\n  AND ta.is_default IS DISTINCT FROM false\n),\n\nps as(select * from (VALUES\n  (ARRAY['gb','im','es','pt','cz','lu','bg','hu','lt','lv','de','gr','si','it','hr','sk','fi','dk','fr','cy','pl','mf','ie','ee','nl','be','se','ro','at'], interval '10 years')\n) ps (residences, years_of_inactivity))\n\nSELECT bc.loginid AS client_loginid,\n        bc.residence AS residence,\n         COALESCE(ta.last_modified, tt.latest_transaction, bc.date_joined) AS last_activity,\n         ta.balance AS balance,\n         ta.currency_code AS currency,\n         cs.status_code AS disabled,\n         bc.binary_user_id AS binary_user_id\n  FROM betonmarkets.client AS bc\n  \n  LEFT JOIN transaction.account AS ta\n  ON bc.loginid = ta.client_loginid\n  \n  LEFT JOIN badnulls ON badnulls.account_id=ta.id\n\n  LEFT JOIN LATERAL(\n    SELECT MAX(transaction_time) AS latest_transaction\n    FROM transaction.transaction\n    WHERE account_id=badnulls.account_id\n  ) AS tt\n  ON TRUE\n   \n  LEFT JOIN (\n    SELECT client_loginid, status_code\n    FROM betonmarkets.client_status\n    WHERE status_code = 'disabled'\n  ) AS cs\n  ON bc.loginid = cs.client_loginid\nCROSS JOIN ps\n  WHERE ta.is_default IS DISTINCT FROM false\n  AND bc.residence = ANY(ps.residences::VARCHAR[])\n  AND COALESCE(ta.last_modified, tt.latest_transaction, bc.date_joined) < current_date - ps.years_of_inactivity\n\n$$) AS d (\n  client_loginid VARCHAR,\n  residence VARCHAR,\n  last_activity DATE,\n  balance NUMERIC,\n  currency VARCHAR,\n  disabled VARCHAR,\n  binary_user_id BIGINT\n)\n\nLEFT JOIN dblink('users', $$\n SELECT binary_user_id, string_agg(loginid, ' ') AS all_loginids\n FROM users.loginid\n GROUP BY binary_user_id\n$$ ) AS u (\n binary_user_id BIGINT,\n all_loginids VARCHAR\n) ON u.binary_user_id = d.binary_user_id""}}",,table,,False,False,477,,mt5_jackdb_Compliance-GDPR_anonymization_clients_cr,,native,,,,2019-03-08 03:39:08.031,{}
False,,,,,2019-03-08 03:38:19.502,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'native', 'native': {'query': '/*\nThe script is intended to output virtual accounts which meet the following criteria:\na. Have a residence chosen that is subject to regulation\nb. It\'s been inactive (no transactions) for 6 or 10 years (based on gb/eu residence)\nc. The user has no real money accounts open\n*/\n\n\nSELECT d.*, u.all_loginids\nFROM dblink(\'vr\', $$\n\n/*\nta.last_modified IS NULL should indicate an account has been opened,\nbut never deposited into, however some old accounts do not have it filled\neven if the account has had transactions on it. So in these cases we need\nto check the transaction.transaction table.\n*/\nWITH badnulls AS (SELECT DISTINCT ta.id AS account_id, ta.client_loginid\n  FROM transaction.account AS ta\n  JOIN transaction.firsts AS tf ON tf.account_id=ta.id\n  WHERE ta.last_modified IS NULL\n),\n\nps as(select * from (VALUES \n  (ARRAY[\'gb\',\'im\'], interval \'6 years\'),\n  (ARRAY[\'es\',\'pt\',\'cz\',\'lu\',\'bg\',\'hu\',\'lt\',\'lv\',\'de\',\'gr\',\'si\',\'it\',\'hr\',\'sk\',\'fi\',\'dk\',\'fr\',\'cy\',\'pl\',\'mf\',\'ie\',\'ee\',\'nl\',\'be\',\'se\',\'ro\',\'at\'], interval \'10 years\')\n) ps (residences, years_of_inactivity))\n\nSELECT bc.loginid AS client_loginid,\n         bc.residence AS residence,\n         COALESCE(MAX(ta.last_modified), MAX(tt.latest_transaction), MAX(bc.date_joined)) AS last_activity,\n         cs.status_code AS disabled,\n         bc.binary_user_id AS binary_user_id\n  FROM betonmarkets.client AS bc\n  \n  LEFT JOIN transaction.account AS ta\n  ON bc.loginid = ta.client_loginid\n  \n  LEFT JOIN badnulls ON badnulls.client_loginid=bc.loginid\n\n  LEFT JOIN LATERAL(\n    SELECT MAX(transaction_time) AS latest_transaction\n    FROM transaction.transaction\n    WHERE account_id=badnulls.account_id\n  ) AS tt\n  ON TRUE\n   \n  LEFT JOIN (\n    SELECT client_loginid, status_code\n    FROM betonmarkets.client_status\n    WHERE status_code = \'disabled\'\n  ) AS cs\n  ON bc.loginid = cs.client_loginid\nCROSS JOIN ps\n  WHERE bc.residence = ANY(ps.residences::VARCHAR[])\n  /* Unlike real money clients where each has a designated `default` account,\n      not all virtual clients do, so we need to amalgamate all the accounts */\n  GROUP BY bc.loginid, bc.residence, disabled, bc.binary_user_id, ps.years_of_inactivity\n  HAVING COALESCE(MAX(ta.last_modified), MAX(tt.latest_transaction), MAX(bc.date_joined)) < current_date - ps.years_of_inactivity\n\n$$) AS d (\n  client_loginid VARCHAR,\n  residence VARCHAR,\n  last_activity DATE,\n  disabled VARCHAR,\n  binary_user_id BIGINT\n)\n\n/* Inner join is for meeting criteria c. */\nINNER JOIN dblink(\'users\', $$\n SELECT binary_user_id, string_agg(loginid, \' \') AS all_loginids\n FROM users.loginid\n GROUP BY binary_user_id\n HAVING EVERY(loginid LIKE \'VR%\')\n$$ ) AS u (\n binary_user_id BIGINT,\n all_loginids VARCHAR\n) ON u.binary_user_id = d.binary_user_id\n  \n  \n/* The residence list is generated with the following Perl script:\n\nuse strict;\nuse warnings;\n\nuse Brands;\nuse List::Util qw(any);\n\nmy (@six_year, @ten_year);\nmy $countries_list = Brands->new(name => \'binary\')->countries_instance->countries_list;\n\nforeach my $country (keys %$countries_list) {\n  my $config = $countries_list->{$country};\n  my @company_types = (\'gaming_company\', \'financial_company\', \'mt_gaming_company\', \'mt_financial_company\');\n\n  if ( any { $config->{$_} eq \'iom\' } @company_types ) {\n    push @six_year, $country;\n  }\n  elsif ( any { $config->{$_} =~ \'^malta\' } @company_types ) {\n    push @ten_year, $country;\n  }\n}\n\nprint ""\\n"";\nprint ""ARRAY[\'"" . join(""\',\'"", @six_year). ""\']"";\nprint ""\\n"";\nprint ""ARRAY[\'"" . join(""\',\'"", @ten_year). ""\']"";\nprint ""\\n"";\n\n*/'}}",,table,,False,False,476,,mt5_jackdb_Compliance-GDPR_anonymization_clients_virtual,,native,,,,2019-03-08 03:38:19.502,{}
False,,,,,2019-03-08 03:40:59.595,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'native', 'native': {'query': '-- CR/MT5 CRS report .v4\nWITH mt AS (\n\t-- this CTE can be run by itself to see the raw MT5 results\n\tSELECT mtu.""Login"", mtu.""Registration"", mtd.""Balance"", mtd.""Currency"", deals.""profit"", deals.""swap"", deals.""eod_profit"", deals.""eod_swap"", deals.""eod_commission"", deals.""eod_correction""\n\tFROM mt5.mt5_users AS mtu\n\tJOIN (\n\t\tSELECT\t\t-- This yields one row for every Login id who did something that created a record in deal\n\t\t  ""login"",\n\t\t\tSUM(""profit"")  FILTER (WHERE ""action"" IN (0,1) AND ""entry""=1) AS profit,\t-- Only add up BUY/SELL\n\t\t\tSUM(""storage"") FILTER (WHERE ""action"" IN (0,1) AND ""entry""=1) AS swap,\n\t\t-- The following sub sets are only necessary to adjust closing balance figures\n\t\t\tSUM(""profit"")     FILTER (WHERE ""time"" > \'2017-12-31 21:00:59\' AND ""action"" IN (0,1) AND ""entry""=1) AS eod_profit,\t-- Only add up BUY/SELL records that were not reflected in the last day\'s final sums\n\t\t\tSUM(""storage"")    FILTER (WHERE ""time"" > \'2017-12-31 21:00:59\' AND ""action"" IN (0,1) AND ""entry""=1) AS eod_swap,\n\t\t\tSUM(""commission"") FILTER (WHERE ""time"" > \'2017-12-31 21:00:59\' AND ""action"" IN (0,1) AND ""entry""=1) AS eod_commission,\n\t\t\tSUM(""profit"")     FILTER (WHERE ""time"" > \'2017-12-31 21:00:59\' AND ""action""=5)                    AS eod_correction\t-- Only add up corrections records that were not reflected in the last day\'s final sums\n\t\tFROM mt5.deals_2017 deal\t\t-- this is a static local table copied directly from MT5 to speed up the process\n\t\tGROUP BY ""login""\n\t) AS deals ON deals.""login""=mtu.""Login""\n\tLEFT JOIN mt5.mt5_daily_2017 AS mtd\t-- unfortunately some clients have no entry in here, so LEFT JOIN\n\t\tON mtd.""Login""=mtu.""Login""\n\t\tAND mtd.""Datetime"" = 1514754059\t-- Sunday, December 31, 2017 10:00:59 PM (Last date/time in the mt5_daily_2017 table)\n\tWHERE mtu.""Group"" LIKE \'%real\\\\vanuatu%\'\n)\n\nSELECT\n\tcr.cr_loginid, cr.mt5_loginid,\n\tmt.""Registration"" AS mt_acct_opening_date,\n\t\'Other\'::VARCHAR AS account_type,\n\tclient.status AS account_status, client.first_name, client.last_name,\n\tbbc.country_name AS country_of_residence,\n\tUPPER(client.tax_residence) AS tax_residence,\n\tclient.tax_identification_number,\n\tclient.date_of_birth,\n\tUPPER(client.place_of_birth) AS place_of_birth, \n\tclient.address_line_1, client.address_line_2, client.address_postcode, client.address_city, client.address_state,\n\tUPPER(client.residence) AS residence,\n\ttransaction.round_amount(mt.""Currency"", mt.""Balance""::NUMERIC) AS account_balance,\n\tmt.""Currency"" AS account_currency,\n\ttransaction.round_amount(mt.""Currency"", mt.""profit""::NUMERIC) AS profit,\n\ttransaction.round_amount(mt.""Currency"", mt.""swap""::NUMERIC) AS swap,\n\ttransaction.round_amount(mt.""Currency"", mt.""eod_profit""::NUMERIC) AS eod_profit,\n\ttransaction.round_amount(mt.""Currency"", mt.""eod_swap""::NUMERIC) AS eod_swap,\n\tcr.binary_user_id\nFROM mt\nJOIN oldest_cr_sibling_mt AS cr\n\tON cr.mt5_loginid=\'MT\'||mt.""Login""::VARCHAR\nJOIN LATERAL (\n\t-- This part is the clientDB part. Rather than grabbing every client and filtering them in reportDB, we are grabbing only the ones of interest.\n\tSELECT * FROM dblink(\'cr\', $$\n\t\tSELECT\n\t\t\tbc.first_name, bc.last_name, bc.residence, bc.tax_residence, bc.tax_identification_number, bc.date_of_birth, bc.place_of_birth, \n\t\t\tbc.address_line_1, bc.address_line_2, bc.address_postcode, bc.address_city, bc.address_state,\n\t\t\tcs.status\n\t\tFROM betonmarkets.client AS bc\n\t\tLEFT JOIN LATERAL (\n\t\t\tSELECT string_agg(bcs.status_code, \', \') AS status\n              FROM betonmarkets.client_status AS bcs\n             WHERE bcs.client_loginid = bc.loginid\n               AND bcs.status_code IN (\'disabled\',\'unwelcome\',\'cashier_locked\')\n\t\t) AS cs ON TRUE\n\t\tWHERE bc.loginid= $$|| quote_literal(cr.cr_loginid) ||$$\n\t$$) AS cr (\n\t\tfirst_name VARCHAR, last_name VARCHAR, residence VARCHAR, tax_residence VARCHAR, tax_identification_number VARCHAR, date_of_birth VARCHAR, place_of_birth VARCHAR,\n\t\taddress_line_1 VARCHAR, address_line_2 VARCHAR, address_postcode VARCHAR, address_city VARCHAR, address_state VARCHAR, status VARCHAR\n\t)\n) AS client ON TRUE\n-- This is a local, static table created from the countries.yml file\nJOIN brands_binary_countries AS bbc\n\tON bbc.country_code=client.residence\nWHERE bbc.tax_details_required\nORDER BY 2'}}",,table,,False,False,479,,mt5_jackdb_CR/MT5 CRS report .v4,,native,,,,2019-03-08 03:40:59.595,{}
False,,,,,2019-03-08 03:41:50.986,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select ozt.core_symbol,\ncast(SUM(((maker_filled_volume))) as decimal(100,3)) As Filled_Volume,\ncast(SUM(((usd_amount))) as decimal(100,3)) As Volume_in_USD,\ncast(SUM(((maker_filled_volume)*(ABS(core_total_spread))*(term_ref_conversion_ratio))) as decimal(100,3)) As Spread_Revenue\nfrom mt5.oz_trades_view ozt\nwhere date(ozt.trade_time) >= \'2018-01-01\'\n--and  date(ozt.trade_time) <= \'2018-10-31\'\nand ozt.order_result NOT IN (0,2) -- Ignore trades done when there are swaps or Rejected\nand ozt.trade_status = 2 -- Trade Filled\nand ozt.""taker_mt_group"" like \'%vanuatu%\'\nand ozt.core_order_side IN (1,2) -- 1 is Buy and 2 is Sell\nand ozt.maker_name NOT IN (\'Warehouse\',\'FXOpen\',\'FXOpenUK\') -- Means ignore B-Booked Trades and Trades on Cryptos\nand ozt.taker_name != \'Warehouse\' -- Means ignore Rebalancing \ngroup by ozt.core_symbol\n'}}",,table,,False,False,480,,mt5_jackdb_MT5 Spread Revenue - per month,,native,,,,2019-03-08 03:41:50.986,{}
False,,,,,2019-03-08 03:35:50.823,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select ""Login"", ""Rights""::bigint & 4 > 0 as disabled ,""Group"" from mt5_users WHERE ""Login"" IN \n(42294,\n95282,\n80266,\n68133,\n93250,\n72674,\n68477,\n10681,\n126937,\n30311,\n83134,\n85713,\n87423,\n72347,\n103237,\n107418,\n105128,\n74140,\n73850,\n133130,\n73051,\n87978,\n15985,\n126620,\n126111,\n80485,\n101974,\n77623,\n85955,\n126637,\n124658,\n126969,\n128767,\n152804,\n100208,\n119548,\n119551,\n126784,\n112788,\n91087,\n15382,\n128392,\n73871,\n94790,\n116363,\n124205,\n137870,\n78695,\n88906,\n74825,\n102493,\n122582,\n82228,\n72667,\n11622,\n72295,\n138050,\n146076,\n88898,\n68780,\n132548,\n70922,\n128527,\n67849,\n42135,\n70073,\n98895,\n82895,\n132096,\n112657,\n98837,\n101828,\n124912,\n105930,\n97511,\n77084,\n130354,\n130915,\n132730,\n115744,\n78426,\n92629,\n91319,\n34731,\n82418,\n139939,\n127420,\n97540,\n133646,\n57948,\n76438,\n131357,\n56892,\n78308,\n40366,\n10547,\n131583,\n68309,\n149823,\n131612,\n142107,\n106035,\n87422,\n80564,\n133247,\n54533,\n38102,\n109911,\n121755,\n119528,\n132253,\n127164,\n106044,\n131607,\n148470,\n129644,\n79134,\n142201,\n131106,\n57014,\n152914,\n76642,\n103597,\n111014,\n133865,\n130435,\n85047,\n106020,\n146053,\n85521,\n94101,\n106279,\n133849,\n148382,\n100566,\n84167,\n56495,\n129507,\n67271,\n129541,\n68318,\n129548,\n62799,\n130800,\n92803,\n144772,\n146186,\n72735,\n111521,\n114403,\n108409,\n76930,\n130859,\n129675,\n53977,\n69473,\n81002,\n37575,\n91755,\n116114,\n75648,\n129853,\n130451,\n108871,\n128488,\n78267,\n129721,\n20879,\n106287,\n56172,\n130601,\n89048,\n71906,\n94818,\n39259,\n130891,\n75935,\n55001,\n130854,\n15451,\n97438,\n67035,\n123040,\n133718,\n96990,\n68792,\n135145,\n121089,\n127403,\n129287,\n104382,\n64084,\n73347,\n120068,\n48544,\n108493,\n57892,\n130860,\n134011,\n145356,\n148978,\n102121,\n27486,\n100467,\n76364,\n61757,\n104486,\n8469,\n64590,\n132385,\n76668,\n112772,\n151575,\n89784,\n55776,\n136923,\n79029,\n34017,\n88263,\n88352,\n74538,\n127314,\n79467,\n46652,\n79076,\n90137,\n132536,\n70563,\n55339,\n61690,\n53821,\n74083,\n101225,\n132668,\n71090,\n89192,\n67950,\n142223,\n69882,\n10878,\n133043,\n103568,\n67922,\n100383,\n75320,\n91826,\n132852,\n93499,\n128384,\n102643,\n56432,\n128383,\n144493,\n121282,\n87473,\n96123,\n99183,\n136113,\n71854,\n135979,\n113370,\n127282,\n140519,\n94086,\n73465,\n132950,\n64033,\n106655,\n104644,\n135077,\n75081,\n83362,\n131609,\n41456,\n91121,\n135118,\n75823,\n137322,\n83444,\n145065,\n146831,\n134113,\n134690,\n71285,\n75702,\n99138,\n99582,\n82818,\n107912,\n96560,\n116768,\n137757,\n95181,\n86782,\n82841,\n84246,\n86216,\n59863,\n134542,\n134598,\n134309,\n73450,\n80246,\n144701,\n79084,\n99484,\n133756,\n30383,\n73979,\n81922,\n89620,\n58571,\n58622,\n113827,\n114694,\n70395,\n70456,\n84959,\n88551,\n75097,\n80179,\n75558,\n89868,\n90126,\n97244,\n76563,\n85337,\n114731,\n105437,\n66886,\n83796,\n115495,\n91686,\n135549,\n67375,\n86818,\n140137,\n120052,\n33087,\n140126,\n137609,\n110014,\n73634,\n135923,\n134721,\n92134,\n91570,\n72546,\n72549,\n5437,\n30343,\n84388,\n114394,\n146746,\n136080,\n74399,\n149799,\n134172,\n153515,\n68398,\n139586,\n74629,\n57961,\n62715,\n96901,\n136875,\n37648,\n135970,\n144461,\n108615,\n108839,\n112185,\n107235,\n82253,\n24963,\n100222,\n69448,\n98619,\n129585,\n78228,\n65924,\n108110,\n136991,\n103241,\n78306,\n135102,\n78534,\n27462,\n66550,\n15575,\n100970,\n101727,\n94942,\n144627,\n122551,\n83657,\n81485,\n91303,\n89729,\n69828,\n32706,\n71944,\n72909,\n73404,\n133550,\n135850,\n70218,\n138723,\n138488,\n133937,\n73821,\n85144,\n75195,\n137388,\n44112,\n102330,\n108895,\n78107,\n137760,\n107148,\n69329,\n139991,\n76292,\n114113,\n78517,\n92219,\n98242,\n72293,\n137314,\n108620,\n78738,\n78158,\n112293,\n147818,\n85924,\n70811,\n125485,\n74118,\n68646,\n74640,\n28197,\n100158,\n71851,\n82169,\n72617,\n92136,\n92144,\n88832,\n72681,\n82775,\n73569,\n138037,\n78834,\n80212,\n91601,\n76006,\n81671,\n69014,\n72291,\n75327,\n75328,\n88941,\n138981,\n77359,\n78165,\n150975,\n95857,\n131173,\n71753,\n98552,\n79324,\n37958,\n77318,\n75079,\n78058,\n74537,\n114299,\n40617,\n57168,\n88955,\n139011,\n74464,\n80591,\n75503,\n82102,\n81069,\n76217,\n75949,\n152592,\n82535,\n105736,\n71759,\n21926,\n138721,\n80906,\n138227,\n77636,\n77560,\n70787,\n74385,\n84136,\n77620,\n78044,\n73779,\n78186,\n73102,\n75685,\n138588,\n81738,\n72456,\n101349,\n102204,\n101093,\n101105,\n79085,\n78520,\n99287,\n79938,\n77431,\n77977,\n75686,\n86234,\n112302,\n93128,\n96546,\n73499,\n101874,\n84075,\n138852,\n98693,\n77000,\n101792,\n71304,\n112285,\n76119,\n74751,\n94377,\n76199,\n75335,\n108421,\n77049,\n73996,\n68480,\n73703,\n59408,\n84048,\n76918,\n79603,\n79706,\n78890,\n71794,\n74638,\n117334,\n132249,\n139110,\n138422,\n75430,\n75443,\n95631,\n140309,\n89311,\n139261,\n91830,\n84274,\n82559,\n82461,\n97256,\n118343,\n139324,\n38473,\n63895,\n116139,\n112761,\n78641,\n75572,\n83888,\n141324,\n95945,\n81937,\n82525,\n134633,\n141661,\n81638,\n135583,\n83078,\n114691,\n81678,\n141701,\n141675,\n141947,\n42157,\n68252,\n103854,\n81723,\n142604,\n151121,\n92753,\n32669,\n82254,\n152357,\n82152,\n82813,\n143568,\n152832,\n110303,\n139659,\n143015,\n82068,\n89051,\n139626,\n88982,\n83845,\n80910,\n88809,\n88810,\n105524,\n78773,\n79971,\n141481,\n82351,\n86946,\n80070,\n72208,\n82629,\n90038,\n82314,\n38976,\n87141,\n73547,\n37637,\n32438,\n89950,\n149083,\n27428,\n79912,\n82725,\n102798,\n72292,\n140213,\n141241,\n20893,\n102965,\n73797,\n29307,\n97350,\n68311,\n145059,\n43068,\n40085,\n95918,\n65592,\n104114,\n95142,\n104391,\n64828,\n138533,\n119789,\n144628,\n132865,\n138285,\n133712,\n76754,\n44313,\n100265,\n59773,\n83463,\n105737,\n70542,\n58739,\n58899,\n103959,\n96503,\n132781,\n80667,\n23736,\n73829,\n74167,\n52452,\n126751,\n85866,\n138254,\n80365,\n126235,\n82260,\n76780,\n103715,\n6639,\n41429,\n69773,\n136399,\n99544,\n56478,\n39773,\n78245,\n108199,\n59326,\n28689,\n8666,\n93560,\n68051,\n17405,\n145778,\n66988,\n90344,\n73663,\n35394,\n90032,\n102291,\n107347,\n47588,\n74295,\n112221,\n114262,\n87962,\n110345,\n26684,\n75595,\n104322,\n78783,\n85914,\n101698,\n126762,\n122506,\n102146,\n133909,\n80644,\n40990,\n5648,\n96958,\n102282,\n94889,\n89515,\n122935,\n110130,\n100634,\n23141,\n96463,\n74579,\n125202,\n110769,\n99394,\n80946,\n100702,\n140372,\n79224,\n46640,\n144449,\n91624,\n129449,\n103799,\n138910,\n121640,\n90966,\n143913,\n83433,\n82893,\n79339,\n84505,\n100074,\n81761,\n78682,\n103561,\n104774,\n109886,\n85926,\n86253,\n82741,\n110482,\n151844,\n131443,\n104000,\n129624,\n27066,\n68463,\n69470,\n119517,\n139883,\n97715,\n56951,\n105596,\n83101,\n97694,\n83029,\n36767,\n82091,\n52293,\n112135,\n146127,\n82751,\n148725,\n74666,\n60522,\n150758,\n143060,\n142221,\n104499,\n52747,\n74080,\n139682,\n144370,\n59914,\n95437,\n73705,\n83784,\n90807,\n133194,\n142582,\n55766,\n56755,\n145844,\n151351,\n83665,\n105748,\n143979,\n150980,\n133154,\n29003,\n84085,\n75603,\n73281,\n135433,\n96988,\n73726,\n150541,\n114219,\n97950,\n54957,\n142427,\n83276,\n91646,\n80481,\n83751,\n65824,\n78260,\n88505,\n144723,\n69119,\n85827,\n90350,\n146169,\n144431,\n92965,\n89194,\n85716,\n14939,\n51844,\n87369,\n144078,\n123211,\n87265,\n39820,\n83448,\n88918,\n81942,\n144406,\n80415,\n25705,\n49676,\n123213,\n101048,\n103730,\n100023,\n59732,\n131862,\n74736,\n87593,\n92744,\n140246,\n83563,\n69458,\n83492,\n84297,\n85143,\n76415,\n144795,\n76770,\n83930,\n84208,\n85768,\n95352,\n84403,\n93135,\n79240,\n144838,\n84059,\n83980,\n150850,\n141401,\n87273,\n84084,\n82805,\n143895,\n70204,\n85272,\n73944,\n33381,\n98537,\n97389,\n84450,\n143684,\n84861,\n87416,\n100649,\n73857,\n91081,\n103770,\n98441,\n111633,\n84532,\n146245,\n147051,\n107460,\n84558,\n152306,\n59116,\n86869,\n85548,\n133616,\n87232,\n30583,\n86387,\n86172,\n80162,\n85728,\n125775,\n101241,\n145120,\n88228,\n102887,\n69464,\n77083,\n84695,\n89036,\n107854,\n88248,\n87578,\n128223,\n97188,\n86488,\n89070,\n85010,\n89081,\n148988,\n74151,\n89062,\n83412,\n88057,\n76413,\n97032,\n87998,\n87620,\n47360,\n89408,\n88104,\n89502,\n92750,\n89250,\n143318,\n93090,\n145366,\n91643,\n88861,\n96505,\n140223,\n85985,\n100588,\n76447,\n146408,\n146358,\n146122,\n88606,\n146587,\n73215,\n52544,\n142937,\n113553,\n74046,\n93258,\n85412,\n87609,\n78007,\n102653,\n62081,\n99247,\n89367,\n81451,\n70249,\n77020,\n89415,\n146813,\n17528,\n148099,\n78916,\n107592,\n118250,\n70052,\n146941,\n74042,\n147822,\n147011,\n89085,\n88862,\n103069,\n90764,\n92494,\n92343,\n105438,\n93415,\n108191,\n98760,\n92376,\n89493,\n91116,\n99073,\n98134,\n91942,\n96118,\n97700,\n88362,\n91975,\n77588,\n97863,\n99965,\n91513,\n89555,\n95727,\n98629,\n98633,\n97153,\n91922,\n100923,\n140038,\n96880,\n89359,\n112140,\n89296,\n124756,\n73516,\n121479,\n90776,\n97004,\n103047,\n93484,\n97376,\n82833,\n90047,\n89014,\n98015,\n90813,\n97419,\n115975,\n116322,\n93514,\n97418,\n146577,\n90336,\n107578,\n106720,\n93723,\n93483,\n107452,\n104410,\n91736,\n99615,\n92666,\n105844,\n95573,\n97445,\n86458,\n25547,\n92991,\n128867,\n104705,\n101561,\n97506,\n99219,\n93604,\n94369,\n91525,\n78984,\n93493,\n102663,\n97308,\n91434,\n92937,\n78657,\n78794,\n100457,\n86483,\n105522,\n110518,\n118309,\n85556,\n69078,\n77727,\n132785,\n136130,\n95756,\n91916,\n109710,\n100687,\n91153,\n126442,\n89922,\n89954,\n89747,\n94712,\n97455,\n125039,\n128739,\n97013,\n98393,\n99310,\n86071,\n132165,\n101269,\n97055,\n94014,\n124867,\n125340,\n87928,\n100540,\n95559,\n92128,\n151601,\n92880,\n98608,\n102499,\n91288,\n82042,\n105645,\n105646,\n99560,\n109276,\n99036,\n99111,\n97593,\n101659,\n103728,\n99242,\n95593,\n104020,\n78644,\n79005,\n102434,\n84193,\n114702,\n121719,\n104315,\n107685,\n109603,\n114097,\n114556,\n66895,\n107761,\n105880,\n115752,\n109525,\n108433,\n139619,\n107868,\n123083,\n126031,\n116318,\n109971,\n121777,\n83239,\n111338,\n101674,\n112653,\n135446,\n110255,\n102715,\n130768,\n148420,\n109627,\n137901,\n100712,\n109662,\n77357,\n148449,\n48596,\n122467,\n138654,\n132337,\n116366,\n108156,\n102271,\n114741,\n105352,\n109827,\n116076,\n116092,\n111587,\n109750,\n125483,\n106200,\n140165,\n70954,\n113508,\n114081,\n101272,\n149014,\n101287,\n150315,\n99513,\n107683,\n130619,\n135903,\n141129,\n136777,\n101463,\n75860,\n116976,\n106371,\n40653,\n112114,\n108220,\n129045,\n101420,\n109944,\n148306,\n99626,\n108459,\n105564,\n148531,\n94414,\n137745,\n108813,\n107455,\n104197,\n58957,\n110101,\n110105,\n112022,\n108326,\n134163,\n109957,\n103197,\n110306,\n147843,\n110132,\n73973,\n91164,\n105775,\n41330,\n103533,\n102929,\n106006,\n148135,\n145130,\n68497,\n110929,\n144314,\n101816,\n106673,\n20599,\n109941,\n100044,\n108568,\n106729,\n111185,\n127269,\n104678,\n114739,\n103474,\n104457,\n49841,\n148803,\n110710,\n124411,\n109804,\n112283,\n103991,\n83763,\n100435,\n124351,\n76638,\n144016,\n102916,\n82326,\n105351,\n110521,\n107144,\n110572,\n148768,\n110327,\n123344,\n25653,\n144867,\n78057,\n79867,\n82782,\n81147,\n124862,\n103713,\n135711,\n102197,\n100021,\n107146,\n138655,\n105451,\n102223,\n109073,\n110727,\n118024,\n88841,\n87052,\n92694,\n107135,\n116447,\n108661,\n113975,\n110800,\n109204,\n96220,\n108022,\n106741,\n27214,\n89516,\n116459,\n94553,\n150823,\n13332,\n114944,\n150369,\n150310,\n114510,\n145688,\n113495,\n122127,\n78627,\n128638,\n119714,\n151182,\n112237,\n148830,\n117791,\n117822,\n110114,\n111556,\n121227,\n76229,\n124292,\n150209,\n103923,\n150257,\n150479,\n150690,\n147406,\n135260,\n118156,\n130400,\n119705,\n151084,\n108058,\n118338,\n118734,\n118631,\n120057,\n142135,\n102498,\n79121,\n118823,\n111303,\n111365,\n101010,\n144639,\n118481,\n112053,\n119195,\n120006,\n119540,\n113675,\n150882,\n137827,\n46591,\n85587,\n119455,\n148370,\n132821,\n149261,\n119673,\n140298,\n58371,\n121347,\n119945,\n119951,\n120645,\n120065,\n93009,\n131539,\n152268,\n126769,\n121302,\n126635,\n150842,\n120966,\n105695,\n149310,\n107674,\n143047,\n152883,\n124352,\n132790,\n139204,\n121045,\n97078,\n82505,\n121335,\n135205,\n112478,\n138439,\n105274,\n133561,\n137041,\n151456,\n153310,\n101416,\n63733,\n122526,\n152120,\n95531,\n114410,\n76162,\n86170,\n128884,\n122845,\n73641,\n73642,\n141468,\n122794,\n84333,\n123091,\n153322,\n107775,\n150867,\n152369,\n144246,\n86037,\n110301,\n105185,\n152423,\n123605,\n123541,\n123871,\n101488,\n68531,\n110237,\n78288,\n146192,\n147610,\n148104,\n144933,\n82657,\n130565,\n138048,\n144086,\n124829,\n101980,\n129300,\n5565,\n136754,\n42872,\n100365,\n66031,\n34977,\n111390,\n126219,\n78235,\n126136,\n30089,\n102232,\n5478,\n10135,\n14103,\n53996,\n46563,\n107411,\n101947,\n59780,\n150293,\n63777,\n125342,\n126107,\n44745,\n102844,\n78887,\n76098,\n38264,\n107800,\n68402,\n57731,\n127126,\n151446,\n85196,\n124032,\n48676,\n41829,\n6611,\n33305,\n75812,\n127251,\n21627,\n115883,\n40124,\n77816,\n44032,\n133702,\n125603,\n60035,\n10763,\n131878,\n136033,\n29213,\n101103,\n20327,\n97501,\n128969,\n75252,\n63941,\n106348,\n128624,\n73500,\n7555,\n85970,\n28881,\n128744,\n41047,\n10863,\n147858,\n117617,\n120029,\n103981,\n128881,\n57583,\n99220,\n78669,\n102793,\n82337,\n123042,\n109157,\n130583,\n44142,\n64199,\n67109,\n130688,\n128869,\n131647,\n131384,\n37928,\n133342,\n40979,\n100516,\n10998,\n67845,\n124991,\n68649,\n78454,\n139096,\n130869,\n52165,\n13034,\n67377,\n130763,\n50249,\n21181,\n64245,\n49934,\n58780,\n129544,\n62802,\n80333,\n43769,\n131912,\n131107,\n66701,\n127444,\n88007,\n65674,\n62479,\n70248,\n90495,\n73612,\n36049,\n25706,\n130367,\n131013,\n55144,\n92637,\n128588,\n21091,\n31668,\n31413,\n65636,\n73511,\n119117,\n59114,\n30675,\n41828,\n133226,\n83780,\n80245,\n150465,\n131332,\n86051,\n63913,\n29744,\n48000,\n91297,\n132390,\n130880,\n82521,\n14857,\n56467,\n71576,\n62010,\n64580,\n30561,\n50406,\n132434,\n106125,\n132883,\n64591,\n67817,\n58694,\n54388,\n108394,\n60408,\n59120,\n147931,\n131551,\n67960,\n63473,\n58378,\n50717,\n58990,\n146216,\n27492,\n20686,\n109053,\n87257,\n110643,\n110151,\n81795,\n77028,\n36345,\n56944,\n99419,\n31636,\n66030,\n60535,\n66782,\n55305,\n129347,\n142599,\n32462,\n8993,\n29868,\n131633,\n135028,\n13962,\n74090,\n135338,\n73134,\n96916,\n133953,\n87414,\n57563,\n89818,\n61031,\n62836,\n64764,\n135473,\n90373,\n66220,\n133574,\n61668,\n62471,\n72584,\n63544,\n93110,\n123691,\n38639,\n49053,\n104626,\n5748,\n56780,\n60743,\n135482,\n146664,\n62775,\n137087,\n97433,\n73906,\n49199,\n93662,\n134419,\n86836,\n62177,\n135025,\n135015,\n52160,\n46446,\n82353,\n51830,\n36421,\n88303,\n62404,\n85361,\n89644,\n81655,\n79462,\n65843,\n105282,\n78421,\n80141,\n59656,\n65664,\n66564,\n88073,\n70600,\n74200,\n127035,\n74360,\n67810,\n91214,\n135036,\n74342,\n85110,\n67000,\n135127,\n117082,\n82363,\n137351,\n65964,\n73963,\n132504,\n128558,\n78352,\n75728,\n74159,\n142612,\n65167,\n12684,\n66014,\n55861,\n138290,\n84270,\n140615,\n104336,\n124121,\n97870,\n28305,\n71917,\n152660,\n94796,\n67892,\n101313,\n87602,\n92989,\n107564,\n88047,\n40240,\n132524,\n136953,\n143561,\n127458,\n133964,\n133688,\n113040,\n116714,\n13228,\n64982,\n131394,\n105206,\n137400,\n77274,\n67128,\n133356,\n30897,\n97616,\n120674,\n79576,\n142595,\n100637,\n72907,\n115765,\n72579,\n103805,\n132283,\n132006,\n128883,\n143777,\n67880,\n73070,\n73689,\n135008,\n100883,\n74171,\n51510,\n141778,\n61590,\n86480,\n53412,\n88845,\n122595,\n34107,\n80383,\n31938,\n77725,\n74654,\n64939,\n105750,\n102081,\n72395,\n77840,\n138363,\n69061,\n138429,\n69040,\n76360,\n81974,\n104149,\n76352,\n71749,\n72302,\n79348,\n73501,\n72870,\n77449,\n74141,\n77424,\n81914,\n135805,\n138128,\n70896,\n87063,\n77661,\n90557,\n72445,\n87922,\n18091,\n70788,\n86358,\n139952,\n72354,\n74160,\n46059,\n75607,\n82239,\n82035,\n77188,\n82358,\n78521,\n102432,\n121019,\n78751,\n58755,\n78934,\n101616,\n62903,\n138406,\n27663,\n79595,\n80519,\n89056,\n141809,\n51225,\n10451,\n126448,\n69887,\n140483,\n91584,\n40297,\n79645,\n127178,\n81906,\n139434,\n130935,\n142277,\n144645,\n10530,\n71019,\n34527,\n76939,\n83343,\n120681,\n82157,\n136931,\n123708,\n76932,\n35543,\n81000,\n80870,\n138025,\n60045,\n70460,\n80267,\n50019,\n82016,\n91498,\n84186,\n95385,\n80746,\n108519,\n106691,\n79046,\n70489,\n81054,\n137660,\n19041,\n110896,\n19158,\n104490,\n82680,\n71217,\n40446,\n140769,\n103048,\n68496,\n44751,\n50805,\n66682,\n67159,\n21329,\n72255,\n35096,\n45040,\n120804,\n30711,\n109571,\n43819,\n82014,\n55530,\n75912,\n80198,\n64032,\n77038,\n41279,\n149903,\n141799,\n132774,\n86799,\n6558,\n101670,\n41383,\n46493,\n133326,\n69469,\n57490,\n13817,\n67653,\n135076,\n91264,\n121273,\n13651,\n43464,\n110458,\n76293,\n36843,\n88676,\n105329,\n126909,\n24978,\n140664,\n32389,\n107443,\n54226,\n148732,\n108505,\n51333,\n31092,\n49592,\n73192,\n42973,\n45446,\n44201,\n17314,\n43194,\n89436,\n52051,\n137671,\n76571,\n47567,\n40128,\n92469,\n94802,\n87010,\n73760,\n50655,\n62313,\n82471,\n57006,\n93613,\n101182,\n72246,\n130855,\n77423,\n121177,\n48074,\n47523,\n100681,\n140371,\n65168,\n46319,\n112841,\n20948,\n61651,\n32653,\n66524,\n22986,\n69587,\n65025,\n98848,\n97597,\n104139,\n100931,\n98870,\n52555,\n45202,\n141998,\n64246,\n73907,\n35510,\n92260,\n50255,\n35681,\n56765,\n113626,\n26422,\n80679,\n64824,\n143596,\n87323,\n81070,\n110616,\n96946,\n49814,\n150188,\n30932,\n47244,\n148997,\n106059,\n143821,\n86929,\n59712,\n50424,\n52406,\n84878,\n107785,\n74306,\n142208,\n53235,\n143032,\n85943,\n16731,\n68260,\n144022,\n71784,\n108708,\n107975,\n71006,\n83206,\n28679,\n21445,\n73951,\n68172,\n49398,\n54282,\n130882,\n83607,\n51512,\n116121,\n50701,\n53486,\n143307,\n87807,\n117573,\n100741,\n84083,\n103251,\n93754,\n34306,\n135593,\n82386,\n54759,\n82520,\n56853,\n85395,\n60643,\n146646,\n80456,\n98946,\n6451,\n150931,\n53752,\n59888,\n103055,\n31075,\n29192,\n14671,\n134850,\n91542,\n146394,\n82784,\n84275,\n50507,\n87797,\n72595,\n95419,\n56679,\n130456,\n34963,\n77196,\n85988,\n84504,\n109834,\n97098,\n99852,\n81843,\n72473,\n145403,\n57367,\n60225,\n111946,\n87467,\n87916,\n81896,\n88287,\n80616,\n87536,\n85575,\n80431,\n91580,\n92680,\n91220,\n119849,\n96114,\n96833,\n87663,\n97802,\n85427,\n102361,\n136447,\n119136,\n87367,\n85763,\n89870,\n97473,\n144140,\n142682,\n145943,\n89638,\n118706,\n146162,\n112929,\n146636,\n151894,\n146314,\n84254,\n99482,\n37161,\n146306,\n93256,\n89934,\n89023,\n42195,\n146563,\n89239,\n24041,\n24493,\n13963,\n98955,\n91766,\n97172,\n60621,\n100391,\n89513,\n147811,\n130782,\n78328,\n144154,\n88796,\n97741,\n98487,\n90986,\n96774,\n100927,\n97006,\n92890,\n92159,\n89778,\n91356,\n95010,\n109700,\n31505,\n99572,\n95786,\n95058,\n90774,\n95002,\n87991,\n8922,\n98496,\n59869,\n22464,\n73654,\n98302,\n123300,\n95452,\n98783,\n93700,\n116952,\n148092,\n106074,\n140603,\n95603,\n104340,\n46121,\n27678,\n91231,\n76000,\n89918,\n111802,\n91882,\n102857,\n91919,\n84519,\n98259,\n94791,\n97549,\n7497,\n96893,\n70672,\n43676,\n90785,\n110018,\n31757,\n9868,\n129273,\n127246,\n134988,\n95057,\n92732,\n92239,\n103970,\n92797,\n102373,\n98925,\n109314,\n85539,\n103995,\n99037,\n93406,\n89146,\n98442,\n119043,\n109395,\n110771,\n97609,\n101875,\n110640,\n112630,\n118077,\n123580,\n112757,\n104131,\n102913,\n148328,\n81073,\n105873,\n104594,\n117407,\n105984,\n104925,\n101596,\n56844,\n99204,\n150247,\n106281,\n149852,\n100839,\n77738,\n124705,\n25338,\n59538,\n106102,\n106113,\n23615,\n106202,\n91090,\n139111,\n148101,\n104375,\n95645,\n111542,\n58043,\n103617,\n54649,\n150229,\n95211,\n126579,\n82621,\n145564,\n131245,\n151839,\n110134,\n103946,\n123540,\n100938,\n148398,\n144079,\n115998,\n104200,\n131885,\n75541,\n100952,\n148580,\n66080,\n111082,\n138580,\n83345,\n108905,\n110766,\n108561,\n109431,\n88640,\n112142,\n107721,\n144496,\n113632,\n106989,\n82597,\n105490,\n64643,\n102054,\n133687,\n105925,\n105280,\n130219,\n115807,\n112671,\n112357,\n24826,\n113906,\n89178,\n78004,\n87580,\n105441,\n95753,\n91984,\n100620,\n25729,\n149850,\n108671,\n100660,\n48503,\n47143,\n81732,\n87958,\n107210,\n105871,\n101133,\n89566,\n116429,\n118365,\n126645,\n101506,\n134201,\n43694,\n119201,\n97201,\n118329,\n80429,\n103965,\n114268,\n151215,\n42437,\n117728,\n117731,\n76383,\n152537,\n107018,\n132220,\n150771,\n118220,\n128611,\n144569,\n89902,\n120629,\n64351,\n40407,\n115675,\n131193,\n139858,\n144422,\n106191,\n43324,\n153365,\n120021,\n146380,\n120231,\n45106,\n137308,\n77918,\n120790,\n74448,\n133521,\n120935,\n50260,\n58828,\n30916,\n95263,\n82350,\n105253,\n152180,\n120993,\n121793,\n150360,\n121899,\n122162,\n99238,\n119662,\n106499,\n70721,\n122910,\n126492,\n147796,\n128471,\n152255,\n126123,\n124684,\n152209,\n96895,\n111442,\n133764,\n49437,\n20097,\n114119,\n127127,\n46859,\n123485,\n123534,\n42610,\n57918,\n51393,\n82774,\n46624,\n139551,\n93740,\n144055,\n138288,\n124480,\n125698,\n124825,\n100243,\n124970,\n135507)'}}",,table,,False,False,475,,mt5_jackdb_mt5_user_rights,,native,,"[{'name': 'Login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2418, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5478.0, 'max': 153515.0, 'avg': 95656.6240694789, 'sd': 32296.86857138441, 'q1': 76078.79086677922, 'q3': 120483.97781203075}}}}, {'name': 'disabled', 'display_name': 'Disabled', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}}}, {'name': 'Group', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.792803970223325}}}}]",,2019-03-08 03:35:50.823,{}
False,,,,,2019-03-08 03:34:06.972,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'native', 'native': {'query': '-- Generate a report of all the Users in MT5\n\nSelect *\nFrom mt5_users\nWhere ""Login"" IN (5478, 5565);'}}",,table,,False,False,473,,mt5_jackdb_report_for_mt5_users_rights,,native,,"[{'name': 'Login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5478.0, 'max': 5565.0, 'avg': 5521.5, 'sd': 61.518289963229634, 'q1': 5478.0, 'q3': 5565.0}}}}, {'name': 'Timestamp', 'display_name': 'Timestamp', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.3181210105587851e+17, 'max': 1.3196395247086949e+17, 'avg': 1.3188802676337402e+17, 'sd': 107375165272857.7, 'q1': 1.3181210105587851e+17, 'q3': 1.3196395247086949e+17}}}}, {'name': 'Group', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 21.0}}}}, {'name': 'CertSerialNumber', 'display_name': 'Cert Serial Number', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'Rights', 'display_name': 'Rights', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 483.0, 'max': 483.0, 'avg': 483.0, 'sd': 0.0, 'q1': 483.0, 'q3': 483.0}}}}, {'name': 'Registration', 'display_name': 'Registration', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2016-10-25T13:56:02.000Z', 'latest': '2016-10-26T04:10:24.000Z'}}}}, {'name': 'LastAccess', 'display_name': 'Last Access', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-09-03T03:47:58.000Z', 'latest': '2019-03-07T01:20:47.000Z'}}}}, {'name': 'LastPassChange', 'display_name': 'Last Pass Change', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2016-10-25T14:00:04.000Z', 'latest': '2017-04-18T19:48:39.000Z'}}}}, {'name': 'Name', 'display_name': 'Name', 'base_type': 'type/Text', 'special_type': 'type/Name', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 12.0}}}}, {'name': 'Company', 'display_name': 'Company', 'base_type': 'type/Text', 'special_type': 'type/Company', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.0}}}}, {'name': 'Account', 'display_name': 'Account', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.0}}}}, {'name': 'Country', 'display_name': 'Country', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.0}}}}, {'name': 'Language', 'display_name': 'Language', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'ClientID', 'display_name': 'Client ID', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1040.0, 'max': 2043.0, 'avg': 1541.5, 'sd': 709.2281015301072, 'q1': 1040.0, 'q3': 2043.0}}}}, {'name': 'City', 'display_name': 'City', 'base_type': 'type/Text', 'special_type': 'type/City', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.5}}}}, {'name': 'State', 'display_name': 'State', 'base_type': 'type/Text', 'special_type': 'type/State', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'ZipCode', 'display_name': 'Zip Code', 'base_type': 'type/Text', 'special_type': 'type/ZipCode', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.0}}}}, {'name': 'Address', 'display_name': 'Address', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 32.0}}}}, {'name': 'Phone', 'display_name': 'Phone', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 12.5}}}}, {'name': 'Email', 'display_name': 'Email', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 1.0, 'average-length': 19.0}}}}, {'name': 'ID', 'display_name': 'ID', 'base_type': 'type/Text', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'Status', 'display_name': 'Status', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.0}}}}, {'name': 'Comment', 'display_name': 'Comment', 'base_type': 'type/Text', 'special_type': 'type/Comment', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.0}}}}, {'name': 'Color', 'display_name': 'Color', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4278190080.0, 'max': 4278190080.0, 'avg': 4278190080.0, 'sd': 0.0, 'q1': 4278190080.0, 'q3': 4278190080.0}}}}, {'name': 'PhonePassword', 'display_name': 'Phone Password', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.0}}}}, {'name': 'Leverage', 'display_name': 'Leverage', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1000.0, 'max': 1000.0, 'avg': 1000.0, 'sd': 0.0, 'q1': 1000.0, 'q3': 1000.0}}}}, {'name': 'Agent', 'display_name': 'Agent', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'TradeAccounts', 'display_name': 'Trade Accounts', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.0}}}}, {'name': 'LeadCampaign', 'display_name': 'Lead Campaign', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.5}}}}, {'name': 'LeadSource', 'display_name': 'Lead Source', 'base_type': 'type/Text', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.5}}}}, {'name': 'TimestampTrade', 'display_name': 'Timestamp Trade', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.316701477745329e+17, 'max': 1.319587200967817e+17, 'avg': 1.3181443393565731e+17, 'sd': 204051445924898.72, 'q1': 1.316701477745329e+17, 'q3': 1.319587200967817e+17}}}}, {'name': 'Balance', 'display_name': 'Balance', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.85, 'avg': 0.425, 'sd': 0.6010407640085651, 'q1': 0.0, 'q3': 0.85}}}}, {'name': 'Credit', 'display_name': 'Credit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'InterestRate', 'display_name': 'Interest Rate', 'base_type': 'type/Float', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'CommissionDaily', 'display_name': 'Commission Daily', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'CommissionMonthly', 'display_name': 'Commission Monthly', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'BalancePrevDay', 'display_name': 'Balance Prev Day', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.85, 'avg': 0.425, 'sd': 0.6010407640085651, 'q1': 0.0, 'q3': 0.85}}}}, {'name': 'BalancePrevMonth', 'display_name': 'Balance Prev Month', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.85, 'avg': 0.425, 'sd': 0.6010407640085651, 'q1': 0.0, 'q3': 0.85}}}}, {'name': 'EquityPrevDay', 'display_name': 'Equity Prev Day', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.85, 'avg': 0.425, 'sd': 0.6010407640085651, 'q1': 0.0, 'q3': 0.85}}}}, {'name': 'EquityPrevMonth', 'display_name': 'Equity Prev Month', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.85, 'avg': 0.425, 'sd': 0.6010407640085651, 'q1': 0.0, 'q3': 0.85}}}}, {'name': 'MQID', 'display_name': 'Mqid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'LastIP', 'display_name': 'Last IP', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 12.5}}}}, {'name': 'ApiData', 'display_name': 'Api Data', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 1.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}]",,2019-03-08 04:02:35.727,{}
False,,,,,2019-03-08 03:32:15.019,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT users.""Login"", users.""Group"",  -round(sum(deals.""Profit"")) as sum\nFROM mt5_deals_2018 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nwhere Date(deals.""Time"") = \'2018-12-19\'\nand deals.""Action"" in (0, 1)\nGroup by users.""Login""\norder by sum\nselect max(""Time"") from mt5_deals_2019'}}",,table,,False,False,471,,mt5_jackdb_top_winners,,native,,,,2019-03-08 03:32:15.019,{}
False,,,,,2019-03-08 03:33:00.100,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT users.""Login"", users.""Group"",  -round(sum(deals.""Profit"")) as sum\nFROM mt5_deals_2018 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nwhere Date(deals.""Time"") = \'2018-12-18\'\nGroup by users.""Login""\norder by sum'}}",,table,,False,False,472,,mt5_jackdb_top_winners2,,native,,"[{'name': 'Login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1183, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1479.0, 'max': 155043.0, 'avg': 106592.54522400677, 'sd': 45404.72442879335, 'q1': 68163.12145801426, 'q3': 146664.99609374997}}}}, {'name': 'Group', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 14.743026204564666}}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 320, 'nil%': 0.0}, 'type': {'type/Number': {'min': -2723.0, 'max': 9001.0, 'avg': 19.316990701606088, 'sd': 406.72152837134064, 'q1': -22.70655926673366, 'q3': 16.3643782155426}}}}]",,2019-03-08 03:33:00.100,{}
False,,"{'id': 73, 'name': ""Dwi Hadyan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 53, 'slug': 'dwi_hadyan_s_personal_collection'}",73.0,,2019-01-25 03:58:53.415,"{'email': 'dwi@binary.com', 'first_name': 'Dwi', 'last_login': '2019-06-21T06:57:40.046Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 53, 'last_name': 'Hadyan', 'date_joined': '2019-01-24T02:54:53.692Z', 'common_name': 'Dwi Hadyan'}",53,3,"{'database': 3, 'type': 'native', 'native': {'query': ""select  date_joined::timestamp::date, count(loginid) \nfrom betonmarkets.client\nwhere date_joined::timestamp::date = now()::timestamp::date \nOR date_joined::timestamp::date = (now() - interval '1 days')::timestamp::date\nGROUP BY 1\nORDER BY 1 asc;""}}",104 European & UK Countries (Vol),smartscalar,,False,False,227,,MX Client Sign Up,,native,,"[{'name': 'date_joined', 'display_name': 'Date Joined', 'base_type': 'type/Date', 'special_type': 'type/JoinDate', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-06-30T00:00:00.000Z', 'latest': '2019-07-01T00:00:00.000Z'}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 8.0, 'avg': 5.0, 'sd': 4.242640687119285, 'q1': 2.0, 'q3': 8.0}}}}]",,2019-07-01 05:17:27.624,{'scalar.switch_positive_negative': False}
False,,,,,2019-02-05 07:03:22.218,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,3,"{'database': 3, 'type': 'native', 'native': {'query': 'select to_char(max(transaction_time), \'YYYY-MM-DD HH:mm:SS\') as ""last_transaction_time"", \nto_char(now(), \'YYYY-MM-DD HH:mm:SS\') as time_now, extract(epoch from now()-max(transaction_time))/60 as ""minutes_since_last_transaction"",\nextract(epoch from (now() - pg_last_xact_replay_timestamp()))/60 as ""minutes_since_last_replay""\nfrom transaction.transaction'}}",,table,,False,False,340,,MX Sync Lag,,native,,"[{'name': 'last_transaction_time', 'display_name': 'last_transaction_time', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'time_now', 'display_name': 'time_now', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'minutes_since_last_transaction', 'display_name': 'minutes_since_last_transaction', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.11404486666666601, 'max': 0.11404486666666601, 'avg': 0.11404486666666601, 'sd': None, 'q1': 0.11404486666666601, 'q3': 0.11404486666666601}}}}, {'name': 'minutes_since_last_replay', 'display_name': 'minutes_since_last_replay', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.11393196666666601, 'max': 0.11393196666666601, 'avg': 0.11393196666666601, 'sd': None, 'q1': 0.11393196666666601, 'q3': 0.11393196666666601}}}}]",,2019-10-11 01:11:45.201,"{'table.pivot_column': 'last_transaction_time', 'table.cell_column': 'sync_lag'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-05-14 02:27:35.162,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,3,"{'database': 3, 'type': 'native', 'native': {'query': 'select * from \n(select \n   a.client_loginid,\n   a.currency_code,\n  round((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd"",\n underlying_symbol,   \n sell_time\n\tfrom bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{start_date}}\n    and sell_time < {{end_date}}\n    \n\t\ngroup by client_loginid, currency_code, client_pnl_usd, sell_time, underlying_symbol) y\ngroup by client_loginid, currency_code, client_pnl_usd, sell_time, underlying_symbol, client_pnl_usd\nhaving client_pnl_usd > {{amount}}\norder by sell_time desc\nlimit 10\t\n', 'template-tags': {'start_date': {'id': '3638b031-8f01-99f9-ca91-e1ac68cda961', 'name': 'start_date', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'end_date': {'id': '158549a2-9fe0-7868-1d0e-d3906ebe9ebc', 'name': 'end_date', 'display-name': 'End Date', 'type': 'date', 'required': True}, 'amount': {'id': 'd09b69ed-c7d9-933c-b3a3-ad694db4a9c7', 'name': 'amount', 'display-name': 'Amount', 'type': 'number'}}}}",,table,,False,False,965,,MX: recent large closed PL,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 8}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 3}}}}, {'name': 'client_pnl_usd', 'display_name': 'Client Pnl Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0}, 'type': {'type/Number': {'min': 760.44, 'max': 4672.63, 'avg': 2947.981666666667, 'sd': 1938.9724538674259, 'q1': 846.77, 'q3': 4662.18}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 4.833333333333333}}}}, {'name': 'sell_time', 'display_name': 'Sell Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-05-14T00:17:44.000Z', 'latest': '2019-05-14T02:00:02.000Z'}}}}]",,2019-05-14 02:27:35.162,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'client_pnl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-25 06:12:31.245,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,3,"{'database': 3, 'type': 'native', 'native': {'query': 'select\nclient_loginid,\nsum (amount_usd) as total,\ncount (amount_usd) as operations_number\nfrom\n(SELECT\n   a.client_loginid,\n   a.currency_code,\nc.transaction_time,\nc.amount,\nround ((c.amount)*data_collection.exchangetousd_rate(a.currency_code, transaction_time),2) as ""amount_usd"",\nc.staff_loginid,\nc.referrer_type,\nc.action_type,\nc.payment_id,\nb.payment_gateway_code,\t\nb.payment_type_code,\nsource\n    from transaction.transaction c\n    join transaction.account as a\n    on a.id = account_id\n\tjoin payment.payment as b\n\ton b.id = payment_id\n\nwhere referrer_type = \'payment\'\nand transaction_time >= {{startdate}}\nand transaction_time < {{enddate}}\nand payment_type_code in (\'external_cashier\', \'crypto_cashier\', \'bank_money_transfer\')\n) as y\ngroup by client_loginid, currency_code\norder by total desc\nlimit 10', 'template-tags': {'startdate': {'id': '3e5f8320-439b-c375-5491-3dc74d1e699a', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True}, 'enddate': {'id': 'b7647b65-3e3f-e893-3d08-48f75137a681', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True}}}}",,table,,False,False,661,,"MX: Top direct ""balance operators""",,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.0}}}}, {'name': 'total', 'display_name': 'Total', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 79.01, 'max': 592.7, 'avg': 182.043, 'sd': 154.59213937541156, 'q1': 100.0, 'q3': 197.65}}}}, {'name': 'operations_number', 'display_name': 'Operations Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 5.0, 'avg': 1.8, 'sd': 1.316561177208766, 'q1': 1.0, 'q3': 2.2679491924311233}}}}]",,2019-08-27 03:55:26.843,"{'table.pivot_column': 'deposit_number', 'table.cell_column': 'total_deposit', 'table.column_widths': [None, 89]}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-27 04:09:21.908,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,3,"{'database': 3, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    --and underlying_symbol not like \'frx%\'\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD asc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}}}}",,table,,False,False,679,,MX: top losers,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.0}}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'pl_usd', 'display_name': 'pl_usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': -747.32, 'max': -144.29, 'avg': -410.85, 'sd': 229.18910755579603, 'q1': -653.69, 'q3': -249.24}}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 989.0, 'avg': 155.5, 'sd': 303.4293803982879, 'q1': 13.0, 'q3': 182.0}}}}]",,2019-10-15 01:22:11.958,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-21 06:38:06.566,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,3,"{'database': 3, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    [[and underlying_symbol = {{instrument}}]]\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD asc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}, 'instrument': {'id': '41db7acc-30a1-0386-deda-69c32d093f3c', 'name': 'instrument', 'display-name': 'Instrument', 'type': 'text', 'required': False}}}}",,table,,False,False,511,,MX: top losers for an instrument,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.0}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'pl_usd', 'display_name': 'Pl Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': -369.84, 'max': -22.44, 'avg': -92.34700000000001, 'sd': 121.63150770987662, 'q1': -66.18, 'q3': -25.41}}}}, {'name': 'trades_number', 'display_name': 'Trades Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 135.0, 'avg': 26.7, 'sd': 40.944542439201285, 'q1': 3.0, 'q3': 36.0}}}}]",,2019-08-27 03:55:07.408,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-07 04:43:52.680,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,3,"{'database': 3, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    --and underlying_symbol not like \'frx%\'\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD desc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}}}}",,table,,False,False,465,,MX: top winners,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.0}}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'pl_usd', 'display_name': 'pl_usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': -75.53, 'max': 4.44, 'avg': -11.145, 'sd': 23.948993135875718, 'q1': -12.62, 'q3': 0.33}}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 166.0, 'avg': 19.9, 'sd': 51.35811090329896, 'q1': 2.732050807568877, 'q3': 5.52786404500042}}}}]",,2019-10-15 01:22:11.125,"{'table.pivot_column': 'client_loginid', 'table.cell_column': 'pl_usd', 'table.column_widths': [None, None, 85]}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-21 05:02:16.039,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,3,"{'database': 3, 'type': 'native', 'native': {'query': 'select \nclient_loginid,\ncurrency_code,\nsum (client_pnl_usd) as PL_USD,\ncount (client_pnl_usd) as trades_number\nfrom\n(select \n   a.client_loginid,\n   a.currency_code,\n\tround((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n  \n    and sell_time > {{startdate}}\n    and sell_time < {{enddate}}\n    and underlying_symbol = {{instrument}}\n\t) as d\ngroup by client_loginid, currency_code\norder by PL_USD desc\nlimit 10\t\n', 'template-tags': {'enddate': {'id': '206c4271-61f5-9351-f311-d46323b89719', 'name': 'enddate', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2019-03-08'}, 'startdate': {'id': 'bfb97f3f-4362-176c-201e-767767fcd81f', 'name': 'startdate', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-07'}, 'instrument': {'id': '41db7acc-30a1-0386-deda-69c32d093f3c', 'name': 'instrument', 'display-name': 'Instrument', 'type': 'text'}}}}",,table,,False,False,508,,MX: top winners for an instrument,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'pl_usd', 'display_name': 'pl_usd', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-09-18 01:04:37.769,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'pl_usd'}"
False,,"{'id': 65, 'name': ""Parviz asoodefard's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 52, 'slug': 'parviz_asoodefard_s_personal_collection'}",65.0,,2019-02-11 12:09:58.975,"{'email': 'parviz@regentmarkets.com', 'first_name': 'Parviz', 'last_login': '2019-07-03T05:55:34.855Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 52, 'last_name': 'asoodefard', 'date_joined': '2019-01-08T07:10:52.493Z', 'common_name': 'Parviz asoodefard'}",52,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select  c.binary_user_id,\n        c.loginid, -- the key of betonmarket.client\n        --c.email,\n        c.date_joined,\n        frst.first_trade,\n        frst.first_deposit,\n        mnt.yearmonth,\n        mnt.account_id,   --account_id_in_transaction.account,\n        mnt.finansial_turnover,\n        mnt.finansial_revenue,\n        mnt.volindx_turnover,\n        mnt.volindx_revenue\nfrom betonmarkets.client c\nleft join transaction.account a\n  on a.client_loginid = c.loginid\nleft join (select YearMonth,\n                  account_id,\n                  sum(case when market = 'Finansial' then Turnover else 0 end) Finansial_Turnover,\n                  sum(case when market = 'Finansial' then Revenue else 0 end) Finansial_Revenue,\n                  sum(case when market = 'Volindx' then Turnover else 0 end) Volindx_Turnover,\n                  sum(case when market = 'Volindx' then Revenue else 0 end) Volindx_Revenue\n          from (select  to_char(f.purchase_time,'YYYY-MM') YearMonth,\n                        f.account_id,\n                        case when left(f.underlying_symbol,1)='R' then 'Volindx' else 'Finansial' end market,\n                        sum(f.buy_price) Turnover,\n                        sum(f.sell_price - f.buy_price) Revenue\n                from bet.financial_market_bet f\n                where  purchase_time >= '2018-01-01'--current_date + interval '-1d'\n               \t\t\tand purchase_time < '2019-01-01'--current_date\n                group by to_char(f.purchase_time,'YYYY-MM') ,\n                        f.account_id,\n                        case when left(f.underlying_symbol,1)='R' then 'Volindx' else 'Finansial' end) ag\n          group by  YearMonth,\n                    account_id) mnt\n  on mnt.account_id=a.id\nleft join (select account_id,\n                  max(case when action_type='trade' then trans_date end) first_trade,\n                  max(case when action_type='deposit' then trans_date end) first_deposit\n          from (select  account_id,\n                        case when action_type <> 'deposit' then 'trade' else 'deposit' end action_type, --because I didn't wanted use OR operation (awful performance) and with knowledge we put withdrawal away I put this condition\n                        min(transaction_time) trans_date\n                from transaction.firsts\n                where action_type <> 'withdrawal' --another way to write: in ('deposit','sell','buy')\n                group by account_id,\n                        case when action_type <> 'deposit' then 'trade' else 'deposit' end) first_action\n          group by account_id)frst\non frst.account_id=a.id\n\nwhere c.date_joined >= '2018-01-01'\nand   c.date_joined <  '2019-01-01'""}}",,table,,False,False,360,,new card,,native,,"[{'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6990, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4047430.0, 'max': 5836972.0, 'avg': 5776528.5098, 'sd': 150717.74701834953, 'q1': 5789210.854401092, 'q3': 5813049.347371053}}}}, {'name': 'loginid', 'display_name': 'Login ID', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7108, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'date_joined', 'display_name': 'Date Joined', 'base_type': 'type/DateTime', 'special_type': 'type/JoinTimestamp', 'fingerprint': {'global': {'distinct-count': 7098, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:13:17.000Z', 'latest': '2018-02-28T19:25:54.000Z'}}}}, {'name': 'first_trade', 'display_name': 'First Trade', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6948, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:54:55.451Z', 'latest': '2018-03-31T14:05:56.511Z'}}}}, {'name': 'first_deposit', 'display_name': 'First Deposit', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7108, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:22:26.493Z', 'latest': '2018-03-31T13:59:40.229Z'}}}}, {'name': 'yearmonth', 'display_name': 'Year Month', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.0}}}}, {'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7108, 'nil%': 0.0}, 'type': {'type/Number': {'min': 7491801.0, 'max': 8223221.0, 'avg': 7799538.188, 'sd': 192933.83550179747, 'q1': 7643728.753768813, 'q3': 7939231.571298298}}}}, {'name': 'finansial_turnover', 'display_name': 'Fin An Si Al Turnover', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2714, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 58911.77, 'avg': 132.21230261882093, 'sd': 1208.4430126830002, 'q1': 3.5189461458683553, 'q3': 55.133153125379614}}}}, {'name': 'finansial_revenue', 'display_name': 'Fin An Si Al Revenue', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2616, 'nil%': 0.0}, 'type': {'type/Number': {'min': -11962.09, 'max': 21692.08, 'avg': -4.117623496060005, 'sd': 357.6622074267557, 'q1': -15.416293138957691, 'q3': 13.66184035613471}}}}, {'name': 'volindx_turnover', 'display_name': 'Vol In Dx Turnover', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7292, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1600396.61, 'avg': 2912.9410878946096, 'sd': 21512.72251744988, 'q1': 362.08235053400404, 'q3': 2080.8125108305157}}}}, {'name': 'volindx_revenue', 'display_name': 'Vol In Dx Revenue', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5931, 'nil%': 0.0}, 'type': {'type/Number': {'min': -10786.13, 'max': 13460.48, 'avg': -67.74880260287202, 'sd': 624.9088410398341, 'q1': -65.7388125783826, 'q3': 43.24511432879625}}}}]",,2019-02-12 09:37:34.609,"{'table.pivot_column': 'first_trade', 'table.cell_column': 'binary_user_id'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-01-10 00:36:25.110,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select CAST(transaction_time AS date), --action_type, market_type, sum(amount), count(amount)\n--/*\ncount(1) filter(where action_type='deposit') as num_first_deposits, \ncoalesce(sum(amount) filter (where action_type='deposit'), 0) as first_deposits_amount, \ncount(1) filter(where action_type='buy' and market_type='financial') as num_first_financial_buy,\ncoalesce(sum(abs(amount)) filter(where action_type='buy' and market_type='financial'), 0) as amount_first_financial_buy,\ncount(1) filter(where action_type='buy' and market_type !='financial') as num_first_nonfinancial_buy,\ncoalesce(sum(abs(amount)) filter(where action_type='buy' and market_type !='financial'), 0) as amount_first_nonfinancial_buy\n--*/\nfrom transaction.firsts\nWHERE CAST(transaction_time AS date) BETWEEN CAST((NOW() + INTERVAL '-42 day') AS date)\n   AND CAST((NOW() + INTERVAL '-1 day') AS date)\n--and action_type in ('deposit', 'buy')\nGROUP BY 1 --,2,3\nORDER BY CAST(transaction_time AS date) DESC--, action_type, market_type\nlimit 42""}}",,line,,False,False,194,,New client numbers (CR),,native,,"[{'name': 'transaction_time', 'display_name': 'Transaction Time', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-10T00:00:00.000Z', 'latest': '2019-02-20T00:00:00.000Z'}}}}, {'name': 'num_first_deposits', 'display_name': 'Num First Deposits', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 36, 'nil%': 0.0}, 'type': {'type/Number': {'min': 141.0, 'max': 380.0, 'avg': 248.4047619047619, 'sd': 53.7051841635376, 'q1': 225.0, 'q3': 278.0}}}}, {'name': 'first_deposits_amount', 'display_name': 'First Deposits Amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0.0}, 'type': {'type/Number': {'min': 6081.70005692, 'max': 32892.9323658, 'avg': 18466.90937111643, 'sd': 6839.797899926548, 'q1': 13387.99668957, 'q3': 23298.05214807}}}}, {'name': 'num_first_financial_buy', 'display_name': 'Num First Financial Buy', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 26, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 192.0, 'avg': 97.88095238095238, 'sd': 66.12117567195534, 'q1': 1.0, 'q3': 142.0}}}}, {'name': 'amount_first_financial_buy', 'display_name': 'Amount First Financial Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 33, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1578.60086144, 'avg': 392.53491839261915, 'sd': 354.0659317188004, 'q1': 2.0717967697244912, 'q3': 552.36968}}}}, {'name': 'num_first_nonfinancial_buy', 'display_name': 'Num First Non Financial Buy', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 126.0, 'max': 275.0, 'avg': 177.57142857142858, 'sd': 27.287219251781107, 'q1': 155.0, 'q3': 194.80384757729337}}}}, {'name': 'amount_first_nonfinancial_buy', 'display_name': 'Amount First Non Financial Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0.0}, 'type': {'type/Number': {'min': 259.0912902, 'max': 3399.251, 'avg': 755.2683849807141, 'sd': 611.3935081994601, 'q1': 450.8569579, 'q3': 846.06230052}}}}]",,2019-02-21 05:11:39.292,"{'series_settings': {'New Non Financial Buy Amount': {'display': 'area'}, 'New Deposit Count': {'axis': 'right'}, 'Num First Deposits': {'axis': 'left', 'line.interpolate': 'linear'}, 'Amount First Non Financial Buy': {'axis': 'right', 'line.interpolate': 'cardinal'}, 'Num First Non Financial Buy': {'axis': 'left', 'line.interpolate': 'linear'}, 'Amount First Financial Buy': {'axis': 'right', 'line.interpolate': 'linear', 'display': 'line'}, 'Num First Financial Buy': {'axis': 'left', 'line.interpolate': 'linear'}, 'New Financial Buy Amount': {'display': 'area'}, 'New Non Financial Buy Count': {'axis': 'right'}, 'New Deposit Amount': {'display': 'area'}, 'New Financial Buy Count': {'axis': 'right'}, 'First Deposits Amount': {'title': 'Amount First Deposits', 'axis': 'right', 'line.interpolate': 'cardinal'}}, 'graph.dimensions': ['transaction_time'], 'graph.metrics': ['num_first_deposits', 'num_first_financial_buy', 'num_first_nonfinancial_buy'], 'table.pivot_column': 'num_first_financial_buy', 'table.cell_column': 'num_first_deposits', 'graph.y_axis.scale': 'pow'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-02 11:10:35.704,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select CAST(transaction_time AS date), --action_type, market_type, sum(amount), count(amount)\n--/*\ncount(1) filter(where action_type='deposit') as num_first_deposits, \ncoalesce(sum(amount) filter (where action_type='deposit'), 0) as first_deposits_amount, \ncount(1) filter(where action_type='buy' and market_type='financial') as num_first_financial_buy,\ncoalesce(sum(abs(amount)) filter(where action_type='buy' and market_type='financial'), 0) as amount_first_financial_buy,\ncount(1) filter(where action_type='buy' and market_type !='financial') as num_first_nonfinancial_buy,\ncoalesce(sum(abs(amount)) filter(where action_type='buy' and market_type !='financial'), 0) as amount_first_nonfinancial_buy\n--*/\nfrom transaction.firsts\nWHERE CAST(transaction_time AS date) BETWEEN CAST((NOW() + INTERVAL '-42 day') AS date)\n   AND CAST((NOW() + INTERVAL '-1 day') AS date)\n--and action_type in ('deposit', 'buy')\nGROUP BY 1 --,2,3\nORDER BY CAST(transaction_time AS date) DESC--, action_type, market_type\nlimit 42""}}",,line,,False,False,63,,New Clients,,native,,"[{'name': 'transaction_time', 'display_name': 'Transaction Time', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-15T00:00:00.000Z', 'latest': '2019-02-25T00:00:00.000Z'}}}}, {'name': 'num_first_deposits', 'display_name': 'Num First Deposits', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 38, 'nil%': 0.0}, 'type': {'type/Number': {'min': 141.0, 'max': 397.0, 'avg': 254.45238095238096, 'sd': 57.89106775574376, 'q1': 225.0, 'q3': 285.39230484541326}}}}, {'name': 'first_deposits_amount', 'display_name': 'First Deposits Amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0.0}, 'type': {'type/Number': {'min': 6081.70005692, 'max': 36057.11242794, 'avg': 19297.656968810476, 'sd': 7801.632250700687, 'q1': 13101.50420552, 'q3': 25100.5797501}}}}, {'name': 'num_first_financial_buy', 'display_name': 'Num First Financial Buy', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 26, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 186.0, 'avg': 97.47619047619048, 'sd': 65.21418299099014, 'q1': 1.381966011250105, 'q3': 139.0717967697245}}}}, {'name': 'amount_first_financial_buy', 'display_name': 'Amount First Financial Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 34, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1578.60086144, 'avg': 400.81129952404757, 'sd': 358.91068930773156, 'q1': 5.0, 'q3': 552.36968}}}}, {'name': 'num_first_nonfinancial_buy', 'display_name': 'Num First Non Financial Buy', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 33, 'nil%': 0.0}, 'type': {'type/Number': {'min': 126.0, 'max': 277.0, 'avg': 183.0, 'sd': 32.36529306405167, 'q1': 158.6602540378444, 'q3': 198.73205080756887}}}}, {'name': 'amount_first_nonfinancial_buy', 'display_name': 'Amount First Non Financial Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0.0}, 'type': {'type/Number': {'min': 259.0912902, 'max': 3399.251, 'avg': 791.0536994411904, 'sd': 612.9696378059375, 'q1': 462.5147, 'q3': 887.96729727}}}}]",,2019-02-26 04:53:48.037,"{'series_settings': {'New Non Financial Buy Amount': {'display': 'area'}, 'New Deposit Count': {'axis': 'right'}, 'Num First Deposits': {'axis': 'left'}, 'Amount First Non Financial Buy': {'axis': 'right'}, 'Num First Non Financial Buy': {'axis': 'left'}, 'Amount First Financial Buy': {'axis': 'right'}, 'Num First Financial Buy': {'axis': 'left'}, 'New Financial Buy Amount': {'display': 'area'}, 'New Non Financial Buy Count': {'axis': 'right'}, 'New Deposit Amount': {'display': 'area'}, 'New Financial Buy Count': {'axis': 'right'}, 'First Deposits Amount': {'title': 'Amount First Deposits', 'axis': 'right'}}, 'graph.dimensions': ['transaction_time'], 'graph.metrics': ['num_first_deposits', 'first_deposits_amount', 'num_first_financial_buy', 'amount_first_financial_buy', 'num_first_nonfinancial_buy', 'amount_first_nonfinancial_buy'], 'table.pivot_column': 'num_first_financial_buy', 'table.cell_column': 'num_first_deposits', 'graph.y_axis.scale': 'pow'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:18:46.985,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- New Registrations, New Real Accounts, First Deposits, New Active Accounts\nWITH const (itv) as (\n  values (\'350 days\'::interval)\n)\n\nselect na.date_joined,total_new_virtual,total_new_real,total_new_real_deposited,total_new_real_deposited_traded from \n(-- new virtual --\nselect date_joined, count(distinct binary_user_id) as ""total_new_virtual""\nfrom quants.client_summary_mv, const\nwhere date_joined >= NOW()-itv\n--and residence = \'id\'--\nand broker_code = \'VRTC\'\ngroup by date_joined) as nv\n\nfull outer join (-- new real --\nselect date_joined, count(distinct binary_user_id) as ""total_new_real""\nfrom quants.client_summary_mv, const\nwhere date_joined >= NOW()-itv\n--and residence = \'id\'--\nand broker_code = \'CR\'\ngroup by date_joined) as na\n\non na.date_joined = nv.date_joined\nfull outer join (\n-- new real that deposited money --\nselect fd_transaction_date, count(distinct binary_user_id) as ""total_new_real_deposited""\nfrom quants.client_summary_mv, const\nwhere date_joined >= NOW()-itv\n--and residence = \'id\'--\nand broker_code = \'CR\'\nand fd_amount_usd is not null\ngroup by fd_transaction_date) as nad\n\non nad.fd_transaction_date = na.date_joined\nfull outer join (\n-- new real that deposited money and traded --\nselect fb_transaction_date, count(distinct binary_user_id) as ""total_new_real_deposited_traded""\nfrom quants.client_summary_mv, const\nwhere date_joined >= NOW()-itv\n--and residence = \'id\'--\nand broker_code = \'CR\'\nand fd_amount_usd is not null\nand fb_amount_usd is not null\ngroup by fb_transaction_date\n) as nadt\non nadt.fb_transaction_date = nad.fd_transaction_date\n\n'}}","New Registrations, New Real Accounts, First Deposits, New Active Accounts",table,,False,False,607,,New Clients Acquisition,,native,,,,2019-03-22 03:18:46.984,{}
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-17 06:10:37.270,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'native': {'template-tags': {'granularity': {'id': 'bd7e0a47-67ec-31ab-f800-fcbe3eafc1b7', 'name': 'granularity', 'display-name': 'time granularity', 'type': 'text', 'required': True, 'default': 'day'}, 'period': {'widget-type': 'date/all-options', 'default': 'past7days', 'name': 'period', 'type': 'dimension', 'id': 'a7d47722-03ed-6d70-dfca-02e15a3f038a', 'dimension': ['field-id', 852], 'display-name': 'Period', 'required': True}}, 'query': 'select date_trunc({{granularity}}, date_joined), count(distinct loginid)\nfrom betonmarkets.client \nwhere {{period}}\ngroup by 1\norder by 1'}, 'type': 'native', 'database': 2}",,area,,False,False,98,,New CR accounts by time,,native,,"[{'name': 'date_trunc', 'display_name': 'Date Trunc', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-22T00:00:00.000Z', 'latest': '2019-04-28T00:00:00.000Z'}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 633.0, 'max': 768.0, 'avg': 703.5714285714286, 'sd': 46.32802299133554, 'q1': 675.5, 'q3': 740.0}}}}]",,2019-04-29 03:05:14.098,"{'table.pivot_column': 'count', 'table.cell_column': 'count', 'series_settings': {'Count': {'line.interpolate': 'linear', 'line.missing': 'none'}}, 'graph.show_trendline': False, 'graph.dimensions': ['date_trunc'], 'graph.metrics': ['count']}"
False,,"{'id': 57, 'name': 'Daily Report', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'daily_report'}",57.0,,2019-01-01 10:51:11.928,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select first_join_date, residence, count(distinct binary_user_id) ""count_new_signups"" from\n(\n    select binary_user_id, residence, min(date_joined::timestamp::date) as ""first_join_date"" from betonmarkets.client\n    group by 1,2\n) abc\nwhere first_join_date >= (now() + interval \'-8 day\')::timestamp::date\nand first_join_date < now()::timestamp::date\ngroup by 1, 2\norder by 1, 3 desc'}}",,line,,False,False,153,,New real-money sign-ups (CR),,native,,"[{'name': 'first_join_date', 'display_name': 'First Join Date', 'base_type': 'type/Date', 'special_type': 'type/JoinDate', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-21T00:00:00.000Z', 'latest': '2019-02-28T00:00:00.000Z'}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 105, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'count_new_signups', 'display_name': 'Count New Sign Ups', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 59, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 297.0, 'avg': 11.037647058823529, 'sd': 28.361272660151208, 'q1': 1.12568695246137, 'q3': 7.221825406947977}}}}]",,2019-03-01 02:24:18.271,"{'graph.dimensions': ['first_join_date'], 'graph.metrics': ['count_new_signups'], 'series_settings': {'Count New Sign Ups': {'title': 'Count new sign-ups'}}}"
False,,"{'id': 88, 'name': ""Mustofa Ghaleb Amami's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 65, 'slug': 'mustofa_ghaleb_amami_s_personal_collection'}",88.0,,2019-03-06 10:32:31.790,"{'email': 'mustofa@binary.com', 'first_name': 'Mustofa Ghaleb', 'last_login': '2019-05-23T06:57:46.611Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 65, 'last_name': 'Amami', 'date_joined': '2019-03-01T07:39:44.498Z', 'common_name': 'Mustofa Ghaleb Amami'}",65,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with countries (c_value, c_name) as (\nvalues\n    ('id', 'Indonesia'),\n    ('br', 'Brazil'),\n    ('ng', 'Nigeria'),\n    ('za', 'South africa'),\n    ('th', 'Thailand'),\n    ('co', 'Columbia'),\n    ('ru', 'Russia'),\n    ('in', 'India'),\n    ('vn', 'Vietnam'),\n    ('mx', 'Mexico'),\n    ('gh', 'Ghana'),\n    ('lk', 'Sri lanka'),\n    ('zw', 'Zimbabwe'),\n    ('tz', 'Tanzania'),\n    ('ke', 'Kenya'),\n    ('sg', 'Singapore'),\n    ('pk', 'Pakistan'),\n    ('ar', 'Argentina'),\n    ('pe', 'Peru'),\n    ('ua', 'Ukraine')\n)\n\nselect c.c_name,\ncount(bc.residence) from betonmarkets.client as bc inner join countries c on bc.residence = c.c_value\nwhere bc.date_joined::timestamp::date >= (now() + interval '-30 day')::timestamp::date\nand bc.date_joined::timestamp::date < now()::timestamp::date\ngroup by c.c_name\norder by count(bc.residence) desc\nlimit 20""}}",bar,bar,,False,False,458,,new Sign up last 30 days (CR) updated,,native,,"[{'name': 'c_name', 'display_name': 'c_name', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.3}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 97.0, 'max': 8540.0, 'avg': 1666.05, 'sd': 2572.4096930596743, 'q1': 281.5, 'q3': 1065.0}}}}]",,2019-10-10 05:23:59.397,"{'graph.dimensions': ['c_name'], 'graph.metrics': ['count'], 'graph.y_axis.title_text': 'New sign-ups for real account', 'graph.x_axis.title_text': 'Country Name'}"
False,,,,,2019-01-07 02:23:46.957,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select residence,\n--date_joined, --lower(address_city) as city, \ncount(1) filter (where date_joined::date=(now() + interval \'-1d\')::date) as ""yesterday"",\ncount(1) filter (where date_joined::date=(now() + interval \'-2d\')::date) as ""day_before""\nfrom betonmarkets.client\nwhere date_joined::timestamp::date = (now() + interval \'-1 day\')::timestamp::date\nor date_joined::timestamp::date = (now() + interval \'-2 day\')::timestamp::date\ngroup by 1 --, 2\norder by 2 desc --3 desc\nlimit 20'}}",,bar,,False,False,181,,New sign-ups yesterday and the day before (CR),,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'yesterday', 'display_name': 'Yesterday', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 17, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3.0, 'max': 105.0, 'avg': 23.5, 'sd': 29.503791014215892, 'q1': 5.177124344467705, 'q3': 31.0}}}}, {'name': 'day_before', 'display_name': 'Day Before', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 112.0, 'avg': 22.75, 'sd': 29.978720523239918, 'q1': 5.0, 'q3': 25.5}}}}]",,2019-02-18 09:20:25.118,"{'graph.dimensions': ['residence'], 'graph.metrics': ['yesterday', 'day_before'], 'graph.y_axis.title_text': 'New sign-ups for real account', 'series_settings': {'Day Before': {'axis': 'left'}}}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:18:52.457,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- This query returns information about most recent sign-up clients, such as loginID, Client ID, Date of Join, Deposit Amount,  Cumulative Deposits , Trading activity on demo (YES/NO), Country, email\nSELECT a.loginid ""Login ID"", \nf.firstname ""First Name"",\nf.lastname ""Last Name"",\na.date_joined ""Date Joined"", \na.fd_amount_usd ""First Deposit(USD)"", \na.fd_transaction_date ""First Deposit Date"", \na.residence ""Country"", \nb.email ""Email"", \n\nCASE WHEN binary_user_id IN \n(select binary_user_id from quants.client_summary_mv \nwhere date_joined <= NOW()\nand broker_code = \'VRTC\'\nand fb_amount_usd is not NULL) THEN \'Yes\'\n\nWHEN binary_user_id IN (select binary_user_id from quants.client_summary_mv \nwhere date_joined <= NOW()\nand broker_code = \'VRTC\'\nand fb_amount_usd is NULL) THEN \'No\'\n\nElse \'No virtual A/c\'\nEnd\n""Demo Trade"",\nc.sum ""Acc Deposit"", \nd.amount ""Last Deposit"", \nd.time ""Last Deposit Time""\nfrom users.binary_user b, quants.client_summary_mv a \n\nleft join \n(select * from dblink(\'cr\', $$\nselect a.client_loginid, sum(p.amount*e.rate)\n  from payment.payment p\n  join transaction.account a on a.id=p.account_id\n  left join data_collection.exchangeToUSD_rate(a.currency_code, p.payment_time) e on true\n where p.amount>0\n   and p.payment_time >= \'2018-01-01\'\n group by 1\n$$) t(loginid varchar, sum numeric)) as c \non a.loginid = c.loginid\n\nleft join\n(select * from dblink(\'cr\', $$\nselect a.client_loginid, p.amount*e.rate, p.payment_time\n  from payment.payment p\n  join transaction.account a on a.id=p.account_id\n  left join data_collection.exchangeToUSD_rate(a.currency_code, p.payment_time) e on true\n where p.amount > 0\n   and p.payment_time >= \'2018-01-01\'\n   and p.payment_time in (SELECT max(p2.payment_time) FROM payment.payment p2 WHERE p.account_id = p2.account_id\n   and p2.amount > 0)\n$$) t(loginid varchar, amount numeric, time timestamp)) as d\non c.loginid = d.loginid\n\nLeft join\n(select * from dblink(\'cr\', $$\nselect loginid, first_name, last_name\n  from audit.client\n  where operation = \'INSERT\'\n$$) t(loginid varchar, firstname varchar, lastname varchar)) as f\non d.loginid = f.loginid\n\nwhere a.binary_user_id = b.id\nand a.date_joined >= NOW()-\'2 day\'::interval\nand a.fd_amount_usd is not NULL\nand a.broker_code = \'CR\'\norder by a.date_joined DESC\n\n-- Created by Stanly\n'}}","This query returns information about most recent sign-up clients, such as loginID, Client ID, Date of Join, Deposit Amount,  Cumulative Deposits , Trading activity on demo (YES/NO), Country, email",table,,False,False,608,,New Signed-up Clients Trade Details,,native,,,,2019-03-22 03:18:52.457,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-27 08:18:09.014,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'query': 'select source, tmp.""has_token"",\ncount(distinct tmp.binary_user_id) \nfrom\n(\n    select\n        bc.loginid,\n        bc.binary_user_id,\n        ta.id as ""tr_id"",\n        case coalesce(bc.myaffiliates_token, \'\') when \'\' then false else true end as ""has_token""\n    from betonmarkets.client bc left join transaction.account ta\n    on ta.client_loginid=bc.loginid\n    where residence in (\'ng\', \'ru\', \'za\')\n    and age(date_of_birth) >= interval \'41 year\'\n    and age(date_of_birth) <= interval \'65 year\'\n) tmp inner join transaction.transaction tt\non tt.account_id=tmp.""tr_id""\nwhere transaction_time >= \'2019-01-01\'\nand transaction_time < \'2019-02-01\'\nand action_type=\'buy\'\ngroup by 1,2\n\n/*\nselect * from bet.financial_market_bet fmb left join transaction.account ta\non ta.id = fmb.account_id\nwhere purchase_time >= \'2019-01-01\'\nand purchase_time < \'2019-02-01\'\nlimit 10\n*/'}, 'type': 'native', 'database': 2}",,table,,False,False,422,,"nigeria, russia, south africa (for Maria)",,native,,"[{'name': 'source', 'display_name': 'Source', 'base_type': 'type/Integer', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 52, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 15850.0, 'avg': 11032.442857142858, 'sd': 5357.495655582552, 'q1': 10830.0, 'q3': 15159.066641993582}}}}, {'name': 'has_token', 'display_name': 'Has Token', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 571.0, 'avg': 23.285714285714285, 'sd': 89.75540722593817, 'q1': 1.030673677838106, 'q3': 14.235635441915182}}}}]",,2019-05-28 02:55:43.323,"{'table.pivot_column': 'count', 'table.cell_column': 'source'}"
False,,"{'id': 54, 'name': ""Aggelos Armenatzoglou's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 47, 'slug': 'aggelos_armenatzoglou_s_personal_collection'}",54.0,,2019-01-31 09:54:03.776,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select deals.""Login"", deals.""Order"",deals. ""Action"", deals.""Entry"", deals.""Deal"", deals.""Volume"", deals.""Profit"", deals.""Storage"", deals.""Symbol"",\nCASE\nWHEN ""Symbol"" = \'Volatility 10 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'Volatility 25 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 50 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 75 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'Volatility 100 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'HF Volatility 10 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'HF Volatility 50 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'HF Volatility 100 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.3\nELSE 0 END AS NP,\nCASE\nWHEN ""Symbol"" = \'Volatility 10 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'Volatility 25 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 50 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 75 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'Volatility 100 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'HF Volatility 10 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'HF Volatility 50 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'HF Volatility 100 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.3\nELSE 0 END AS Swap\nfrom mt5_deals_2018 as deals\nwhere ""Entry"" IN (1,3)\nand ""Action"" IN (0,1,2)\nand date(deals.""Time"") > \'2018-11-30\'\n\nand ((deals.""Symbol"" like \'Volatility%\') OR (deals.""Symbol"" like \'HF Volatility%\'))'}}",,table,,False,False,298,,Normalized trades,,native,,"[{'name': 'Login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 595, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1759.0, 'max': 149285.0, 'avg': 100914.91780000001, 'sd': 43484.35853308007, 'q1': 68859.37314236593, 'q3': 138976.44262292125}}}}, {'name': 'Order', 'display_name': 'Order', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9985, 'nil%': 0.0}, 'type': {'type/Number': {'min': 45933863.0, 'max': 45980999.0, 'avg': 45957494.2384, 'sd': 13579.053724458061, 'q1': 45945255.999808975, 'q3': 45969547.65820963}}}}, {'name': 'Action', 'display_name': 'Action', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1.0, 'avg': 0.4798, 'sd': 0.49961677483063804, 'q1': 0.0, 'q3': 0.9789681851025531}}}}, {'name': 'Entry', 'display_name': 'Entry', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 3.0, 'avg': 1.0056, 'sd': 0.105687070995924, 'q1': 1.0, 'q3': 1.5914067616118}}}}, {'name': 'Deal', 'display_name': 'Deal', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10000, 'nil%': 0.0}, 'type': {'type/Number': {'min': 39691920.0, 'max': 39738924.0, 'avg': 39715308.0153, 'sd': 13477.655708906612, 'q1': 39703383.378570855, 'q3': 39727347.9730832}}}}, {'name': 'Volume', 'display_name': 'Volume', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 41, 'nil%': 0.0}, 'type': {'type/Number': {'min': 100.0, 'max': 31000.0, 'avg': 442.84, 'sd': 1246.361133864339, 'q1': 100.0, 'q3': 227.56276295238047}}}}, {'name': 'Profit', 'display_name': 'Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2553, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1158.13, 'max': 2296.66, 'avg': 1.221585, 'sd': 34.69181269646095, 'q1': -1.290440613414333, 'q3': 4.805361672936475}}}}, {'name': 'Storage', 'display_name': 'Storage', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 43, 'nil%': 0.0}, 'type': {'type/Number': {'min': -3.05, 'max': 0.0, 'avg': -0.007317999999999001, 'sd': 0.069590309362121, 'q1': -0.0036107769004720004, 'q3': 0.0}}}}, {'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.1613}}}}, {'name': 'np', 'display_name': 'Np', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3468, 'nil%': 0.0}, 'type': {'type/Number': {'min': -147.8, 'max': 51.635999999999996, 'avg': 0.40954942138322903, 'sd': 6.115331750673403, 'q1': -0.425213130040546, 'q3': 1.590503944286584}}}}, {'name': 'swap', 'display_name': 'Swap', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 43, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1.4100000000000001, 'max': 0.0, 'avg': -0.0033256216594510003, 'sd': 0.027698346488488002, 'q1': -0.0036092667248570002, 'q3': 0.0}}}}]",,2019-02-06 10:13:44.818,"{'table.pivot_column': 'Symbol', 'table.cell_column': 'Login'}"
False,,"{'id': 54, 'name': ""Aggelos Armenatzoglou's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 47, 'slug': 'aggelos_armenatzoglou_s_personal_collection'}",54.0,,2019-02-07 09:36:26.240,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(deals.""Time""), deals.""Login"", deals.""Order"",deals. ""Action"", deals.""Entry"", deals.""Deal"", deals.""Volume"", deals.""Profit"", deals.""Storage"",users.""Group"", deals.""Symbol"",\nCASE\nWHEN ""Symbol"" = \'Volatility 10 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'Volatility 25 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 50 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 75 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'Volatility 100 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'HF Volatility 10 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'HF Volatility 50 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'HF Volatility 100 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.3\nELSE 0 END AS NP,\nCASE\nWHEN ""Symbol"" = \'Volatility 10 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'Volatility 25 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 50 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 75 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'Volatility 100 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'HF Volatility 10 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'HF Volatility 50 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'HF Volatility 100 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.3\nELSE 0 END AS Swap\nfrom mt5_deals_2018 as deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nwhere  users.""Group"" like \'%costarica%\'\nand ""Action"" IN (0,1,2)\nand ""Entry"" IN (0,1,3)\nand not ((""Entry"" = 0) and (""Action"" in (0,1)))\nand date(deals.""Time"") > \'2018-11-30\'\nand date(deals.""Time"") < \'2018-12-16\'\n\nand ((deals.""Symbol"" like \'Volatility%\') OR (deals.""Symbol"" like \'HF Volatility%\') )'}}",,table,,False,False,351,,nT,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-12-01T00:00:00.000Z', 'latest': '2018-12-01T00:00:00.000Z'}}}}, {'name': 'Login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 591, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1759.0, 'max': 149285.0, 'avg': 101070.713, 'sd': 43585.38226499321, 'q1': 68541.35342879008, 'q3': 139039.48822479427}}}}, {'name': 'Order', 'display_name': 'Order', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9985, 'nil%': 0.0}, 'type': {'type/Number': {'min': 45933863.0, 'max': 45981237.0, 'avg': 45957693.132699996, 'sd': 13680.590553885442, 'q1': 45945324.51512572, 'q3': 45969744.35567954}}}}, {'name': 'Action', 'display_name': 'Action', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1.0, 'avg': 0.4756, 'sd': 0.49942925721096404, 'q1': 0.0, 'q3': 0.9743818617572981}}}}, {'name': 'Entry', 'display_name': 'Entry', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 3.0, 'avg': 1.0056, 'sd': 0.105687070995924, 'q1': 1.0, 'q3': 1.5914067616118}}}}, {'name': 'Deal', 'display_name': 'Deal', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10000, 'nil%': 0.0}, 'type': {'type/Number': {'min': 39691920.0, 'max': 39739163.0, 'avg': 39715507.8716, 'sd': 13582.879906675766, 'q1': 39703457.1356135, 'q3': 39727532.934704}}}}, {'name': 'Volume', 'display_name': 'Volume', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 41, 'nil%': 0.0}, 'type': {'type/Number': {'min': 100.0, 'max': 31000.0, 'avg': 442.67, 'sd': 1246.3200240950341, 'q1': 100.0, 'q3': 227.8036759042515}}}}, {'name': 'Profit', 'display_name': 'Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2557, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1158.13, 'max': 2296.66, 'avg': 1.226343, 'sd': 34.693285889144946, 'q1': -1.299491924815225, 'q3': 3.080341433661085}}}}, {'name': 'Storage', 'display_name': 'Storage', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 41, 'nil%': 0.0}, 'type': {'type/Number': {'min': -3.05, 'max': 0.0, 'avg': -0.006842999999999001, 'sd': 0.069112234814829, 'q1': -0.0035662710130980003, 'q3': 0.0}}}}, {'name': 'Group', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 14.0}}}}, {'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.1587}}}}, {'name': 'np', 'display_name': 'Np', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3474, 'nil%': 0.0}, 'type': {'type/Number': {'min': -147.8, 'max': 51.635999999999996, 'avg': 0.418424388049896, 'sd': 6.117242886780025, 'q1': -0.5452227054581821, 'q3': 1.60813227802312}}}}, {'name': 'swap', 'display_name': 'Swap', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1.4100000000000001, 'max': 0.0, 'avg': -0.0030836216594510002, 'sd': 0.027391380834381, 'q1': -0.0035648131478430004, 'q3': 0.0}}}}]",,2019-02-25 08:25:52.507,"{'table.pivot_column': 'Symbol', 'table.cell_column': 'Login'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:29:22.485,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select count (*)\nfrom transaction.transaction t , bet.financial_market_bet b, data_collection.quants_bet_variables d\nwhere \ndate(t.transaction_time) >= '2017-10-01' and \ndate(t.transaction_time) <= '2017-12-31' and\nb.underlying_symbol = 'frxEURUSD' and\nt.action_type = 'buy' and\nt.id = d.transaction_id and\nt.financial_market_bet_id = b.id\nand (d.requested_price/b.payout_price)-(d.recomputed_price/b.payout_price) >= -0.0175\nand (d.requested_price/b.payout_price)-(d.recomputed_price/b.payout_price) <= 0.0175\n\n\n\n""}}",,table,,False,False,658,,Number of Buy Transaction at Requested Price,,native,,,,2019-03-22 03:29:22.484,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:29:34.076,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select count (*)\nfrom transaction.transaction t , bet.financial_market_bet b, data_collection.quants_bet_variables d\nwhere \ndate(t.transaction_time) >= '2017-10-01' and \ndate(t.transaction_time) <= '2017-12-31' and\nb.underlying_symbol = 'frxEURUSD' and\nt.action_type = 'buy' and\nt.id = d.transaction_id and\nt.financial_market_bet_id = b.id\nand (d.requested_price/b.payout_price)-(d.recomputed_price/b.payout_price) > 0.0175\n\n\n""}}",,table,,False,False,659,,Number of Buy Transaction at Requoted Price,,native,,,,2019-03-22 03:29:34.076,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:19:37.778,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT\n      count (distinct users.Login)\n      FROM mt5_deals_2017 AS deals\n      INNER JOIN mt5_users AS users\n      ON (deals.Login=users.Login)\n      WHERE users.Group LIKE '%real%champion%'\n      AND deals.Action = 2 \n      AND deals.Profit>0\n      AND DATE(deals.time) >= '2017-04-01'\n      AND DATE(deals.time) <= '2017-04-30'\n      \n""}}",,table,,False,False,609,,Number of client making deposit for champion group,,native,,,,2019-03-22 03:19:37.778,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:19:43.039,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT\n      count (distinct users.Login)\n      FROM mt5_deals_2017 AS deals\n      INNER JOIN mt5_users AS users\n      ON (deals.Login=users.Login)\n      WHERE users.Group LIKE '%real%'\n      AND deals.Action = 2 \n      AND deals.Profit>0\n      AND DATE(deals.time) >= '2017-04-01'\n      AND DATE(deals.time) <= '2017-04-30'""}}",,table,,False,False,610,,Number of client making deposit for whole group,,native,,,,2019-03-22 03:19:43.039,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-16 02:21:53.316,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select date_joined::date, count(distinct binary_user_id) from betonmarkets.client\nwhere residence = 'id'\nand date_joined >= '2018-01-01'\nand date_joined < current_date\ngroup by 1""}}",,line,,False,False,971,37.0,"Number of clients from Indonesia, by date_joined",62213a24-3e97-48f6-a173-813caf328aa6,native,,"[{'name': 'date_joined', 'display_name': 'Date Joined', 'base_type': 'type/Date', 'special_type': 'type/JoinDate', 'fingerprint': {'global': {'distinct-count': 504, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:00:00.000Z', 'latest': '2019-05-19T00:00:00.000Z'}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 189, 'nil%': 0.0}, 'type': {'type/Number': {'min': 62.0, 'max': 345.0, 'avg': 162.33333333333334, 'sd': 51.91402078002729, 'q1': 116.10213252610994, 'q3': 199.06655606904803}}}}]",,2019-05-20 02:51:03.800,"{'graph.dimensions': ['date_joined'], 'graph.metrics': ['count']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-18 08:58:41.411,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT ""Symbol"",\n       COUNT(""Deal"")  AS Number_of_deals\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\nWhere ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\', \'Volatility 50 Index\', \'Volatility 75 Index\', \'Volatility 100 Index\', \'HF Volatility 10 Index\',\'HF Volatility 50 Index\', \'HF Volatility 100 Index\')\nand {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\ngroup by ""Symbol""\nOrder by Number_of_deals DESC', 'template-tags': {'Time': {'widget-type': 'date/relative', 'default': 'today', 'name': 'Time', 'type': 'dimension', 'id': '84100ffb-050d-5cdd-df14-9d3ccbe51ca2', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}}}}",,row,,False,False,383,,Number of deals,,native,,"[{'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'number_of_deals', 'display_name': 'Number Of Deals', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-03 07:49:13.804,"{'graph.dimensions': ['Symbol'], 'graph.metrics': ['number_of_deals']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-18 09:07:58.617,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT ""Symbol"",\n       COUNT(""Deal"")  AS Number_of_deals\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\nWhere ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\', \'Volatility 50 Index\', \'Volatility 75 Index\', \'Volatility 100 Index\', \'HF Volatility 10 Index\',\'HF Volatility 50 Index\', \'HF Volatility 100 Index\')\nand {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\ngroup by ""Symbol""\nOrder by Number_of_deals DESC', 'template-tags': {'Time': {'widget-type': 'date/relative', 'default': 'today', 'name': 'Time', 'type': 'dimension', 'id': 'd59463aa-603f-9982-7477-d26969ec8dde', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}}}}",,row,,False,False,384,,Number of deals,,native,,"[{'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.375}}}}, {'name': 'number_of_deals', 'display_name': 'Number Of Deals', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 7.0, 'max': 555.0, 'avg': 135.75, 'sd': 217.16468405336997, 'q1': 14.0, 'q3': 219.5}}}}]",,2019-02-18 09:14:30.873,"{'graph.dimensions': ['Symbol'], 'graph.metrics': ['number_of_deals']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-03-12 10:42:40.555,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT ""Symbol"",\n       COUNT(""Deal"")  AS Number_of_deals\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\nWhere ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\', \'Volatility 50 Index\', \'Volatility 75 Index\', \'Volatility 100 Index\', \'HF Volatility 10 Index\',\'HF Volatility 50 Index\', \'HF Volatility 100 Index\')\nand date(""Time"") >=  {{Start_Time}}\nand date(""Time"") <=  {{End_Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\ngroup by ""Symbol""\nOrder by Number_of_deals DESC', 'template-tags': {'Start_Time': {'id': 'd50b693b-0ad7-c6f1-9640-34b590383c4a', 'name': 'Start_Time', 'display-name': 'Start_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'End_Time': {'id': '45afbb94-e783-ad09-99e2-9834a485735a', 'name': 'End_Time', 'display-name': 'End_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,row,,False,False,489,,Number of deals - by date range,,native,,"[{'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.375}}}}, {'name': 'number_of_deals', 'display_name': 'Number Of Deals', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 558.0, 'max': 23492.0, 'avg': 5164.0, 'sd': 8023.643792834133, 'q1': 1139.0, 'q3': 6058.5}}}}]",,2019-04-03 07:15:37.519,"{'graph.dimensions': ['Symbol'], 'graph.metrics': ['number_of_deals']}"
False,,,,,2018-12-14 03:56:27.492,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'query': 'select ""residence"", ""date"", sum(""amount"" * ""exchange_rate"") as ""total_first_deposits_USD"", count(1) as ""count_clients""\nfrom\n(\n    select a.*, bc.residence, data_collection.exchangetousd_rate(""currency_code"", ""date"") as ""exchange_rate""\n    from\n    (\n        select tf.amount, tf.transaction_time::date as ""date"", ta.client_loginid, ta.currency_code from transaction.firsts tf left join transaction.account ta\n        on ta.id=tf.account_id\n        where tf.action_type = \'deposit\'\n        and transaction_time >= (now() + interval \'-7 day\')::timestamp::date\n        and transaction_time < now()::timestamp::date\n    ) as a left join betonmarkets.client bc\n    on a.""client_loginid"" = bc.loginid\n) b\nwhere residence in (\'id\', \'br\', \'mx\', \'th\', \'za\', \n                    \'in\', \'ng\', \'bo\', \'tw\', \'vn\', \n                    \'ru\', \'ua\', \'do\', \'lk\', \'ke\', \n                    \'bd\', \'uy\', \'au\', \'kz\', \'co\')\ngroup by 1,2\norder by 2 desc, 4 desc\n'}, 'type': 'native', 'database': 2}",,line,,False,False,80,,Number of NEW deposits from selected countries,,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-04-08T00:00:00.000Z', 'latest': '2019-04-14T00:00:00.000Z'}}}}, {'name': 'total_first_deposits_USD', 'display_name': 'Total First Deposits Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 102, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.09063272031, 'max': 24808.218335314727, 'avg': 1664.5204071778307, 'sd': 3209.47463692313, 'q1': 84.43852168118693, 'q3': 1634.8295038595}}}}, {'name': 'count_clients', 'display_name': 'Count Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 39, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 105.0, 'avg': 15.314814814814815, 'sd': 21.353564848546643, 'q1': 2.120402745798557, 'q3': 18.26794919243112}}}}]",,2019-04-15 00:56:57.334,"{'graph.metrics': ['count_clients'], 'graph.dimensions': ['date', 'residence']}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:28:01.641,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- oauth.apps history by App ID\n-- The report will show all the history for a particular app ID. Top record is current state.\n-- Note: we did not start recording changes until late 2016, so changes prior to that are not recorded.\nWITH params AS (SELECT\n  \'1439\'::BIGINT AS id \n)\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT\n  t.id AS ""APP ID"",\n  t.app_name,\n  t.binary_user_id,\n  t.stamp AS date_this_went_into_effect,\n  t.active,\n  t.app_markup_percentage,\n  t.homepage,\n  t.scopes,\n  t.appstore\nFROM params, dblink(\'auth\', \'SELECT id, name, binary_user_id, stamp::TIMESTAMP(0), active, app_markup_percentage, homepage, scopes, appstore FROM oauth.apps WHERE id=\'|| params.id ||\'\'::TEXT)\n  t (id TEXT, app_name TEXT, binary_user_id TEXT, stamp TEXT, active TEXT, app_markup_percentage TEXT, homepage TEXT, scopes TEXT, appstore TEXT)\n\nUNION ALL\n\nSELECT\n  ex.id AS ""App ID"",\n  ex.name AS app_name,\n  ex.binary_user_id,\n  to_char(ex.stamp, \'YYYY-MM-DD HH24:MI:SS\'::TEXT)::TEXT  AS date_in_effect,\n  ex.active,\n  ex.app_markup_percentage,\n  ex.homepage,\n  ex.scopes,\n  ex.appstore\nFROM params, dblink(\'auth\', \'SELECT data FROM oauth.apps_archive WHERE id=\'|| params.id ||\' ORDER BY archival_stamp DESC\'::TEXT) ta (data jsonb)\nJOIN LATERAL jsonb_to_record(ta.data) ex (\n  name TEXT,\n  homepage TEXT,\n  github TEXT,\n  appstore TEXT,\n  googleplay TEXT,\n  binary_user_id TEXT,\n  active TEXT,\n  redirect_uri TEXT,\n  scopes TEXT,\n  id TEXT,\n  app_markup_percentage TEXT,\n  stamp TIMESTAMP) ON TRUE'}}",oauth.apps history by App ID,table,,False,False,645,,oauth.apps history by App ID,,native,,,,2019-03-22 03:28:01.641,{}
False,,"{'id': 53, 'name': ""Ravi Guglani's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 49, 'slug': 'ravi_guglani_s_personal_collection'}",53.0,,2019-09-18 03:10:33.043,"{'email': 'ravi@binary.com', 'first_name': 'Ravi', 'last_login': '2019-10-21T06:23:20.369Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 49, 'last_name': 'Guglani', 'date_joined': '2018-12-31T08:36:28.850Z', 'common_name': 'Ravi Guglani'}",49,2,"{'native': {'query': ""select underlying_symbol,\nsum(buy_price - sell_price) as Profit \nfrom bet.financial_market_bet \nwhere tick_count is NULL\nand underlying_symbol like 'frx%'\nand purchase_time > (CURRENT_DATE)::date\nand EXTRACT(EPOCH FROM (expiry_time - start_time)) <= 179\ngroup by underlying_symbol\n\n""}, 'type': 'native', 'database': 2}",,bar,,False,False,1040,,One minute forex current day,,native,,"[{'name': 'underlying_symbol', 'display_name': 'underlying_symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.0}}}}, {'name': 'profit', 'display_name': 'profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': -19.18, 'max': 24.05, 'avg': 0.476666666666666, 'sd': 13.005724701069141, 'q1': -7.465, 'q3': 7.925000000000001}}}}]",,2019-09-20 01:30:20.969,"{'column_settings': {'[""ref"",[""field-literal"",""profit"",""type/Decimal""]]': {'number_style': 'currency'}}, 'series_settings': {'profit': {'color': '#EF8C8C', 'title': 'PnL'}}, 'graph.show_goal': False, 'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['profit']}"
False,,"{'id': 53, 'name': ""Ravi Guglani's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 49, 'slug': 'ravi_guglani_s_personal_collection'}",53.0,,2019-09-18 03:52:44.793,"{'email': 'ravi@binary.com', 'first_name': 'Ravi', 'last_login': '2019-10-21T06:23:20.369Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 49, 'last_name': 'Guglani', 'date_joined': '2018-12-31T08:36:28.850Z', 'common_name': 'Ravi Guglani'}",49,2,"{'native': {'query': ""select sum(buy_price - sell_price) as Profit,\ndate(purchase_time) + interval '16 hour' as Trade_Date\nfrom bet.financial_market_bet \nwhere tick_count is NULL\nand underlying_symbol like 'frx%'\nand purchase_time > '2019-09-17'\nand EXTRACT(EPOCH FROM (expiry_time - start_time)) < 180\ngroup by date(purchase_time)\n\n\n""}, 'type': 'native', 'database': 2}",,line,,False,False,1044,,One minute forex overall_2,,native,,"[{'name': 'profit', 'display_name': 'profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1660.31566964, 'max': 1135.49055631, 'avg': -170.37647891749998, 'sd': 1148.303727439449, 'q1': -910.64323599, 'q3': 569.890278155}}}}, {'name': 'trade_date', 'display_name': 'trade_date', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-17T16:00:00.000Z', 'latest': '2019-09-20T16:00:00.000Z'}}}}]",,2019-09-20 01:30:25.603,"{'column_settings': {'[""ref"",[""field-literal"",""profit"",""type/Decimal""]]': {'number_style': 'currency', 'decimals': 2, 'currency_style': 'symbol'}}, 'series_settings': {'profit': {'color': '#EF8C8C', 'title': 'PnL'}}, 'graph.show_goal': False, 'graph.dimensions': ['trade_date'], 'scalar.switch_positive_negative': True, 'graph.metrics': ['profit']}"
False,,"{'id': 53, 'name': ""Ravi Guglani's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 49, 'slug': 'ravi_guglani_s_personal_collection'}",53.0,,2019-09-18 02:53:01.377,"{'email': 'ravi@binary.com', 'first_name': 'Ravi', 'last_login': '2019-10-21T06:23:20.369Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 49, 'last_name': 'Guglani', 'date_joined': '2018-12-31T08:36:28.850Z', 'common_name': 'Ravi Guglani'}",49,2,"{'native': {'query': ""select underlying_symbol,\nsum(buy_price - sell_price) as Profit \nfrom bet.financial_market_bet \nwhere extract(minutes from expiry_time - start_time) in (1,2)\nand underlying_symbol like 'frx%'\nand purchase_time > (CURRENT_DATE)::date\ngroup by underlying_symbol\n\n\n""}, 'type': 'native', 'database': 2}",,bar,,False,False,1038,,One minute fx,,native,,"[{'name': 'underlying_symbol', 'display_name': 'underlying_symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.0}}}}, {'name': 'profit', 'display_name': 'profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.09090909090909001}, 'type': {'type/Number': {'min': -466.71, 'max': 27.48, 'avg': -43.056, 'sd': 149.25525251877886, 'q1': -8.29, 'q3': 11.91}}}}]",,2019-09-18 04:15:15.161,"{'column_settings': {'[""ref"",[""field-literal"",""profit"",""type/Decimal""]]': {'number_style': 'currency'}}, 'series_settings': {'profit': {'color': '#EF8C8C', 'title': 'PnL'}}, 'graph.show_goal': False, 'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['profit']}"
False,,"{'id': 53, 'name': ""Ravi Guglani's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 49, 'slug': 'ravi_guglani_s_personal_collection'}",53.0,,2019-09-18 03:25:36.827,"{'email': 'ravi@binary.com', 'first_name': 'Ravi', 'last_login': '2019-10-21T06:23:20.369Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 49, 'last_name': 'Guglani', 'date_joined': '2018-12-31T08:36:28.850Z', 'common_name': 'Ravi Guglani'}",49,2,"{'native': {'query': ""select underlying_symbol,\nsum(buy_price - sell_price) as Profit \nfrom bet.financial_market_bet \nwhere tick_count is NULL\nand underlying_symbol like 'frx%'\nand purchase_time > '2019-09-17'\nand EXTRACT(EPOCH FROM (expiry_time - start_time)) < 180\ngroup by underlying_symbol\n\n\n""}, 'type': 'native', 'database': 2}",,bar,,False,False,1043,,One minute Fx Overall,,native,,"[{'name': 'underlying_symbol', 'display_name': 'underlying_symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.0}}}}, {'name': 'profit', 'display_name': 'profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.0}, 'type': {'type/Number': {'min': -529.20563738, 'max': 652.30270941, 'avg': -52.42353197461538, 'sd': 364.2861389778502, 'q1': -353.5105534275, 'q3': 202.31066149749998}}}}]",,2019-09-20 01:30:25.367,"{'column_settings': {'[""ref"",[""field-literal"",""profit"",""type/Decimal""]]': {'number_style': 'currency'}}, 'series_settings': {'profit': {'color': '#EF8C8C', 'title': 'PnL'}}, 'graph.show_goal': False, 'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['profit']}"
False,,"{'id': 53, 'name': ""Ravi Guglani's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 49, 'slug': 'ravi_guglani_s_personal_collection'}",53.0,,2019-09-18 03:17:23.742,"{'email': 'ravi@binary.com', 'first_name': 'Ravi', 'last_login': '2019-10-21T06:23:20.369Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 49, 'last_name': 'Guglani', 'date_joined': '2018-12-31T08:36:28.850Z', 'common_name': 'Ravi Guglani'}",49,2,"{'native': {'query': ""select extract(Hour from start_time) as Hours,\nsum(buy_price - sell_price) as Profit \nfrom bet.financial_market_bet \nwhere tick_count is NULL\nand underlying_symbol like 'frx%'\nand purchase_time > (CURRENT_DATE)::date\nand EXTRACT(EPOCH FROM (expiry_time - start_time)) <= 179\ngroup by extract(Hour from start_time)\n\n\n""}, 'type': 'native', 'database': 2}",,bar,,False,False,1042,,one minute today hourly,,native,,"[{'name': 'hours', 'display_name': 'hours', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1.0, 'avg': 0.5, 'sd': 0.707106781186547, 'q1': 0.0, 'q3': 1.0}}}}, {'name': 'profit', 'display_name': 'profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': -16.3, 'max': 20.59, 'avg': 2.144999999999999, 'sd': 26.085169157971738, 'q1': -16.3, 'q3': 20.59}}}}]",,2019-09-20 01:30:20.965,"{'column_settings': {'[""ref"",[""field-literal"",""profit"",""type/Decimal""]]': {'number_style': 'currency'}}, 'series_settings': {'profit': {'color': '#EF8C8C', 'title': 'PnL'}}, 'graph.show_goal': False, 'graph.dimensions': ['hours'], 'graph.metrics': ['profit']}"
False,,"{'id': 53, 'name': ""Ravi Guglani's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 49, 'slug': 'ravi_guglani_s_personal_collection'}",53.0,,2019-09-18 03:08:11.481,"{'email': 'ravi@binary.com', 'first_name': 'Ravi', 'last_login': '2019-10-21T06:23:20.369Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 49, 'last_name': 'Guglani', 'date_joined': '2018-12-31T08:36:28.850Z', 'common_name': 'Ravi Guglani'}",49,2,"{'native': {'query': ""select underlying_symbol,\nsum(buy_price - sell_price) as Profit \nfrom bet.financial_market_bet \nwhere tick_count is NULL\nand underlying_symbol like 'frx%'\nand purchase_time > (CURRENT_DATE - INTERVAL '1 day')::date\nand purchase_time < (CURRENT_DATE)::date\nand EXTRACT(EPOCH FROM (expiry_time - start_time)) < 180\ngroup by underlying_symbol\n\n\n""}, 'type': 'native', 'database': 2}",,bar,,False,False,1039,,one minute yesterday,,native,,"[{'name': 'underlying_symbol', 'display_name': 'underlying_symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.0}}}}, {'name': 'profit', 'display_name': 'profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.0}, 'type': {'type/Number': {'min': -223.05369083, 'max': 361.01224316, 'avg': 87.34542740846155, 'sd': 171.02424853496726, 'q1': -20.729228035, 'q3': 217.320225}}}}]",,2019-09-20 01:30:22.652,"{'column_settings': {'[""ref"",[""field-literal"",""profit"",""type/Decimal""]]': {'number_style': 'currency'}}, 'series_settings': {'profit': {'color': '#EF8C8C', 'title': 'PnL'}}, 'graph.show_goal': False, 'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['profit']}"
False,,"{'id': 53, 'name': ""Ravi Guglani's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 49, 'slug': 'ravi_guglani_s_personal_collection'}",53.0,,2019-09-18 03:15:20.929,"{'email': 'ravi@binary.com', 'first_name': 'Ravi', 'last_login': '2019-10-21T06:23:20.369Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 49, 'last_name': 'Guglani', 'date_joined': '2018-12-31T08:36:28.850Z', 'common_name': 'Ravi Guglani'}",49,2,"{'native': {'query': ""select extract(Hour from start_time) as Hours,\nsum(buy_price - sell_price) as Profit \nfrom bet.financial_market_bet \nwhere tick_count is NULL\nand underlying_symbol like 'frx%'\nand purchase_time > (CURRENT_DATE - INTERVAL '1 day')::date\nand purchase_time < (CURRENT_DATE)::date\nand EXTRACT(EPOCH FROM (expiry_time - start_time)) < 180\ngroup by extract(Hour from start_time)\n\n\n""}, 'type': 'native', 'database': 2}",,bar,,False,False,1041,,one minute yesterday hourly,,native,,"[{'name': 'hours', 'display_name': 'hours', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 21, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 20.0, 'avg': 10.0, 'sd': 6.204836822995428, 'q1': 4.75, 'q3': 15.25}}}}, {'name': 'profit', 'display_name': 'profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 21, 'nil%': 0.0}, 'type': {'type/Number': {'min': -41.46012324, 'max': 272.10231495, 'avg': 54.07097887190476, 'sd': 81.55873269104542, 'q1': 7.9575, 'q3': 98.615}}}}]",,2019-09-20 01:30:22.654,"{'column_settings': {'[""ref"",[""field-literal"",""profit"",""type/Decimal""]]': {'number_style': 'currency'}}, 'series_settings': {'profit': {'color': '#EF8C8C', 'title': 'PnL'}}, 'graph.show_goal': False, 'graph.dimensions': ['hours'], 'graph.metrics': ['profit']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-27 05:30:26.132,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select underlying_symbol, count(1) as ""num_contracts"", sum(buy_USD) as ""buy_USD"", sum(payout_USD) as ""payout_USD""\nfrom\n(\nselect\n    underlying_symbol,\n    account_id,\n    buy_price*data_collection.exchangetousd_rate(currency_code, expiry_time) as buy_USD,\n    payout_price*data_collection.exchangetousd_rate(currency_code, expiry_time) as payout_USD,\n    expiry_time,\n    currency_code\nfrom \n(\nselect * \nfrom \n    bet.financial_market_bet_open fmbo left join \n    transaction.account ta\n    on fmbo.account_id=ta.id\n) x\n) y\nwhere substr(underlying_symbol,1,1)!=\'R\'\ngroup by 1\norder by 4 desc, 2 desc, 3 desc\nlimit 16'}}",,bar,,False,False,132,,"Open contracts (CR, non-Volidx)",,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 16, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.375}}}}, {'name': 'num_contracts', 'display_name': 'Num Contracts', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 16, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5.0, 'max': 87.0, 'avg': 31.5625, 'sd': 22.668535462177523, 'q1': 11.5, 'q3': 42.5}}}}, {'name': 'buy_USD', 'display_name': 'Buy Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 16, 'nil%': 0.0}, 'type': {'type/Number': {'min': 211.23784, 'max': 6440.5, 'avg': 1563.8659234579686, 'sd': 1750.9975021918299, 'q1': 536.6248355, 'q3': 1528.75}}}}, {'name': 'payout_USD', 'display_name': 'Pay Out Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 16, 'nil%': 0.0}, 'type': {'type/Number': {'min': 401.356753, 'max': 10194.59, 'avg': 2742.7937587197857, 'sd': 2685.93359596366, 'q1': 1169.6081315038, 'q3': 2948.998871708}}}}]",,2019-02-21 05:26:50.827,"{'table.pivot_column': 'num_contracts', 'table.cell_column': 'num_contracts', 'graph.metrics': ['num_contracts', 'buy_USD'], 'graph.dimensions': ['underlying_symbol'], 'series_settings': {'Num Contracts': {'title': 'Contract Count'}, 'Buy Usd': {'title': 'Buy price (USD)'}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-19 05:19:40.712,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '\nselect\ntmp2.underlying_symbol,\nsum(tmp2.""total_buy_USD_now"") as ""total_buy_USD_now"",\nsum(tmp2.""potential_max_payout_USD_now"") as ""potential_max_payout_USD_now"",\nsum(tmp2.""count_contracts"") as ""count_contracts""\nfrom \n(\n    select\n      ta.currency_code,\n      tmp.underlying_symbol,\n      sum(tmp.""total_buy"")*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as ""total_buy_USD_now"",\n      sum(tmp.""potential_max_payout"")*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as ""potential_max_payout_USD_now"",\n      sum(tmp.""count_contracts"") as ""count_contracts""\n    from\n        (\n        select\n          account_id,\n          underlying_symbol,\n          sum(buy_price) as ""total_buy"",\n          sum(payout_price) as ""potential_max_payout"",\n          count(1) as ""count_contracts""\n        from bet.financial_market_bet_open\n        group by 1,2\n        ) tmp\n        left join transaction.account ta\n        on ta.id = tmp.account_id\n    group by 1,2\n) tmp2\nwhere substring(tmp2.underlying_symbol from 1 for 1) != \'R\'\ngroup by 1\norder by 3 desc, 2\nlimit 30'}}",,bar,,False,False,386,,"Open contracts (CR, non-volidx)",,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.5}}}}, {'name': 'total_buy_USD_now', 'display_name': 'Total Buy Usd Now', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 10.0, 'max': 6732.0, 'avg': 813.6295345322001, 'sd': 1528.4939683615366, 'q1': 43.4660205, 'q3': 904.803841}}}}, {'name': 'potential_max_payout_USD_now', 'display_name': 'Potential Max Pay Out Usd Now', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 20.0, 'max': 10560.94, 'avg': 1495.5095032071072, 'sd': 2551.2820061766624, 'q1': 76.13, 'q3': 1917.72}}}}, {'name': 'count_contracts', 'display_name': 'Count Contracts', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 47.0, 'avg': 12.9, 'sd': 12.468857758155053, 'q1': 4.645751311064591, 'q3': 17.535898384862247}}}}]",,2019-03-03 06:33:35.809,"{'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['total_buy_USD_now', 'potential_max_payout_USD_now', 'count_contracts']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-19 06:16:58.411,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '\nselect\ntmp2.underlying_symbol,\nsum(tmp2.""total_buy_USD_now"") as ""total_buy_USD_now"",\nsum(tmp2.""potential_max_payout_USD_now"") as ""potential_max_payout_USD_now"",\nsum(tmp2.""count_contracts"") as ""count_contracts""\nfrom \n(\n    select\n      ta.currency_code,\n      tmp.underlying_symbol,\n      sum(tmp.""total_buy"")*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as ""total_buy_USD_now"",\n      sum(tmp.""potential_max_payout"")*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as ""potential_max_payout_USD_now"",\n      sum(tmp.""count_contracts"") as ""count_contracts""\n    from\n        (\n        select\n          account_id,\n          underlying_symbol,\n          sum(buy_price) as ""total_buy"",\n          sum(payout_price) as ""potential_max_payout"",\n          count(1) as ""count_contracts""\n        from bet.financial_market_bet_open\n        where purchase_time > now() + interval \'-10m\'\n        group by 1,2\n        ) tmp\n        left join transaction.account ta\n        on ta.id = tmp.account_id\n    group by 1,2\n) tmp2\nwhere substring(tmp2.underlying_symbol from 1 for 1) != \'R\'\ngroup by 1\norder by 3 desc, 2\nlimit 30'}}",,bar,,False,False,388,,"Open contracts (CR, non-volidx), purchased in last 10 minutes",,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'total_buy_USD_now', 'display_name': 'Total Buy Usd Now', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'potential_max_payout_USD_now', 'display_name': 'Potential Max Pay Out Usd Now', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'count_contracts', 'display_name': 'Count Contracts', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-03-03 06:33:35.177,"{'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['total_buy_USD_now', 'potential_max_payout_USD_now', 'count_contracts']}"
False,,,,,2018-12-27 05:31:53.580,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select underlying_symbol, count(1) as ""num_contracts"", sum(buy_USD) as ""buy_USD"", sum(payout_USD) as ""payout_USD""\nfrom\n(\nselect\n    underlying_symbol,\n    account_id,\n    buy_price*data_collection.exchangetousd_rate(currency_code, expiry_time) as buy_USD,\n    payout_price*data_collection.exchangetousd_rate(currency_code, expiry_time) as payout_USD,\n    expiry_time,\n    currency_code\nfrom \n(\nselect * \nfrom \n    bet.financial_market_bet_open fmbo left join \n    transaction.account ta\n    on fmbo.account_id=ta.id\n) x\n) y\nwhere substr(underlying_symbol,1,1)!=\'R\'\ngroup by 1\norder by 3 desc, 2 desc, 4 desc\nlimit 20'}}",,bar,,False,False,133,,"Open contracts (CR, non-Volidx, top-20)",,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.5}}}}, {'name': 'num_contracts', 'display_name': 'Num Contracts', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4.0, 'max': 192.0, 'avg': 41.75, 'sd': 42.57485667683019, 'q1': 19.82842712474619, 'q3': 47.5}}}}, {'name': 'buy_USD', 'display_name': 'Buy Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 122.737, 'max': 12593.736957, 'avg': 2055.6066841342245, 'sd': 3106.3546830835558, 'q1': 274.1925125, 'q3': 2269.8462838}}}}, {'name': 'payout_USD', 'display_name': 'Payout Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 232.580374, 'max': 19810.92406852036, 'avg': 3785.281983021507, 'sd': 5180.247723595406, 'q1': 521.28835375, 'q3': 5765.769917786218}}}}]",,2019-06-14 03:53:53.956,"{'table.pivot_column': 'num_contracts', 'table.cell_column': 'num_contracts', 'graph.metrics': ['num_contracts', 'buy_USD'], 'graph.dimensions': ['underlying_symbol'], 'series_settings': {'Num Contracts': {'title': 'Contract Count', 'axis': 'right'}, 'Buy Usd': {'title': 'Buy price (USD)', 'axis': 'left'}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-19 05:20:05.197,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '\nselect\ntmp2.underlying_symbol,\nsum(tmp2.""total_buy_USD_now"") as ""total_buy_USD_now"",\nsum(tmp2.""potential_max_payout_USD_now"") as ""potential_max_payout_USD_now"",\nsum(tmp2.""count_contracts"") as ""count_contracts""\nfrom \n(\n    select\n      ta.currency_code,\n      tmp.underlying_symbol,\n      sum(tmp.""total_buy"")*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as ""total_buy_USD_now"",\n      sum(tmp.""potential_max_payout"")*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as ""potential_max_payout_USD_now"",\n      sum(tmp.""count_contracts"") as ""count_contracts""\n    from\n        (\n        select\n          account_id,\n          underlying_symbol,\n          sum(buy_price) as ""total_buy"",\n          sum(payout_price) as ""potential_max_payout"",\n          count(1) as ""count_contracts""\n        from bet.financial_market_bet_open\n        group by 1,2\n        ) tmp\n        left join transaction.account ta\n        on ta.id = tmp.account_id\n    group by 1,2\n) tmp2\nwhere substring(tmp2.underlying_symbol from 1 for 1) = \'R\'\ngroup by 1\norder by 3 desc, 2\nlimit 30'}}",,bar,,False,False,387,,"Open contracts (CR, volidx)",,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.714285714285714}}}}, {'name': 'total_buy_USD_now', 'display_name': 'Total Buy Usd Now', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 249.5978, 'max': 9484.616731, 'avg': 2466.078448185203, 'sd': 3294.7306965057846, 'q1': 289.56754275000003, 'q3': 2941.7028238241046}}}}, {'name': 'potential_max_payout_USD_now', 'display_name': 'Potential Max Pay Out Usd Now', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 557.5540914785, 'max': 17540.2672141587, 'avg': 4808.91703435227, 'sd': 6006.80844314942, 'q1': 781.5453709789394, 'q3': 5750.100205887401}}}}, {'name': 'count_contracts', 'display_name': 'Count Contracts', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 20.0, 'max': 191.0, 'avg': 85.42857142857143, 'sd': 66.32962420833582, 'q1': 27.75, 'q3': 139.25}}}}]",,2019-03-03 06:33:35.804,"{'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['total_buy_USD_now', 'potential_max_payout_USD_now', 'count_contracts']}"
False,,,,,2018-12-18 15:12:06.865,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select ""Symbol"", SUM(""Profit""*""RateProfit"") from mt5_positions positions\r\nwhere (""Symbol"" LIKE \'Volatility%\' OR ""Symbol"" LIKE \'HF Volatility%\')\r\ngroup by ""Symbol""'}}",,row,,False,False,107,,Open Position PnL,,native,,"[{'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.375}}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': -508509.3227609893, 'max': -1253.9800000000002, 'avg': -72648.73917079502, 'sd': 176361.95279524455, 'q1': -22701.287818002245, 'q3': -2704.5024846831857}}}}]",,2019-02-27 09:00:33.123,"{'table.pivot_column': 'date', 'table.cell_column': 'company_profit', 'graph.dimensions': ['Symbol'], 'graph.metrics': ['sum']}"
False,,,,,2018-12-18 15:14:55.191,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select ""Symbol"", SUM(""Profit""*""RateProfit"") from mt5_positions positions\r\nwhere (""Symbol"" LIKE \'Volatility%\' OR ""Symbol"" LIKE \'HF Volatility%\')\r\ngroup by ""Symbol""'}}",,pie,,False,False,108,,Open Position PnL Pie Chart,,native,,"[{'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.375}}}}, {'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': -222294.07212626492, 'max': 16.84, 'avg': -31816.21341673247, 'sd': 77125.67863687906, 'q1': -10804.157603797414, 'q3': -873.1950000000004}}}}]",,2018-12-26 14:00:19.746,"{'table.pivot_column': 'date', 'table.cell_column': 'company_profit', 'graph.dimensions': ['Symbol'], 'graph.metrics': ['sum'], 'pie.slice_threshold': 0.5, 'pie.show_legend': True}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:19:48.695,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- P&L by broker code for interval\n-- The initial intention for this report is to be used as a spreadsheet to be joined with other spreadsheets in order to provide this P&L by loginid\nWITH params AS (SELECT\n-- CH, CR, MF, MX, MLT, JP...\n-- bear in mind that running against CR will produce a very large report that will probably take ""forever"" to run without a tight interval\n\t\'MF\'::VARCHAR AS broker_code,\n\n-- Leave the following AS NULL::DATE to get the P&L from account opening until the end_date\n-- otherwise specify a date like this: \'2018-01-01\'::DATE\n\tNULL::DATE AS start_date,\n\t\'2018-03-31\'::DATE AS end_date\n)\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT dbl.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink (ps.srvname, $$\n\tSELECT bc.loginid,\n\t\tta.currency_code,\n\t\tSUM(tt.amount) AS profit_loss\n\tFROM betonmarkets.client AS bc\n\tJOIN transaction.account AS ta\n\t     ON ta.client_loginid = bc.loginid\n\tJOIN transaction.transaction AS tt\n\t     ON tt.account_id = ta.id\n\tWHERE \n\t    bc.broker_code = $$|| quote_literal(params.broker_code) ||$$\n\tAND tt.action_type IN (\'buy\',\'sell\')\n\tAND tt.transaction_time >= $$|| quote_literal( COALESCE(params.start_date, \'2000-01-01\') ) ||$$::TIMESTAMP\n\tAND tt.transaction_time < $$|| quote_nullable( params.end_date ) ||$$::TIMESTAMP + INTERVAL \'1 day\'\n\tGROUP BY 1,2\n\tORDER BY betonmarkets.loginid_sortable(bc.loginid)\n$$) AS dbl(\n\tloginid VARCHAR,\n\tcurrency_code VARCHAR,\n\tprofit_loss NUMERIC\n)\nWHERE params.broker_code = ANY(ps.broker_codes);\n'}}",P&L by broker code for interval,table,,False,False,611,,P&L by broker code for interval,,native,,,,2019-03-22 03:19:48.695,{}
False,,"{'id': 65, 'name': ""Parviz asoodefard's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 52, 'slug': 'parviz_asoodefard_s_personal_collection'}",65.0,,2019-01-13 08:26:36.344,"{'email': 'parviz@regentmarkets.com', 'first_name': 'Parviz', 'last_login': '2019-07-03T05:55:34.855Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 52, 'last_name': 'asoodefard', 'date_joined': '2019-01-08T07:10:52.493Z', 'common_name': 'Parviz asoodefard'}",52,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\nsum(pnl) pnl\n,s.client_loginid, s.currency_code, s.balance,s.is_default \n,s.First_name,s.last_name,s.email,s.residence,s.citizen,s.address_line_1,s.address_line_2,s.address_city,s.address_state,s.address_postcode,s.phone,s.gender,s.date_of_birth\n\n\nfrom (\n \n select (b.sell_price - b.buy_price)* data_collection.exchangetousd_rate(a.currency_code) PnL , \n a.client_loginid, a.currency_code, a.balance,a.is_default \n  ,c.First_name,c.last_name,c.email,c.residence,c.citizen,c.address_line_1,c.address_line_2,c.address_city,c.address_state,c.address_postcode,c.phone,c.gender,c.date_of_birth\n\nfrom bet.financial_market_bet b\n    join transaction.account as a\n    on a.id = b.account_id\n    join ""betonmarkets"".""client"" c \n    on c.Loginid = a.client_loginid\nwhere 1=1\n    [[and a.client_loginid={{Login_id}}]]\n    [[and b.Underlying_symbol = {{Symbol}}]]\n    [[and {{Bet_type}} = b.Bet_type]]\n    and b.purchase_time >= {{Start_time}}\n    and b.purchase_time <= {{End_time}}\n    [[and b.bet_class = {{Bet_class}}]]\n    [[and a.binary_user_id = {{Binary_user_id}}]]\n    [[and c.First_name like \'%\'|| {{First_name}}||\'%\']]\n    [[and c.last_name like \'%\'|| {{last_name}}||\'%\']]\n    [[and c.Email like \'%\'||{{email}}||\'%\' ]]\n    [[and c.residence = {{residence}}]]\n    [[and c.citizen = {{citizen}}]]\n    [[and c.address_line_1 like \'%\'|| {{address_line_1}}||\'%\']]\n     [[and c.address_line_2 like \'%\'|| {{address_line_2}}||\'%\']]\n    [[and c.address_city = {{address_city}}]]\n    [[and c.address_state = {{address_state}}]]\n    [[and c.address_postcode = {{address_postcode}}]]\n    [[and c.phone = {{phone}}]]\n    [[and c.gender = {{gender}}]]\n    [[and c.date_of_birth = {{date_of_birth}}]]\n  \n) s     \ngroup by s.client_loginid, s.currency_code, s.balance,s.is_default \n,s.First_name,s.last_name,s.email,s.residence,s.citizen,s.address_line_1,s.address_line_2,s.address_city,s.address_state,s.address_postcode,s.phone,s.gender,s.date_of_birth\n\n    limit 100\n    ', 'template-tags': {'Symbol': {'id': '5003afbc-76f1-d6f0-aad7-dd262ebe2aeb', 'name': 'Symbol', 'display-name': 'Symbol', 'type': 'text'}, 'Bet_type': {'id': '7d023f6a-f6be-6298-6772-f47072097143', 'name': 'Bet_type', 'display-name': 'Bet type', 'type': 'text'}, 'address_line_2': {'id': 'fe002f71-94f6-37b9-9948-843cc4197b28', 'name': 'address_line_2', 'display-name': 'Address line 2', 'type': 'text'}, 'Start_time': {'id': 'f175ea6c-a262-eb8c-788d-a5ce2e9f7cd1', 'name': 'Start_time', 'display-name': 'Start time', 'type': 'date', 'required': True, 'default': '2018-12-30'}, 'gender': {'id': 'ff937a5c-40c3-f817-14d8-03695bc9e27f', 'name': 'gender', 'display-name': 'Gender', 'type': 'text'}, 'email': {'id': '11ed5ce4-9d86-896d-370f-c27c07e5b041', 'name': 'email', 'display-name': 'email', 'type': 'text'}, 'Bet_class': {'id': '94a75f6d-0b9b-c8cc-ea54-cb44f2734e05', 'name': 'Bet_class', 'display-name': 'Bet class', 'type': 'text'}, 'citizen': {'id': '3cde33c4-58b3-088e-cf36-f614069dcf0d', 'name': 'citizen', 'display-name': 'Citizen', 'type': 'text'}, 'End_time': {'id': '3940baaa-41b1-4ccd-cfe6-cef747970eef', 'name': 'End_time', 'display-name': 'End time', 'type': 'date', 'required': True, 'default': '2018-12-30'}, 'last_name': {'id': 'e277b142-8eb7-d92e-80ee-74714400278c', 'name': 'last_name', 'display-name': 'Last name', 'type': 'text'}, 'Login_id': {'id': '50d38f3d-11b5-4969-bfae-991ecbee1f97', 'name': 'Login_id', 'display-name': 'Login', 'type': 'text'}, 'address_state': {'id': 'b3fc6582-1b30-d696-84ee-4e505dd9b523', 'name': 'address_state', 'display-name': 'Address state', 'type': 'text'}, 'date_of_birth': {'id': 'a239070f-074f-a670-7593-0189406e4233', 'name': 'date_of_birth', 'display-name': 'Date of birth', 'type': 'date'}, 'First_name': {'id': 'd3ef7042-b9b2-e8f6-e4ce-b73684a9334f', 'name': 'First_name', 'display-name': 'First name', 'type': 'text'}, 'phone': {'id': '00fcc150-b8e1-a02a-59b4-b423474a50f7', 'name': 'phone', 'display-name': 'Phone', 'type': 'text'}, 'address_postcode': {'id': '75b51944-941c-3179-7bbe-add69ee1a541', 'name': 'address_postcode', 'display-name': 'Address postcode', 'type': 'number'}, 'Binary_user_id': {'id': '385c7152-1f24-0bff-e8c5-8ca72a124053', 'name': 'Binary_user_id', 'display-name': 'Binary user', 'type': 'text'}, 'address_line_1': {'id': 'd01b9abe-8e2a-77c6-da7c-7c124e9d020e', 'name': 'address_line_1', 'display-name': 'Address line 1', 'type': 'text'}, 'residence': {'id': 'ebb55bb2-236d-6150-84a0-1816ce44a5c0', 'name': 'residence', 'display-name': 'Residence', 'type': 'text'}, 'address_city': {'id': '1e8d5a3e-b04b-f849-bfde-e8ab8a75e420', 'name': 'address_city', 'display-name': 'Address city', 'type': 'text'}}}}",,table,,False,False,208,40.0,parviz client PnL,72624bda-1d9e-417f-b6ea-79edca359063,native,,"[{'name': 'pnl', 'display_name': 'Pnl', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1.0, 'max': 0.65460956454, 'avg': -0.251078087091999, 'sd': 0.637144538723035, 'q1': -0.715, 'q3': 0.208652391135}}}}, {'name': 'client_loginid', 'display_name': 'Client Login ID', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'balance', 'display_name': 'Balance', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1149.34, 'avg': 240.96999999999997, 'sd': 508.34715977371206, 'q1': 0.022500000000000003, 'q3': 328.53249999999997}}}}, {'name': 'is_default', 'display_name': 'Is Default', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'first_name', 'display_name': 'First Name', 'base_type': 'type/Text', 'special_type': 'type/Name', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.4}}}}, {'name': 'last_name', 'display_name': 'Last Name', 'base_type': 'type/Text', 'special_type': 'type/Name', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.2}}}}, {'name': 'email', 'display_name': 'Email', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 1.0, 'average-length': 22.4}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'citizen', 'display_name': 'Citizen', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 1.6}}}}, {'name': 'address_line_1', 'display_name': 'Address Line 1', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 18.8}}}}, {'name': 'address_line_2', 'display_name': 'Address Line 2', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.6000000000000001}}}}, {'name': 'address_city', 'display_name': 'Address City', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'address_state', 'display_name': 'Address State', 'base_type': 'type/Text', 'special_type': 'type/State', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.4}}}}, {'name': 'address_postcode', 'display_name': 'Address Postcode', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.6}}}}, {'name': 'phone', 'display_name': 'Phone', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 13.0}}}}, {'name': 'gender', 'display_name': 'Gender', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 1.0}}}}, {'name': 'date_of_birth', 'display_name': 'Date Of Birth', 'base_type': 'type/Date', 'special_type': 'type/Birthdate', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '1973-07-04T00:00:00.000Z', 'latest': '1995-08-09T00:00:00.000Z'}}}}]",,2019-01-28 06:52:23.339,"{'gauge.segments': [{'min': 5000, 'max': 20000, 'color': '#ED6E6E', 'label': ''}, {'min': 500, 'max': 5000, 'color': '#F9CF48', 'label': ''}, {'min': 0, 'max': 500, 'color': '#84BB4C', 'label': ''}], 'column_settings': {'[""name"",""sum""]': {'number_style': 'currency'}}, 'card.title': ""Client's total Profit"", 'table.pivot_column': 'client_loginid', 'table.cell_column': 'balance'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-07-09 04:38:28.964,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with all_rows as (\n\twith times as (select x as purchase_minute\n\t\t\t\t   from generate_series(date_trunc('minute', now() + interval '-4 hour') --current_date::timestamp\n\t\t\t\t\t  , date_trunc('minute', now() + interval '-1m')::timestamp\n\t\t\t\t\t  , interval  '1 min') t(x)\n\t), markets as (select distinct market \n\t\t\t\t   from bet.market\n\t\t\t\t   where market not in  ('stocks', 'legacy', 'cryptocurrency', 'futures'))\n\n\tselect * from markets cross join times\n\torder by 2,1\n)\n\nselect \n    all_rows.purchase_minute,\n    all_rows.market,\n    sum(coalesce(count_buy,0)) as count_buy\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_buy\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= now() + interval '-24h' --current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2 right join all_rows\non all_rows.purchase_minute = tmp2.purchase_minute and all_rows.market = tmp2.market\ngroup by 1,2""}}",,line,,False,False,1015,,"Past 4 hours: Count of purchased contracts, by the minute",,native,,"[{'name': 'purchase_minute', 'display_name': 'Purchase Minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 240, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-07-31T23:00:00.000Z', 'latest': '2019-08-01T02:59:00.000Z'}}}}, {'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.25}}}}, {'name': 'count_buy', 'display_name': 'Count Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 206, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 821.0, 'avg': 163.87604166666668, 'sd': 278.6502799080619, 'q1': 0.16217646512658002, 'q3': 458.5}}}}]",,2019-08-01 03:00:52.613,"{'graph.dimensions': ['purchase_minute', 'market'], 'graph.metrics': ['count_buy']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-07-09 04:40:07.497,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with all_rows as (\n\twith times as (select x as purchase_minute\n\t\t\t\t   from generate_series(date_trunc('minute', now() + interval '-6 hour') --current_date::timestamp\n\t\t\t\t\t  , date_trunc('minute', now() + interval '-1m')::timestamp\n\t\t\t\t\t  , interval  '1 min') t(x)\n\t), markets as (select distinct market \n\t\t\t\t   from bet.market\n\t\t\t\t   where market not in  ('stocks', 'legacy', 'cryptocurrency', 'futures'))\n\n\tselect * from markets cross join times\n\torder by 2,1\n)\n\nselect \n    all_rows.purchase_minute,\n    all_rows.market,\n    sum(coalesce(count_buy,0)) as count_buy\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_buy\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= now() + interval '-24 h'--current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2 right join all_rows\non all_rows.purchase_minute = tmp2.purchase_minute and all_rows.market = tmp2.market\ngroup by 1,2""}}",,line,,False,False,1016,,"Past 6 hours: Count of purchased contracts, by the minute",,native,,"[{'name': 'purchase_minute', 'display_name': 'Purchase Minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 360, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-07-31T21:00:00.000Z', 'latest': '2019-08-01T02:59:00.000Z'}}}}, {'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.25}}}}, {'name': 'count_buy', 'display_name': 'Count Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 246, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 821.0, 'avg': 155.0611111111111, 'sd': 266.33727564760983, 'q1': 0.087323696436453, 'q3': 444.0}}}}]",,2019-08-01 03:00:52.882,"{'graph.dimensions': ['purchase_minute', 'market'], 'graph.metrics': ['count_buy']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-07-09 04:37:56.066,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with all_rows as (\n\twith times as (select x as purchase_minute\n\t\t\t\t   from generate_series(date_trunc('minute', now() + interval '-30 minute') --current_date::timestamp\n\t\t\t\t\t  , date_trunc('minute', now() + interval '-1m')::timestamp\n\t\t\t\t\t  , interval  '1 min') t(x)\n\t), markets as (select distinct market \n\t\t\t\t   from bet.market\n\t\t\t\t   where market not in  ('stocks', 'legacy', 'cryptocurrency', 'futures'))\n\n\tselect * from markets cross join times\n\torder by 2,1\n)\n\nselect \n    all_rows.purchase_minute,\n    all_rows.market,\n    sum(coalesce(count_buy,0)) as count_buy\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_buy\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= now() + interval '-24 hour' --current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2 right join all_rows\non all_rows.purchase_minute = tmp2.purchase_minute and all_rows.market = tmp2.market\ngroup by 1,2""}}",,line,,False,False,1014,,"Past half hour: Count of purchased contracts, by the minute",,native,,"[{'name': 'purchase_minute', 'display_name': 'Purchase Minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-08-01T02:30:00.000Z', 'latest': '2019-08-01T02:59:00.000Z'}}}}, {'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.25}}}}, {'name': 'count_buy', 'display_name': 'Count Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 43, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 764.0, 'avg': 170.725, 'sd': 291.84366030260713, 'q1': 0.0, 'q3': 336.5}}}}]",,2019-08-01 03:00:52.800,"{'graph.dimensions': ['purchase_minute', 'market'], 'graph.metrics': ['count_buy']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-07-09 04:35:52.971,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with all_rows as (\n\twith times as (select x as purchase_minute\n\t\t\t\t   from generate_series(date_trunc('minute', now() + interval '-1 hour') --current_date::timestamp\n\t\t\t\t\t  , date_trunc('minute', now() + interval '-1m')::timestamp\n\t\t\t\t\t  , interval  '1 min') t(x)\n\t), markets as (select distinct market \n\t\t\t\t   from bet.market\n\t\t\t\t   where market not in  ('stocks', 'legacy', 'cryptocurrency', 'futures'))\n\n\tselect * from markets cross join times\n\torder by 2,1\n)\n\nselect \n    all_rows.purchase_minute,\n    all_rows.market,\n    sum(coalesce(count_buy,0)) as count_buy\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_buy\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= now() + interval '-24 hour' --current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2 right join all_rows\non all_rows.purchase_minute = tmp2.purchase_minute and all_rows.market = tmp2.market\ngroup by 1,2""}}",,line,,False,False,1013,,"Past hour: Count of purchased contracts, by the minute",,native,,"[{'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 60, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T04:03:00.000Z', 'latest': '2019-10-14T05:02:00.000Z'}}}}, {'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.8}}}}, {'name': 'count_buy', 'display_name': 'count_buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 70, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 582.0, 'avg': 97.11333333333333, 'sd': 190.27216171426, 'q1': 0.054869529060633006, 'q3': 11.108551373173347}}}}]",,2019-10-14 05:03:16.968,"{'graph.dimensions': ['purchase_minute', 'market'], 'graph.metrics': ['count_buy']}"
False,,"{'id': 57, 'name': 'Daily Report', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'daily_report'}",57.0,,2019-01-01 10:11:42.083,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n  xyz.""payment_date"",\n  sum(xyz.""exchange_rate"" * xyz.""amount"") as ""deposit_amount_USD"",\n  sum(xyz.""count"") as ""deposit_count""\nfrom\n(\n    select data_collection.exchangetousd_rate(abc.""currency_code"", abc.""payment_date""::timestamp) as ""exchange_rate"", abc.*\n    from\n    (\n        select\n          ta.currency_code,\n          payment_time::timestamp::date as ""payment_date"",\n          sum(amount) as ""amount"",\n          count(1) as ""count"" \n        from payment.payment pp left join transaction.account ta\n        on ta.id=pp.account_id\n        where payment_time >= (now() + interval \'-30 day\')::timestamp::date\n        and payment_time < now()::timestamp::date\n        and payment_gateway_code = \'payment_agent_transfer\'\n        and amount > 0\n        group by 1,2\n    ) abc\n) xyz\ngroup by 1\norder by 1\n'}}",,line,,False,False,152,,Payment agent deposits (CR),,native,,"[{'name': 'payment_date', 'display_name': 'payment_date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-09T00:00:00.000Z', 'latest': '2019-10-08T00:00:00.000Z'}}}}, {'name': 'deposit_amount_USD', 'display_name': 'deposit_amount_USD', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 170419.93, 'max': 355271.9509008994, 'avg': 263088.24841425463, 'sd': 49655.09872362005, 'q1': 214805.88, 'q3': 297971.92}}}}, {'name': 'deposit_count', 'display_name': 'deposit_count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2329.0, 'max': 3324.0, 'avg': 2923.133333333333, 'sd': 244.82544567625055, 'q1': 2792.0, 'q3': 3080.0}}}}]",,2019-10-09 08:00:47.968,"{'graph.metrics': ['deposit_amount_USD', 'deposit_count'], 'graph.dimensions': ['payment_date'], 'series_settings': {'Deposit Usd': {'title': 'Deposit USD'}, 'Deposit Amount Usd': {'title': 'Deposit Amount USD'}}, 'table.pivot_column': 'deposit_amount_USD', 'table.cell_column': 'deposit_amount_USD'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-01 06:12:44.218,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select * from\n(\n    select client_loginid, currency_code, payment_agent_name, email, commission_deposit, commission_withdrawal from betonmarkets.payment_agent\n) tmp1 left join\n(\n    select\n        account_id,\n        payment_date,\n        pos*data_collection.exchangetousd_rate(currency_code, payment_date + interval \'1d\') as ""pos_usd"",\n        neg*data_collection.exchangetousd_rate(currency_code, payment_date + interval \'1d\') as ""neg_usd"",\n        pos_count,\n        neg_count,\n        client_loginid,\n        binary_user_id,\n        currency_code,\n        data_collection.exchangetousd_rate(currency_code, payment_date + interval \'1d\') as ""exchange_rate""\n    from\n    (\n        select\n            account_id,\n            payment_time::date as payment_date,\n            sum(amount) filter (where amount >= 0) as pos,\n            count(amount) filter (where amount >= 0) as pos_count,\n            sum(amount) filter (where amount < 0) as neg,\n            count(amount) filter (where amount < 0) as neg_count\n        from payment.payment\n        where\n            payment_time >= \'2018-01-01\' and \n            payment_gateway_code=\'payment_agent_transfer\'\n        group by 1, 2\n        --order by 2 desc, 1\n    ) tmp left join transaction.account ta\n    on ta.id=tmp.account_id\n) tmp2\non tmp2.client_loginid=tmp1.client_loginid'}}",,table,,False,False,685,,"payment agent total daily deposits since 2018, with payment agents' names",,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 53, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.8424}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'payment_agent_name', 'display_name': 'Payment Agent Name', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 52, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 14.2834}}}}, {'name': 'email', 'display_name': 'Email', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 53, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 1.0, 'average-length': 23.3413}}}}, {'name': 'commission_deposit', 'display_name': 'Commission Deposit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 5.0, 'avg': 0.20115000000000002, 'sd': 0.8966013980062101, 'q1': 0.0, 'q3': 0.178454514499331}}}}, {'name': 'commission_withdrawal', 'display_name': 'Commission Withdrawal', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 5.0, 'avg': 0.2025, 'sd': 0.897426480235981, 'q1': 0.0, 'q3': 0.356909028998663}}}}, {'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 53, 'nil%': 0.0}, 'type': {'type/Number': {'min': 301161.0, 'max': 3654861.0, 'avg': 2021369.57, 'sd': 811887.3666135479, 'q1': 1481169.1848149167, 'q3': 2746350.408547841}}}}, {'name': 'payment_date', 'display_name': 'Payment Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 456, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:00:00.000Z', 'latest': '2019-04-01T00:00:00.000Z'}}}}, {'name': 'pos_usd', 'display_name': 'Pos Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6313, 'nil%': 0.193}, 'type': {'type/Number': {'min': 10.0, 'max': 102829.82, 'avg': 5926.997773234201, 'sd': 9655.041012139538, 'q1': 532.9178987050844, 'q3': 7656.869269305208}}}}, {'name': 'neg_usd', 'display_name': 'Neg Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7993, 'nil%': 0.0443}, 'type': {'type/Number': {'min': -99999.72, 'max': -10.0, 'avg': -6919.003508423145, 'sd': 10415.079402127598, 'q1': -9107.783550122855, 'q3': -477.99820485520786}}}}, {'name': 'pos_count', 'display_name': 'Pos Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 240, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 260.0, 'avg': 31.5086, 'sd': 50.18327783421666, 'q1': 1.3293815032890821, 'q3': 33.76207104422089}}}}, {'name': 'neg_count', 'display_name': 'Neg Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 470, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 514.0, 'avg': 68.2477, 'sd': 103.98791714988732, 'q1': 4.006428431316094, 'q3': 72.71477630254107}}}}, {'name': 'client_loginid_2', 'display_name': 'Client Loginid 2', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 53, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.8424}}}}, {'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 53, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4044526.0, 'max': 5278182.0, 'avg': 4817608.9492, 'sd': 270814.3263530407, 'q1': 4840429.14025675, 'q3': 4968025.52403458}}}}, {'name': 'currency_code_2', 'display_name': 'Currency Code 2', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'exchange_rate', 'display_name': 'Exchange Rate', 'base_type': 'type/Decimal', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1.0, 'avg': 1.0, 'sd': 0.0, 'q1': 1.0, 'q3': 1.0}}}}]",,2019-04-01 06:15:11.441,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'commission_deposit'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-01 06:36:48.329,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \n    client_loginid,\n    payment_agent_name,\n    email,\n    sum(pos_usd) as pos_usd,\n    sum(neg_usd) as neg_usd,\n    sum(pos_count) as pos_count,\n    sum(neg_count) as neg_count,\n    min(commission_deposit) as ""min_commission_dep"",\n    max(commission_deposit) as ""max_commission_dep"",\n    min(commission_withdrawal) as ""min_commission_with"",\n    max(commission_withdrawal) as ""max_commission_with"",\n    min(binary_user_id) as binary_user_id\nfrom\n(\n    select tmp1.*, tmp2.payment_date, pos_count, neg_count, pos_usd, neg_usd, binary_user_id from\n    (\n        select client_loginid, currency_code, payment_agent_name, email, commission_deposit, commission_withdrawal from betonmarkets.payment_agent\n    ) tmp1 left join\n    (\n        select\n            account_id,\n            payment_date,\n            pos*data_collection.exchangetousd_rate(currency_code, payment_date + interval \'1d\') as ""pos_usd"",\n            neg*data_collection.exchangetousd_rate(currency_code, payment_date + interval \'1d\') as ""neg_usd"",\n            pos_count,\n            neg_count,\n            client_loginid,\n            binary_user_id,\n            currency_code,\n            data_collection.exchangetousd_rate(currency_code, payment_date + interval \'1d\') as ""exchange_rate""\n        from\n        (\n            select\n                account_id,\n                payment_time::date as payment_date,\n                sum(amount) filter (where amount >= 0) as pos,\n                count(amount) filter (where amount >= 0) as pos_count,\n                sum(amount) filter (where amount < 0) as neg,\n                count(amount) filter (where amount < 0) as neg_count\n            from payment.payment\n            where\n                payment_time >= \'2018-01-01\' and \n                payment_gateway_code=\'payment_agent_transfer\'\n            group by 1, 2\n            --order by 2 desc, 1\n        ) tmp left join transaction.account ta\n        on ta.id=tmp.account_id\n    ) tmp2\n    on tmp2.client_loginid=tmp1.client_loginid\n) temp_table\ngroup by 1,2,3'}}",,table,,False,False,686,,"payment agent total deposits since 2018, with payment agents' names",,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 308, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.652597402597403}}}}, {'name': 'payment_agent_name', 'display_name': 'Payment Agent Name', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 223, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 14.159090909090908}}}}, {'name': 'email', 'display_name': 'Email', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 226, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.9902597402597401, 'average-length': 22.016233766233768}}}}, {'name': 'pos_usd', 'display_name': 'Pos Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 93, 'nil%': 0.7012987012987011}, 'type': {'type/Number': {'min': 4.140452, 'max': 10870428.18, 'avg': 647513.8909337596, 'sd': 1794306.449148286, 'q1': 204.5205024716478, 'q3': 143820.99}}}}, {'name': 'neg_usd', 'display_name': 'Neg Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 95, 'nil%': 0.6883116883116881}, 'type': {'type/Number': {'min': -10946373.22, 'max': -0.0198, 'avg': -835471.6609545868, 'sd': 2181417.815261178, 'q1': -318010.905, 'q3': -91.97822542492077}}}}, {'name': 'pos_count', 'display_name': 'Pos Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 65, 'nil%': 0.6590909090909091}, 'type': {'type/Number': {'min': 0.0, 'max': 79917.0, 'avg': 3703.9333333333334, 'sd': 12348.325584300788, 'q1': 1.310629299344897, 'q3': 322.5}}}}, {'name': 'neg_count', 'display_name': 'Neg Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 65, 'nil%': 0.6590909090909091}, 'type': {'type/Number': {'min': 0.0, 'max': 172644.0, 'avg': 7935.495238095238, 'sd': 25949.712901970393, 'q1': 1.4260236537415572, 'q3': 1125.5}}}}, {'name': 'min_commission_dep', 'display_name': 'Min Commission Dep', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 9.0, 'avg': 1.228733766233766, 'sd': 2.077052539384661, 'q1': 0.0, 'q3': 2.0}}}}, {'name': 'max_commission_dep', 'display_name': 'Max Commission Dep', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 9.0, 'avg': 1.228733766233766, 'sd': 2.077052539384661, 'q1': 0.0, 'q3': 2.0}}}}, {'name': 'min_commission_with', 'display_name': 'Min Commission With', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 9.0, 'avg': 1.270941558441558, 'sd': 2.102579017364331, 'q1': 0.0, 'q3': 2.069615515823741}}}}, {'name': 'max_commission_with', 'display_name': 'Max Commission With', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 9.0, 'avg': 1.270941558441558, 'sd': 2.102579017364331, 'q1': 0.0, 'q3': 2.069615515823741}}}}, {'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 81, 'nil%': 0.6590909090909091}, 'type': {'type/Number': {'min': 4044526.0, 'max': 6119429.0, 'avg': 5040673.561904762, 'sd': 528214.3187159137, 'q1': 4842864.221273707, 'q3': 5505158.546610378}}}}]",,2019-04-01 06:39:28.850,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'commission_deposit'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-01 04:45:26.958,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'type': 'native', 'database': 2, 'native': {'query': 'select\n    account_id,\n    payment_date,\n    pos*data_collection.exchangetousd_rate(currency_code, payment_date + interval \'1d\') as ""pos_usd"",\n    neg*data_collection.exchangetousd_rate(currency_code, payment_date + interval \'1d\') as ""neg_usd"",\n    pos_count,\n    neg_count,\n    client_loginid,\n    binary_user_id,\n    currency_code,\n    data_collection.exchangetousd_rate(currency_code, payment_date + interval \'1d\') as ""exchange_rate""\nfrom\n(\nselect\n    account_id,\n    payment_time::date as payment_date,\n    sum(amount) filter (where amount >= 0) as pos,\n    count(amount) filter (where amount >= 0) as pos_count,\n    sum(amount) filter (where amount < 0) as neg,\n    count(amount) filter (where amount < 0) as neg_count\nfrom payment.payment\nwhere\n    payment_time >= \'2018-01-01\' and \n    payment_gateway_code=\'payment_agent_transfer\'\ngroup by 1, 2\n--order by 2 desc, 1\n) tmp left join transaction.account ta\non ta.id=tmp.account_id\n'}}",,table,,False,False,683,,payment agent transfers by account and day,,native,,"[{'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 292, 'nil%': 0}, 'type': {'type/Number': {'min': 221481, 'max': 1342941, 'avg': 861811.686, 'sd': 358191.94482985884, 'q1': 528650.2688701029, 'q3': 1185209.0121382065}}}}, {'name': 'payment_date', 'display_name': 'Payment Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 456, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:00:00.000Z', 'latest': '2019-04-01T00:00:00.000Z'}}}}, {'name': 'pos_usd', 'display_name': 'Pos Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2617, 'nil%': 0.2054}, 'type': {'type/Number': {'min': 10, 'max': 17147, 'avg': 351.79913541404477, 'sd': 1106.344105700436, 'q1': 31.983089435478774, 'q3': 177.81847412050178}}}}, {'name': 'neg_usd', 'display_name': 'Neg Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2171, 'nil%': 0.525}, 'type': {'type/Number': {'min': -33071.95, 'max': -10, 'avg': -876.6777873684211, 'sd': 2197.644190391366, 'q1': -533.1777434323246, 'q3': -55.96971955701606}}}}, {'name': 'pos_count', 'display_name': 'Pos Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 43, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 44, 'avg': 2.3004, 'sd': 4.571810361880565, 'q1': 0.5087308306028611, 'q3': 1.731546207024245}}}}, {'name': 'neg_count', 'display_name': 'Neg Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 87, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 93, 'avg': 4.2737, 'sd': 12.044850230571742, 'q1': 0.261904769044143, 'q3': 1.6081947198232}}}}, {'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 292, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 7.2996}}}}, {'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 292, 'nil%': 0}, 'type': {'type/Number': {'min': 4043875, 'max': 5094229, 'avg': 4520816.9255, 'sd': 380376.1014434667, 'q1': 4078833.282185204, 'q3': 4898517.934853839}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 3}}}}, {'name': 'exchange_rate', 'display_name': 'Exchange Rate', 'base_type': 'type/Decimal', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 1, 'max': 1, 'avg': 1, 'sd': 0, 'q1': 1, 'q3': 1}}}}]",,2019-04-01 04:45:26.958,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'account_id'}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:32.933,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'breakout': [['datetime-field', ['field-id', 847], 'day-of-week']], 'aggregation': [['count']]}}",,bar,,False,False,9,,Payment Agent Withdrawal Expiration Date by day of the week,,query,,"[{'name': 'payment_agent_withdrawal_expiration_date', 'display_name': 'Payment Agent Withdrawal Expiration Date', 'base_type': 'type/Date', 'unit': 'day-of-week', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.125}, 'type': {'type/Number': {'min': 1.0, 'max': 7.0, 'avg': 4.0, 'sd': 2.160246899469287, 'q1': 2.25, 'q3': 5.75}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 14442.0, 'max': 605127.0, 'avg': 94925.625, 'sd': 206206.70946333543, 'q1': 18713.5, 'q3': 26153.0}}}}]",94.0,2019-01-08 11:30:15.955,"{'graph.series_labels': ['number'], 'graph.metrics': ['count'], 'graph.dimensions': ['payment_agent_withdrawal_expiration_date'], 'graph.colors': ['#A989C5'], 'graph.x_axis.title_text': 'Payment Agent Withdrawal Expiration Date'}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:38.894,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'breakout': [['datetime-field', ['field-id', 847], 'hour-of-day']], 'aggregation': [['count']]}}",,bar,,False,False,12,,Payment Agent Withdrawal Expiration Date by hour of the day,,query,,"[{'name': 'payment_agent_withdrawal_expiration_date', 'display_name': 'Payment Agent Withdrawal Expiration Date', 'base_type': 'type/Date', 'unit': 'hour-of-day', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.5}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': None, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 154278.0, 'max': 605127.0, 'avg': 379702.5, 'sd': 318798.38519117376, 'q1': 154278.0, 'q3': 605127.0}}}}]",94.0,2019-01-08 11:30:16.184,"{'graph.series_labels': ['number'], 'graph.metrics': ['count'], 'graph.dimensions': ['payment_agent_withdrawal_expiration_date'], 'graph.colors': ['#A989C5'], 'graph.x_axis.title_text': 'Payment Agent Withdrawal Expiration Date'}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:45.987,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'breakout': [['datetime-field', ['field-id', 847], 'month-of-year']], 'aggregation': [['count']]}}",,bar,,False,False,15,,Payment Agent Withdrawal Expiration Date by month of the year,,query,,"[{'name': 'payment_agent_withdrawal_expiration_date', 'display_name': 'Payment Agent Withdrawal Expiration Date', 'base_type': 'type/Date', 'unit': 'month-of-year', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.07692307692307601}, 'type': {'type/Number': {'min': 1.0, 'max': 12.0, 'avg': 6.5, 'sd': 3.605551275463989, 'q1': 3.5, 'q3': 9.5}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.0}, 'type': {'type/Number': {'min': 10439.0, 'max': 605127.0, 'avg': 58415.769230769234, 'sd': 164286.39895121864, 'q1': 11543.5, 'q3': 14280.5}}}}]",94.0,2019-01-08 11:30:21.772,"{'graph.series_labels': ['number'], 'graph.metrics': ['count'], 'graph.dimensions': ['payment_agent_withdrawal_expiration_date'], 'graph.colors': ['#A989C5'], 'graph.x_axis.title_text': 'Payment Agent Withdrawal Expiration Date'}"
False,,"{'id': 214, 'name': ""Waziha Raquib's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 79, 'slug': 'waziha_raquib_s_personal_collection'}",214.0,,2019-09-18 09:34:28.068,"{'email': 'waziha@binary.com', 'first_name': 'Waziha', 'last_login': '2019-10-17T08:23:58.254Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 79, 'last_name': 'Raquib', 'date_joined': '2019-09-10T07:42:40.435Z', 'common_name': 'Waziha Raquib'}",79,2,"{'native': {'query': ""select * from payment.payment\nwhere payment_gateway_code = 'free_gift'""}, 'type': 'native', 'database': 2}",,table,,False,False,1047,,Payment Gateway Code = Free Gift,,native,,"[{'name': 'id', 'display_name': 'id', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'payment_time', 'display_name': 'payment_time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1101, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2005-01-21T16:29:00.000Z', 'latest': '2019-09-17T05:16:46.000Z'}}}}, {'name': 'amount', 'display_name': 'amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': -150.0, 'max': 150.0, 'avg': 12.6872, 'sd': 7.227499881512876, 'q1': 9.086716001715963, 'q3': 19.56960559169993}}}}, {'name': 'payment_gateway_code', 'display_name': 'payment_gateway_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.0}}}}, {'name': 'payment_type_code', 'display_name': 'payment_type_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.0}}}}, {'name': 'status', 'display_name': 'status', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'account_id', 'display_name': 'account_id', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1987, 'nil%': 0.0}, 'type': {'type/Number': {'min': 200021.0, 'max': 15166580.999999998, 'avg': 10387293.23, 'sd': 4076952.592280295, 'q1': 10888979.64972591, 'q3': 12208488.589050239}}}}, {'name': 'staff_loginid', 'display_name': 'staff_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 213, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.6045}}}}, {'name': 'remark', 'display_name': 'remark', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 183, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 39.062}}}}, {'name': 'transfer_fees', 'display_name': 'transfer_fees', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}]",,2019-09-18 09:39:37.831,"{'table.pivot_column': 'payment_gateway_code', 'table.cell_column': 'id'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-11 06:34:51.614,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \n    payment_gateway_code,\n    payment_type_code, \n    account_id, \n    payment_time::date as payment_date,\n    sum(amount) filter (where amount>=0) as tot_pos_amount,\n    sum(amount) filter (where amount<0) as tot_neg_amount,\n    count(amount) filter (where amount>=0) as count_pos_amount,\n    count(amount) filter (where amount<0) as count_neg_amount\nfrom payment.payment\ngroup by 1, 2, 3, 4'}}",to be renamed,table,,False,False,950,,payments tmp,,native,,[],,2019-04-11 06:34:51.614,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-11 06:33:32.182,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \n    payment_gateway_code,\n    payment_type_code, \n    account_id, \n    payment_time::date as payment_date,\n    sum(amount) filter (where amount>=0) as tot_pos_amount,\n    sum(amount) filter (where amount<0) as tot_neg_amount,\n    count(amount) filter (where amount>=0) as count_pos_amount,\n    count(amount) filter (where amount<0) as count_neg_amount\nfrom payment.payment\ngroup by 1, 2, 3, 4'}}",to be renamed,table,,False,False,949,,payments tmp,,native,,[],,2019-04-11 06:33:32.182,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-03-05 16:05:48.337,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    percentile_cont(0.10) WITHIN GROUP (ORDER BY payout_price/buy_price) as ""percentile_10"",\n    percentile_cont(0.20) WITHIN GROUP (ORDER BY payout_price/buy_price) as ""percentile_20"",\n    percentile_cont(0.30) WITHIN GROUP (ORDER BY payout_price/buy_price) as ""percentile_30"",\n    percentile_cont(0.40) WITHIN GROUP (ORDER BY payout_price/buy_price) as ""percentile_40"",\n    percentile_cont(0.50) WITHIN GROUP (ORDER BY payout_price/buy_price) as ""percentile_50"",\n    percentile_cont(0.60) WITHIN GROUP (ORDER BY payout_price/buy_price) as ""percentile_60"",\n    percentile_cont(0.70) WITHIN GROUP (ORDER BY payout_price/buy_price) as ""percentile_70"",\n    percentile_cont(0.80) WITHIN GROUP (ORDER BY payout_price/buy_price) as ""percentile_80"",\n    percentile_cont(0.90) WITHIN GROUP (ORDER BY payout_price/buy_price) as ""percentile_90""\nfrom bet.financial_market_bet\nwhere purchase_time >= (now() + interval \'-1d\')::date\nand purchase_time < now()::date'}}",,table,,False,False,438,,payout/buy for yesterday's contracts,,native,,"[{'name': 'percentile_10', 'display_name': 'Percentile 10', 'base_type': 'type/Float', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 1.097777777777777, 'max': 1.097777777777777, 'avg': 1.097777777777777, 'sd': None, 'q1': 1.097777777777777, 'q3': 1.097777777777777}}}}, {'name': 'percentile_20', 'display_name': 'Percentile 20', 'base_type': 'type/Float', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 1.171428571428571, 'max': 1.171428571428571, 'avg': 1.171428571428571, 'sd': None, 'q1': 1.171428571428571, 'q3': 1.171428571428571}}}}, {'name': 'percentile_30', 'display_name': 'Percentile 30', 'base_type': 'type/Float', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 1.408, 'max': 1.408, 'avg': 1.408, 'sd': None, 'q1': 1.408, 'q3': 1.408}}}}, {'name': 'percentile_40', 'display_name': 'Percentile 40', 'base_type': 'type/Float', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 1.8571428571428572, 'max': 1.8571428571428572, 'avg': 1.8571428571428572, 'sd': None, 'q1': 1.8571428571428572, 'q3': 1.8571428571428572}}}}, {'name': 'percentile_50', 'display_name': 'Percentile 50', 'base_type': 'type/Float', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 1.8857142857142852, 'max': 1.8857142857142852, 'avg': 1.8857142857142852, 'sd': None, 'q1': 1.8857142857142852, 'q3': 1.8857142857142852}}}}, {'name': 'percentile_60', 'display_name': 'Percentile 60', 'base_type': 'type/Float', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 1.9387755102040811, 'max': 1.9387755102040811, 'avg': 1.9387755102040811, 'sd': None, 'q1': 1.9387755102040811, 'q3': 1.9387755102040811}}}}, {'name': 'percentile_70', 'display_name': 'Percentile 70', 'base_type': 'type/Float', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 1.941307578008915, 'max': 1.941307578008915, 'avg': 1.941307578008915, 'sd': None, 'q1': 1.941307578008915, 'q3': 1.941307578008915}}}}, {'name': 'percentile_80', 'display_name': 'Percentile 80', 'base_type': 'type/Float', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 1.943333333333333, 'max': 1.943333333333333, 'avg': 1.943333333333333, 'sd': None, 'q1': 1.943333333333333, 'q3': 1.943333333333333}}}}, {'name': 'percentile_90', 'display_name': 'Percentile 90', 'base_type': 'type/Float', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 2.1, 'max': 2.1, 'avg': 2.1, 'sd': None, 'q1': 2.1, 'q3': 2.1}}}}]",,2019-03-05 16:05:48.337,"{'table.pivot_column': 'percentile_10', 'table.cell_column': 'percentile_10'}"
False,,"{'id': 74, 'name': ""Chris Tan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 54, 'slug': 'chris_tan_s_personal_collection'}",74.0,,2019-03-28 06:30:06.827,"{'email': 'chris.tan@binary.com', 'first_name': 'Chris', 'last_login': '2019-10-17T08:23:50.055Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 54, 'last_name': 'Tan', 'date_joined': '2019-01-25T07:04:08.850Z', 'common_name': 'Chris Tan'}",54,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with numbers as\n(select count(purchase_time) filter (where tick_count is not null) as tick_contract, \n \t\tcount(purchase_time) as total_contract,\n \t\tcount (distinct fmb.account_id) filter (where tick_count is not null) as tick_user,\n \t\tcount (distinct fmb.account_id) as total_user\n from bet.financial_market_bet as fmb \n join transaction.transaction as t \n on fmb.id = t.financial_market_bet_id \n where purchase_time > now() -'7days'::interval  and source in (10,14473) ) \n\nselect  tick_contract,\n\t\ttotal_contract, \n\t\tround(100*tick_contract/total_contract,2) as percentage_contract,\n\t\ttick_user,\n\t\ttotal_user, \n\t\tround(100*tick_user/total_user,2) as percentage_user\nfrom numbers \n""}}",,table,,False,False,682,,Percentage contracts and users of mobile user trade with tick contracts,,native,,"[{'name': 'tick_contract', 'display_name': 'Tick Contract', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 60791, 'max': 60791, 'avg': 60791, 'sd': None, 'q1': 60791, 'q3': 60791}}}}, {'name': 'total_contract', 'display_name': 'Total Contract', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 63935, 'max': 63935, 'avg': 63935, 'sd': None, 'q1': 63935, 'q3': 63935}}}}, {'name': 'percentage_contract', 'display_name': 'Percentage Contract', 'base_type': 'type/Decimal', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 95, 'max': 95, 'avg': 95, 'sd': None, 'q1': 95, 'q3': 95}}}}, {'name': 'tick_user', 'display_name': 'Tick User', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 228, 'max': 228, 'avg': 228, 'sd': None, 'q1': 228, 'q3': 228}}}}, {'name': 'total_user', 'display_name': 'Total User', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 247, 'max': 247, 'avg': 247, 'sd': None, 'q1': 247, 'q3': 247}}}}, {'name': 'percentage_user', 'display_name': 'Percentage User', 'base_type': 'type/Decimal', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 92, 'max': 92, 'avg': 92, 'sd': None, 'q1': 92, 'q3': 92}}}}]",,2019-03-28 07:02:04.503,"{'table.pivot_column': 'tick_contract', 'table.cell_column': 'tick_contract'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-09-27 04:01:46.844,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\nloginid,\nt.currency_code,\nfirst_name,\nlast_name,\nemail,\nresidence,\n--citizen,\ndate_joined\nfrom audit.client\njoin transaction.account t on loginid = t.client_loginid\nwhere date_joined >= NOW()-'1 day'::interval\nand t.currency_code = 'EUR'\n--and citizen <> ''\nand residence in ('pk', 'bd')\n--and date_joined >= NOW()-'30 day'::interval\ngroup by 1, 2, 3, 4, 5, 6, 7\norder by date_joined desc\nlimit 100""}}",,table,,False,False,1053,,PK and BD accounts in EUR,,native,,"[{'name': 'loginid', 'display_name': 'loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'first_name', 'display_name': 'first_name', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'last_name', 'display_name': 'last_name', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'email', 'display_name': 'email', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'residence', 'display_name': 'residence', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'date_joined', 'display_name': 'date_joined', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-21 04:30:10.012,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'date_joined'}"
False,,"{'id': 14, 'name': ""Yng Shan Tan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 12, 'slug': 'yng_shan_tan_s_personal_collection'}",14.0,,2019-09-25 07:29:20.709,"{'email': 'yngshan@binary.com', 'first_name': 'Yng Shan', 'last_login': '2019-10-21T01:07:21.265Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 12, 'last_name': 'Tan', 'date_joined': '2018-11-08T08:46:36.532Z', 'common_name': 'Yng Shan Tan'}",12,2,"{'native': {'query': 'select short_code,buy_price,sell_price,\nround(data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""daily_rate""\n   from bet.financial_market_bet\n   join transaction.account as a\n   on a.id = account_id\nwhere purchase_time >= \'2018-07-01\'\nand purchase_time < \'2018-07-10\'\nand underlying_symbol in (\'frxUSDJPY\',\'frxEURUSD\',\'frxAUDUSD\',\'frxUSDCHF\',\'frxUSDJPY\')\nand tick_count is NOT NULL'}, 'type': 'native', 'database': 2}",,table,,False,False,1051,,PL,,native,,"[{'name': 'short_code', 'display_name': 'short_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1986, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 38.884}}}}, {'name': 'buy_price', 'display_name': 'buy_price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 250, 'nil%': 0}, 'type': {'type/Number': {'min': 0.0002, 'max': 1800, 'avg': 12.315366886575003, 'sd': 66.84576576028485, 'q1': 0.6894223633424511, 'q3': 5.099896711254529}}}}, {'name': 'sell_price', 'display_name': 'sell_price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 457, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 3553.36, 'avg': 17.461391891439998, 'sd': 132.99746593431365, 'q1': 0.34153653661270605, 'q3': 2.925274294934693}}}}, {'name': 'daily_rate', 'display_name': 'daily_rate', 'base_type': 'type/Decimal', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0}, 'type': {'type/Number': {'min': 0.74, 'max': 6528.13, 'avg': 32.178775, 'sd': 369.12520473361633, 'q1': 0.925641334272132, 'q3': 1.055734153647475}}}}]",,2019-09-25 07:29:20.709,"{'table.pivot_column': 'daily_rate', 'table.cell_column': 'buy_price'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-05 08:05:33.253,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\na.client_loginid,\ncurrency_code,\nsum(b.sell_price - b.buy_price) as amount, \ncount (b.sell_time) as trades_number\nfrom transaction.account a\ninner join bet.financial_market_bet b on a.id=b.account_id\n where 1=1\n    [[and a.client_loginid = {{loginid}}]]\n    and sell_time > {{since1}}\n    and sell_time < {{since2}}\nGroup by a.id, b.account_id\norder by amount desc\n\n', 'template-tags': {'loginid': {'id': 'b285be5c-0e9b-b163-15e0-2c8da671947e', 'name': 'loginid', 'display-name': 'Loginid', 'type': 'text'}, 'since1': {'id': '73a0877c-3cc2-dfb8-8954-28a5ff53b3c1', 'name': 'since1', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'since2': {'id': '7d3dcad6-0b5e-2635-e6fe-62a342acc2b4', 'name': 'since2', 'display-name': 'End date not inclusive', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,table,,False,False,434,,PL for a client for a period,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Login ID', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'amount', 'display_name': 'Amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -2076.17, 'max': -2076.17, 'avg': -2076.17, 'sd': None, 'q1': -2076.17, 'q3': -2076.17}}}}, {'name': 'trades_number', 'display_name': 'Trades Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 446.0, 'max': 446.0, 'avg': 446.0, 'sd': None, 'q1': 446.0, 'q3': 446.0}}}}]",,2019-03-08 06:55:29.161,"{'table.column_widths': [None, None, 123], 'table.pivot_column': 'client_loginid', 'table.cell_column': 'amount'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-05 08:11:04.440,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\na.client_loginid,\ncurrency_code,\nsum(b.sell_price - b.buy_price) as amount, \ncount (b.sell_time) as trades_number\nfrom transaction.account a\ninner join bet.financial_market_bet b on a.id=b.account_id\n where 1=1\n    and a.client_loginid in ('CR567001', 'CR376390')\n    and sell_time > {{since1}}\n    and sell_time < {{since2}}\nGroup by a.id, b.account_id\norder by amount desc\n\n"", 'template-tags': {'since2': {'id': '7d3dcad6-0b5e-2635-e6fe-62a342acc2b4', 'name': 'since2', 'display-name': 'End date not inclusive', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'since1': {'id': '73a0877c-3cc2-dfb8-8954-28a5ff53b3c1', 'name': 'since1', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,table,,False,False,435,,PL for several clients for a period,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Login ID', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'amount', 'display_name': 'Amount', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'trades_number', 'display_name': 'Trades Number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-03-08 06:50:06.973,"{'table.column_widths': [None, None, 123], 'table.pivot_column': 'client_loginid', 'table.cell_column': 'amount'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-13 11:31:38.698,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'date_string': {'id': '1214e187-7e57-f9bb-bcac-518deb1ae151', 'name': 'date_string', 'display-name': 'enter a date', 'type': 'date', 'required': True, 'default': '2019-05-04'}, 'first_letter': {'id': 'd1f24ec6-de99-4b13-e182-a63c4c469861', 'name': 'first_letter', 'display-name': 'First Letter', 'type': 'text', 'required': True, 'default': 'f'}}, 'query': ""select\n    hour_of_day,\n    sum(total_buy) as total_buy,\n    sum(total_profit) as total_profit\nfrom\n(\n    select \n        tmp.account_id,\n        tmp.hour_of_day,\n        tmp.total_buy*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as total_buy,\n        tmp.total_profit*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as total_profit\n    from\n    (\n        select \n            account_id, \n            date_part('hour', purchase_time) as hour_of_day, \n            sum(coalesce(buy_price,0)) as total_buy, \n            sum(coalesce(buy_price,0) - coalesce(sell_price,0)) as total_profit\n        from only bet.financial_market_bet \n        where purchase_time >= {{date_string}}::date\n        and purchase_time < {{date_string}}::date + interval '1d'\n        and substr(underlying_symbol,1,1)={{first_letter}}\n        --current_date --+ interval '-2d'\n        group by 1, 2\n    ) tmp \n    left join transaction.account ta\n    on ta.id=tmp.account_id\n) tmp2\ngroup by 1""}, 'type': 'native', 'database': 2}",,line,,False,False,963,37.0,profit by hour of day (CR),efc89cef-de11-4d47-be78-4514517863c5,native,,"[{'name': 'hour_of_day', 'display_name': 'Hour Of Day', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 8.0, 'avg': 4.0, 'sd': 2.73861278752583, 'q1': 1.75, 'q3': 6.25}}}}, {'name': 'total_buy', 'display_name': 'Total Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2159.297228490805, 'max': 11238.381774089685, 'avg': 6933.4009055748065, 'sd': 3342.170680180233, 'q1': 3970.167893670273, 'q3': 10080.149178799746}}}}, {'name': 'total_profit', 'display_name': 'Total Profit', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1980.589757191325, 'max': 1761.29889315949, 'avg': 414.9829811190193, 'sd': 1121.512117866488, 'q1': 16.00770749248875, 'q3': 1175.1450272882726}}}}]",,2019-05-20 09:57:02.254,"{'table.pivot_column': 'substr', 'table.cell_column': 'account_id', 'graph.dimensions': ['hour_of_day'], 'graph.metrics': ['total_buy', 'total_profit'], 'series_settings': {'total_profit': {'axis': 'left', 'display': 'area'}, 'total_buy': {'display': 'area'}}, 'graph.y_axis.scale': 'linear'}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-25 08:35:31.358,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(deals.""Time""), deals.""Login"", deals.""Order"",deals. ""Action"", deals.""Entry"", deals.""Deal"", deals.""Volume"", deals.""Profit"", deals.""Storage"",users.""Group"", deals.""Symbol"",\nCASE\nWHEN ""Symbol"" = \'Volatility 10 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'Volatility 25 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 50 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 75 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'Volatility 100 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'HF Volatility 10 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'HF Volatility 50 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'HF Volatility 100 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.3\nELSE 0 END AS NP,\nCASE\nWHEN ""Symbol"" = \'Volatility 10 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'Volatility 25 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 50 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 75 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'Volatility 100 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'HF Volatility 10 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'HF Volatility 50 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'HF Volatility 100 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.3\nELSE 0 END AS Swap\nfrom mt5_deals_2019 as deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nwhere  users.""Group"" like \'%costarica%\'\nand ""Action"" IN (0,1)\nand ""Entry"" IN (1,3)\n--and not ((""Entry"" = 0) and (""Action"" in (0,1)))\nand date(deals.""Time"") >= \'2019-01-01\'\nand date(deals.""Time"") < \'2019-02-01\'\n\nand ((deals.""Symbol"" like \'Volatility%\') OR (deals.""Symbol"" like \'HF Volatility%\') )\n\norder by date(deals.""Time"") ASC'}}",,table,,False,False,418,,Profit per deal,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-01-01T00:00:00.000Z'}}}}, {'name': 'Login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 942, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1591.0, 'max': 160351.0, 'avg': 112965.56259999995, 'sd': 47539.61765870199, 'q1': 82467.22079963009, 'q3': 153116.82780457742}}}}, {'name': 'Order', 'display_name': 'Order', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9954, 'nil%': 0.0}, 'type': {'type/Number': {'min': 48641852.0, 'max': 48734748.0, 'avg': 48688873.944, 'sd': 27041.25281095997, 'q1': 48663479.09126857, 'q3': 48710663.94005079}}}}, {'name': 'Action', 'display_name': 'Action', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1.0, 'avg': 0.4616, 'sd': 0.49854818726929706, 'q1': 0.0, 'q3': 0.9585484834570851}}}}, {'name': 'Entry', 'display_name': 'Entry', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 3.0, 'avg': 1.0198, 'sd': 0.19801990099007402, 'q1': 1.0, 'q3': 1.605842140833663}}}}, {'name': 'Deal', 'display_name': 'Deal', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9998, 'nil%': 0.0}, 'type': {'type/Number': {'min': 42428027.0, 'max': 42521626.99999999, 'avg': 42475226.941599995, 'sd': 27241.209816808376, 'q1': 42449590.54262534, 'q3': 42497221.0764816}}}}, {'name': 'Volume', 'display_name': 'Volume', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 67, 'nil%': 0.0}, 'type': {'type/Number': {'min': 100.0, 'max': 505000.0, 'avg': 1163.36, 'sd': 8940.207456682328, 'q1': 115.04699736770816, 'q3': 332.832005356072}}}}, {'name': 'Profit', 'display_name': 'Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2948, 'nil%': 0.0}, 'type': {'type/Number': {'min': -786.55, 'max': 487.31, 'avg': -0.180505999999997, 'sd': 26.22560362326005, 'q1': -1.3764526022426131, 'q3': 4.923162699374868}}}}, {'name': 'Storage', 'display_name': 'Storage', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 45, 'nil%': 0.0}, 'type': {'type/Number': {'min': -10.96, 'max': 0.0, 'avg': -0.033469, 'sd': 0.240667671555224, 'q1': -0.0037856438306960003, 'q3': 0.0}}}}, {'name': 'Group', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 14.0}}}}, {'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.3969}}}}, {'name': 'np', 'display_name': 'Np', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4066, 'nil%': 0.0}, 'type': {'type/Number': {'min': -139.16, 'max': 57.25, 'avg': -0.28242792240069103, 'sd': 9.423440804583393, 'q1': -0.546061979152626, 'q3': 1.926832529094026}}}}, {'name': 'swap', 'display_name': 'Swap', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 43, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1.54, 'max': 0.0, 'avg': -0.017970464765561002, 'sd': 0.07926309105865201, 'q1': -0.003031890107528, 'q3': 0.0}}}}]",,2019-02-25 09:37:44.092,"{'table.pivot_column': 'date', 'table.cell_column': 'Login'}"
False,,"{'id': 54, 'name': ""Aggelos Armenatzoglou's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 47, 'slug': 'aggelos_armenatzoglou_s_personal_collection'}",54.0,,2019-02-11 07:53:06.848,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(deals.""Time""), deals.""Login"", deals.""Order"",deals. ""Action"", deals.""Entry"", deals.""Deal"", deals.""Volume"", deals.""Profit"", deals.""Storage"",users.""Group"", deals.""Symbol"",\nCASE\nWHEN ""Symbol"" = \'Volatility 10 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'Volatility 25 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 50 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 75 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'Volatility 100 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'HF Volatility 10 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'HF Volatility 50 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'HF Volatility 100 Index\' THEN deals.""Profit""/(deals.""Volume""/10000)*0.3\nELSE 0 END AS NP,\nCASE\nWHEN ""Symbol"" = \'Volatility 10 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'Volatility 25 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 50 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'Volatility 75 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'Volatility 100 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.01\nWHEN ""Symbol"" = \'HF Volatility 10 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.1\nWHEN ""Symbol"" = \'HF Volatility 50 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.5\nWHEN ""Symbol"" = \'HF Volatility 100 Index\' THEN deals.""Storage""/(deals.""Volume""/10000)*0.3\nELSE 0 END AS Swap\nfrom mt5_deals_2019 as deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nwhere  users.""Group"" like \'%costarica%\'\nand ""Action"" IN (0,1)\nand ""Entry"" IN (1,3)\n--and not ((""Entry"" = 0) and (""Action"" in (0,1)))\nand date(deals.""Time"") >= \'2019-01-01\'\n--and date(deals.""Time"") < \'2018-12-16\'\n\nand ((deals.""Symbol"" like \'Volatility%\') OR (deals.""Symbol"" like \'HF Volatility%\') )\n\norder by date(deals.""Time"") ASC'}}",,table,,False,False,356,,Profit per deal,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 50, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-02-19T00:00:00.000Z'}}}}, {'name': 'Login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5338, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1591.0, 'max': 184187.0, 'avg': 123512.05432128898, 'sd': 47046.171672026256, 'q1': 94890.09725845416, 'q3': 159347.37405095738}}}}, {'name': 'Order', 'display_name': 'Order', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1045975, 'nil%': 0.0}, 'type': {'type/Number': {'min': 48641852.0, 'max': 54224426.0, 'avg': 51309617.8507862, 'sd': 1596072.8516811759, 'q1': 49880640.7129638, 'q3': 52699261.21186284}}}}, {'name': 'Action', 'display_name': 'Action', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1.0, 'avg': 0.49786281585693304, 'sd': 0.499995670839647, 'q1': 0.0, 'q3': 0.9978536613059201}}}}, {'name': 'Entry', 'display_name': 'Entry', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 3.0, 'avg': 1.020839691162109, 'sd': 0.203088968018715, 'q1': 1.0, 'q3': 1.6069095226210952}}}}, {'name': 'Deal', 'display_name': 'Deal', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1044955, 'nil%': 0.0}, 'type': {'type/Number': {'min': 42428027.0, 'max': 48103646.0, 'avg': 45130161.13177013, 'sd': 1621382.0549615745, 'q1': 43673924.27519397, 'q3': 46533919.13764465}}}}, {'name': 'Volume', 'display_name': 'Volume', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 391, 'nil%': 0.0}, 'type': {'type/Number': {'min': 100.0, 'max': 1000000.0, 'avg': 2461.3924026489217, 'sd': 12915.018808612715, 'q1': 298.4073654617671, 'q3': 2513.1331165872366}}}}, {'name': 'Profit', 'display_name': 'Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30642, 'nil%': 0.0}, 'type': {'type/Number': {'min': -18493.38, 'max': 13450.77, 'avg': -0.13550399780223502, 'sd': 59.16551216439849, 'q1': -52.93064351519374, 'q3': 32.30412758264938}}}}, {'name': 'Storage', 'display_name': 'Storage', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1173, 'nil%': 0.0}, 'type': {'type/Number': {'min': -344.98, 'max': 0.0, 'avg': -0.059569292068481, 'sd': 1.284867084980631, 'q1': -0.36995852174403304, 'q3': -0.012725344823006001}}}}, {'name': 'Group', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 14.0}}}}, {'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.61625576019287}}}}, {'name': 'np', 'display_name': 'Np', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 88566, 'nil%': 0.0}, 'type': {'type/Number': {'min': -488.66, 'max': 267.07, 'avg': -0.01571160266231, 'sd': 10.831074898254492, 'q1': -3.158870102122337, 'q3': 2.102950302689462}}}}, {'name': 'swap', 'display_name': 'Swap', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2183, 'nil%': 0.0}, 'type': {'type/Number': {'min': -36.17, 'max': 0.0, 'avg': -0.020974260011163003, 'sd': 0.18903506315652702, 'q1': -0.042775523466199006, 'q3': -0.0007057330918982909}}}}]",,2019-02-25 08:35:13.143,"{'table.pivot_column': 'Symbol', 'table.cell_column': 'Login'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-11 06:22:21.045,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select tmp2.source, tmp.* from\n(\nselect\n  fmb.id as fmb_id,\n  ta.client_loginid,\n  purchase_time,\n  underlying_symbol,\n  round(payout_price*data_collection.exchangetousd_rate(currency_code, purchase_time),2) as ""payout_usd"",\n  round(buy_price*data_collection.exchangetousd_rate(currency_code, purchase_time),2) as ""buy_usd"",\n  round(sell_price*data_collection.exchangetousd_rate(currency_code, purchase_time),2) as ""sell_usd"",\n  start_time,\n  expiry_time,\n  remark,\n  short_code,\n  tick_count,\n  currency_code,\n  data_collection.exchangetousd_rate(currency_code, purchase_time) as ""Exchange_Rate""\nfrom bet.financial_market_bet fmb left join transaction.account ta\non ta.id=fmb.account_id\nwhere purchase_time >= current_date + interval \'-7d\' --\'2019-03-27\'\nand purchase_time < current_date --\'2019-03-28\'\n--and buy_price*data_collection.exchangetousd_rate(currency_code, purchase_time) >= 100.0\n) tmp left join \n(\nselect * from\ntransaction.transaction\nwhere action_type=\'buy\'\nand transaction_time >= current_date + interval \'-7d\' + interval \'-10m\'\nand transaction_time < current_date\n) tmp2\n\non tmp.fmb_id=tmp2.financial_market_bet_id\nlimit 10'}}",to be renamed,table,,False,False,947,,q1,,native,,"[{'name': 'source', 'display_name': 'Source', 'base_type': 'type/Integer', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0}, 'type': {'type/Number': {'min': 1, 'max': 15481, 'avg': 7931.9, 'sd': 7877.102871967304, 'q1': 11, 'q3': 15438}}}}, {'name': 'fmb_id', 'display_name': 'Fmb ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/Number': {'min': 15823253981, 'max': 15823254181, 'avg': 15823254075, 'sd': 66.69999167083073, 'q1': 15823254021, 'q3': 15823254121}}}}, {'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 8}}}}, {'name': 'purchase_time', 'display_name': 'Purchase Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-04-01T00:00:00.000Z', 'latest': '2019-04-01T00:00:02.000Z'}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 4.9}}}}, {'name': 'payout_usd', 'display_name': 'Payout Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/Number': {'min': 0.37, 'max': 38.84, 'avg': 7.3870000000000005, 'sd': 12.425581184708337, 'q1': 0.66, 'q3': 5.05}}}}, {'name': 'buy_usd', 'display_name': 'Buy Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0}, 'type': {'type/Number': {'min': 0.35000000000000003, 'max': 20, 'avg': 3.85, 'sd': 6.370227625446362, 'q1': 0.5, 'q3': 2.6}}}}, {'name': 'sell_usd', 'display_name': 'Sell Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 38.84, 'avg': 4.429, 'sd': 12.13624639938835, 'q1': 0, 'q3': 1.17}}}}, {'name': 'start_time', 'display_name': 'Start Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-04-01T00:00:00.000Z', 'latest': '2019-04-01T00:00:02.000Z'}}}}, {'name': 'expiry_time', 'display_name': 'Expiry Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-04-01T00:00:02.000Z', 'latest': '2019-04-01T01:00:01.000Z'}}}}, {'name': 'remark', 'display_name': 'Remark', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 295.4}}}}, {'name': 'short_code', 'display_name': 'Short Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 40.9}}}}, {'name': 'tick_count', 'display_name': 'Tick Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.5}, 'type': {'type/Number': {'min': 1, 'max': 8, 'avg': 4.8, 'sd': 2.4899799195977472, 'q1': 3, 'q3': 6.5}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 3}}}}, {'name': 'Exchange_Rate', 'display_name': 'Exchange Rate', 'base_type': 'type/Decimal', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/Number': {'min': 1, 'max': 4167.55, 'avg': 834.3100000000001, 'sd': 1756.7717313299415, 'q1': 1, 'q3': 2299.2580359846147}}}}]",,2019-04-11 06:22:21.045,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'source'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:28:47.488,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select t.id,\n  a.client_loginid, \n  b.buy_price, \n  b.sell_price,\n  b.start_time,\n  b.purchase_time, \n  b.sell_time, \n  b.expiry_time, \n  a.currency_code, \n  b.payout_price, \n  b.short_code,\n  b.bet_type,\n  b.underlying_symbol\nfrom transaction.transaction t, \n  bet.financial_market_bet b, \n  transaction.account a \nwhere t.financial_market_bet_id = b.id \n  and t.account_id = a.id  \n  \n  and \n  \n  ((b.purchase_time > '2016-07-15 00:00:00' \n  and (b.purchase_time < '2016-07-15 23:59:59')) or\n  \n  (b.purchase_time > '2016-08-10 00:00:00' \n  and (b.purchase_time < '2016-08-10 23:59:59')) or\n  \n  (b.purchase_time > '2016-09-16 00:00:00' \n  and (b.purchase_time < '2016-09-16 23:59:59')) or\n  \n  (b.purchase_time > '2016-09-21 00:00:00' \n  and (b.purchase_time < '2016-09-21 23:59:59')) or\n  \n  (b.purchase_time > '2016-10-07 00:00:00' \n  and (b.purchase_time < '2016-10-07 23:59:59')) or\n  \n  (b.purchase_time > '2016-11-02 00:00:00' \n  and (b.purchase_time < '2016-11-02 23:59:59')) or\n  \n  (b.purchase_time > '2016-11-22 00:00:00' \n  and (b.purchase_time < '2016-11-22 23:59:59')) or\n  \n  (b.purchase_time > '2016-12-22 00:00:00' \n  and (b.purchase_time < '2016-12-22 23:59:59')) or\n  \n  (b.purchase_time > '2016-07-01 00:00:00' \n  and (b.purchase_time < '2016-07-01 23:59:59')) or\n  \n  (b.purchase_time > '2016-09-02 00:00:00' \n  and (b.purchase_time < '2016-09-02 23:59:59')) or\n  \n  (b.purchase_time > '2016-10-07 00:00:00' \n  and (b.purchase_time < '2016-10-07 23:59:59')) or\n  \n  (b.purchase_time > '2016-11-10 00:00:00' \n  and (b.purchase_time < '2016-11-10 23:59:59')) or\n  \n  (b.purchase_time > '2016-11-23 00:00:00' \n  and (b.purchase_time < '2016-11-23 23:59:59')) or\n  \n  (b.purchase_time > '2016-12-23 00:00:00' \n  and (b.purchase_time < '2016-12-23 23:59:59')))\n  \n  and b.underlying_symbol in ('frxUSDJPY', 'frxEURUSD')\n  and (DATE_PART('day', expiry_time::timestamp - start_time::timestamp) * 24 * 60 + DATE_PART('hour', expiry_time::timestamp - start_time::timestamp) * 60 +DATE_PART('minute', expiry_time::timestamp - start_time::timestamp)) \n  >= 24*60  --minutes\n  and t.action_type ='buy' \n  --and b.bet_class ='higher_lower_bet' \n  --and b.short_code like '%S0P%'\n  and b.tick_count is null""}}",,table,,False,False,655,,Quant - Client Contracts,,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'client_loginid', 'display_name': 'Client Login ID', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 302, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.932985204525674}}}}, {'name': 'buy_price', 'display_name': 'Buy Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 353, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.5, 'max': 7000.0, 'avg': 41.85283724978242, 'sd': 369.63398384251815, 'q1': 1.103826602438815, 'q3': 7.248023595576221}}}}, {'name': 'sell_price', 'display_name': 'Sell Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 321, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 7786.62, 'avg': 53.328798955613586, 'sd': 368.22538834568155, 'q1': 0.11865594326843501, 'q3': 5.194182584387727}}}}, {'name': 'start_time', 'display_name': 'Start Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1147, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2016-07-01T04:32:48.000Z', 'latest': '2016-12-23T17:59:20.000Z'}}}}, {'name': 'purchase_time', 'display_name': 'Purchase Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1147, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2016-07-01T04:32:48.000Z', 'latest': '2016-12-23T17:59:20.000Z'}}}}, {'name': 'sell_time', 'display_name': 'Sell Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 654, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2016-07-01T07:46:04.000Z', 'latest': '2017-05-16T14:04:51.000Z'}}}}, {'name': 'expiry_time', 'display_name': 'Expiry Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 102, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2016-07-04T23:59:59.000Z', 'latest': '2017-10-26T23:59:59.000Z'}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'payout_price', 'display_name': 'Pay Out Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 645, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.54, 'max': 8004.19, 'avg': 81.81119234116623, 'sd': 442.96829201103924, 'q1': 3.80693525250841, 'q3': 24.732069945212004}}}}, {'name': 'short_code', 'display_name': 'Short Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1149, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 53.82680591818973}}}}, {'name': 'bet_type', 'display_name': 'Bet Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.871192341166232}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.0}}}}]",,2019-03-22 03:28:47.488,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:29:48.703,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select t.id,\n  a.client_loginid, \n  b.buy_price, \n  b.sell_price,\n  b.start_time,\n  b.purchase_time, \n  b.sell_time, \n  b.expiry_time, \n  a.currency_code, \n  b.payout_price, \n  b.short_code,\n  b.bet_type,\n  b.underlying_symbol,\n  c.residence\nfrom transaction.transaction t, \n  bet.financial_market_bet b, \n  transaction.account a,\n  betonmarkets.client c\nwhere t.financial_market_bet_id = b.id\n  and c.loginid=a.client_loginid\n  and t.account_id = a.id  \n  \n  and b.purchase_time > '2016-06-15 00:00:00' \n  and b.purchase_time < '2016-12-31 23:59:59'\n  \n  and b.underlying_symbol like 'frx%'\n  and b.expiry_time - b.start_time < '10m'::interval\n\n  and c.residence = 'cn'\n  and b.payout_price > 10\n  --and b.bet_class ='higher_lower_bet' \n  --and b.short_code like '%S0P%'\n  --and b.tick_count is null\n""}}",,table,,False,False,660,,Quant - Client Contracts_1,,native,,,,2019-03-22 03:29:48.703,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:26:54.970,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select t.id,\n  a.client_loginid, \n  b.buy_price, \n  b.sell_price,\n  b.start_time,\n  b.purchase_time, \n  b.sell_time, \n  b.expiry_time, \n  a.currency_code, \n  b.payout_price, \n  b.short_code,\n  b.bet_type,\n  b.underlying_symbol,\n  c.residence,\n  ((b.buy_price - b.sell_price)*data_collection.exchangetousd_rate(a.currency_code, b.purchase_time) ) as ""CompRevUSD""\nfrom transaction.transaction t, \n  bet.financial_market_bet b, \n  transaction.account a,\n  betonmarkets.client c\nwhere t.financial_market_bet_id = b.id\n  and c.loginid=a.client_loginid\n  and t.account_id = a.id  \n  \n  and b.purchase_time > \'2004-01-01 00:00:00\' \n  and b.purchase_time < \'2004-06-16 23:59:59\'\n  \n  --and b.underlying_symbol in (\'frxEURUSD\',\'frxUSDJPY\',\'frxGBPUSD\',\'frxAUDUSD\',\'frxUSDCAD\',\'frxUSDCHF\')\n  --and b.expiry_time - b.start_time < \'5h\'::interval\n  --and b.payout_price > 100\n  --and b.bet_class =\'higher_lower_bet\' \n  --and b.short_code like \'%S0P%\'\n  --and b.tick_count is null\n'}}",,table,,False,False,619,,"Quant - Contract Query (General, USD DER)",,native,,,,2019-03-22 03:26:54.970,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:26:45.615,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Quants > Client trades detail\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF or VR\n        'MF'::VARCHAR as broker_code,\n        \n        -- CR, MX, MLT, MF or VR\n        'MF1386'::VARCHAR as login_id,\n\n        -- Start date\n        '2016-07-03'::TIMESTAMP as start_date,\n\n        -- End date\n        '2016-09-13'::TIMESTAMP as end_date\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_client_trades_details(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT login_id FROM param)::varchar,\n    (SELECT start_date FROM param)::timestamp,\n    (SELECT end_date FROM param)::timestamp\n    );\n""}}",Quants > Client trades detail,table,,False,False,616,,Quant Client_trades_detail,,native,,,,2019-03-22 03:26:45.615,{}
False,,"{'id': 221, 'name': 'Samples and Proofs of concept', 'description': 'This collection contains samples and proofs of concept.', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'samples_and_proofs_of_concept'}",221.0,,2019-09-23 07:20:07.083,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'query': ""-- WARNING data_collection.quants_bet_variables is a HUGE table that's ONLY indexed on transaction_id \n-- please do not rely on any other WHERE clauses to test or limit your queries\n\nwith tmp as (select * from data_collection.quants_bet_variables limit 10)\n\nselect * \nfrom \n    tmp \n    left join transaction.transaction tt \n        on tt.id=tmp.transaction_id\n    left join bet.financial_market_bet fmb\n        on tt.financial_market_bet_id = fmb.id\n""}, 'type': 'native', 'database': 2}",,table,,False,False,1050,,Quants bet variables example,,native,,"[{'name': 'financial_market_bet_id', 'display_name': 'financial_market_bet_id', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 18286522721.0, 'max': 18286526181.0, 'avg': 18286524017.0, 'sd': 1426.5046636991958, 'q1': 18286522981.0, 'q3': 18286525861.0}}}}, {'name': 'theo', 'display_name': 'theo', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.7000000000000001, 'max': 4.55, 'avg': 1.5919999999999992, 'sd': 1.182453193811727, 'q1': 0.79, 'q3': 1.97}}}}, {'name': 'trade', 'display_name': 'trade', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.2}, 'type': {'type/Number': {'min': 0.72, 'max': 4.7, 'avg': 1.625, 'sd': 1.348893726619812, 'q1': 0.79, 'q3': 2.0}}}}, {'name': 'recalc', 'display_name': 'recalc', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'iv', 'display_name': 'iv', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.1, 'max': 1.0, 'avg': 0.659999999999999, 'sd': 0.338132124077753, 'q1': 0.404508497187473, 'q3': 0.967129272955332}}}}, {'name': 'win', 'display_name': 'win', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.09, 'max': 10.07, 'avg': 2.528, 'sd': 2.738141299819601, 'q1': 1.208409463487532, 'q3': 2.2}}}}, {'name': 'delta', 'display_name': 'delta', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': -2.00992434547319, 'max': 4.62741508437363, 'avg': 0.293134985647229, 'sd': 1.656425788658324, 'q1': -0.0014620792701420002, 'q3': 0.169902434352788}}}}, {'name': 'vega', 'display_name': 'vega', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': -0.050741300173028005, 'max': 4.52398654308733, 'avg': 0.44731831511339704, 'sd': 1.432483941595465, 'q1': -6.0282070600935495e-05, 'q3': 2.6958961791414196e-05}}}}, {'name': 'theta', 'display_name': 'theta', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': -40075.4043884275, 'max': 60006.6615846234, 'avg': 1992.0804447715295, 'sd': 23961.012944068894, 'q1': -53.13611369087736, 'q3': 47.52638446177762}}}}, {'name': 'gamma', 'display_name': 'gamma', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': -0.007556202003354001, 'max': 0.125526251877422, 'avg': 0.011828702398494002, 'sd': 0.040020627610887004, 'q1': -9.612959645639765e-07, 'q3': 0.0001710733902111545}}}}, {'name': 'intradaytime', 'display_name': 'intradaytime', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'div', 'display_name': 'div', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'int', 'display_name': 'int', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'base_spread', 'display_name': 'base_spread', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'news_fct', 'display_name': 'news_fct', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'mrev_fct', 'display_name': 'mrev_fct', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'mrv_ind', 'display_name': 'mrv_ind', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'fwdst_fct', 'display_name': 'fwdst_fct', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'atmf_fct', 'display_name': 'atmf_fct', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'dscrt_fct', 'display_name': 'dscrt_fct', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'spot', 'display_name': 'spot', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 306.0893, 'max': 345128.3278, 'avg': 36249.19193, 'sd': 108553.42904963072, 'q1': 306.3174, 'q3': 3152.671}}}}, {'name': 'emp', 'display_name': 'emp', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'transaction_id', 'display_name': 'transaction_id', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 36752493701.0, 'max': 36752500421.0, 'avg': 36752496057.0, 'sd': 2845.500151311033, 'q1': 36752493921.0, 'q3': 36752499541.0}}}}, {'name': 'entry_spot', 'display_name': 'entry_spot', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.8}, 'type': {'type/Number': {'min': 1324.84, 'max': 1325.58, 'avg': 1325.21, 'sd': 0.5232590180780511, 'q1': 1324.84, 'q3': 1325.58}}}}, {'name': 'entry_spot_epoch', 'display_name': 'entry_spot_epoch', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.8}, 'type': {'type/Number': {'min': 1568764728.0, 'max': 1568764742.0, 'avg': 1568764735.0, 'sd': 9.899494936611665, 'q1': 1568764728.0, 'q3': 1568764742.0}}}}, {'name': 'exit_spot', 'display_name': 'exit_spot', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.8}, 'type': {'type/Number': {'min': 1324.84, 'max': 1325.58, 'avg': 1325.21, 'sd': 0.5232590180780511, 'q1': 1324.84, 'q3': 1325.58}}}}, {'name': 'exit_spot_epoch', 'display_name': 'exit_spot_epoch', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.8}, 'type': {'type/Number': {'min': 1568764728.0, 'max': 1568764742.0, 'avg': 1568764735.0, 'sd': 9.899494936611665, 'q1': 1568764728.0, 'q3': 1568764742.0}}}}, {'name': 'price_slippage', 'display_name': 'price_slippage', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'requested_price', 'display_name': 'requested_price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.2}, 'type': {'type/Number': {'min': 0.72, 'max': 4.7, 'avg': 1.625, 'sd': 1.348893726619812, 'q1': 0.79, 'q3': 2.0}}}}, {'name': 'recomputed_price', 'display_name': 'recomputed_price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.2}, 'type': {'type/Number': {'min': 0.72, 'max': 4.7, 'avg': 1.625, 'sd': 1.348893726619812, 'q1': 0.79, 'q3': 2.0}}}}, {'name': 'trading_period_start', 'display_name': 'trading_period_start', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'iv_2', 'display_name': 'iv_2', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'pricing_spot', 'display_name': 'pricing_spot', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 306.0893, 'max': 345128.3278, 'avg': 36249.19193, 'sd': 108553.42904963072, 'q1': 306.3174, 'q3': 3152.671}}}}, {'name': 'news_adjusted_pricing_vol', 'display_name': 'news_adjusted_pricing_vol', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'long_term_prediction', 'display_name': 'long_term_prediction', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'volatility_scaling_factor', 'display_name': 'volatility_scaling_factor', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'binaryico_number_of_tokens', 'display_name': 'binaryico_number_of_tokens', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'binaryico_per_token_bid_price', 'display_name': 'binaryico_per_token_bid_price', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'binaryico_auction_status', 'display_name': 'binaryico_auction_status', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'binaryico_claim_status', 'display_name': 'binaryico_claim_status', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'binaryico_coin_address', 'display_name': 'binaryico_coin_address', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'binaryico_token_type', 'display_name': 'binaryico_token_type', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'id', 'display_name': 'id', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'account_id', 'display_name': 'account_id', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3454781.0, 'max': 15050801.0, 'avg': 12856245.0, 'sd': 3479133.1133398414, 'q1': 12619400.999999998, 'q3': 14747900.999999998}}}}, {'name': 'transaction_time', 'display_name': 'transaction_time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-17T23:58:48.381Z', 'latest': '2019-09-17T23:59:02.824Z'}}}}, {'name': 'amount', 'display_name': 'amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': -4.7, 'max': 2.2, 'avg': -0.9710000000000001, 'sd': 1.8397249190511542, 'q1': -1.75, 'q3': -0.72}}}}, {'name': 'staff_loginid', 'display_name': 'staff_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'remark', 'display_name': 'remark', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'referrer_type', 'display_name': 'referrer_type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.0}}}}, {'name': 'financial_market_bet_id_2', 'display_name': 'financial_market_bet_id_2', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 18286522721.0, 'max': 18286526181.0, 'avg': 18286524017.0, 'sd': 1426.5046636991958, 'q1': 18286522981.0, 'q3': 18286525861.0}}}}, {'name': 'payment_id', 'display_name': 'payment_id', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'action_type', 'display_name': 'action_type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.2}}}}, {'name': 'quantity', 'display_name': 'quantity', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1.0, 'avg': 1.0, 'sd': 0.0, 'q1': 1.0, 'q3': 1.0}}}}, {'name': 'balance_after', 'display_name': 'balance_after', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.3900000000000001, 'max': 1979.2, 'avg': 268.46400000000006, 'sd': 608.0069104906986, 'q1': 10.0, 'q3': 231.07}}}}, {'name': 'source', 'display_name': 'source', 'base_type': 'type/Integer', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 16244.0, 'avg': 10969.9, 'sd': 7576.235615396342, 'q1': 5838.586549935356, 'q3': 15800.591072645762}}}}, {'name': 'app_markup', 'display_name': 'app_markup', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.2}, 'type': {'type/Number': {'min': 0.0, 'max': 0.04, 'avg': 0.00875, 'sd': 0.016420805617960003, 'q1': 0.0, 'q3': 0.0213030615433}}}}, {'name': 'id_2', 'display_name': 'id_2', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 18286522721.0, 'max': 18286526181.0, 'avg': 18286524017.0, 'sd': 1426.5046636991958, 'q1': 18286522981.0, 'q3': 18286525861.0}}}}, {'name': 'purchase_time', 'display_name': 'purchase_time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-17T23:58:47.000Z', 'latest': '2019-09-17T23:59:02.000Z'}}}}, {'name': 'account_id_2', 'display_name': 'account_id_2', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3454781.0, 'max': 15050801.0, 'avg': 12856245.0, 'sd': 3479133.1133398414, 'q1': 12619400.999999998, 'q3': 14747900.999999998}}}}, {'name': 'underlying_symbol', 'display_name': 'underlying_symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.4}}}}, {'name': 'payout_price', 'display_name': 'payout_price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.09, 'max': 10.07, 'avg': 2.528, 'sd': 2.738141299819601, 'q1': 1.208409463487532, 'q3': 2.2}}}}, {'name': 'buy_price', 'display_name': 'buy_price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.72, 'max': 4.7, 'avg': 1.6, 'sd': 1.213882659531435, 'q1': 0.84, 'q3': 2.0}}}}, {'name': 'sell_price', 'display_name': 'sell_price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 3.2800000000000002, 'avg': 1.271999999999999, 'sd': 1.08790113929938, 'q1': 0.38613107093959603, 'q3': 2.15}}}}, {'name': 'start_time', 'display_name': 'start_time', 'base_type': 'type/DateTime', 'special_type': 'type/CreationTimestamp', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-17T23:58:47.000Z', 'latest': '2019-09-17T23:59:02.000Z'}}}}, {'name': 'expiry_time', 'display_name': 'expiry_time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-17T23:58:49.000Z', 'latest': '2019-09-18T00:02:01.000Z'}}}}, {'name': 'settlement_time', 'display_name': 'settlement_time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-17T23:58:49.000Z', 'latest': '2019-09-18T00:02:01.000Z'}}}}, {'name': 'expiry_daily', 'display_name': 'expiry_daily', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'is_expired', 'display_name': 'is_expired', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'is_sold', 'display_name': 'is_sold', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'bet_class', 'display_name': 'bet_class', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 11.1}}}}, {'name': 'bet_type', 'display_name': 'bet_type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.3}}}}, {'name': 'remark_2', 'display_name': 'remark_2', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 289.2}}}}, {'name': 'short_code', 'display_name': 'short_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 38.0}}}}, {'name': 'sell_time', 'display_name': 'sell_time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-17T23:58:48.000Z', 'latest': '2019-09-18T00:02:03.000Z'}}}}, {'name': 'fixed_expiry', 'display_name': 'fixed_expiry', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'tick_count', 'display_name': 'tick_count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.1}, 'type': {'type/Number': {'min': 1.0, 'max': 5.0, 'avg': 2.0, 'sd': 1.7320508075688772, 'q1': 1.0, 'q3': 2.6742346141747673}}}}]",,2019-09-23 07:28:03.525,"{'table.pivot_column': 'recalc', 'table.cell_column': 'financial_market_bet_id'}"
False,,"{'id': 196, 'name': 'Quants', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'quants'}",196.0,,2019-04-09 09:44:43.205,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Quants > Client trades detail\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF or VR\n        'CR'::VARCHAR as broker_code,\n        \n        -- CR, MX, MLT, MF or VR\n        'CR299974'::VARCHAR as login_id,\n\n        -- Start date\n        '2015-07-03'::TIMESTAMP as start_date,\n\n        -- End date\n        '2015-07-07'::TIMESTAMP as end_date\n)\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_client_trades_details(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT login_id FROM param)::varchar,\n    (SELECT start_date FROM param)::timestamp,\n    (SELECT end_date FROM param)::timestamp\n    );\n""}}",Quants > Client trades detail,table,,False,False,936,,Quants Client trades detail,,native,,,,2019-04-09 09:44:43.205,{}
False,,"{'id': 196, 'name': 'Quants', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'quants'}",196.0,,2019-04-09 09:44:46.642,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Quants > Get news since date\nWITH params AS (SELECT\n  \'2017-08-17\'::DATE AS start_date,\n  \n  -- specify one or symbol/s like this ""JPY"",""AUD""\n  -- -or- just remove any symbols to get all symbols \'{  }\'...\n  \'{ ""JPY"" }\'::VARCHAR[] AS symbols\n),\n\n\n\n\n-- no adjustments needed below\n\n\nSELECT t.source,\n       t.event_name,\n       t.symbol,\n       t.release_date::VARCHAR AS release_epoch,\n       to_timestamp(t.release_date::bigint)::TIMESTAMP::TEXT AS release_date,\n       t.id,\n       t.recorded_date::VARCHAR AS recorded_epoch,\n       to_timestamp(t.recorded_date::bigint)::TIMESTAMP::TEXT AS recorded_date\n  FROM params p\n CROSS JOIN chronicle c\n CROSS JOIN json_populate_recordset(null::chronicle_economic_event, c.value::json#>\'{events}\') AS t\n WHERE c.category=\'economic_events\'\n   AND c.""timestamp"" >= p.start_date\n   AND array_length(p.symbols, 1) IS NULL\n\nUNION ALL\n\nSELECT t.source,\n       t.event_name,\n       t.symbol,\n       t.release_date::VARCHAR AS release_epoch,\n       to_timestamp(t.release_date::bigint)::TIMESTAMP::TEXT AS release_date,\n       t.id,\n       t.recorded_date::VARCHAR AS recorded_epoch,\n       to_timestamp(t.recorded_date::bigint)::TIMESTAMP::TEXT AS recorded_date\n  FROM params p\n CROSS JOIN chronicle c\n CROSS JOIN json_populate_recordset(null::chronicle_economic_event, c.value::json#>\'{events}\') AS t\n WHERE c.category=\'economic_events\'\n   AND c.""timestamp"" >= p.start_date\n   AND t.symbol = ANY(p.symbols);\n'}}",Quants > Get news since date,table,,False,False,937,,Quants Get news since date,,native,,,,2019-04-09 09:44:46.642,{}
False,,"{'id': 196, 'name': 'Quants', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'quants'}",196.0,,2019-04-09 09:44:39.790,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Search login history by client_loginid or binary_user_id for history beginning June 2015\n-- Quants -> login history\n-- Below you can use one or the other of the parameters. I would not suggest using none as that will give you all 3M+ rows ;-)\n-- If you use just the binary_user_id, you will get all logins across all client_loginids for that binary account\n-- If you use just the client_loginid I think you know what you will get ;-)\n-- Don't use both as it will be too easy to end up with an empty result\n-- The unused one should be an uncommented NULL. Just switch your comments (--) around to use either one and leave the other NULL\n-- If you get an error, make sure two and two only of the parameter lines are uncommented.\nWITH params AS (SELECT\n  --4086586::BIGINT AS binary_user_id,\n  NULL::BIGINT AS binary_user_id,\n  --'CR478849'::VARCHAR AS client_loginid\n  NULL::VARCHAR AS client_loginid\n)\n\n-- Don't change any code below here\n\nSELECT dbl.*\nFROM params\nCROSS JOIN LATERAL dblink('users', $$\nSELECT\n  loginid,\n  binary_user_id,\n  action,\n  history_date,\n  environment,\n  successful\nFROM users.login_history_by_loginid_vw\nWHERE TRUE\n$$|| CASE WHEN params.binary_user_id IS NOT NULL THEN ('AND binary_user_id = '|| quote_literal(params.binary_user_id))::TEXT ELSE '' END ||$$\n$$|| CASE WHEN params.client_loginid IS NOT NULL THEN ('AND loginid = '|| quote_literal(params.client_loginid))::TEXT ELSE '' END ||$$\nORDER BY history_date DESC$$)\ndbl ( loginid TEXT,\n      binary_user_id BIGINT,\n      action TEXT,\n      history_date TEXT,\n      environment TEXT,\n      successful BOOLEAN)""}}",Search login history by client_loginid or binary_user_id for history beginning June 2015,table,,False,False,935,,Quants login history,,native,,,,2019-04-09 09:44:39.790,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:26:45.599,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Query for volatility surfaces for a specific underlying at a specific time period\nSELECT\n  *, timestamp at time zone 'UTC' as ts\n FROM\n  chronicle \n WHERE\n  category='volatility_surfaces' \n  AND name='frxEURUSD' \n  AND timestamp at time zone 'UTC' > '2016-02-16T10:00:00'\n  AND timestamp at time zone 'UTC' < '2016-02-16T15:00:00'\n ORDER BY\n  timestamp DESC""}}",Query for volatility surfaces for a specific underlying at a specific time period,table,,False,False,615,,Query historical volatility surface,,native,,,,2019-03-22 03:26:45.599,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-03 03:57:54.186,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select payment_type_code, count(*), sum(round(amount,2)) as total_pos_amount from payment.payment\nwhere substring(payment_type_code,1,10) <>'adjustment'\nand payment_gateway_code <> 'legacy_payment'\nand amount > 0\nand payment_time >= '2018-01-01'\ngroup by 1\norder by 2 desc\n/*\nand payment_time >= '2017-01-01'\nand substring(remark,1,7) <> 'Voucher'\nand substring(remark,1,8) <> 'Transfer'\nand substring(remark,1,16) <> 'Account transfer'\nand substring(remark,1,8) <> 'Incoming'\nand substring(remark,1,7) <> 'PA USDT'\n*/""}}",,table,,False,False,690,,Question for understanding payments,,native,,"[{'name': 'payment_type_code', 'display_name': 'Payment Type Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 14.3}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/Number': {'min': 31, 'max': 1327721, 'avg': 184310.2, 'sd': 421971.0100779173, 'q1': 499, 'q3': 53681}}}}, {'name': 'total_pos_amount', 'display_name': 'Total Pos Amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0}, 'type': {'type/Number': {'min': 691.5, 'max': 138963435.57, 'avg': 20023546.506, 'sd': 43446352.140399955, 'q1': 38584.4, 'q3': 12868757.86}}}}]",,2019-04-03 06:12:07.630,"{'table.pivot_column': 'payment_gateway_code', 'table.cell_column': 'id', 'table.column_widths': [162, 159, 172]}"
False,,,,,2018-11-30 12:12:29.733,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select *, loss*100/turnover as ""percentage loss"" from bet.daily_aggregates\nWHERE CAST(""bet"".""daily_aggregates"".""day"" AS date) BETWEEN CAST((NOW() + INTERVAL \'-30 day\') AS date)\n   AND CAST((NOW() + INTERVAL \'-1 day\') AS date)\norder by abs(loss) desc, ""day"" desc, ""percentage loss"" desc\nlimit 20\n'}}",,table,,False,False,59,,recent biggest winners and losers,,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 16, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-04T00:00:00.000Z', 'latest': '2019-03-03T00:00:00.000Z'}}}}, {'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5349981.0, 'max': 11603721.0, 'avg': 8800092.0, 'sd': 2335530.450641274, 'q1': 6754942.925677307, 'q3': 10933134.5554932}}}}, {'name': 'turnover', 'display_name': 'Turnover', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 15953.0, 'max': 499182.31, 'avg': 133801.648, 'sd': 155846.47935260183, 'q1': 41833.07, 'q3': 119157.95}}}}, {'name': 'loss', 'display_name': 'Loss', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': -34697.08, 'max': 56666.27, 'avg': 6127.152500000004, 'sd': 22132.879359473052, 'q1': -16265.815, 'q3': 17755.864999999998}}}}, {'name': 'percentage loss', 'display_name': 'Percentage Loss', 'base_type': 'type/Decimal', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': -54.74301116130488, 'max': 98.4303265843415, 'avg': 7.268340129344449, 'sd': 36.01147606101597, 'q1': -21.543072917085667, 'q3': 28.085271723823368}}}}]",,2019-03-04 05:47:21.649,"{'table.column_widths': [None, None, 116, 129, 183], 'table.pivot_column': 'day', 'table.cell_column': 'account_id'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-27 09:09:27.884,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\ns.""underlying_symbol"",\nsum(""total_buy_USD"") as ""total_buy_USD"",\nsum(""contract_count"") as ""contract_count""\nfrom \n(\nselect \nt.""underlying_symbol"",\ndata_collection.exchangetousd_rate(t.""currency_code"", t.""purch_time"")*t.""total_buy"" as ""total_buy_USD"",\nt.""contract_count""\nfrom\n(\nselect\n  ta.currency_code,\n  fmb.underlying_symbol,\n  sum(fmb.buy_price) as ""total_buy"",\n  count(1) as ""contract_count"",\n  min(fmb.purchase_time) as ""purch_time""\nfrom bet.financial_market_bet fmb left join transaction.account ta\non ta.id=fmb.account_id\nwhere purchase_time >= now() + interval \'-5 minute\' \ngroup by 1,2\norder by 3 desc\n) t\n) s\nwhere substr(underlying_symbol,1,1) != {{exclusion_string}}\ngroup by 1\norder by 2 desc\nlimit 20', 'template-tags': {'exclusion_string': {'id': '37c23732-618b-e309-7fca-cb8bafaa068a', 'name': 'exclusion_string', 'display-name': 'Exclude', 'type': 'text', 'required': True, 'default': 'R'}}}}",,bar,,False,False,134,,Recent contracts (CR),,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.666666666666666}}}}, {'name': 'total_buy_USD', 'display_name': 'Total Buy Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 17, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.355, 'max': 291.41425, 'avg': 55.05641902222222, 'sd': 74.08370101970422, 'q1': 6.3, 'q3': 99.49}}}}, {'name': 'contract_count', 'display_name': 'Contract Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 33.0, 'avg': 9.0, 'sd': 9.305279968604795, 'q1': 2.25, 'q3': 17.0}}}}]",,2019-04-08 08:57:35.836,"{'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['total_buy_USD', 'contract_count']}"
False,,,,,2018-12-27 12:38:23.156,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'inclusion_string': {'id': '37c23732-618b-e309-7fca-cb8bafaa068a', 'name': 'inclusion_string', 'display-name': 'Include', 'type': 'text', 'required': True, 'default': 'R'}}, 'query': 'select\ns.""underlying_symbol"",\nsum(""total_buy_USD"") as ""total_buy_USD"",\nsum(""contract_count"") as ""contract_count""\nfrom \n(\nselect \nt.""underlying_symbol"",\ndata_collection.exchangetousd_rate(t.""currency_code"", t.""purch_time"")*t.""total_buy"" as ""total_buy_USD"",\nt.""contract_count""\nfrom\n(\nselect\n  ta.currency_code,\n  fmb.underlying_symbol,\n  sum(fmb.buy_price) as ""total_buy"",\n  count(1) as ""contract_count"",\n  min(fmb.purchase_time) as ""purch_time""\nfrom bet.financial_market_bet fmb left join transaction.account ta\non ta.id=fmb.account_id\nwhere purchase_time >= now() + interval \'-10 minute\' \ngroup by 1,2\norder by 3 desc\n) t\n) s\nwhere substr(underlying_symbol,1,1) = {{inclusion_string}}\ngroup by 1\norder by 2 desc\nlimit 20'}, 'type': 'native', 'database': 2}",,bar,,False,False,135,,Recent contracts (CR) for a market,,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.714285714285714}}}}, {'name': 'total_buy_USD', 'display_name': 'Total Buy Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 146.9, 'max': 6340.2082644, 'avg': 2300.0266808428573, 'sd': 2255.2921848870537, 'q1': 818.3433777, 'q3': 3793.305107425}}}}, {'name': 'contract_count', 'display_name': 'Contract Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 76.0, 'max': 1603.0, 'avg': 558.7142857142857, 'sd': 547.1714278254772, 'q1': 137.25, 'q3': 838.75}}}}]",,2019-02-28 04:28:38.656,"{'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['total_buy_USD', 'contract_count']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-28 03:07:56.517,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\ns.""underlying_symbol"",\nsum(""total_buy_USD"") as ""total_buy_USD"",\nsum(""contract_count"") as ""contract_count""\nfrom \n(\nselect \nt.""underlying_symbol"",\ndata_collection.exchangetousd_rate(t.""currency_code"", t.""purch_time"")*t.""total_buy"" as ""total_buy_USD"",\nt.""contract_count""\nfrom\n(\nselect\n  ta.currency_code,\n  fmb.underlying_symbol,\n  sum(fmb.buy_price) as ""total_buy"",\n  count(1) as ""contract_count"",\n  min(fmb.purchase_time) as ""purch_time""\nfrom bet.financial_market_bet fmb left join transaction.account ta\non ta.id=fmb.account_id\nwhere purchase_time >= now() + interval \'-12 hour\' \ngroup by 1,2\norder by 3 desc\n) t\n) s\nwhere substr(underlying_symbol,1,1) = \'O\'\ngroup by 1\norder by 2 desc\nlimit 20'}}",,bar,,False,False,141,40.0,Recent contracts on OTC indices (CR),62f0aafa-2419-41c7-a5e7-534796f501f0,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.5}}}}, {'name': 'total_buy_USD', 'display_name': 'Total Buy Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.1, 'max': 52.6935808, 'avg': 12.766917316666666, 'sd': 20.418981120875905, 'q1': 1.6334731, 'q3': 16.45445}}}}, {'name': 'contract_count', 'display_name': 'Contract Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 14.0, 'avg': 3.833333333333333, 'sd': 5.115336417740935, 'q1': 1.0, 'q3': 4.0}}}}]",,2019-06-14 03:54:40.122,"{'table.pivot_column': 'underlying_symbol', 'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['total_buy_USD', 'contract_count']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-28 03:03:54.550,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\ns.""underlying_symbol"",\nsum(""total_buy_USD"") as ""total_buy_USD"",\nsum(""contract_count"") as ""contract_count""\nfrom \n(\nselect \nt.""underlying_symbol"",\ndata_collection.exchangetousd_rate(t.""currency_code"", t.""purch_time"")*t.""total_buy"" as ""total_buy_USD"",\nt.""contract_count""\nfrom\n(\nselect\n  ta.currency_code,\n  fmb.underlying_symbol,\n  sum(fmb.buy_price) as ""total_buy"",\n  count(1) as ""contract_count"",\n  min(fmb.purchase_time) as ""purch_time""\nfrom bet.financial_market_bet fmb left join transaction.account ta\non ta.id=fmb.account_id\nwhere purchase_time >= now() + interval \'-5 minute\' \ngroup by 1,2\norder by 3 desc\n) t\n) s\nwhere substr(underlying_symbol,1,1) = \'f\'\ngroup by 1\norder by 2 desc\nlimit 20'}}",,bar,,False,False,137,40.0,Recent forex contracts (CR),8f617687-d637-415d-b67a-7797ca637150,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'total_buy_USD', 'display_name': 'Total Buy Usd', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'contract_count', 'display_name': 'Contract Count', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-06-14 03:53:53.521,"{'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['total_buy_USD', 'contract_count']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-28 03:05:17.017,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\ns.""underlying_symbol"",\nsum(""total_buy_USD"") as ""total_buy_USD"",\nsum(""contract_count"") as ""contract_count""\nfrom \n(\nselect \nt.""underlying_symbol"",\ndata_collection.exchangetousd_rate(t.""currency_code"", t.""purch_time"")*t.""total_buy"" as ""total_buy_USD"",\nt.""contract_count""\nfrom\n(\nselect\n  ta.currency_code,\n  fmb.underlying_symbol,\n  sum(fmb.buy_price) as ""total_buy"",\n  count(1) as ""contract_count"",\n  min(fmb.purchase_time) as ""purch_time""\nfrom bet.financial_market_bet fmb left join transaction.account ta\non ta.id=fmb.account_id\nwhere purchase_time >= now() + interval \'-12 hour\' \ngroup by 1,2\norder by 3 desc\n) t\n) s\nwhere substr(underlying_symbol,1,1) = \'W\'\ngroup by 1\norder by 2 desc\nlimit 20'}}",,bar,,False,False,138,40.0,Recent SmartFX contracts (CR),f32e5e1e-66a7-4804-8669-f59f1750dffe,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.0}}}}, {'name': 'total_buy_USD', 'display_name': 'Total Buy Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 30.0199885, 'max': 772.0581807, 'avg': 261.85291567499996, 'sd': 350.56582220462957, 'q1': 31.7792435, 'q3': 491.92658785000003}}}}, {'name': 'contract_count', 'display_name': 'Contract Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 8.0, 'max': 403.0, 'avg': 116.0, 'sd': 191.6889842079264, 'q1': 12.5, 'q3': 219.5}}}}]",,2019-06-14 03:54:40.130,"{'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['total_buy_USD', 'contract_count']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-28 03:06:46.278,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\ns.""underlying_symbol"",\nsum(""total_buy_USD"") as ""total_buy_USD"",\nsum(""contract_count"") as ""contract_count""\nfrom \n(\nselect \nt.""underlying_symbol"",\ndata_collection.exchangetousd_rate(t.""currency_code"", t.""purch_time"")*t.""total_buy"" as ""total_buy_USD"",\nt.""contract_count""\nfrom\n(\nselect\n  ta.currency_code,\n  fmb.underlying_symbol,\n  sum(fmb.buy_price) as ""total_buy"",\n  count(1) as ""contract_count"",\n  min(fmb.purchase_time) as ""purch_time""\nfrom bet.financial_market_bet fmb left join transaction.account ta\non ta.id=fmb.account_id\nwhere purchase_time >= now() + interval \'-5 minute\' \ngroup by 1,2\norder by 3 desc\n) t\n) s\nwhere substr(underlying_symbol,1,1) = \'R\'\ngroup by 1\norder by 2 desc\nlimit 20'}}",,bar,,False,False,140,40.0,Recent Volatility Index contracts (CR),be71c691-cb9a-4649-a934-576ef6444e07,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'total_buy_USD', 'display_name': 'Total Buy Usd', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'contract_count', 'display_name': 'Contract Count', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-06-14 03:53:53.512,"{'graph.dimensions': ['underlying_symbol'], 'graph.metrics': ['total_buy_USD', 'contract_count']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-06 05:50:15.950,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'country1': {'id': 'f4118d27-1410-6e46-2563-09fcbff2632b', 'name': 'country1', 'display-name': 'Country1', 'type': 'text', 'required': True, 'default': 'in'}, 'country2': {'id': '18843c2a-9840-421d-85b1-48aaed05f015', 'name': 'country2', 'display-name': 'Country2', 'type': 'text', 'required': True, 'default': 'ru'}, 'country3': {'id': 'adc9aa30-36f9-d56c-3c93-7b69f18c6a6a', 'name': 'country3', 'display-name': 'Country3', 'type': 'text', 'required': True, 'default': 'ua'}}, 'query': 'select \nsss.residence, sss.client_loginid, sum(sss.total_buy) as ""total_buy"", sum(sss.company_revenue) as ""company_revenue""\nfrom\n(\n    select bc.residence, ttt.* from\n    (\n        select \n        a.client_loginid,\n        tmp.account_id,\n        tmp.market,\n        round(tmp.total_buy*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""total_buy"",\n        round(tmp.company_revenue*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""company_revenue""\n        from\n            (\n            select \n                account_id,\n                bm.market,\n                cast(purchase_time as date) as ""day"", \n                sum(buy_price) as ""total_buy"",\n                sum((buy_price - sell_price)) as ""company_revenue""\n            from bet.financial_market_bet fmb\n            left join bet.market bm\n            on bm.symbol=fmb.underlying_symbol\n            where purchase_time >= now() + INTERVAL \'-4 hour\'\n            --and market=\'forex\'    \n            and is_sold = TRUE\n            group by 1,2,3 \n        ) tmp\n            left join transaction.account a\n            on tmp.account_id=a.id\n    ) ttt left join betonmarkets.client bc\n    on bc.loginid=ttt.client_loginid\n) sss\nwhere residence in ({{country1}}, {{country2}}, {{country3}})\nand abs(company_revenue) > 50\ngroup by 1,2\norder by 4, 3\n'}, 'type': 'native', 'database': 2}",,table,,False,False,71,,Recent winners and losers from specified countries (CR),,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'client_loginid', 'display_name': 'Client Login ID', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total_buy', 'display_name': 'Total Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Number': {'min': 90.0, 'max': 4548.94, 'avg': 981.3933333333331, 'sd': 1233.678987281783, 'q1': 179.9, 'q3': 1306.0}}}}, {'name': 'company_revenue', 'display_name': 'Company Revenue', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Number': {'min': -382.89, 'max': 120.7, 'avg': -79.49333333333333, 'sd': 169.6837508872064, 'q1': -217.205, 'q3': 67.53}}}}]",,2019-02-21 06:19:26.372,"{'table.pivot_column': 'residence', 'table.cell_column': 'total_buy'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:19.096,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select count(*)\nfrom data_collection.rejected_trades\nwhere action_type = 'buy' and\nshortcode like '%EURUSD%' and\ndate(trade_time) >= '2017-10-01' and\ndate(trade_time) <= '2017-12-31' \nand reason = 'SLIPPAGE'\n\n""}}",,table,,False,False,626,,Rejected Buy (Slippage),,native,,"[{'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4669.0, 'max': 4669.0, 'avg': 4669.0, 'sd': None, 'q1': 4669.0, 'q3': 4669.0}}}}]",,2019-03-22 07:34:10.157,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:12.046,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Generate a report of all the Users in MT5\n\nSelect *\nFrom mt5_users\nWhere ""Login"" = 5478;\n\nSelect *\nFrom mt5_users\nWhere ""Login"" IN (5478, 5565);'}}",Generate a report of all the Users in MT5,table,,False,False,622,,Report for MT5 Users Rights,,native,,,,2019-03-22 03:27:12.046,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-19 09:13:22.040,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select d.""day"", d.""residence"", round(d.""turnover_USD"",2) as ""turnover_USD"", round(d.""profit_USD"",2) as ""profit_USD"", ""client_count""\nfrom\n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD"", count(distinct ""client_loginid"") as ""client_count""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-91 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\n) d right join \n(\nselect ""day"", ""residence"", sum(""turnover_USD"") as ""turnover_USD"", sum(""profit_USD"") as ""profit_USD""\nfrom\n(\nselect\n  da.""day"",\n  ta.client_loginid,\n  da.turnover*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""turnover_USD"",\n  da.loss*data_collection.exchangetousd_rate(ta.currency_code, da.""day"") as ""profit_USD""\nfrom\n  bet.daily_aggregates da left join transaction.account ta\non\n  ta.id=da.account_id\n) x left join betonmarkets.client bc on\nx.client_loginid=bc.loginid\nwhere ""day"" < now()::timestamp::date\nand ""day"" >= (now() + interval \'-1 day\')::timestamp::date\n--and residence in \ngroup by 1,2\norder by 1 desc, 3 desc\nlimit {{country_count}}\n) e\non e.residence=d.residence\norder by 1 desc, 3 desc\n\n', 'template-tags': {'country_count': {'id': '5716ea3c-e9ad-83bf-b457-85e6087b6d8d', 'name': 'country_count', 'display-name': 'How many countries?', 'type': 'number', 'required': True, 'default': '5'}}}}",,line,,False,False,120,,revenue 90 days,,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 35, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-17T00:00:00.000Z', 'latest': '2019-02-20T00:00:00.000Z'}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'turnover_USD', 'display_name': 'Turnover Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 175, 'nil%': 0.0}, 'type': {'type/Number': {'min': 55654.72, 'max': 2124765.22, 'avg': 497302.4569142858, 'sd': 544461.2559583797, 'q1': 108407.61521818733, 'q3': 720539.7371252462}}}}, {'name': 'profit_USD', 'display_name': 'Profit Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 175, 'nil%': 0.0}, 'type': {'type/Number': {'min': -13042.08, 'max': 102015.43, 'avg': 14280.504742857143, 'sd': 20971.222734034367, 'q1': 1086.4878174156333, 'q3': 19999.58067354543}}}}, {'name': 'client_count', 'display_name': 'Client Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 156, 'nil%': 0.0}, 'type': {'type/Number': {'min': 105.0, 'max': 2594.0, 'avg': 881.5257142857142, 'sd': 800.5544145747549, 'q1': 269.06902714755984, 'q3': 914.6189500386223}}}}]",,2019-02-21 06:26:05.323,"{'graph.metrics': ['profit_USD'], 'graph.dimensions': ['day', 'residence'], 'graph.y_axis.scale': 'pow', 'series_settings': {'id': {'line.interpolate': 'cardinal'}, 'br': {'line.interpolate': 'cardinal'}, 'ru': {'line.interpolate': 'cardinal'}, 'vn': {'line.interpolate': 'cardinal'}, 'th': {'line.interpolate': 'cardinal'}}, 'graph.show_goal': True}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:19.363,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""WITH param(uk_or_not_uk) AS (VALUES (\n    true  -- true or false\n))\n\n-- dont change below\n, users as (\n    select * from dblink('users',\n        $$\n        select l1.loginid as eu_loginid, l2.loginid as cr_loginid\n          from users.loginid l1\n          join users.loginid l2 on l1.binary_user_id=l2.binary_user_id\n         where l2.loginid ~ '^CR'\n           and substring(l1.loginid from '^\\D+') in ('MF', 'MLT', 'MX')\n        $$\n    ) t(eu_loginid text, cr_loginid text)\n)\nselect t.* \n  from param p\n cross join lateral dblink('cr',\n         $$\n           select c.loginid, c.residence, c.date_joined\n             from betonmarkets.client c\n             join betonmarkets.client_status s on s.client_loginid=c.loginid\n            where s.status_code='ico_only'\n              and (residence='gb') is $$ || p.uk_or_not_uk || $$ order by 2,1\n         $$) t(loginid text, residence text, date_joined timestamp)\n  left join users u on t.loginid=u.cr_loginid\n where u.eu_loginid is null\n""}}",,table,,False,False,631,,"Saori CR ico-only accounts without corresponding MX, MF or MLT account",,native,,,,2019-03-22 03:27:19.363,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:19.212,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select *\n  from dblink(\'users\', \n         $$\n           select l1.loginid, l2.loginid\n             from users.loginid l1 join users.loginid l2 on l1.binary_user_id=l2.binary_user_id\n            where substring(l1.loginid from \'^\\D+\') in (\'MX\', \'MF\', \'MLT\')\n              and substring(l2.loginid from \'^\\D+\')=\'CR\'\n         $$) t(""EU loginid"" TEXT, ""CR loginid"" TEXT);'}}",,table,,False,False,628,,Saori EU-CR loginids,,native,,,,2019-03-22 03:27:19.212,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-07-09 02:52:01.457,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    purchase_minute,\n    market,\n    sum(count_buy) as count_buy\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_buy\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2\ngroup by 1,2""}}",,scatter,,False,False,1010,,"scatter plot (nonlinear y-scale), contract count by the minute",,native,,"[{'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 303, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T05:02:00.000Z'}}}}, {'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.905343511450382}}}}, {'name': 'count_buy', 'display_name': 'count_buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 180, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 615.0, 'avg': 239.44732824427481, 'sd': 251.47633580529217, 'q1': 5.9994002915434965, 'q3': 505.244898488915}}}}]",,2019-10-14 05:03:14.256,"{'graph.dimensions': ['purchase_minute', 'market'], 'graph.metrics': ['count_buy'], 'graph.y_axis.scale': 'pow'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-07-09 02:49:39.564,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    purchase_minute,\n    market,\n    sum(count_buy) as count_buy\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_buy\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2\ngroup by 1,2""}}",,scatter,,False,False,1009,,"scatter plot of contract count, by the minute",,native,,"[{'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 303, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T05:02:00.000Z'}}}}, {'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.905343511450382}}}}, {'name': 'count_buy', 'display_name': 'count_buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 180, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 615.0, 'avg': 239.44732824427481, 'sd': 251.47633580529217, 'q1': 5.9994002915434965, 'q3': 505.244898488915}}}}]",,2019-10-14 05:03:14.215,"{'graph.dimensions': ['purchase_minute', 'market'], 'graph.metrics': ['count_buy']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-01-18 09:16:27.059,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    ""residence"",\n    sum(""amount_deposit_USD"") as ""deposits_USD"", \n    sum(""count_deposit"") as ""count_deposits"",\n    count(distinct ""binary_user_id"") as ""count_clients""\nfrom\n(\n    select\n    distinct\n      tmp4.*,\n      bc.place_of_birth,\n      bc.myaffiliates_token,\n      bc.residence,\n      bc.citizen\n    from\n    (\n      select\n        binary_user_id,\n        sum(tmp3.""amount_deposit_USD"") as ""amount_deposit_USD"",\n        sum(tmp3.""count_deposit"") as ""count_deposit"",\n        string_agg(distinct tmp3.""currency_code"", \', \') as ""currencies"",\n        string_agg(distinct tmp3.""client_loginid"", \', \') as ""logins""\n      from\n      (\n        select\n          tmp2.account_id,\n          tmp2.source,\n          tmp2.amount_deposit*data_collection.exchangetousd_rate(ta.""currency_code"", now()::date) as ""amount_deposit_USD"",\n          tmp2.count_deposit,\n          ta.client_loginid,\n          ta.currency_code,\n          ta.binary_user_id\n        from\n        (\n          select \n            account_id,\n            source,\n            sum(amount) as ""amount_deposit"",\n            count(amount) as ""count_deposit""\n          from\n          (\n            select id, account_id, amount, source \n            from transaction.transaction\n            where action_type = \'deposit\'\n            and transaction_time >= (now() + interval \'-1d\')::date\n            and transaction_time < now()::date\n            \n            except \n            \n            select transaction_id, account_id, amount, source \n            from transaction.firsts\n            where action_type = \'deposit\'\n            and transaction_time >= (now() + interval \'-1d\')::date\n            and transaction_time < now()::date\n          ) tmp\n          group by 1,2\n        ) tmp2 left join transaction.account ta\n        on tmp2.account_id = ta.id\n      ) tmp3\n      group by 1\n    ) tmp4 left join betonmarkets.client bc\n    on bc.binary_user_id = tmp4.binary_user_id\n) tmp5\ngroup by 1\norder by 2 desc, 3 desc, 1\nlimit 20'}}",,bar,,False,False,217,,Second (and beyond) deposit amount and count by country (CR only),,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'deposits_USD', 'display_name': 'Deposits Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 732.90638, 'max': 558067.460850414, 'avg': 37802.91666705311, 'sd': 123560.2793213292, 'q1': 2251.975, 'q3': 12212.88847687475}}}}, {'name': 'count_deposits', 'display_name': 'Count Deposits', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 3543.0, 'avg': 245.05, 'sd': 780.9001199695266, 'q1': 14.0, 'q3': 96.0}}}}, {'name': 'count_clients', 'display_name': 'Count Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1236.0, 'avg': 105.25, 'sd': 271.12104016666177, 'q1': 8.242640687119286, 'q3': 61.0}}}}]",,2019-02-21 06:25:48.879,"{'graph.dimensions': ['residence'], 'graph.metrics': ['deposits_USD', 'count_deposits', 'count_clients'], 'graph.y_axis.scale': 'pow', 'series_settings': {'Count Clients': {'axis': 'right'}, 'Count Deposits': {'axis': 'right'}, 'Deposits Usd': {'axis': 'left', 'title': 'Deposits USD'}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-02 05:54:56.847,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,3,"{'database': 3, 'type': 'native', 'native': {'query': ""select * from\n    (\n    select l.* from betonmarkets.client_authentication_method l right join\n    (\n    select client_loginid --, mx-mn, c\n    from\n        (\n        select client_loginid, max(last_modified_date) as mx, min(last_modified_date) as mn, count(1) as c \n        from betonmarkets.client_authentication_method\n        group by 1\n        ) tm\n    where c = 1\n    --order by 3 desc\n    ) r\n    on r.client_loginid=l.client_loginid\n    where l.status='pass'\n    ) ttttt inner join \n    \n    (\n    select distinct client_loginid from betonmarkets.client_status\n    except \n    select distinct client_loginid from betonmarkets.client_status\n    where status_code='age_verification'\n    ) sssss\n    \n    on sssss.client_loginid=ttttt.client_loginid\n    order by 4 desc""}}",,table,,False,False,956,37.0,Sensei B Li,1d4169f2-cdbc-4994-a6c7-d5d076dbaae8,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 17, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 6.882352941176471}}}}, {'name': 'authentication_method_code', 'display_name': 'Authentication Method Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 11}}}}, {'name': 'last_modified_date', 'display_name': 'Last Modified Date', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 17, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2011-03-22T08:50:10.000Z', 'latest': '2019-03-28T02:22:59.000Z'}}}}, {'name': 'status', 'display_name': 'Status', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 4}}}}, {'name': 'description', 'display_name': 'Description', 'base_type': 'type/Text', 'special_type': 'type/Description', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 0}}}}, {'name': 'client_loginid_2', 'display_name': 'Client Loginid 2', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 17, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 6.882352941176471}}}}]",,2019-05-02 05:55:06.863,"{'table.pivot_column': 'authentication_method_code', 'table.cell_column': 'id'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:28:07.104,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select ps, d.* from unnest('{users,cr,mf,mlt,mx,vr}'::text[]) as ps, dblink(ps, $$SELECT * FROM rmg_pgl.show_node_status(true)$$) as d(\nnode_if_name text,\nnode_if_dsn text,\nis_local_node boolean,\nlocal_conftype text,\nlocal_confname text,\nlocal_host text,\nlocal_confuser text\n)""}}",,table,,False,False,647,,show pgl node statuses,,native,,,,2019-03-22 03:28:07.104,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-31 02:00:23.500,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select count(distinct binary_user_id) from betonmarkets.client\nwhere residence={{country_code}}\nand date_joined >= {{date_since}}', 'template-tags': {'country_code': {'id': 'a32a3184-f1ca-735d-5a56-c5e9765f7af3', 'name': 'country_code', 'display-name': 'two-letter country code', 'type': 'text', 'required': True, 'default': 'ar'}, 'date_since': {'id': '6376ddaf-0d8d-5936-3728-3683b45d39e3', 'name': 'date_since', 'display-name': 'date since', 'type': 'date', 'required': True, 'default': '2019-05-01'}}}}",,table,,False,False,982,,sign-ups from a given country since a given date,,native,,"[{'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 93.0, 'max': 93.0, 'avg': 93.0, 'sd': None, 'q1': 93.0, 'q3': 93.0}}}}]",,2019-05-31 02:00:32.487,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-16 02:36:39.834,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \n    --date_part(\'year\',date_joined::date)::text||\'week\'||LPAD(date_part(\'week\', date_joined::date)::text,2,\'0\') \n    date_trunc(\'week\', date_joined) as ""time"", \n    count(distinct binary_user_id) filter (where residence=\'id\') as indonesia,\n    count(distinct binary_user_id) filter (where residence=\'br\') as brazil,\n    count(distinct binary_user_id) filter (where residence=\'za\') as south_africa,\n    --count(distinct binary_user_id) filter (where residence in (\'id\', \'za\', \'br\')) as all_three,\n    count(distinct binary_user_id) filter (where residence not in (\'id\', \'za\', \'br\')) as others,\n    count(distinct binary_user_id) as all_countries\n    --filter (where residence=\'za\') as south_africa\n\nfrom betonmarkets.client\nwhere --residence = \'id\' and \ndate_joined >= \'2018-01-01\'\nand date_joined < date_trunc(\'week\', current_date)\ngroup by 1\n--LPAD(numcol::text, 3, \'0\')'}}",,line,,False,False,972,37.0,"Sign-ups from Indonesia, Brazil, and South Africa by week, since 2018-01-01",ddc1dcf3-dee6-428d-a5c4-cdb20ae359e0,native,,"[{'name': 'time', 'display_name': 'Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 73, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:00:00.000Z', 'latest': '2019-05-20T00:00:00.000Z'}}}}, {'name': 'indonesia', 'display_name': 'Indonesia', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 71, 'nil%': 0.0}, 'type': {'type/Number': {'min': 548.0, 'max': 1701.0, 'avg': 1114.0958904109589, 'sd': 323.2301201694059, 'q1': 791.75, 'q3': 1356.25}}}}, {'name': 'brazil', 'display_name': 'Brazil', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 66, 'nil%': 0.0}, 'type': {'type/Number': {'min': 165.0, 'max': 911.0, 'avg': 414.7671232876712, 'sd': 182.6756273563485, 'q1': 270.5, 'q3': 540.75}}}}, {'name': 'south_africa', 'display_name': 'South Africa', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 62, 'nil%': 0.0}, 'type': {'type/Number': {'min': 45.0, 'max': 900.0, 'avg': 189.58904109589042, 'sd': 195.89763735859307, 'q1': 76.5, 'q3': 238.5}}}}, {'name': 'others', 'display_name': 'Others', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 71, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1226.0, 'max': 2730.0, 'avg': 1823.6575342465753, 'sd': 364.4852205449316, 'q1': 1462.75, 'q3': 2102.0}}}}, {'name': 'all_countries', 'display_name': 'All Countries', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 72, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2488.0, 'max': 5026.0, 'avg': 3542.082191780822, 'sd': 608.8488341722493, 'q1': 3048.0, 'q3': 4047.524197325875}}}}]",,2019-05-28 07:55:08.362,"{'graph.dimensions': ['time'], 'graph.metrics': ['indonesia', 'brazil', 'south_africa', 'others', 'all_countries'], 'graph.y_axis.scale': 'linear', 'graph.show_trendline': True, 'series_settings': {'indonesia': {'line.marker_enabled': False, 'line.interpolate': 'cardinal', 'color': '#EF8C8C'}, 'brazil': {'line.interpolate': 'cardinal', 'line.marker_enabled': False, 'color': '#74838F'}, 'south_africa': {'line.interpolate': 'cardinal', 'line.marker_enabled': False, 'color': '#509EE3'}, 'others': {'line.marker_enabled': False, 'line.interpolate': 'cardinal'}, 'all_countries': {'line.marker_enabled': False, 'line.interpolate': 'cardinal'}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-17 04:06:40.050,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    date_joined::date as join_date, \n    count(*) filter (where residence='br') as count_brazil,\n    count(*) filter (where residence='id') as count_indonesia,\n    count(*) filter (where residence not in ('id', 'br')) as count_ALL_ex_Brazil_Indo\nfrom betonmarkets.client \nwhere \n    --residence in ('id', 'br')\n    --and \n    date_joined >= current_date + interval '-31d' \n    and date_joined < current_date\ngroup by 1--,2 --date_joined::date""}}",,line,,False,False,954,37.0,"Sign-ups from Indonesia, Brazil, and the rest in past 30 days (CR only)",78e3e572-691a-4f0d-9891-3f6ade2eecbd,native,,"[{'name': 'join_date', 'display_name': 'Join Date', 'base_type': 'type/Date', 'special_type': 'type/JoinDate', 'fingerprint': {'global': {'distinct-count': 31, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-03-17T00:00:00.000Z', 'latest': '2019-04-16T00:00:00.000Z'}}}}, {'name': 'count_brazil', 'display_name': 'Count Brazil', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 28, 'nil%': 0.0}, 'type': {'type/Number': {'min': 81.0, 'max': 189.0, 'avg': 123.54838709677419, 'sd': 27.511014412022224, 'q1': 105.5, 'q3': 136.77525512860842}}}}, {'name': 'count_indonesia', 'display_name': 'Count Indonesia', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 25, 'nil%': 0.0}, 'type': {'type/Number': {'min': 79.0, 'max': 165.0, 'avg': 114.25806451612904, 'sd': 19.687504906980102, 'q1': 101.25, 'q3': 127.5}}}}, {'name': 'count_all_ex_brazil_indo', 'display_name': 'Count All Ex Brazil Indo', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 27, 'nil%': 0.0}, 'type': {'type/Number': {'min': 316.0, 'max': 545.0, 'avg': 432.6774193548387, 'sd': 53.3225325084835, 'q1': 395.0, 'q3': 479.25}}}}]",,2019-04-17 04:45:47.293,"{'graph.dimensions': ['join_date'], 'graph.metrics': ['count_brazil', 'count_indonesia', 'count_all_ex_brazil_indo'], 'series_settings': {'count_brazil': {'color': '#509EE3', 'axis': 'left', 'line.interpolate': 'linear', 'display': 'line'}, 'count_indonesia': {'color': '#EF8C8C', 'axis': 'left', 'line.interpolate': 'linear'}, 'count_brazil_and_indonesia': {'axis': 'left'}, 'count_all': {'axis': 'left'}, 'count_all_ex_brazil_indo': {'axis': 'left', 'line.interpolate': 'cardinal', 'color': '#9CC177', 'display': 'line'}}, 'graph.y_axis.scale': 'linear', 'graph.show_trendline': True, 'graph.show_goal': False}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-11-14 08:02:36.382,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \nresidence, \nto_char(date_joined, \'YYYY-MM\') as ""month_joined"", \ncount(1) as ""count_clients"" from betonmarkets.client \nwhere residence in (\'vn\', \'ng\')\nand date_joined >= \'2017-01-01\' and date_joined <= \'2018-10-31\'\ngroup by 1,2\n'}}",Restricted to top countries (minus Indonesia),line,,False,False,37,,sign-ups since Jan 2017,,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'month_joined', 'display_name': 'Month Joined', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 22, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.0}}}}, {'name': 'count_clients', 'display_name': 'Count Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 43, 'nil%': 0.0}, 'type': {'type/Number': {'min': 180.0, 'max': 1605.0, 'avg': 708.3863636363636, 'sd': 396.61903787523113, 'q1': 364.0, 'q3': 1003.5}}}}]",,2019-02-21 06:33:36.989,"{'graph.dimensions': ['month_joined', 'residence'], 'graph.metrics': ['count_clients']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-11-27 06:25:15.249,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \nresidence, \nto_char(date_joined, \'YYYY-MM\') as ""month_joined"", \ncount(1) as ""count_clients"" from betonmarkets.client \nwhere residence in (\'vn\', \'ng\', \'ke\', \'bo\', \'ru\', \'in\')\nand date_joined >= \'2018-01-01\' and date_joined <= \'2018-11-30\'\ngroup by 1,2\n'}}",,line,,False,False,50,,sign-ups since Jan 2018,,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'month_joined', 'display_name': 'Month Joined', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.0}}}}, {'name': 'count_clients', 'display_name': 'Count Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 64, 'nil%': 0.0}, 'type': {'type/Number': {'min': 77.0, 'max': 1661.0, 'avg': 586.7878787878788, 'sd': 408.75768692471905, 'q1': 277.0, 'q3': 791.0}}}}]",,2019-02-21 06:36:13.861,"{'graph.dimensions': ['month_joined', 'residence'], 'graph.metrics': ['count_clients']}"
False,,,,,2018-11-30 12:29:06.765,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'threshold': {'id': '1acb629d-01cc-2727-634c-e0276f0a57a0', 'name': 'threshold', 'display-name': 'Threshold', 'type': 'number', 'required': True, 'default': '10000'}, 'start_date': {'id': 'f8200b1f-85d0-8140-c39f-1516b647da2a', 'name': 'start_date', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2018-11-01'}, 'end_date': {'id': '3923e785-3103-8b36-04b1-7b40363844f9', 'name': 'end_date', 'display-name': 'End Date', 'type': 'date', 'required': True, 'default': '2018-11-30'}}, 'query': 'select *, loss*100/turnover as ""percentage loss"" from bet.daily_aggregates\nWHERE CAST(""bet"".""daily_aggregates"".""day"" AS date) BETWEEN {{start_date}}\n   AND {{end_date}}\nand abs(loss)>{{threshold}}\norder by ""day"" desc, abs(loss) desc, ""percentage loss"" desc\n\n'}, 'type': 'native', 'database': 2}",,table,,False,False,61,,significant winner and losers in a given period,,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'turnover', 'display_name': 'Turnover', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'loss', 'display_name': 'Loss', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'percentage loss', 'display_name': 'Percentage Loss', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-03-11 07:31:37.881,"{'table.column_widths': [None, None, 116, 129, 183], 'table.pivot_column': 'day', 'table.cell_column': 'account_id'}"
False,,,,,2018-11-30 12:16:28.072,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select *, loss*100/turnover as ""percentage loss"" from bet.daily_aggregates\nWHERE CAST(""bet"".""daily_aggregates"".""day"" AS date) BETWEEN CAST((NOW() + INTERVAL \'-30 day\') AS date)\n   AND CAST((NOW() + INTERVAL \'-1 day\') AS date)\nand abs(loss)>1500\norder by ""day"" desc, abs(loss) desc, ""percentage loss"" desc\n\n'}}",,table,,False,False,60,,significant winners and losers in recent days,,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-19T00:00:00.000Z', 'latest': '2019-02-17T00:00:00.000Z'}}}}, {'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 341, 'nil%': 0.0}, 'type': {'type/Number': {'min': 346261.0, 'max': 11706241.0, 'avg': 8413516.738562092, 'sd': 3066068.456034741, 'q1': 5493131.226405271, 'q3': 10996785.21069763}}}}, {'name': 'turnover', 'display_name': 'Turnover', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 721, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1500.0, 'max': 500000.0, 'avg': 28173.54487581699, 'sd': 52276.4231722496, 'q1': 7086.7616808973935, 'q3': 28955.215348219972}}}}, {'name': 'loss', 'display_name': 'Loss', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 733, 'nil%': 0.0}, 'type': {'type/Number': {'min': -22268.25, 'max': 56666.27, 'avg': 1463.7862222222225, 'sd': 4956.79849929868, 'q1': -1761.8176645516603, 'q3': 3203.3399233625196}}}}, {'name': 'percentage loss', 'display_name': 'Percentage Loss', 'base_type': 'type/Decimal', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 730, 'nil%': 0.0}, 'type': {'type/Number': {'min': -119.43518366002306, 'max': 100.0, 'avg': 13.312728854232624, 'sd': 34.15613951261701, 'q1': -9.39362572747999, 'q3': 30.270017486131024}}}}]",,2019-02-18 09:54:50.030,"{'table.column_widths': [None, None, 116, 129, 183], 'table.pivot_column': 'day', 'table.cell_column': 'account_id'}"
False,,,,,2018-11-08 09:29:19.395,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'query': {'source-table': 94, 'breakout': [['field-id', 836]], 'aggregation': [['count']], 'filter': ['time-interval', ['field-id', 852], -30, 'day', {}]}, 'type': 'query', 'database': 2}",,map,,False,False,33,,Signup countries in last 30 days,,query,,"[{'name': 'residence', 'display_name': 'residence', 'base_type': 'type/Text', 'special_type': 'type/Country', 'fingerprint': {'global': {'distinct-count': 144, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 75, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 10897.0, 'avg': 300.15277777777777, 'sd': 1274.2295479249028, 'q1': 4.131818181818182, 'q3': 105.0}}}}]",94.0,2019-10-18 10:50:11.624,{'map.region': 'world_countries'}
False,,"{'id': 88, 'name': ""Mustofa Ghaleb Amami's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 65, 'slug': 'mustofa_ghaleb_amami_s_personal_collection'}",88.0,,2019-03-06 10:18:32.937,"{'email': 'mustofa@binary.com', 'first_name': 'Mustofa Ghaleb', 'last_login': '2019-05-23T06:57:46.611Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 65, 'last_name': 'Amami', 'date_joined': '2019-03-01T07:39:44.498Z', 'common_name': 'Mustofa Ghaleb Amami'}",65,7,"{'database': 7, 'type': 'native', 'native': {'query': 'select count(signup_device), signup_device\nfrom users.binary_user\nwhere signup_device is not null\ngroup by signup_device\norder by count(signup_device) desc, signup_device desc\n--having count(signup_device) > 500'}}",pie chart,pie,,False,False,457,,signup device binary users,,native,,"[{'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 187468.0, 'max': 222307.0, 'avg': 204887.5, 'sd': 24634.89314975813, 'q1': 187468.0, 'q3': 222307.0}}}}, {'name': 'signup_device', 'display_name': 'signup_device', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.5}}}}]",,2019-10-10 05:24:19.605,"{'pie.dimension': 'signup_device', 'pie.metric': 'count', 'pie.slice_threshold': 0.5, 'pie.show_legend': True}"
False,,"{'id': 195, 'name': 'Statistic', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'statistic'}",195.0,,2019-04-09 09:44:36.221,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Statistic > Call Center\nWITH param as (\nSELECT\n        -- CR, MX, MLT, MF or VRTC\n        'CR'::VARCHAR as broker_code,\n        \n        -- Start date\n        '2015-10-01'::TIMESTAMP as start_date,\n        \n        -- End date\n        '2015-12-31'::TIMESTAMP as end_date,\n        \n        -- Promotion code\n        ''::VARCHAR as promotion_code,\n        \n        -- 'true' to show only deposited, otherwise 'false'\n        false::BOOLEAN as deposited_only,\n\n        -- Multiple residence code separated by comma, remove those that you don't need\n        ARRAY['', 'ad', 'ae', 'af', 'ag', 'ai', 'al', 'am', 'an', 'ao', 'aq', 'ar', 'as', 'at', 'au',\n        'aw', 'ax', 'az', 'ba', 'bb', 'bd', 'be', 'bf', 'bg', ',bh', 'bi', 'bj', 'bl', 'bm', 'bn',\n        'bo', 'br', 'bs', 'bt', 'bv', 'bw', 'by', 'bz', 'ca', 'cc', 'cd', 'cf', 'cg', 'ch', 'ci',\n        'cl', 'cm', 'cn', 'co', 'cr', 'cu', 'cv', 'cw', 'cx', 'cy', 'cz', 'de', 'dj', 'dk', 'dm',\n        'do', 'dz', 'ec', 'ee', 'eg', 'eh', 'er', 'es', 'et', 'fi', 'fj', 'fk', 'fo', ',fr', 'fx',\n        'ga', 'gb', 'gd', 'ge', 'gf', 'gg', 'gh', 'gi', 'gl', 'gm', 'gn', 'gp', 'gq', 'gr', 'gt',\n        'gu', 'gy', 'hk', 'hm', 'hn', 'hr', 'ht', 'hu', 'id', 'ie', 'il', 'im', 'in', 'io', 'iq',\n        'ir', 'is', 'it', 'je', 'jm', 'jo', 'jp', 'ke', 'kg ,kh', 'ki', 'km', 'kn', 'kp', 'kr', 'kw',\n        'ky', 'kz', 'la', 'lb', 'lc', 'li', 'lk', 'lr', 'ls', 'lt', 'lu', 'lv', 'ly', 'ma', 'mc',\n        'md', 'me', 'mf', 'mg', 'mh', 'mk', 'ml', 'mm', 'mn', 'mo', 'mp', 'mq', 'mr', 'mt', 'mu',\n        'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nc', 'ne', 'nf', 'ng', 'ni', 'nl', 'no', 'np', 'nr',\n        'nu', 'nz', 'om', 'pa', 'pe', 'pf', 'pg', 'ph', 'pk', 'pl', 'pm', 'pn', 'pr', 'ps', 'pt',\n        'pw', 'py', 'qa', 're', 'ro', 'rs', 'ru', 'rw', 'sa', 'sb', 'sc', 'sd', 'se', 'sg', 'sh',\n        'si', 'sj', 'sk', 'sl', 'sm', 'sn', 'so', 'sr', 'st', 'sv', 'sy', 'sz', 'tc', 'td', 'tg',\n        'th', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'tr', 'tt', 'tv', 'tw', 'tz', 'ua', 'ug', 'um',\n        'us', 'uy', 'uz', 'va', 'vc', 've', 'vg', 'vi', 'vn', 'vu', 'wf', 'ws', 'ye', 'yt', 'za',\n        'zm', 'zw'] as residences\n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT\n*,\nCASE WHEN total_deposit IS NULL THEN 'NO' ELSE 'YES' END as deposited\nFROM call_center(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT start_date FROM param)::timestamp,\n    (SELECT end_date FROM param)::timestamp,\n    (SELECT promotion_code FROM param)::varchar,\n    (SELECT deposited_only FROM param)::boolean)\n    WHERE residence IN (select UNNEST(residences) FROM param)\n""}}",Statistic > Call Center,table,,False,False,934,,Statistic Call Center,,native,,,,2019-04-09 09:44:36.221,{}
False,,"{'id': 195, 'name': 'Statistic', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'statistic'}",195.0,,2019-04-09 09:44:29.385,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Statistic > New Accounts Statistic\nWITH param as (\n    SELECT\n        -- CR, MX, MLT, MF, CH, VRCH or VRTC\n        'CH'::VARCHAR as broker_code,\n        \n        -- Start date\n        '2017-01-01'::Date as start_date,\n        \n        -- End date\n        '2017-06-30'::DATE as end_date,\n        \n        -- Promotion code\n        ''::VARCHAR as promotion_code,\n        \n        -- 'true' to show only deposited, otherwise 'false'\n        false::BOOLEAN as deposited_only,\n\n        -- Multiple residence code separated by comma, remove those that you don't need\n        ARRAY['', 'ad', 'ae', 'af', 'ag', 'ai', 'al', 'am', 'an', 'ao', 'aq', 'ar', 'as', 'at', 'au',\n        'aw', 'ax', 'az', 'ba', 'bb', 'bd', 'be', 'bf', 'bg', 'bh', 'bi', 'bj', 'bl', 'bm', 'bn',\n        'bo', 'br', 'bs', 'bt', 'bv', 'bw', 'by', 'bz', 'ca', 'cc', 'cd', 'cf', 'cg', 'ch', 'ci',\n        'cl', 'cm', 'cn', 'co', 'cr', 'cu', 'cv', 'cw', 'cx', 'cy', 'cz', 'de', 'dj', 'dk', 'dm',\n        'do', 'dz', 'ec', 'ee', 'eg', 'eh', 'er', 'es', 'et', 'fi', 'fj', 'fk', 'fo', 'fr', 'fx',\n        'ga', 'gb', 'gd', 'ge', 'gf', 'gg', 'gh', 'gi', 'gl', 'gm', 'gn', 'gp', 'gq', 'gr', 'gt',\n        'gu', 'gy', 'hk', 'hm', 'hn', 'hr', 'ht', 'hu', 'id', 'ie', 'il', 'im', 'in', 'io', 'iq',\n        'ir', 'is', 'it', 'je', 'jm', 'jo', 'jp', 'ke', 'kg', 'kh', 'ki', 'km', 'kn', 'kp', 'kr', 'kw',\n        'ky', 'kz', 'la', 'lb', 'lc', 'li', 'lk', 'lr', 'ls', 'lt', 'lu', 'lv', 'ly', 'ma', 'mc',\n        'md', 'me', 'mf', 'mg', 'mh', 'mk', 'ml', 'mm', 'mn', 'mo', 'mp', 'mq', 'mr', 'mt', 'mu',\n        'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nc', 'ne', 'nf', 'ng', 'ni', 'nl', 'no', 'np', 'nr',\n        'nu', 'nz', 'om', 'pa', 'pe', 'pf', 'pg', 'ph', 'pk', 'pl', 'pm', 'pn', 'pr', 'ps', 'pt',\n        'pw', 'py', 'qa', 're', 'ro', 'rs', 'ru', 'rw', 'sa', 'sb', 'sc', 'sd', 'se', 'sg', 'sh',\n        'si', 'sj', 'sk', 'sl', 'sm', 'sn', 'so', 'sr', 'st', 'sv', 'sy', 'sz', 'tc', 'td', 'tg',\n        'th', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'tr', 'tt', 'tv', 'tw', 'tz', 'ua', 'ug', 'um',\n        'us', 'uy', 'uz', 'va', 'vc', 've', 'vg', 'vi', 'vn', 'vu', 'wf', 'ws', 'ye', 'yt', 'za',\n        'zm', 'zw'] as residences\n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT nas.*\nFROM param\nCROSS JOIN new_accounts_statistic(\n    param.broker_code,\n    param.start_date,\n    param.end_date,\n    param.promotion_code,\n    param.deposited_only) AS nas\nWHERE nas.residence = ANY(param.residences)\nORDER BY 1\n""}}",Statistic > New Accounts Statistic,table,,False,False,932,,Statistic New Accounts Statistic,,native,,,,2019-04-09 09:44:29.385,{}
False,,"{'id': 195, 'name': 'Statistic', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'statistic'}",195.0,,2019-04-09 09:44:32.781,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Statistic > New Real Virtual Account Statistics\n-- Statistic > New Real Virtual Account Statistics\nWITH param as (\n    SELECT\n        -- Start date\n        '2015-03-01'::TIMESTAMP as start_date,\n        \n        -- End date\n        '2015-04-15'::TIMESTAMP as end_date,\n        \n        -- Promotion code\n        ''::VARCHAR as promotion_code,\n        \n        -- 'true' to show only deposited, otherwise 'false'\n        false::BOOLEAN as deposited_only,\n        \n        -- Broker codes, remove those that you don't need\n        ARRAY['CR', 'FTB', 'CBET', 'UK', 'RCP', 'FOTC', 'QMX', 'QMLT', 'QCR', 'VRTQ',\n        'MX', 'MXR', 'WS', 'BFT', 'MLT', 'NF', 'EM', 'VRTM', 'VRT', 'VRTU', 'VRTF',\n        'VRTC', 'VRTN', 'VRTS', 'VRTP', 'VRTO', 'VRTE', 'VRTB'] as broker_codes,\n\n        -- Multiple residence code separated by comma, remove those that you don't need\n        ARRAY['ad', 'ae', 'af', 'ag', 'ai', 'al', 'am', 'an', 'ao', 'aq', 'ar', 'as', 'at', 'au',\n        'aw', 'ax', 'az', 'ba', 'bb', 'bd', 'be', 'bf', 'bg', ',bh', 'bi', 'bj', 'bl', 'bm', 'bn',\n        'bo', 'br', 'bs', 'bt', 'bv', 'bw', 'by', 'bz', 'ca', 'cc', 'cd', 'cf', 'cg', 'ch', 'ci',\n        'cl', 'cm', 'cn', 'co', 'cr', 'cu', 'cv', 'cw', 'cx', 'cy', 'cz', 'de', 'dj', 'dk', 'dm',\n        'do', 'dz', 'ec', 'ee', 'eg', 'eh', 'er', 'es', 'et', 'fi', 'fj', 'fk', 'fo', ',fr', 'fx',\n        'ga', 'gb', 'gd', 'ge', 'gf', 'gg', 'gh', 'gi', 'gl', 'gm', 'gn', 'gp', 'gq', 'gr', 'gt',\n        'gu', 'gy', 'hk', 'hm', 'hn', 'hr', 'ht', 'hu', 'id', 'ie', 'il', 'im', 'in', 'io', 'iq',\n        'ir', 'is', 'it', 'je', 'jm', 'jo', 'jp', 'ke', 'kg ,kh', 'ki', 'km', 'kn', 'kp', 'kr', 'kw',\n        'ky', 'kz', 'la', 'lb', 'lc', 'li', 'lk', 'lr', 'ls', 'lt', 'lu', 'lv', 'ly', 'ma', 'mc',\n        'md', 'me', 'mf', 'mg', 'mh', 'mk', 'ml', 'mm', 'mn', 'mo', 'mp', 'mq', 'mr', 'mt', 'mu',\n        'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nc', 'ne', 'nf', 'ng', 'ni', 'nl', 'no', 'np', 'nr',\n        'nu', 'nz', 'om', 'pa', 'pe', 'pf', 'pg', 'ph', 'pk', 'pl', 'pm', 'pn', 'pr', 'ps', 'pt',\n        'pw', 'py', 'qa', 're', 'ro', 'rs', 'ru', 'rw', 'sa', 'sb', 'sc', 'sd', 'se', 'sg', 'sh',\n        'si', 'sj', 'sk', 'sl', 'sm', 'sn', 'so', 'sr', 'st', 'sv', 'sy', 'sz', 'tc', 'td', 'tg',\n        'th', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'tr', 'tt', 'tv', 'tw', 'tz', 'ua', 'ug', 'um',\n        'us', 'uy', 'uz', 'va', 'vc', 've', 'vg', 'vi', 'vn', 'vu', 'wf', 'ws', 'ye', 'yt', 'za',\n        'zm', 'zw'] as residences\n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT\n    joined,\n    SUM(CASE WHEN broker_code NOT LIKE 'VR%' THEN client_cnt END) as real,\n    SUM(CASE WHEN broker_code LIKE 'VR%' THEN client_cnt END) as virtual,\n    SUM(client_cnt) as total\nFROM new_real_virtual_account_stats(\n    (SELECT start_date FROM param)::timestamp,\n    (SELECT end_date FROM param)::timestamp,\n    (SELECT promotion_code FROM param)::varchar,\n    (SELECT deposited_only FROM param)::boolean)\n    WHERE broker_code IN (select UNNEST(broker_codes) FROM param)\n    AND (residence IN (select UNNEST(residences) FROM param) OR residence = '')\nGROUP BY joined\n\n""}}",Statistic > New Real Virtual Account Statistics,table,,False,False,933,,Statistic New Real Virtual Account Statistics,,native,,,,2019-04-09 09:44:32.781,{}
False,,"{'id': 180, 'name': 'Statistics', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'statistics'}",180.0,,2019-04-09 09:38:28.835,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Statistics > Number of clients active since specified date\nWITH param as (\n    SELECT\n        -- CR, MX, MLT or MF\n        'MF'::VARCHAR as broker_code,\n        \n        -- End date\n        '2015-05-27'::TIMESTAMP as start_date\n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_active_client(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT start_date FROM param)::timestamp)\n\n\n""}}",Statistics > Number of clients active since specified date,table,,False,False,832,,Statistics Number of clients active since specified date,,native,,,,2019-04-09 09:38:28.835,{}
False,,"{'id': 161, 'name': 'Statistics', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/159/', 'personal_owner_id': None, 'slug': 'statistics'}",161.0,,2019-04-09 09:34:57.486,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Statistics > Number of clients active since specified date\nWITH param as (\n    SELECT\n        -- CR, MX, MLT or MF\n        'MF'::VARCHAR as broker_code,\n        \n        -- End date\n        '2015-05-27'::TIMESTAMP as start_date\n)\n\n\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM get_active_client(\n    (SELECT broker_code FROM param)::varchar,\n    (SELECT start_date FROM param)::timestamp)\n\n\n""}}",Statistics > Number of clients active since specified date,table,,False,False,822,,Statistics Number of clients active since specified date,,native,,,,2019-04-09 09:34:57.486,{}
False,,"{'id': 65, 'name': ""Parviz asoodefard's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 52, 'slug': 'parviz_asoodefard_s_personal_collection'}",65.0,,2019-02-18 08:37:31.945,"{'email': 'parviz@regentmarkets.com', 'first_name': 'Parviz', 'last_login': '2019-07-03T05:55:34.855Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 52, 'last_name': 'asoodefard', 'date_joined': '2019-01-08T07:10:52.493Z', 'common_name': 'Parviz asoodefard'}",52,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select ""Deal"",""Login"",""Order"",""Action"",""Entry"",""Reason"",""TimeMsc"",""Symbol"",""Price"",""Profit"",""PricePosition"",""PositionID"",""Comment"",""Storage"",""Volume""\nfrom mt5_deals_2019\nwhere ""Login"" = 144356\nand left(""Symbol"",3)!= \'Vol\'\n'}}",,table,,False,False,381,,strange comment in BO MT5,,native,,"[{'name': 'Deal', 'display_name': 'Deal', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Number': {'min': 43804465.0, 'max': 47012780.0, 'avg': 45261926.363636374, 'sd': 1433313.6133867058, 'q1': 43804507.25, 'q3': 46682510.0}}}}, {'name': 'Login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 144356.0, 'max': 144356.0, 'avg': 144356.0, 'sd': 0.0, 'q1': 144356.0, 'q3': 144356.0}}}}, {'name': 'Order', 'display_name': 'Order', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 50011658.0, 'avg': 18186049.45454545, 'sd': 25232119.608136233, 'q1': 0.0, 'q3': 50011614.75}}}}, {'name': 'Action', 'display_name': 'Action', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 2.0, 'avg': 1.4545454545454541, 'sd': 0.8201995322647241, 'q1': 0.875, 'q3': 2.0}}}}, {'name': 'Entry', 'display_name': 'Entry', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1.0, 'avg': 0.18181818181818102, 'sd': 0.404519917477945, 'q1': 0.0, 'q3': 0.52306583914062}}}}, {'name': 'Reason', 'display_name': 'Reason', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 16.0, 'avg': 4.545454545454546, 'sd': 5.663278844691233, 'q1': 2.0, 'q3': 9.322921747968689}}}}, {'name': 'TimeMsc', 'display_name': 'Time Msc', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-14T10:00:08.866Z', 'latest': '2019-02-10T17:20:52.524Z'}}}}, {'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'Price', 'display_name': 'Price', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.515, 'avg': 0.187272727272727, 'sd': 0.25983036424139905, 'q1': 0.0, 'q3': 0.424412775643205}}}}, {'name': 'Profit', 'display_name': 'Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1.0, 'max': 129.29, 'avg': 32.38545454545454, 'sd': 45.63178001429188, 'q1': -0.34168760482230004, 'q3': 48.2575}}}}, {'name': 'PricePosition', 'display_name': 'Price Position', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.515, 'avg': 0.093636363636363, 'sd': 0.20832775750114102, 'q1': 0.0, 'q3': 0.269378907157419}}}}, {'name': 'PositionID', 'display_name': 'Position ID', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 50011656.99999999, 'avg': 18186049.272727273, 'sd': 25232119.35587374, 'q1': 0.0, 'q3': 50011619.375}}}}, {'name': 'Comment', 'display_name': 'Comment', 'base_type': 'type/Text', 'special_type': 'type/Comment', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 23.90909090909091}}}}, {'name': 'Storage', 'display_name': 'Storage', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'Volume', 'display_name': 'Volume', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 10000.0, 'avg': 3636.3636363636365, 'sd': 5045.249791095131, 'q1': 0.0, 'q3': 8241.024769770971}}}}]",,2019-02-20 05:39:34.043,"{'table.pivot_column': 'Login', 'table.cell_column': 'Deal'}"
False,,"{'id': 76, 'name': ""Denis makagonov's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 55, 'slug': 'denis_makagonov_s_personal_collection'}",76.0,,2019-02-14 09:19:41.733,"{'email': 'denis.makagonov@binary.com', 'first_name': 'Denis', 'last_login': '2019-09-23T07:22:55.154Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 55, 'last_name': 'makagonov', 'date_joined': '2019-01-29T08:22:50.309Z', 'common_name': 'Denis makagonov'}",55,2,"{'native': {'template-tags': {'date': {'id': '2011715a-f0a2-9a68-fedc-c72abbf21fcc', 'name': 'date', 'display-name': 'purchase_time', 'type': 'date', 'required': True}}, 'query': 'SELECT\n  market,\n  SUM(contracts) AS contracts\nFROM (\nSELECT underlying_symbol, COUNT(*) FROM bet.financial_market_bet\nWHERE b.purchase_time >= {{date}}\nGROUP BY underlying_symbol) a\n  LEFT JOIN bet.market m\n  ON m.symbol = a.underlying_symbol\n'}, 'type': 'native', 'database': 2}",,table,,False,False,368,,strange_query_on_bet,,native,,,,2019-02-14 09:19:41.733,{}
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-18 08:40:47.256,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT ""Symbol"",\n       SUM(""Volume""/10000) AS Symbol_volume\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\nWhere ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\', \'Volatility 50 Index\', \'Volatility 75 Index\', \'Volatility 100 Index\', \'HF Volatility 10 Index\',\'HF Volatility 50 Index\', \'HF Volatility 100 Index\')\nand {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\ngroup by ""Symbol""\nOrder by Symbol_volume DESC', 'template-tags': {'Time': {'widget-type': 'date/relative', 'default': 'today', 'name': 'Time', 'type': 'dimension', 'id': '064976d5-d032-f46d-0c35-0793521e71c8', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}}}}",,row,,False,False,382,,Symbol's volumes,,native,,"[{'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'symbol_volume', 'display_name': 'Symbol Volume', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-03 07:49:14.167,"{'graph.dimensions': ['Symbol'], 'graph.metrics': ['symbol_volume']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-03-12 10:43:00.878,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT ""Symbol"",\n       SUM(""Volume""/10000) AS Symbol_volume\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\nWhere ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\', \'Volatility 50 Index\', \'Volatility 75 Index\', \'Volatility 100 Index\', \'HF Volatility 10 Index\',\'HF Volatility 50 Index\', \'HF Volatility 100 Index\')\nand date(""Time"") >=  {{Start_Time}}\nand date(""Time"") <=  {{End_Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\ngroup by ""Symbol""\nOrder by Symbol_volume DESC', 'template-tags': {'Start_Time': {'id': '758832de-3fb0-524d-8874-8fc1fcba29b1', 'name': 'Start_Time', 'display-name': 'Start_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'End_Time': {'id': 'dc4771a7-b390-3297-dfe1-2e6fe9075d77', 'name': 'End_Time', 'display-name': 'End_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,row,,False,False,490,,Symbol's volumes - by date range,,native,,"[{'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.375}}}}, {'name': 'symbol_volume', 'display_name': 'Symbol Volume', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 554.63, 'max': 6265.5, 'avg': 2182.83, 'sd': 1932.839418132224, 'q1': 799.7950000000001, 'q3': 3070.385}}}}]",,2019-04-03 07:15:35.291,"{'graph.dimensions': ['Symbol'], 'graph.metrics': ['symbol_volume']}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-11 06:24:21.732,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT *, pg_size_pretty(total_bytes) AS total\n    , pg_size_pretty(index_bytes) AS INDEX\n    , pg_size_pretty(toast_bytes) AS toast\n    , pg_size_pretty(table_bytes) AS TABLE\n  FROM (\n  SELECT *, total_bytes-index_bytes-COALESCE(toast_bytes,0) AS table_bytes FROM (\n      SELECT c.oid,nspname AS table_schema, relname AS TABLE_NAME\n              , c.reltuples AS row_estimate\n              , pg_total_relation_size(c.oid) AS total_bytes\n              , pg_indexes_size(c.oid) AS index_bytes\n              , pg_total_relation_size(reltoastrelid) AS toast_bytes\n          FROM pg_class c\n          LEFT JOIN pg_namespace n ON n.oid = c.relnamespace\n          WHERE relkind = 'r'\n  ) a\n) a\norder by 2,3;""}}",,table,,False,False,948,,table sizes,,native,,"[{'name': 'oid', 'display_name': 'Oid', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 196, 'nil%': 0}, 'type': {'type/Number': {'min': 826, 'max': 581612702, 'avg': 155544777.13775513, 'sd': 256125988.18559912, 'q1': 3588.875, 'q3': 558026682}}}}, {'name': 'table_schema', 'display_name': 'Table Schema', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 8.505102040816327}}}}, {'name': 'table_name', 'display_name': 'Table Name', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 167, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 14.28061224489796}}}}, {'name': 'row_estimate', 'display_name': 'Row Estimate', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 137, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 1560215296, 'avg': 22143634.90306122, 'sd': 152344850.24068892, 'q1': 48.235611833846846, 'q3': 45165.5}}}}, {'name': 'total_bytes', 'display_name': 'Total Bytes', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 107, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 1084168142848, 'avg': 10223925415.18367, 'sd': 89689883662.4222, 'q1': 72103.53693733826, 'q3': 10593220.5998579}}}}, {'name': 'index_bytes', 'display_name': 'Index Bytes', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 85, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 850924945408, 'avg': 5840409202.938775, 'sd': 63085790916.89842, 'q1': 18317.547382851542, 'q3': 2965504}}}}, {'name': 'toast_bytes', 'display_name': 'Toast Bytes', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.41836734693877503}, 'type': {'type/Number': {'min': 8192, 'max': 1728512, 'avg': 28456.42105263158, 'sd': 166308.76153814662, 'q1': 8192, 'q3': 58229.588310674946}}}}, {'name': 'table_bytes', 'display_name': 'Table Bytes', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 99, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 359709007872, 'avg': 4383499661.061225, 'sd': 33657050391.274643, 'q1': 43814.6927412746, 'q3': 5361664}}}}, {'name': 'total', 'display_name': 'Total', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 106, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 5.826530612244898}}}}, {'name': 'index', 'display_name': 'Index', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 85, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 6.071428571428571}}}}, {'name': 'toast', 'display_name': 'Toast', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.41836734693877503}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 5.760204081632653}}}}, {'name': 'table', 'display_name': 'Table', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 93, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 6.137755102040816}}}}]",,2019-04-11 06:24:21.732,"{'table.column_widths': [None, None, None, None, None, None, None, None, None, None, None, 126], 'table.pivot_column': 'toast', 'table.cell_column': 'oid'}"
False,,"{'id': 187, 'name': 'temp Compliance', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'temp_compliance'}",187.0,,2019-04-09 09:40:19.426,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- temp Compliance > Self exclusion by date range\nWITH params AS (SELECT\n  'MX'::VARCHAR      AS broker_code,\n  '2018-01-01'::DATE AS start_date,\n  '2018-06-30'::DATE AS end_date,\n  ''::VARCHAR AS include_countries  -- A CSV list of the only countries you want included in this report. An empty list equals all countries.\n)\n\nSELECT dbl.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink(ps.srvname, $$\nSELECT sx.*, to_timestamp(sx.timeout_until)::date AS timeout_until_date, bc.residence\nFROM betonmarkets.client AS bc\nJOIN betonmarkets.self_exclusion AS sx ON sx.client_loginid=bc.loginid\nWHERE sx.last_modified_date >= $$|| quote_nullable(params.start_date) ||$$::TIMESTAMP\n  AND sx.last_modified_date  < $$|| quote_nullable(params.end_date) ||$$::TIMESTAMP + INTERVAL '1 day'\nAND $$||\n  CASE WHEN params.include_countries > '' THEN 'bc.residence = ANY('|| quote_literal('{'|| params.include_countries ||'}') ||'::VARCHAR[])'::TEXT\n       ELSE 'TRUE'\n  END ||$$\nAND (\t-- some records have no values set, so why include those?\n                sx.max_balance IS NOT NULL OR\n                sx.max_turnover IS NOT NULL OR\n                sx.max_open_bets IS NOT NULL OR\n                sx.exclude_until IS NOT NULL OR\n                sx.session_duration_limit IS NOT NULL OR\n                sx.max_losses IS NOT NULL OR\n                sx.max_7day_turnover IS NOT NULL OR\n                sx.max_7day_losses IS NOT NULL OR\n                sx.max_30day_turnover IS NOT NULL OR\n                sx.max_30day_losses IS NOT NULL OR\n                sx.timeout_until IS NOT NULL\n                )\n$$) dbl (\n client_loginid         character varying,\n max_balance            numeric          ,                                 \n max_turnover           numeric           ,                                \n max_open_bets          integer            ,                               \n exclude_until          date                ,                              \n session_duration_limit integer              ,                             \n last_modified_date     timestamp,\n max_losses             numeric   ,                                        \n max_7day_turnover      numeric    ,                                       \n max_7day_losses        numeric     ,                                      \n max_30day_turnover     numeric      ,                                     \n max_30day_losses       numeric       ,                                    \n timeout_until          numeric        ,                                   \n timeout_until_date     date            ,                                  \n residence              character varying\n)\n\nWHERE params.broker_code = ANY (ps.broker_codes)\n""}}",temp Compliance > Self exclusion by date range,table,,False,False,860,,temp Compliance Self exclusion by date range,,native,,,,2019-04-09 09:40:19.426,{}
False,,"{'id': 54, 'name': ""Aggelos Armenatzoglou's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 47, 'slug': 'aggelos_armenatzoglou_s_personal_collection'}",54.0,,2019-02-15 03:57:07.111,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM(""Profit""/""RateMargin"")*-1 AS Company_profit,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 10 Index\') AS Profit_Vol_10,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 25 Index\') AS Profit_Vol_25,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 50 Index\') AS Profit_Vol_50,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 75 Index\') AS Profit_Vol_75,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'Volatility 100 Index\') AS Profit_Vol_100,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 10 Index\') AS Profit_HF_Vol_10,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 50 Index\') AS Profit_HF_Vol_50,\nSUM((""Profit""/""RateMargin"")*-1) FILTER (Where ""Symbol"" = \'HF Volatility 100 Index\') AS Profit_HF_Vol_100\nFROM mt5_deals_2019 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nand date(""Time"") = {{Time_2}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\n\n', 'template-tags': {'Time_2': {'widget-type': 'date/relative', 'default': 'yesterday', 'name': 'Time_2', 'type': 'dimension', 'id': '795158f5-8ad2-8ba9-2167-41c7688061d6', 'dimension': ['field-id', 7452], 'display-name': 'Time 2', 'required': True}}}}",,table,,False,False,371,,TEST,,native,,,,2019-02-15 03:58:21.296,"{'table.pivot_column': 'commissions_vol_10', 'table.cell_column': 'commissions_vol_10'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-03-15 09:27:01.798,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select [[{{x}}]]', 'template-tags': {'x': {'id': 'bf82ce8e-5145-d9d0-2d61-9b0ad95aaebd', 'name': 'x', 'display-name': 'optional var', 'type': 'number'}}}}",,table,,False,False,498,,test,,native,,[],,2019-03-15 09:27:05.826,{}
False,,,,,2018-11-12 02:19:45.165,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Transaction -> Turnover & Payout by Country\n-- NOTE: this report performs USD conversions at the time the report is run, based upon the totals\n-- That means that the numbers can change with time as the exchange rate moves\nWITH params AS (SELECT\n        -- Start date\n        '2018-11-01'::DATE AS start_date,\n        \n        -- End date\n        '2018-11-30'::DATE AS end_date,\n\n        -- Use zero, one or more of the broker codes CR, JP, MF, MLT, MX like this {} -or- {CR} -or- {CR, JP, MF, MLT, MX}\n        -- Note: {} is equivalent to {CR, JP, MF, MLT, MX}\n        -- Running against CR for long intervals will probably take a rather long time\n        '{CR}'::VARCHAR[] AS p_broker,\n\n        -- Use zero, one or more lower case country codes like this {} -or- {ie} -or- {ie,pt,gb}\n        -- Note: {} is equivalent to requesting all countries\n        '{}'::VARCHAR[] AS country\n)\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\n    SELECT\n        a.residence,\n        a.broker_code,\n        a.currency_code,\n        transaction.round_amount(a.currency_code, a.turnover) AS turnover,\n        transaction.round_amount('USD', a.turnover * exch.rate) AS turnover_usd,\n        transaction.round_amount(a.currency_code, a.payout) AS payout,\n        transaction.round_amount('USD', a.payout * exch.rate) AS payout_usd\n    FROM\n    (\n        SELECT\n            bc.residence,\n            bc.broker_code,\n            ta.currency_code,\n            SUM(tt.amount) FILTER (WHERE tt.action_type = 'buy') * -1 AS turnover,\n            SUM(tt.amount) FILTER (WHERE tt.action_type = 'sell') AS payout\n        FROM\n            transaction.transaction AS tt\n        JOIN\n            transaction.account AS ta ON ta.id = tt.account_id\n        JOIN\n            betonmarkets.client AS bc ON bc.loginid = ta.client_loginid\n        WHERE\n            tt.action_type IN ('buy','sell')\n            AND tt.transaction_time >= start_date\n            AND tt.transaction_time < end_date) + INTERVAL '1 day'\n        GROUP BY 1,2,3\n        ORDER BY 1,2,3\n    ) a\n    LEFT JOIN data_collection.exchangetousd_rate(a.currency_code) exch(rate) ON TRUE\n""}}",,table,,False,False,35,,test,,native,,,,2018-11-12 02:19:45.165,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-03-20 05:28:05.239,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select 1'}}",,table,,False,False,504,,test 000,,native,,"[{'name': '?column?', 'display_name': '?column?', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1.0, 'avg': 1.0, 'sd': None, 'q1': 1.0, 'q3': 1.0}}}}]",,2019-03-20 05:28:05.239,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-03-20 05:15:03.485,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select 1'}}",,table,,False,False,503,,test 000,,native,,"[{'name': '?column?', 'display_name': '?column?', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1.0, 'avg': 1.0, 'sd': None, 'q1': 1.0, 'q3': 1.0}}}}]",,2019-03-20 05:28:59.725,{}
False,,,,,2019-03-17 07:07:24.014,"{'email': 'parviz@regentmarkets.com', 'first_name': 'Parviz', 'last_login': '2019-07-03T05:55:34.855Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 52, 'last_name': 'asoodefard', 'date_joined': '2019-01-08T07:10:52.493Z', 'common_name': 'Parviz asoodefard'}",52,2,"{'native': {'template-tags': {'loginid': {'id': 'b9baa1d5-9dcf-adbe-81be-fd5ce8290146', 'name': 'loginid', 'display-name': 'loginid', 'type': 'text', 'required': True}, 'since': {'id': '55f2411b-40fd-e4f4-8aba-1be01f6bb6b5', 'name': 'since', 'display-name': 'since', 'type': 'date', 'required': True, 'default': '2018-01-01'}}, 'query': 'select sum (""client_pnl_usd"") \nfrom (\n    select round((sell_price-buy_price)*data_collection.exchangetousd_rate(a.currency_code, purchase_time),2) as ""client_pnl_usd""\n    from bet.financial_market_bet \n    join transaction.account as a\n    on a.id = account_id\n    where 1=1\n    [[and a.client_loginid = {{loginid}}]]\n    and purchase_time >= {{since}}\n) as t'}, 'type': 'native', 'database': 2}",,gauge,,False,False,500,,test non-default value,,native,,"[{'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}]",,2019-03-17 07:11:33.580,"{'gauge.segments': [{'min': 5000, 'max': 20000, 'color': '#ED6E6E', 'label': ''}, {'min': 500, 'max': 5000, 'color': '#F9CF48', 'label': ''}, {'min': 0, 'max': 500, 'color': '#84BB4C', 'label': ''}], 'column_settings': {'[""name"",""sum""]': {'number_style': 'currency'}}, 'card.title': ""Client's total Profit""}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-01-01 03:41:23.240,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select * from transaction.transaction limit 10'}}",,table,,False,False,150,,Test question,,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1757861.0, 'max': 6868801.0, 'avg': 4588773.0, 'sd': 1818631.0997059788, 'q1': 3137191.0, 'q3': 6617401.0}}}}, {'name': 'transaction_time', 'display_name': 'Transaction Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-03-10T08:15:29.132Z', 'latest': '2018-03-10T08:16:10.248Z'}}}}, {'name': 'amount', 'display_name': 'Amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 4.0, 'avg': 0.93, 'sd': 1.37292064996893, 'q1': 0.0, 'q3': 1.94}}}}, {'name': 'staff_loginid', 'display_name': 'Staff Login ID', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'remark', 'display_name': 'Remark', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'referrer_type', 'display_name': 'Refer Rer Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.0}}}}, {'name': 'financial_market_bet_id', 'display_name': 'Financial Market Bet ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 12019378301.000002, 'max': 12019383321.000002, 'avg': 12019380589.0, 'sd': 1576.3868673506372, 'q1': 12019379461.0, 'q3': 12019381761.0}}}}, {'name': 'payment_id', 'display_name': 'Payment ID', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'action_type', 'display_name': 'Action Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.0}}}}, {'name': 'quantity', 'display_name': 'Quantity', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1.0, 'avg': 1.0, 'sd': 0.0, 'q1': 1.0, 'q3': 1.0}}}}, {'name': 'balance_after', 'display_name': 'Balance After', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5.9, 'max': 698.93, 'avg': 163.24499999999998, 'sd': 281.1965103406829, 'q1': 8.51, 'q3': 88.71}}}}, {'name': 'source', 'display_name': 'Source', 'base_type': 'type/Integer', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 2.0, 'avg': 2.0, 'sd': 0.0, 'q1': 2.0, 'q3': 2.0}}}}, {'name': 'app_markup', 'display_name': 'App Markup', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}]",,2019-02-21 06:36:55.009,"{'table.pivot_column': 'remark', 'table.cell_column': 'id'}"
False,,"{'id': 65, 'name': ""Parviz asoodefard's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 52, 'slug': 'parviz_asoodefard_s_personal_collection'}",65.0,,2019-01-08 07:37:08.977,"{'email': 'parviz@regentmarkets.com', 'first_name': 'Parviz', 'last_login': '2019-07-03T05:55:34.855Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 52, 'last_name': 'asoodefard', 'date_joined': '2019-01-08T07:10:52.493Z', 'common_name': 'Parviz asoodefard'}",52,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select * from transaction.transaction\nlimit 10'}}",,line,,False,False,191,,test1,,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2233861.0, 'max': 7324601.0, 'avg': 5507977.0, 'sd': 2094360.0251214372, 'q1': 3408201.0, 'q3': 7114001.0}}}}, {'name': 'transaction_time', 'display_name': 'Transaction Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2017-12-21T00:08:51.029Z', 'latest': '2017-12-21T00:09:13.030Z'}}}}, {'name': 'amount', 'display_name': 'Amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.1, 'max': 2.26, 'avg': 2.089, 'sd': 0.36268903117317003, 'q1': 2.095410196624968, 'q3': 2.25}}}}, {'name': 'staff_loginid', 'display_name': 'Staff Login ID', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'remark', 'display_name': 'Remark', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'referrer_type', 'display_name': 'Refer Rer Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.0}}}}, {'name': 'financial_market_bet_id', 'display_name': 'Financial Market Bet ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 11278386581.0, 'max': 11278403501.0, 'avg': 11278393079.0, 'sd': 5909.280460052269, 'q1': 11278388801.000002, 'q3': 11278394081.0}}}}, {'name': 'payment_id', 'display_name': 'Payment ID', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'action_type', 'display_name': 'Action Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.0}}}}, {'name': 'quantity', 'display_name': 'Quantity', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1.0, 'avg': 1.0, 'sd': 0.0, 'q1': 1.0, 'q3': 1.0}}}}, {'name': 'balance_after', 'display_name': 'Balance After', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4.04, 'max': 893.41, 'avg': 483.149, 'sd': 255.69312259686086, 'q1': 327.96, 'q3': 597.52}}}}, {'name': 'source', 'display_name': 'Source', 'base_type': 'type/Integer', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 2.0, 'avg': 2.0, 'sd': 0.0, 'q1': 2.0, 'q3': 2.0}}}}, {'name': 'app_markup', 'display_name': 'App Markup', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}]",,2019-02-12 12:41:50.422,"{'graph.dimensions': ['id'], 'graph.metrics': ['account_id']}"
False,,"{'id': 58, 'name': 'tests', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'tests'}",58.0,,2019-01-02 06:12:15.890,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select * from mt5_deals_2019 limit 100'}}",,table,,False,False,155,,test_mt5,,native,,"[{'name': 'Deal', 'display_name': 'Deal', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 100, 'nil%': 0.0}, 'type': {'type/Number': {'min': 42583747.0, 'max': 42583937.0, 'avg': 42583836.18, 'sd': 57.89478090955744, 'q1': 42583787.5, 'q3': 42583888.5}}}}, {'name': 'Timestamp', 'display_name': 'Timestamp', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 100, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.319091453205367e+17, 'max': 1.319091475335339e+17, 'avg': 1.3190914632194262e+17, 'sd': 683208704.7489613, 'q1': 1.319091457590748e+17, 'q3': 1.3190914696425651e+17}}}}, {'name': 'ExternalID', 'display_name': 'External ID', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.28}}}}, {'name': 'Login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 51, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4556.0, 'max': 160654.0, 'avg': 106189.63, 'sd': 49962.04819633426, 'q1': 59088.0, 'q3': 155249.29529174254}}}}, {'name': 'Dealer', 'display_name': 'Dealer', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1.0, 'avg': 0.04, 'sd': 0.196946385566932, 'q1': 0.0, 'q3': 0.335036054921725}}}}, {'name': 'Order', 'display_name': 'Order', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 100, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 48796205.0, 'avg': 48308133.629999995, 'sd': 4879609.458150016, 'q1': 48796047.50000001, 'q3': 48796152.50000001}}}}, {'name': 'Action', 'display_name': 'Action', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 2.0, 'avg': 0.54, 'sd': 0.52068331172711, 'q1': 0.031860898041276, 'q3': 1.039215686274509}}}}, {'name': 'Entry', 'display_name': 'Entry', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1.0, 'avg': 0.4, 'sd': 0.49236596391733006, 'q1': 0.0, 'q3': 0.8786796564403571}}}}, {'name': 'Reason', 'display_name': 'Reason', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 17.0, 'avg': 11.71, 'sd': 6.843554809033272, 'q1': 4.333333333333333, 'q3': 16.171667168200074}}}}, {'name': 'Digits', 'display_name': 'Digits', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 5.0, 'avg': 3.31, 'sd': 0.950225916784683, 'q1': 2.347307657987647, 'q3': 4.113207547169812}}}}, {'name': 'DigitsCurrency', 'display_name': 'Digits Currency', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 2.0, 'avg': 2.0, 'sd': 0.0, 'q1': 2.0, 'q3': 2.0}}}}, {'name': 'ContractSize', 'display_name': 'Contract Size', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 100000.0, 'avg': 4000.95, 'sd': 19694.44366208629, 'q1': 0.711434945729928, 'q3': 33162.38763273342}}}}, {'name': 'Time', 'display_name': 'Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 80, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-02T14:55:32.000Z', 'latest': '2019-01-02T14:59:13.000Z'}}}}, {'name': 'TimeMsc', 'display_name': 'Time Msc', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 99, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-02T14:55:32.053Z', 'latest': '2019-01-02T14:59:13.353Z'}}}}, {'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 18.59}}}}, {'name': 'Price', 'display_name': 'Price', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 90, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 113512.8442, 'avg': 65019.9587235, 'sd': 54835.93792381319, 'q1': 3325.4127159979557, 'q3': 113377.63088125933}}}}, {'name': 'VolumeExt', 'display_name': 'Volume Ext', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 100000000.0, 'avg': 6390000.0, 'sd': 14090540.56214073, 'q1': 934240.8125486341, 'q3': 4867295.401695068}}}}, {'name': 'Profit', 'display_name': 'Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 39, 'nil%': 0.0}, 'type': {'type/Number': {'min': -20.55, 'max': 73.43, 'avg': 1.8751000000000002, 'sd': 11.264731633633257, 'q1': -0.031124119538651, 'q3': 0.008848078319333002}}}}, {'name': 'Storage', 'display_name': 'Storage', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'Commission', 'display_name': 'Commission', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'RateProfit', 'display_name': 'Rate Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1.011633788568538, 'avg': 0.400116337885685, 'sd': 0.492510519170524, 'q1': 0.0, 'q3': 0.8879930354156821}}}}, {'name': 'RateMargin', 'display_name': 'Rate Margin', 'base_type': 'type/Float', 'special_type': 'type/GrossMargin', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1.1368800000000001, 'avg': 0.9941011999999999, 'sd': 0.10311250715543001, 'q1': 0.707735667757135, 'q3': 1.043938226100675}}}}, {'name': 'ExpertID', 'display_name': 'Expert ID', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1177.0, 'avg': 23.54, 'sd': 165.61013119841297, 'q1': 0.0, 'q3': 368.8950042436028}}}}, {'name': 'PositionID', 'display_name': 'Position ID', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 96, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 48796205.0, 'avg': 48306529.03, 'sd': 4879448.967057559, 'q1': 48795589.5, 'q3': 48796080.166666664}}}}, {'name': 'Comment', 'display_name': 'Comment', 'base_type': 'type/Text', 'special_type': 'type/Comment', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 1.44}}}}, {'name': 'ProfitRaw', 'display_name': 'Profit Raw', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 38, 'nil%': 0.0}, 'type': {'type/Number': {'min': -20.55, 'max': 73.43, 'avg': 1.7754, 'sd': 11.236116139440261, 'q1': -0.031445105230132005, 'q3': 0.007908192531504}}}}, {'name': 'PricePosition', 'display_name': 'Price Position', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 41, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 113337.3994, 'avg': 18925.9455477, 'sd': 41359.31969641284, 'q1': 0.0, 'q3': 3322.2}}}}, {'name': 'VolumeClosedExt', 'display_name': 'Volume Closed Ext', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 100000000.0, 'avg': 3730000.0, 'sd': 11993984.182316419, 'q1': 0.0, 'q3': 1719223.5935955849}}}}, {'name': 'TickValue', 'display_name': 'Tick Value', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.01, 'avg': 0.003146, 'sd': 0.004516891306054, 'q1': 8.463995748072391e-05, 'q3': 0.006532386700088001}}}}, {'name': 'TickSize', 'display_name': 'Tick Size', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.01, 'avg': 0.003146, 'sd': 0.004516891306054, 'q1': 8.463995748072391e-05, 'q3': 0.006532386700088001}}}}, {'name': 'Flags', 'display_name': 'Flags', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'Gateway', 'display_name': 'Gateway', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.0}}}}, {'name': 'PriceGateway', 'display_name': 'Price Gateway', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 124.273, 'avg': 1.2753503, 'sd': 12.425409088079482, 'q1': 0.0, 'q3': 0.33376156910647103}}}}, {'name': 'ModifyFlags', 'display_name': 'Modify Flags', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 0.0, 'avg': 0.0, 'sd': 0.0, 'q1': 0.0, 'q3': 0.0}}}}, {'name': 'Volume', 'display_name': 'Volume', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 15, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 10000.0, 'avg': 639.0, 'sd': 1409.0540562140734, 'q1': 93.42408125486341, 'q3': 486.7295401695068}}}}, {'name': 'VolumeClosed', 'display_name': 'Volume Closed', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 10000.0, 'avg': 373.0, 'sd': 1199.3984182316424, 'q1': 0.0, 'q3': 171.92235935955847}}}}, {'name': 'ApiData', 'display_name': 'Api Data', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 1.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}]",,2019-01-03 02:48:47.058,"{'table.pivot_column': 'ExternalID', 'table.cell_column': 'Deal'}"
False,,"{'id': 39, 'name': ""Eric Lopes's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 40, 'slug': 'eric_lopes_s_personal_collection'}",39.0,,2019-01-18 03:22:36.696,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select ""Group"", count(""Login"") \nfrom mt5_users \ngroup by ""Group""\nlimit 100'}}",,bar,,False,False,215,,test_mt5_groups,,native,,"[{'name': 'Group', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 18.615384615384617}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 21466.0, 'avg': 2472.3076923076924, 'sd': 5964.9077023400705, 'q1': 13.06674090580847, 'q3': 1782.75}}}}]",,2019-02-14 05:19:37.965,"{'graph.dimensions': ['Group'], 'graph.metrics': ['count']}"
False,,"{'id': 59, 'name': 'MT5-2018', 'description': 'MT5 related analytics', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5_2018'}",59.0,,2019-01-07 02:26:19.646,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT generate_series, random() ""foo"", random() ""bar""\nFROM generate_series(1, 10, 1);'}}",,table,,False,False,182,,test_multiple_line_mt5,,native,,"[{'name': 'generate_series', 'display_name': 'Generate Series', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 10.0, 'avg': 5.5, 'sd': 3.027650354097491, 'q1': 3.0, 'q3': 8.0}}}}, {'name': 'foo', 'display_name': 'Foo', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.013430620543658001, 'max': 0.733485065866261, 'avg': 0.40741648790426505, 'sd': 0.25410599522963, 'q1': 0.175174003932625, 'q3': 0.6657720780931411}}}}, {'name': 'bar', 'display_name': 'Bar', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.034481482580304, 'max': 0.9128100033849471, 'avg': 0.523144421493634, 'sd': 0.329328201435216, 'q1': 0.19399606343358702, 'q3': 0.8301980313844971}}}}]",,2019-02-14 05:19:37.637,"{'graph.dimensions': ['generate_series'], 'graph.metrics': ['foo', 'bar'], 'column_settings': {'[""name"",""foo""]': {'show_mini_bar': True}}, 'table.pivot_column': 'generate_series', 'table.cell_column': 'generate_series', 'table.column_formatting': [{'max_value': 100, 'color': '#509EE3', 'columns': ['foo'], 'value': '', 'type': 'range', 'colors': ['white', '#509EE3'], 'highlight_row': False, 'min_value': 0, 'min_type': None, 'operator': '=', 'max_type': None}]}"
False,,"{'id': 39, 'name': ""Eric Lopes's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 40, 'slug': 'eric_lopes_s_personal_collection'}",39.0,,2019-01-18 03:31:45.768,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'native': {'template-tags': {'d': {'id': '3cb5a738-0517-0d42-621d-12737ec8dd7d', 'name': 'd', 'display-name': 'd', 'type': 'dimension', 'required': True, 'default': 'thisday', 'dimension': ['field-id', 260], 'widget-type': 'date/all-options'}}, 'query': 'select * from transaction.firsts \nwhere {{d}}\nlimit 100'}, 'type': 'native', 'database': 2}",,table,,False,False,216,40.0,test_new_cr,eb7de795-aabf-4e1c-ad09-27fa8d7a7331,native,,"[{'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 90, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5079101.0, 'max': 11223021.0, 'avg': 11028720.4, 'sd': 771149.5901217146, 'q1': 11151643.49783362, 'q3': 11217134.14267539}}}}, {'name': 'action_type', 'display_name': 'Action Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.84}}}}, {'name': 'transaction_id', 'display_name': 'Transaction ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 100, 'nil%': 0.0}, 'type': {'type/Number': {'min': 29630171461.0, 'max': 29643845041.0, 'avg': 29636495912.000004, 'sd': 3295687.580533762, 'q1': 29634567346.054012, 'q3': 29638137353.34263}}}}, {'name': 'amount', 'display_name': 'Amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 48, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1438.79, 'avg': 20.1578352838, 'sd': 145.03824133525904, 'q1': 7.674505356380225e-05, 'q3': 1.954514162296451}}}}, {'name': 'transaction_time', 'display_name': 'Transaction Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 100, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:02:21.047Z', 'latest': '2019-01-01T23:50:22.124Z'}}}}, {'name': 'source', 'display_name': 'Source', 'base_type': 'type/Integer', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.28}, 'type': {'type/Number': {'min': 2.0, 'max': 3.0, 'avg': 2.013888888888889, 'sd': 0.117851130197757, 'q1': 2.0, 'q3': 2.3070346403150532}}}}, {'name': 'market_type', 'display_name': 'Market Type', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.28}}}]",,2019-02-14 05:19:59.896,"{'table.pivot_column': 'market_type', 'table.cell_column': 'account_id'}"
False,,"{'id': 39, 'name': ""Eric Lopes's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 40, 'slug': 'eric_lopes_s_personal_collection'}",39.0,,2019-01-15 05:37:09.337,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'native': {'template-tags': {'date': {'id': 'caf7702f-11da-16cd-38d6-ad6a8425e8b3', 'name': 'date', 'display-name': 'date', 'type': 'dimension', 'required': True, 'default': 'past1days~', 'dimension': ['field-id', 852], 'widget-type': 'date/all-options'}}, 'query': 'select * from betonmarkets.client\nwhere {{date}}\nlimit 100000\n'}, 'type': 'native', 'database': 2}",,table,,False,False,209,40.0,test_question,f55d2c23-2d95-49b2-b0f1-568482466c9e,native,,"[{'name': 'loginid', 'display_name': 'Login ID', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 760, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'client_password', 'display_name': 'Client Password', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 710, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 87.5421052631579}}}}, {'name': 'first_name', 'display_name': 'First Name', 'base_type': 'type/Text', 'special_type': 'type/Name', 'fingerprint': {'global': {'distinct-count': 671, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.380263157894737}}}}, {'name': 'last_name', 'display_name': 'Last Name', 'base_type': 'type/Text', 'special_type': 'type/Name', 'fingerprint': {'global': {'distinct-count': 689, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.036842105263158}}}}, {'name': 'email', 'display_name': 'Email', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 712, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 1.0, 'average-length': 22.91315789473684}}}}, {'name': 'allow_login', 'display_name': 'Allow Login', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'broker_code', 'display_name': 'Broker Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 57, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'citizen', 'display_name': 'Citizen', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 36, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.42631578947368404}}}}, {'name': 'salutation', 'display_name': 'Salutation', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.168421052631579}}}}, {'name': 'address_line_1', 'display_name': 'Address Line 1', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 704, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0013157894736840002, 'average-length': 21.551315789473684}}}}, {'name': 'address_line_2', 'display_name': 'Address Line 2', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 445, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0013157894736840002, 'average-length': 9.51578947368421}}}}, {'name': 'address_city', 'display_name': 'Address City', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 574, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.569736842105263}}}}, {'name': 'address_state', 'display_name': 'Address State', 'base_type': 'type/Text', 'special_type': 'type/State', 'fingerprint': {'global': {'distinct-count': 217, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 1.9105263157894732}}}}, {'name': 'address_postcode', 'display_name': 'Address Postcode', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 562, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.028947368421052}}}}, {'name': 'phone', 'display_name': 'Phone', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 695, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 13.093421052631578}}}}, {'name': 'date_joined', 'display_name': 'Date Joined', 'base_type': 'type/DateTime', 'special_type': 'type/JoinTimestamp', 'fingerprint': {'global': {'distinct-count': 757, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-13T00:03:30.000Z', 'latest': '2019-02-14T04:44:04.000Z'}}}}, {'name': 'latest_environment', 'display_name': 'Latest Environment', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 124, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 27.076315789473686}}}}, {'name': 'secret_question', 'display_name': 'Secret Question', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 16.75526315789474}}}}, {'name': 'secret_answer', 'display_name': 'Secret Answer', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 712, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 158.75}}}}, {'name': 'restricted_ip_address', 'display_name': 'Restricted IP Address', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.0}}}}, {'name': 'gender', 'display_name': 'Gender', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 1.0}}}}, {'name': 'cashier_setting_password', 'display_name': 'Cashier Setting Password', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.23157894736842102}}}}, {'name': 'date_of_birth', 'display_name': 'Date Of Birth', 'base_type': 'type/Date', 'special_type': 'type/Birthdate', 'fingerprint': {'global': {'distinct-count': 674, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '1941-05-04T00:00:00.000Z', 'latest': '2001-02-13T00:00:00.000Z'}}}}, {'name': 'small_timer', 'display_name': 'Small Timer', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'comment', 'display_name': 'Comment', 'base_type': 'type/Text', 'special_type': 'type/Comment', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.0}}}}, {'name': 'myaffiliates_token', 'display_name': 'My Affiliates Token', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 207, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.136842105263158}}}}, {'name': 'myaffiliates_token_registered', 'display_name': 'My Affiliates Token Registered', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}}}, {'name': 'checked_affiliate_exposures', 'display_name': 'Checked Affiliate Exposures', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'custom_max_acbal', 'display_name': 'Custom Max Ac Bal', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'custom_max_daily_turnover', 'display_name': 'Custom Max Daily Turnover', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'custom_max_payout', 'display_name': 'Custom Max Pay Out', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'payment_agent_withdrawal_expiration_date', 'display_name': 'Payment Agent Withdrawal Expiration Date', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'first_time_login', 'display_name': 'First Time Login', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'source', 'display_name': 'Source', 'base_type': 'type/Text', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 1.585526315789473}}}}, {'name': 'aml_risk_classification', 'display_name': 'A Ml Risk Classification', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.013157894736842}}}}, {'name': 'allow_copiers', 'display_name': 'Allow Copiers', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.9986842105263151}}}, {'name': 'place_of_birth', 'display_name': 'Place Of Birth', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 61, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'tax_residence', 'display_name': 'Tax Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 33, 'nil%': 0.8289473684210521}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.334210526315789}}}}, {'name': 'tax_identification_number', 'display_name': 'Tax Identification Number', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 44, 'nil%': 0.9289473684210521}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 0.6052631578947361}}}}, {'name': 'account_opening_reason', 'display_name': 'Account Opening Reason', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 13.423684210526316}}}}, {'name': 'mifir_id', 'display_name': 'Mi Fir ID', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 712, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4051102.0, 'max': 6187274.0, 'avg': 6151434.534210527, 'sd': 147544.0853455112, 'q1': 6182034.553322712, 'q3': 6186545.261752997}}}}]",,2019-02-14 05:19:50.517,"{'table.pivot_column': 'custom_max_acbal', 'table.cell_column': 'binary_user_id'}"
False,,"{'id': 14, 'name': ""Yng Shan Tan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 12, 'slug': 'yng_shan_tan_s_personal_collection'}",14.0,,2019-08-08 06:20:08.210,"{'email': 'yngshan@binary.com', 'first_name': 'Yng Shan', 'last_login': '2019-10-21T01:07:21.265Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 12, 'last_name': 'Tan', 'date_joined': '2018-11-08T08:46:36.532Z', 'common_name': 'Yng Shan Tan'}",12,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select * from transaction.transaction where transaction_time > '2019-08-07';""}}",,table,,False,False,1025,,testing,,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 358, 'nil%': 0.0}, 'type': {'type/Number': {'min': 497601.0, 'max': 14350301.0, 'avg': 11274666.879999999, 'sd': 3558285.514244158, 'q1': 9738410.374999998, 'q3': 13979496.93810074}}}}, {'name': 'transaction_time', 'display_name': 'Transaction Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1995, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-08-07T00:00:00.089Z', 'latest': '2019-08-07T00:01:27.285Z'}}}}, {'name': 'amount', 'display_name': 'Amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 380, 'nil%': 0.0}, 'type': {'type/Number': {'min': -2000.0, 'max': 2000.0, 'avg': 1.386765387574999, 'sd': 69.68392251024028, 'q1': -1.10712349475751, 'q3': 0.771262194229912}}}}, {'name': 'staff_loginid', 'display_name': 'Staff Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 280, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.003}}}}, {'name': 'remark', 'display_name': 'Remark', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.998}}}, {'name': 'referrer_type', 'display_name': 'Referrer Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.922}}}}, {'name': 'financial_market_bet_id', 'display_name': 'Financial Market Bet ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1178, 'nil%': 0.006}, 'type': {'type/Number': {'min': 17273008781.0, 'max': 17600012641.0, 'avg': 17597011411.40241, 'sd': 16845460.9877978, 'q1': 17599878499.122143, 'q3': 17600004927.158722}}}}, {'name': 'payment_id', 'display_name': 'Payment ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.994}, 'type': {'type/Number': {'min': 273688461.0, 'max': 273688681.0, 'avg': 273688571.0, 'sd': 72.11102550927978, 'q1': 273688511.0, 'q3': 273688631.0}}}}, {'name': 'action_type', 'display_name': 'Action Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.5605}}}}, {'name': 'quantity', 'display_name': 'Quantity', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1.0, 'avg': 1.0, 'sd': 0.0, 'q1': 1.0, 'q3': 1.0}}}}, {'name': 'balance_after', 'display_name': 'Balance After', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1564, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 14633.19, 'avg': 650.51256061988, 'sd': 1559.2586259979412, 'q1': 22.3676615079016, 'q3': 424.0949035124939}}}}, {'name': 'source', 'display_name': 'Source', 'base_type': 'type/Integer', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 21, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 18800.0, 'avg': 6515.237, 'sd': 7597.430355774011, 'q1': 1.845017292277865, 'q3': 15447.185641348742}}}}, {'name': 'app_markup', 'display_name': 'App Markup', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0.532}, 'type': {'type/Number': {'min': 0.0, 'max': 0.58, 'avg': 0.006709401709401001, 'sd': 0.041633298032899, 'q1': 0.0, 'q3': 0.0035547267727780003}}}}]",,2019-08-08 06:23:37.687,"{'table.pivot_column': 'id', 'table.cell_column': 'id'}"
False,,"{'id': 34, 'name': ""Torsten Foertsch's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 35, 'slug': 'torsten_foertsch_s_personal_collection'}",34.0,,2018-11-12 03:09:17.822,"{'email': 'torsten@binary.com', 'first_name': 'Torsten', 'last_login': '2018-11-12T02:51:41.972Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 35, 'last_name': 'Foertsch', 'date_joined': '2018-11-12T02:01:36.757Z', 'common_name': 'Torsten Foertsch'}",35,2,"{'native': {'template-tags': {'action_type': {'id': 'c7268df2-6dc6-073a-10eb-e83dfd1b9a42', 'name': 'action_type', 'display-name': 'Action type', 'type': 'text', 'required': True, 'default': 'buy'}, 'Interval': {'id': '15bddb8a-454f-5962-b824-edf1d8eda123', 'name': 'Interval', 'display-name': 'Interval', 'type': 'text', 'required': True, 'default': '30'}}, 'query': ""SELECT -sum(x.amount) AS sum, date_trunc('day', x.transaction_time)::date AS transaction_time\n  FROM transaction.transaction x\n WHERE 'today'::timestamp - ({{Interval}}||'d')::INTERVAL <= x.transaction_time AND x.transaction_time < 'today'::timestamp\n   AND x.action_type = {{action_type}}\n GROUP BY 2\n ORDER BY 2 ASC""}, 'type': 'native', 'database': 2}",,bar,,False,False,36,,tf test,,native,,"[{'name': 'sum', 'display_name': 'Sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1819347.94360834, 'max': 3209350.13028982, 'avg': 2372795.1459502685, 'sd': 337325.4740444823, 'q1': 2191084.36349336, 'q3': 2553787.09408923}}}}, {'name': 'transaction_time', 'display_name': 'Transaction Time', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-11-06T00:00:00.000Z', 'latest': '2018-12-05T00:00:00.000Z'}}}}]",,2018-12-06 09:51:24.028,"{'graph.dimensions': ['transaction_time'], 'graph.metrics': ['sum']}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:19.302,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""\n\n    SELECT *\n    FROM\n      (SELECT \n      round(sum(CASE WHEN (deals.Action = 2 AND deals.Profit>0) THEN deals.Profit ELSE 0 END), 2) as Deposit\n      FROM mt5_deals_2017 AS deals\n      INNER JOIN mt5_users AS users\n      ON (deals.Login=users.Login)\n      WHERE users.Group LIKE '%real%'\n      AND DATE(deals.time) >= '2017-04-01'\n      AND DATE(deals.time) <= '2017-04-30') as t\n      WHERE Deposit > 0\n""}}",,table,,False,False,630,,The SQL query to obtain Total Deposit for real account (Whole),,native,,,,2019-03-22 03:27:19.302,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:19.291,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT *\n    FROM\n      (SELECT \n      round(sum(CASE WHEN (deals.Action = 2 AND deals.Profit>0) THEN deals.Profit ELSE 0 END), 2) as Deposit\n      FROM mt5_deals_2017 AS deals\n      INNER JOIN mt5_users AS users\n      ON (deals.Login=users.Login)\n      WHERE users.Group LIKE '%real%Champion%'\n      AND DATE(deals.time) >= '2017-04-01'\n      AND DATE(deals.time) <= '2017-04-30') as t\n      WHERE Deposit > 0\n""}}",,table,,False,False,629,,The SQL query to obtain Total Deposit for the Champion group only ,,native,,,,2019-03-22 03:27:19.291,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-09-03 09:58:43.190,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select * from bet.financial_market_bet \nwhere coalesce(tick_count, 0) > 0\nand purchase_time >= '2019-01-01'\nand purchase_time < '2019-01-09'\nand underlying_symbol like 'frx%'""}}",,table,,False,False,1034,,tick trades on forex,,native,,"[{'name': 'id', 'display_name': 'ID', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'purchase_time', 'display_name': 'Purchase Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1957, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-02T00:16:18.000Z', 'latest': '2019-01-02T15:17:01.000Z'}}}}, {'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 169, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1384141.0, 'max': 11230121.0, 'avg': 9327938.15, 'sd': 2513228.437433895, 'q1': 6880109.77200922, 'q3': 11140695.007695109}}}}, {'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.0}}}}, {'name': 'payout_price', 'display_name': 'Payout Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 360, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.00034187, 'max': 560.13, 'avg': 8.176080153510004, 'sd': 19.441352040833316, 'q1': 1.200525983236509, 'q3': 7.045804536065654}}}}, {'name': 'buy_price', 'display_name': 'Buy Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 137, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0002, 'max': 300.0, 'avg': 4.41652125, 'sd': 10.459429779769833, 'q1': 0.562526368839529, 'q3': 3.858359414135178}}}}, {'name': 'sell_price', 'display_name': 'Sell Price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 229, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 93.46, 'avg': 3.588178202870001, 'sd': 9.974329446832645, 'q1': 3.0838276884497255e-05, 'q3': 1.8286314838263942}}}}, {'name': 'start_time', 'display_name': 'Start Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1957, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-02T00:16:18.000Z', 'latest': '2019-01-02T15:17:01.000Z'}}}}, {'name': 'expiry_time', 'display_name': 'Expiry Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1953, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-02T00:16:28.000Z', 'latest': '2019-01-02T15:17:11.000Z'}}}}, {'name': 'settlement_time', 'display_name': 'Settlement Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1953, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-02T00:16:28.000Z', 'latest': '2019-01-02T15:17:11.000Z'}}}}, {'name': 'expiry_daily', 'display_name': 'Expiry Daily', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'is_expired', 'display_name': 'Is Expired', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'is_sold', 'display_name': 'Is Sold', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'bet_class', 'display_name': 'Bet Class', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 16.0}}}}, {'name': 'bet_type', 'display_name': 'Bet Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.5465}}}}, {'name': 'remark', 'display_name': 'Remark', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1997, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 294.0915}}}}, {'name': 'short_code', 'display_name': 'Short Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1998, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 38.9075}}}}, {'name': 'sell_time', 'display_name': 'Sell Time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1941, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-02T00:16:25.000Z', 'latest': '2019-01-02T15:17:08.000Z'}}}}, {'name': 'fixed_expiry', 'display_name': 'Fixed Expiry', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'tick_count', 'display_name': 'Tick Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5.0, 'max': 10.0, 'avg': 5.8245000000000005, 'sd': 1.768689877265364, 'q1': 5.0, 'q3': 5.632690045602246}}}}]",,2019-09-03 10:03:02.897,"{'table.columns': [{'name': '?column?', 'enabled': True}, {'name': 'query', 'enabled': True}], 'table.pivot_column': 'duration', 'table.cell_column': 'pid'}"
False,,"{'id': 221, 'name': 'Samples and Proofs of concept', 'description': 'This collection contains samples and proofs of concept.', 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'samples_and_proofs_of_concept'}",221.0,,2019-09-23 07:14:29.738,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'query': ""select \n    --to_char(purchase_time, 'YYYY-MM-DD HH24:MI:SS.MS') as purchase_time_msc, \n    --to_char(start_time, 'YYYY-MM-DD HH24:MI:SS.MS') as start_time_msc, \n    --to_char(expiry_time, 'YYYY-MM-DD HH24:MI:SS.MS') as expiry_time_msc, \n    --to_char(settlement_time, 'YYYY-MM-DD HH24:MI:SS.MS') as settlement_time_msc, \n    * \nfrom bet.financial_market_bet limit 10""}, 'type': 'native', 'database': 2}",,table,,False,False,1049,,Time formatting example,,native,,"[{'name': 'id', 'display_name': 'id', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'purchase_time', 'display_name': 'purchase_time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2004-01-07T12:17:00.000Z', 'latest': '2013-11-26T06:23:51.000Z'}}}}, {'name': 'account_id', 'display_name': 'account_id', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 749041.0, 'max': 1858081.0, 'avg': 1122437.0, 'sd': 474126.1559074289, 'q1': 755061.0, 'q3': 1709501.0}}}}, {'name': 'underlying_symbol', 'display_name': 'underlying_symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.1}}}}, {'name': 'payout_price', 'display_name': 'payout_price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 50.0, 'avg': 15.569999999999999, 'sd': 17.841403158570984, 'q1': 2.076393202250021, 'q3': 30.0}}}}, {'name': 'buy_price', 'display_name': 'buy_price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 20.0, 'avg': 7.003, 'sd': 6.596638959012048, 'q1': 1.03, 'q3': 11.339745962155614}}}}, {'name': 'sell_price', 'display_name': 'sell_price', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 48.5, 'avg': 11.209999999999999, 'sd': 15.917527027357819, 'q1': 1.9, 'q3': 16.091034656191333}}}}, {'name': 'start_time', 'display_name': 'start_time', 'base_type': 'type/DateTime', 'special_type': 'type/CreationTimestamp', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.7000000000000001}, 'type': {'type/DateTime': {'earliest': '2004-01-07T00:00:00.000Z', 'latest': '2013-08-02T00:58:08.000Z'}}}}, {'name': 'expiry_time', 'display_name': 'expiry_time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.7000000000000001}, 'type': {'type/DateTime': {'earliest': '2004-01-07T23:59:59.000Z', 'latest': '2013-08-02T00:58:38.000Z'}}}}, {'name': 'settlement_time', 'display_name': 'settlement_time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.7000000000000001}, 'type': {'type/DateTime': {'earliest': '2004-01-07T23:59:59.000Z', 'latest': '2013-08-02T00:58:38.000Z'}}}}, {'name': 'expiry_daily', 'display_name': 'expiry_daily', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}}}, {'name': 'is_expired', 'display_name': 'is_expired', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'is_sold', 'display_name': 'is_sold', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'bet_class', 'display_name': 'bet_class', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 9.7}}}}, {'name': 'bet_type', 'display_name': 'bet_type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 11.4}}}}, {'name': 'remark', 'display_name': 'remark', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 93.0}}}}, {'name': 'short_code', 'display_name': 'short_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 34.3}}}}, {'name': 'sell_time', 'display_name': 'sell_time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2004-01-08T00:25:00.000Z', 'latest': '2013-11-26T06:23:51.301Z'}}}}, {'name': 'fixed_expiry', 'display_name': 'fixed_expiry', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}, {'name': 'tick_count', 'display_name': 'tick_count', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 1.0}}}]",,2019-09-23 07:31:22.993,"{'table.pivot_column': 'start_time_msc', 'table.cell_column': 'id', 'column_settings': {'[""ref"",[""field-literal"",""purchase_time"",""type/DateTime""]]': {'time_enabled': 'milliseconds', 'time_style': 'k:mm', 'date_style': 'YYYY/M/D'}, '[""ref"",[""field-literal"",""start_time"",""type/DateTime""]]': {'time_enabled': 'milliseconds', 'time_style': 'k:mm', 'date_style': 'YYYY/M/D'}, '[""ref"",[""field-literal"",""expiry_time"",""type/DateTime""]]': {'time_enabled': 'milliseconds', 'time_style': 'k:mm', 'date_style': 'YYYY/M/D'}, '[""ref"",[""field-literal"",""settlement_time"",""type/DateTime""]]': {'time_enabled': 'milliseconds', 'time_style': 'k:mm', 'date_style': 'YYYY/M/D'}, '[""ref"",[""field-literal"",""sell_time"",""type/DateTime""]]': {'time_enabled': 'milliseconds', 'time_style': 'k:mm', 'date_style': 'YYYY/M/D'}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-28 08:46:17.435,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'email': {'id': '0934f1b6-bbb1-5033-705a-30dcbfb4777d', 'name': 'email', 'display-name': 'Email', 'type': 'text', 'required': False}}, 'query': '--SELECT account_opening_reason\n--FROM betonmarkets.client\n--where substr(""email"",1,len({{email}})) = {{email}} \nselect len({{e-mail}})'}, 'type': 'native', 'database': 2}",,table,,False,False,148,,tmp,,native,,,,2018-12-28 08:46:17.435,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-07-09 04:33:12.352,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with all_rows as (\n\twith times as (select x as purchase_minute\n\t\t\t\t   from generate_series(now() + interval '-4h'\n\t\t\t\t\t  , date_trunc('minute', now())::timestamp\n\t\t\t\t\t  , interval  '1 min') t(x)\n\t), symbols as (select distinct symbol \n\t\t\t\t   from bet.market\n\t\t\t\t   where market not in  ('stocks', 'legacy', 'cryptocurrency', 'futures', 'indices'))\n\tselect * from symbols cross join times\n\torder by 2,1\n)\n\nselect \n    all_rows.purchase_minute,\n    all_rows.symbol,\n    sum(coalesce(count_buy,0)) as count_buy\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        underlying_symbol,\n        count_buy\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            --bm.market, \n            fmb.underlying_symbol,\n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2 right join all_rows\non all_rows.purchase_minute = tmp2.purchase_minute and all_rows.symbol = tmp2.underlying_symbol\ngroup by 1,2\norder by 1 desc, 3 desc""}}",,table,,False,False,1012,,tmp2,,native,,"[{'name': 'purchase_minute', 'display_name': 'Purchase Minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2019-07-09T04:16:58.255Z', 'latest': '2019-07-09T04:22:58.255Z'}}}}, {'name': 'symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 294, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 8.874}}}}, {'name': 'count_buy', 'display_name': 'Count Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 0, 'avg': 0, 'sd': 0, 'q1': 0, 'q3': 0}}}}]",,2019-07-09 04:33:12.352,"{'graph.dimensions': ['symbol', 'purchase_minute'], 'graph.metrics': ['count_buy'], 'graph.y_axis.scale': 'pow', 'table.pivot_column': 'count_buy', 'table.cell_column': 'count_buy'}"
False,,,,,2019-08-08 07:32:09.338,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select date_part('hour', purchase_time) as hr, to_char(date_trunc('day', purchase_time), 'YYYY-MM-DD') as d, count(*) as contracts_sold from bet.financial_market_bet\nwhere ((purchase_time >= current_date and purchase_time < date_trunc('hour', now())) or (purchase_time >= current_date + interval '-7d' and purchase_time < current_date + interval '-6d'))\ngroup by 1,2\n""}}",,line,,False,False,1026,,today compared to a week ago,,native,,"[{'name': 'hr', 'display_name': 'hr', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 24, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 23.0, 'avg': 10.653846153846153, 'sd': 7.413189908223356, 'q1': 4.0, 'q3': 17.0}}}}, {'name': 'd', 'display_name': 'd', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 10.0}}}}, {'name': 'contracts_sold', 'display_name': 'contracts_sold', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 26, 'nil%': 0.0}, 'type': {'type/Number': {'min': 29325.0, 'max': 60016.0, 'avg': 39056.92307692308, 'sd': 8621.024569843548, 'q1': 32621.0, 'q3': 44211.0}}}}]",,2019-09-10 02:52:40.775,"{'graph.dimensions': ['hr', 'd'], 'graph.metrics': ['contracts_sold'], 'series_settings': {'2019-08-01': {'line.marker_enabled': None}, '2019-08-08': {'line.marker_enabled': True}}}"
False,,"{'id': 88, 'name': ""Mustofa Ghaleb Amami's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 65, 'slug': 'mustofa_ghaleb_amami_s_personal_collection'}",88.0,,2019-04-11 03:40:07.291,"{'email': 'mustofa@binary.com', 'first_name': 'Mustofa Ghaleb', 'last_login': '2019-05-23T06:57:46.611Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 65, 'last_name': 'Amami', 'date_joined': '2019-03-01T07:39:44.498Z', 'common_name': 'Mustofa Ghaleb Amami'}",65,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT  CAST(tmp.day AS date) AS day, \n        SUM(tmp.turnover) AS sum\nFROM \n    (SELECT day::date as ""day"", round(turnover*data_collection.exchangetousd_rate(a.currency_code,day), 2) as turnover\n    FROM bet.daily_aggregates\n    LEFT JOIN transaction.account a\n    ON bet.daily_aggregates.account_id=a.id\n    WHERE ""day"" >= (now() + interval \'-30 day\')::date and ""day"" < now()::date) as tmp      \nGROUP BY 1\nORDER BY 1 ASC'}}",compare to yesterday,smartscalar,,False,False,945,,Today Turnover,,native,,"[{'name': 'day', 'display_name': 'day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-10T00:00:00.000Z', 'latest': '2019-10-09T00:00:00.000Z'}}}}, {'name': 'sum', 'display_name': 'sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3495151.55, 'max': 5886283.57, 'avg': 4798144.022666667, 'sd': 640071.8979550321, 'q1': 4405269.08, 'q3': 5195455.94}}}}]",,2019-10-10 05:24:12.381,{}
False,,,,,2019-06-05 02:45:59.297,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    fmb.client_loginid||'-'||fmb.currency_code as account,\n    fmb.market,\n    sum((buy_price-sell_price)*exchange_rate) as company_profit,\n    sum(buy_price*exchange_rate) as total_buy_usd,\n    count(*) as contracts_bought\nfrom\n(\nselect bc1.loginid from betonmarkets.client bc1 left join betonmarkets.client bc2\non bc1.binary_user_id = bc2.binary_user_id\nwhere bc2.loginid = {{given_loginid}}\n) logins left join\n(select *,data_collection.exchangetousd_rate(currency_code, purchase_time) as exchange_rate \nfrom only bet.financial_market_bet f \nleft join transaction.account ta\n    on ta.id = f.account_id\nleft join bet.market bm\non f.underlying_symbol=bm.symbol\nwhere purchase_time >= current_date\n) fmb\non logins.loginid=fmb.client_loginid\nwhere fmb.client_loginid <> ''\ngroup by 1,2"", 'template-tags': {'given_loginid': {'id': '799bc433-7164-bb74-df47-3f256ae2a85e', 'name': 'given_loginid', 'display-name': 'loginid', 'type': 'text', 'required': True, 'default': 'CR391325'}}}}",,table,,False,False,997,,today's closed contracts by a client,,native,,"[{'name': 'account', 'display_name': 'Account', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 12.0}}}}, {'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.5}}}}, {'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': -44322.03, 'max': -17580.77, 'avg': -30951.4, 'sd': 18908.926283472574, 'q1': -44322.03, 'q3': -17580.77}}}}, {'name': 'total_buy_usd', 'display_name': 'Total Buy Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 20400.0, 'max': 435924.0, 'avg': 228162.0, 'sd': 293819.83814575896, 'q1': 20400.0, 'q3': 435924.0}}}}, {'name': 'contracts_bought', 'display_name': 'Contracts Bought', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 20.0, 'avg': 11.0, 'sd': 12.727922061357855, 'q1': 2.0, 'q3': 20.0}}}}]",,2019-06-05 04:01:10.030,"{'table.pivot_column': 'account', 'table.cell_column': 'company_profit'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-13 11:15:26.161,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    ta.client_loginid, \n    tmp.total_buy*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as total_buy,\n    tmp.total_profit*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as total_profit,\n    tmp.count_contracts\n    --tmp.one_letter\nfrom\n(\n    select \n        --substr(underlying_symbol,1,1) as one_letter, \n        account_id, \n        --date_part('hour', purchase_time), \n        sum(buy_price) as total_buy, \n        sum(buy_price-sell_price) as total_profit,\n        count(*) as count_contracts\n    from bet.financial_market_bet \n    where purchase_time >= current_date\n    --and substr(underlying_symbol,1,1)='R'\n    group by 1-- , 2--,3\n    order by 4, 3 desc --5, 3, 4 desc\n    --limit 200\n) tmp \njoin transaction.account ta\non ta.id=tmp.account_id\norder by 3, 4\nlimit 200""}}",,table,,False,False,962,37.0,today's top-200 winners on CR,0067effa-8950-4ce8-a9f5-cfffc3b0157e,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 200, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.995}}}}, {'name': 'total_buy', 'display_name': 'Total Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 195, 'nil%': 0.0}, 'type': {'type/Number': {'min': 80.0, 'max': 58745.5, 'avg': 3079.840644940545, 'sd': 5984.21462260324, 'q1': 472.2497106983518, 'q3': 3160.2860455535756}}}}, {'name': 'total_profit', 'display_name': 'Total Profit', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 196, 'nil%': 0.0}, 'type': {'type/Number': {'min': -7765.25, 'max': -65.36, 'avg': -382.06925739315034, 'sd': 825.1421298260577, 'q1': -347.8160763838328, 'q3': -90.21957882151742}}}}, {'name': 'count_contracts', 'display_name': 'Count Contracts', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 137, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 3884.0, 'avg': 281.245, 'sd': 541.7308844888793, 'q1': 19.507241711740914, 'q3': 304.0385071631265}}}}]",,2019-05-13 11:53:22.141,"{'table.pivot_column': 'substr', 'table.cell_column': 'account_id'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-07-09 03:56:36.898,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with all_rows as (\n\twith times as (select x as purchase_minute\n\t\t\t\t   from generate_series(date_trunc('minute', now()+interval '-4h')::timestamp\n\t\t\t\t\t  , date_trunc('minute', now() + interval '-1m')::timestamp\n\t\t\t\t\t  , interval  '1 min') t(x)\n\t), symbols as (select distinct symbol \n\t\t\t\t   from bet.market\n\t\t\t\t   where market in ('volidx'))--not in  ('stocks', 'legacy', 'cryptocurrency', 'futures'))\n\n\tselect * from symbols cross join times\n\torder by 2,1\n)\n\nselect \n    all_rows.purchase_minute,\n    all_rows.symbol,\n    sum(coalesce(count_buy,0)) as count_buy\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        underlying_symbol,\n        count_buy\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            --bm.market, \n            fmb.underlying_symbol,\n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2 right join all_rows\non all_rows.purchase_minute = tmp2.purchase_minute and all_rows.symbol = tmp2.underlying_symbol\ngroup by 1,2\norder by 1,2""}}",,line,,False,False,1011,37.0,"Today: volidx contracts sold, by the minute - nonlinear y-scale",1f9befde-f7d4-4f59-8466-75a0dbe9ad7d,native,,"[{'name': 'purchase_minute', 'display_name': 'Purchase Minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 240, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-07-31T23:00:00.000Z', 'latest': '2019-08-01T02:59:00.000Z'}}}}, {'name': 'symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.714285714285714}}}}, {'name': 'count_buy', 'display_name': 'Count Buy', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 281, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 398.0, 'avg': 70.71428571428571, 'sd': 93.13011455118328, 'q1': 3.027395680955722, 'q3': 81.10405461445964}}}}]",,2019-08-01 03:00:49.150,"{'graph.dimensions': ['purchase_minute', 'symbol'], 'graph.metrics': ['count_buy'], 'graph.y_axis.scale': 'pow', 'table.pivot_column': 'symbol', 'table.cell_column': 'count_buy'}"
False,,"{'id': 88, 'name': ""Mustofa Ghaleb Amami's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 65, 'slug': 'mustofa_ghaleb_amami_s_personal_collection'}",88.0,,2019-04-11 05:03:39.913,"{'email': 'mustofa@binary.com', 'first_name': 'Mustofa Ghaleb', 'last_login': '2019-05-23T06:57:46.611Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 65, 'last_name': 'Amami', 'date_joined': '2019-03-01T07:39:44.498Z', 'common_name': 'Mustofa Ghaleb Amami'}",65,2,"{'database': 2, 'type': 'native', 'native': {'query': 'with countries (c_value, c_name) as (\nvalues\n    (\'id\', \'Indonesia\'),\n    (\'br\', \'Brazil\'),\n    (\'ng\', \'Nigeria\'),\n    (\'za\', \'South africa\'),\n    (\'th\', \'Thailand\'),\n    (\'co\', \'Columbia\'),\n    (\'ru\', \'Russia\'),\n    (\'in\', \'India\'),\n    (\'vn\', \'Vietnam\'),\n    (\'mx\', \'Mexico\'),\n    (\'gh\', \'Ghana\'),\n    (\'lk\', \'Sri lanka\'),\n    (\'zw\', \'Zimbabwe\'),\n    (\'tz\', \'Tanzania\'),\n    (\'ke\', \'Kenya\'),\n    (\'sg\', \'Singapore\'),\n    (\'pk\', \'Pakistan\'),\n    (\'ar\', \'Argentina\'),\n    (\'pe\', \'Peru\'),\n    (\'ua\', \'Ukraine\')\n)\n\nselect \nc.c_name, sum(sss.total_buy) as ""total_buy"", sum(sss.company_revenue) as ""company_revenue""\nfrom\n(\n    select bc.residence, ttt.* from\n    (\n        select \n        a.client_loginid,\n        tmp.account_id,\n        tmp.market,\n        round(tmp.total_buy*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""total_buy"",\n        round(tmp.company_revenue*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""company_revenue""\n        from\n            (\n            select\n                account_id,\n                bm.market,\n                cast(purchase_time as date) as ""day"", \n                sum(buy_price) as ""total_buy"",\n                sum((buy_price - sell_price)) as ""company_revenue""\n            from bet.financial_market_bet fmb\n            left join bet.market bm\n            on bm.symbol=fmb.underlying_symbol\n            where purchase_time >= now() + INTERVAL \'-24 hour\'\n            --and market=\'forex\'    \n            and is_sold = TRUE\n            group by 1,2,3\n            having sum(buy_price) > 500\n        ) tmp\n            left join transaction.account a\n            on tmp.account_id=a.id\n    ) ttt left join betonmarkets.client bc\n    on bc.loginid=ttt.client_loginid\n) sss inner join countries c\non sss.residence = c.c_value\ngroup by 1\norder by 2 desc\nlimit 10\n'}}",,bar,,False,False,946,,Top 10 country total buy and company revenue in a day,,native,,"[{'name': 'c_name', 'display_name': 'c_name', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.0}}}}, {'name': 'total_buy', 'display_name': 'total_buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': 47982.84, 'max': 1713427.0, 'avg': 406270.18200000003, 'sd': 665027.3148144289, 'q1': 56103.61, 'q3': 221948.38}}}}, {'name': 'company_revenue', 'display_name': 'company_revenue', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': -23753.33, 'max': 62983.03, 'avg': 13357.151999999998, 'sd': 25771.974389154588, 'q1': -195.43, 'q3': 31345.62}}}}]",,2019-10-10 05:26:20.056,"{'graph.x_axis.labels_enabled': True, 'table.cell_column': 'total_buy', 'graph.x_axis.axis_enabled': 'rotate-45', 'stackable.stack_display': 'bar', 'graph.x_axis.title_text': 'Country name', 'graph.y_axis.labels_enabled': True, 'graph.y_axis.scale': 'linear', 'graph.y_axis.auto_split': True, 'graph.metrics': ['total_buy', 'company_revenue'], 'graph.y_axis.axis_enabled': True, 'table.pivot_column': 'c_name', 'series_settings': {'Total Buy': {'axis': 'left', 'display': 'bar'}, 'Company Revenue': {'axis': 'right', 'display': 'line'}, 'company_revenue': {'display': 'line', 'axis': 'right', 'line.marker_enabled': None}, 'total_buy': {'display': 'bar', 'axis': 'left'}}, 'graph.y_axis.auto_range': True, 'graph.dimensions': ['c_name'], 'stackable.stack_type': None}"
False,,,,,2018-12-18 01:50:15.363,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select underlying_symbol, count(id) from bet.financial_market_bet_open -- limit 10\nwhere substr(underlying_symbol,1,2)!='R_'\ngroup by 1\norder by 2 desc\nlimit 20""}}",,table,,False,False,102,,Top 20 NON-VOLIDX underlying by open contract count,,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.75}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 16, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5.0, 'max': 67.0, 'avg': 21.1, 'sd': 18.315653357025973, 'q1': 8.17157287525381, 'q3': 30.0}}}}]",,2019-04-15 00:45:22.693,"{'table.pivot_column': 'sell_price', 'table.cell_column': 'id'}"
False,,,,,2018-12-18 01:42:04.789,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select underlying_symbol, count(id) from bet.financial_market_bet_open -- limit 10\ngroup by 1\norder by 2 desc\nlimit 20'}}",,table,,False,False,101,,Top 20 underlying by open contract count,,native,,"[{'name': 'underlying_symbol', 'display_name': 'Underlying Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.65}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': 20.0, 'max': 270.0, 'avg': 58.45, 'sd': 56.38446501242024, 'q1': 29.5, 'q3': 56.5}}}}]",,2019-02-22 05:44:50.543,"{'table.pivot_column': 'sell_price', 'table.cell_column': 'id'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:28:12.602,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT users.""Login"", users.""Group"",  -round(sum(deals.""Profit"")) as sum\nFROM mt5_deals_2018 AS deals\nJOIN mt5_users AS users ON users.""Login"" = deals.""Login""\nwhere Date(deals.""Time"") = \'2018-12-19\'\nand deals.""Action"" in (0, 1)\nGroup by users.""Login""\norder by sum\n'}}",,table,,False,False,649,,top winners,,native,,,,2019-03-22 03:28:12.602,{}
False,,"{'id': 83, 'name': 'CR', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'cr'}",83.0,,2019-03-04 09:51:15.349,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT\n    bc.residence,\n    ROUND(SUM(da.turnover * exch.rate), 2) AS ""turnover_USD"",\n    ROUND(SUM(da.loss * exch.rate), 2)     AS ""revenue_USD"",\n    COUNT(DISTINCT ta.binary_user_id)       AS ""num_clients""\nFROM bet.daily_aggregates AS da\nJOIN transaction.account AS ta\n    ON ta.id=da.account_id\nJOIN betonmarkets.client AS bc\n    ON bc.loginid = ta.client_loginid\nLEFT JOIN data_collection.exchangetousd_rate(ta.currency_code, da.""day"") exch (rate)\n    ON true\nWHERE da.""day"" = (now() - interval \'1d\')::date\nGROUP BY 1\nORDER BY 2 DESC, 3\nLIMIT 20'}}",,table,,False,False,429,,Top-20 countries yesterday (CR),,native,,"[{'name': 'residence', 'display_name': 'residence', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'turnover_USD', 'display_name': 'turnover_USD', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'revenue_USD', 'display_name': 'revenue_USD', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'num_clients', 'display_name': 'num_clients', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-21 01:00:34.884,"{'table.pivot_column': 'num_clients', 'table.cell_column': 'turnover_USD'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-13 11:06:54.904,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    ta.client_loginid, \n    tmp.total_buy*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as total_buy,\n    tmp.total_profit*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as total_profit,\n    tmp.count_contracts\nfrom\n(\n    select \n        substr(underlying_symbol,1,1), \n        account_id, \n        --date_part('hour', purchase_time), \n        sum(buy_price) as total_buy, \n        sum(buy_price-sell_price) as total_profit,\n        count(*) as count_contracts\n    from bet.financial_market_bet \n    where purchase_time >= current_date\n    and substr(underlying_symbol,1,1)='R'\n    group by 1, 2--,3\n    order by 4, 3 desc --5, 3, 4 desc\n    --limit 200\n) tmp \njoin transaction.account ta\non ta.id=tmp.account_id\norder by 3, 4\nlimit 200""}}",,table,,False,False,961,37.0,top-200 on volidx,9f573e0e-303e-4475-b438-c67e3501a197,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 200, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'total_buy', 'display_name': 'Total Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 186, 'nil%': 0.0}, 'type': {'type/Number': {'min': 10.0, 'max': 6990.0, 'avg': 475.80491848486497, 'sd': 959.6613846064683, 'q1': 70.64077542488077, 'q3': 359.8760703183076}}}}, {'name': 'total_profit', 'display_name': 'Total Profit', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 186, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1121.89, 'max': -9.36, 'avg': -55.92824750587832, 'sd': 108.44368345775109, 'q1': -50.96822509939086, 'q3': -12.973327705278143}}}}, {'name': 'count_contracts', 'display_name': 'Count Contracts', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 105, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 1240.0, 'avg': 89.485, 'sd': 163.91642585592842, 'q1': 10.760330578512397, 'q3': 87.5}}}}]",,2019-05-14 01:44:59.595,"{'table.pivot_column': 'substr', 'table.cell_column': 'account_id'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-31 04:36:53.936,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    purchase_minute,\n    market,\n    sum(total_buy) as total_buy,\n    sum(profit) as profit\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            sum(buy_price) as total_buy,\n            sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2\ngroup by 1,2""}}",,line,,False,False,983,,total buy by the minute,,native,,"[{'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 303, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T05:02:00.000Z'}}}}, {'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.905343511450382}}}}, {'name': 'total_buy', 'display_name': 'total_buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 601, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.5, 'max': 62574.97177354, 'avg': 1471.1583131258901, 'sd': 3362.5173355577604, 'q1': 32.946403768154916, 'q3': 2349.696122502873}}}}, {'name': 'profit', 'display_name': 'profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 636, 'nil%': 0.0}, 'type': {'type/Number': {'min': -24653.44527960829, 'max': 12089.04664463321, 'avg': -15.044476078611456, 'sd': 1283.359503751276, 'q1': -45.40034806834714, 'q3': 70.44431640663595}}}}]",,2019-10-14 05:03:10.723,"{'graph.metrics': ['total_buy'], 'graph.dimensions': ['purchase_minute', 'market'], 'graph.y_axis.scale': 'pow'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-02 14:19:10.700,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    purchase_minute,\n    market,\n    sum(total_buy) as total_buy,\n    sum(profit) as profit\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            sum(buy_price) as total_buy,\n            sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2\ngroup by 1,2""}}",,line,,False,False,992,,total buy by the minute (linear scale),,native,,"[{'name': 'purchase_minute', 'display_name': 'purchase_minute', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 303, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-14T00:00:00.000Z', 'latest': '2019-10-14T05:02:00.000Z'}}}}, {'name': 'market', 'display_name': 'market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 5.905343511450382}}}}, {'name': 'total_buy', 'display_name': 'total_buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 601, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.5, 'max': 62574.97177354, 'avg': 1471.2081757213102, 'sd': 3362.510228163198, 'q1': 33.00681336911565, 'q3': 2349.696122502873}}}}, {'name': 'profit', 'display_name': 'profit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 636, 'nil%': 0.0}, 'type': {'type/Number': {'min': -24653.44527960829, 'max': 12089.04664463321, 'avg': -15.016598216016025, 'sd': 1283.3672400844434, 'q1': -45.39601018003055, 'q3': 70.44595912863367}}}}]",,2019-10-14 05:03:12.789,"{'graph.metrics': ['total_buy'], 'graph.dimensions': ['purchase_minute', 'market'], 'graph.y_axis.scale': 'linear'}"
False,,"{'id': 83, 'name': 'CR', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'cr'}",83.0,,2019-02-25 07:39:40.659,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select * from\n(\n    select\n    usdder.symbol,\n    sum(usdder.total_buy) as ""total_buy""\n    --sum(usdder.company_revenue) as ""company_revenue""\n    from\n        (\n        select \n        tmp.account_id,\n        tmp.symbol,\n        round(tmp.buy*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""total_buy"",\n        round(tmp.company_revenue*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""company_revenue""\n        from\n            (\n            select \n                account_id,\n                bm.symbol,\n                cast(purchase_time as date) as ""day"", \n                sum(buy_price) as ""buy"",\n                sum((buy_price - sell_price)) as ""company_revenue""\n            from bet.financial_market_bet fmb\n            left join bet.market bm\n            on bm.symbol=fmb.underlying_symbol\n            where purchase_time >= now() + INTERVAL \'-4 hour\'\n            --and market=\'forex\'    \n            and is_sold = TRUE\n            group by 1,2,3 \n        ) tmp\n            left join transaction.account a\n            on tmp.account_id=a.id\n        --order by 3\n        --limit 1000\n        ) usdder\n    group by symbol\n) ttt\nwhere \n--total_buy >=  500 and \nabs(total_buy) >= {{buy_threshold}}\norder by 2 desc', 'template-tags': {'buy_threshold': {'id': 'f4fe8b2a-e780-a6cf-cb36-1e5b4cd324d5', 'name': 'buy_threshold', 'display-name': 'Total Buy Threshold', 'type': 'number', 'required': True, 'default': '500'}}}}",,table,,False,False,413,,Total buy price by underlying,,native,,"[{'name': 'symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 7.333333333333333}}}}, {'name': 'total_buy', 'display_name': 'Total Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0}, 'type': {'type/Number': {'min': 659.23, 'max': 160490.65, 'avg': 33635.234444444446, 'sd': 56007.39072757055, 'q1': 1499.62, 'q3': 36031.25}}}}]",,2019-02-25 07:39:40.659,"{'table.pivot_column': 'symbol', 'table.cell_column': 'total_buy'}"
False,,"{'id': 83, 'name': 'CR', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'cr'}",83.0,,2019-02-25 07:46:23.319,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'buy_threshold': {'id': 'f4fe8b2a-e780-a6cf-cb36-1e5b4cd324d5', 'name': 'buy_threshold', 'display-name': 'Total Buy Threshold', 'type': 'number', 'required': True, 'default': '250'}}, 'query': 'select * from\n(\n    select\n    usdder.symbol,\n    sum(usdder.total_buy) as ""total_buy""\n    --sum(usdder.company_revenue) as ""company_revenue""\n    from\n        (\n        select \n        tmp.account_id,\n        tmp.symbol,\n        round(tmp.buy*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""total_buy"",\n        round(tmp.company_revenue*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""company_revenue""\n        from\n            (\n            select \n                account_id,\n                bm.symbol,\n                cast(purchase_time as date) as ""day"", \n                sum(buy_price) as ""buy"",\n                sum((buy_price - sell_price)) as ""company_revenue""\n            from bet.financial_market_bet fmb\n            left join bet.market bm\n            on bm.symbol=fmb.underlying_symbol\n            where purchase_time < now()::date -- + INTERVAL \'-4 hour\'\n            and purchase_time >= (now() + interval \'-1d\')::date\n            --and market=\'forex\'    \n            --and is_sold = TRUE\n            group by 1,2,3 \n        ) tmp\n            left join transaction.account a\n            on tmp.account_id=a.id\n        --order by 3\n        --limit 1000\n        ) usdder\n    group by symbol\n) ttt\nwhere \n--total_buy >=  500 and \nabs(total_buy) >= {{buy_threshold}}\nand substring(symbol from 1 for 1) != \'R\'\norder by 2 desc'}, 'type': 'native', 'database': 2}",,bar,,False,False,414,,Total buy price by underlying (non-volidx),,native,,"[{'name': 'symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 25, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.88}}}}, {'name': 'total_buy', 'display_name': 'Total Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 25, 'nil%': 0.0}, 'type': {'type/Number': {'min': 630.67, 'max': 29021.75, 'avg': 8286.542, 'sd': 6277.184194101948, 'q1': 3777.835, 'q3': 13186.08}}}}]",,2019-03-26 03:49:24.445,"{'table.pivot_column': 'symbol', 'table.cell_column': 'total_buy', 'graph.y_axis.scale': 'linear', 'graph.dimensions': ['symbol'], 'graph.metrics': ['total_buy']}"
False,,"{'id': 3, 'name': 'A look at your Client table', 'description': 'Automatically generated cards.', 'color': '#F1B556', 'archived': False, 'location': '/75/2/', 'personal_owner_id': None, 'slug': 'a_look_at_your_client_table'}",3.0,,2018-11-07 08:10:22.010,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'type': 'query', 'database': 2, 'query': {'source-table': 94, 'aggregation': [['count']]}}",,scalar,,False,False,3,,Total Client,,query,,"[{'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 787412.0, 'max': 787412.0, 'avg': 787412.0, 'sd': None, 'q1': 787412.0, 'q3': 787412.0}}}}]",94.0,2019-02-25 02:35:49.085,"{'graph.series_labels': ['number'], 'graph.metrics': ['count'], 'graph.dimensions': []}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-08-29 04:00:31.764,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select tmp.*, ta.client_loginid, ta.binary_user_id, ta.currency_code from\n(\n    select \n        account_id, \n        date_trunc('month', payment_time), \n        payment_gateway_code,\n        payment_type_code,\n        sum(amount) as total_incoming_amount\n    from payment.payment\n    where payment_time >= '2018-01-01'\n    and payment_type_code <> 'internal_transfer'\n    and payment_type_code <> 'free_gift'\n    and amount > 0\n    group by 1,2,3,4\n) tmp left join transaction.account ta\non tmp.account_id = ta.id\n""}}",,table,,False,False,1030,,total deposit by month and method for each client,,native,,"[{'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 374, 'nil%': 0}, 'type': {'type/Number': {'min': 201881, 'max': 730281, 'avg': 474590.93, 'sd': 146626.8242089055, 'q1': 340889.5842880255, 'q3': 598390.7976168132}}}}, {'name': 'date_trunc', 'display_name': 'Date Trunc', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0}, 'type': {'type/DateTime': {'earliest': '2018-01-01T00:00:00.000Z', 'latest': '2019-08-01T00:00:00.000Z'}}}}, {'name': 'payment_gateway_code', 'display_name': 'Payment Gateway Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 11.1465}}}}, {'name': 'payment_type_code', 'display_name': 'Payment Type Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 15.728}}}}, {'name': 'total_incoming_amount', 'display_name': 'Total Incoming Amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1168, 'nil%': 0}, 'type': {'type/Number': {'min': 0.01, 'max': 118459.26, 'avg': 1203.316355, 'sd': 7785.843230710732, 'q1': 29.74155957383937, 'q3': 199.7293208888574}}}}, {'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 374, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 6.9365}}}}, {'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 374, 'nil%': 0}, 'type': {'type/Number': {'min': 4043658, 'max': 5007004, 'avg': 4464089.695, 'sd': 364474.1868346545, 'q1': 4072741.181754447, 'q3': 4840330.460762492}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 3}}}}]",,2019-08-29 04:00:31.764,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'account_id'}"
False,,"{'id': 73, 'name': ""Dwi Hadyan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 53, 'slug': 'dwi_hadyan_s_personal_collection'}",73.0,,2019-02-11 09:49:22.397,"{'email': 'dwi@binary.com', 'first_name': 'Dwi', 'last_login': '2019-06-21T06:57:40.046Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 53, 'last_name': 'Hadyan', 'date_joined': '2019-01-24T02:54:53.692Z', 'common_name': 'Dwi Hadyan'}",53,4,"{'database': 4, 'type': 'native', 'native': {'query': 'SELECT \ne.""date"",\nround(sum(e.new_deposit_amount*e.exchangetousd_rate),2) as ""new_deposits_USD""\nFROM\n(\n  SELECT \n  data_collection.exchangetousd_rate(raw_amount.currency_code, raw_amount.""date""), raw_amount.* \n  FROM\n  (\n    SELECT \n    cast(tf.transaction_time AS date) as ""date"", -- CAST to change dataType\n    ta.currency_code,  \n    coalesce(sum(tf.amount) filter (where tf.action_type=\'deposit\'), 0) as new_deposit_amount -- return the first non-null in the brackets\n    FROM transaction.firsts AS tf \n    LEFT JOIN \n    transaction.account AS ta\n    on tf.account_id=ta.id\n    \n    WHERE CAST(transaction_time AS date) BETWEEN CAST((NOW() - INTERVAL \'1 day\') AS date)\n          AND CAST(NOW()  AS date)\n    \n    GROUP BY 1,2 \n    ORDER BY CAST(transaction_time AS date) DESC\n\n  ) AS raw_amount\n) AS e\n\ngroup by 1\norder by 1 asc\n\n\n\n'}}",,smartscalar,,False,False,358,,Total first depo MF,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-06-30T00:00:00.000Z', 'latest': '2019-07-01T00:00:00.000Z'}}}}, {'name': 'new_deposits_USD', 'display_name': 'New Deposits Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 190.44, 'avg': 95.22, 'sd': 134.6614154091661, 'q1': 0.0, 'q3': 190.44}}}}]",,2019-07-01 05:17:27.915,"{'column_settings': {'[""name"",""new_deposits_USD""]': {'number_style': 'currency'}}}"
False,,"{'id': 73, 'name': ""Dwi Hadyan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 53, 'slug': 'dwi_hadyan_s_personal_collection'}",73.0,,2019-02-11 09:50:14.534,"{'email': 'dwi@binary.com', 'first_name': 'Dwi', 'last_login': '2019-06-21T06:57:40.046Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 53, 'last_name': 'Hadyan', 'date_joined': '2019-01-24T02:54:53.692Z', 'common_name': 'Dwi Hadyan'}",53,5,"{'database': 5, 'type': 'native', 'native': {'query': 'SELECT \ne.""date"",\nround(sum(e.new_deposit_amount*e.exchangetousd_rate),2) as ""new_deposits_USD""\nFROM\n(\n  SELECT \n  data_collection.exchangetousd_rate(raw_amount.currency_code, raw_amount.""date""), raw_amount.* \n  FROM\n  (\n    SELECT \n    cast(tf.transaction_time AS date) as ""date"", -- CAST to change dataType\n    ta.currency_code,  \n    coalesce(sum(tf.amount) filter (where tf.action_type=\'deposit\'), 0) as new_deposit_amount -- return the first non-null in the brackets\n    FROM transaction.firsts AS tf \n    LEFT JOIN \n    transaction.account AS ta\n    on tf.account_id=ta.id\n    \n    WHERE CAST(transaction_time AS date) BETWEEN CAST((NOW() - INTERVAL \'1 day\') AS date)\n          AND CAST(NOW()  AS date)\n    \n    GROUP BY 1,2 \n    ORDER BY CAST(transaction_time AS date) DESC\n\n  ) AS raw_amount\n) AS e\n\ngroup by 1\norder by 1 asc\n\n\n\n'}}",,smartscalar,,False,False,359,,Total first depo MLT,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-10T00:00:00.000Z', 'latest': '2019-02-11T00:00:00.000Z'}}}}, {'name': 'new_deposits_USD', 'display_name': 'New Deposits Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 11.32, 'max': 67.93, 'avg': 39.625, 'sd': 40.02931488297046, 'q1': 11.32, 'q3': 67.93}}}}]",,2019-02-11 09:50:22.728,"{'column_settings': {'[""name"",""new_deposits_USD""]': {'number_style': 'currency'}}}"
False,,"{'id': 73, 'name': ""Dwi Hadyan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 53, 'slug': 'dwi_hadyan_s_personal_collection'}",73.0,,2019-02-11 09:48:14.680,"{'email': 'dwi@binary.com', 'first_name': 'Dwi', 'last_login': '2019-06-21T06:57:40.046Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 53, 'last_name': 'Hadyan', 'date_joined': '2019-01-24T02:54:53.692Z', 'common_name': 'Dwi Hadyan'}",53,3,"{'database': 3, 'type': 'native', 'native': {'query': 'SELECT \ne.""date"",\nround(sum(e.new_deposit_amount*e.exchangetousd_rate),2) as ""new_deposits_USD""\nFROM\n(\n  SELECT \n  data_collection.exchangetousd_rate(raw_amount.currency_code, raw_amount.""date""), raw_amount.* \n  FROM\n  (\n    SELECT \n    cast(tf.transaction_time AS date) as ""date"", -- CAST to change dataType\n    ta.currency_code,  \n    coalesce(sum(tf.amount) filter (where tf.action_type=\'deposit\'), 0) as new_deposit_amount -- return the first non-null in the brackets\n    FROM transaction.firsts AS tf \n    LEFT JOIN \n    transaction.account AS ta\n    on tf.account_id=ta.id\n    \n    WHERE CAST(transaction_time AS date) BETWEEN CAST((NOW() - INTERVAL \'1 day\') AS date)\n          AND CAST(NOW()  AS date)\n    \n    GROUP BY 1,2 \n    ORDER BY CAST(transaction_time AS date) DESC\n\n  ) AS raw_amount\n) AS e\n\ngroup by 1\norder by 1 asc\n\n\n\n'}}",,smartscalar,,False,False,357,,Total first depo MX,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-06-30T00:00:00.000Z', 'latest': '2019-06-30T00:00:00.000Z'}}}}, {'name': 'new_deposits_USD', 'display_name': 'New Deposits Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 57.13, 'max': 57.13, 'avg': 57.13, 'sd': None, 'q1': 57.13, 'q3': 57.13}}}}]",,2019-07-01 05:17:28.127,{}
False,,"{'id': 49, 'name': 'Marketing analytics', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/39/', 'personal_owner_id': None, 'slug': 'marketing_analytics'}",49.0,,2018-12-17 02:48:08.043,"{'email': 'eric@binary.com', 'first_name': 'Eric', 'last_login': '2019-09-17T11:44:20.704Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 40, 'last_name': 'Lopes', 'date_joined': '2018-11-20T10:07:56.057Z', 'common_name': 'Eric Lopes'}",40,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select ""residence"", \n--""date"", \nsum(""amount"" * ""exchange_rate"") as ""total_first_deposits_USD"", count(1) as ""count_clients""\nfrom\n(\n    select a.*, bc.residence, data_collection.exchangetousd_rate(""currency_code"", ""date"") as ""exchange_rate""\n    from\n    (\n        select tf.amount, tf.transaction_time::date as ""date"", ta.client_loginid, ta.currency_code from transaction.firsts tf left join transaction.account ta\n        on ta.id=tf.account_id\n        where tf.action_type = \'deposit\'\n        and transaction_time >= (now() + interval \'-1 day\')::timestamp::date\n        and transaction_time < now()::timestamp::date\n    ) as a left join betonmarkets.client bc\n    on a.""client_loginid"" = bc.loginid\n) b\n/*\nwhere residence in (\'id\', \'br\', \'mx\', \'th\', \'za\', \n                    \'in\', \'ng\', \'bo\', \'tw\', \'vn\', \n                    \'ru\', \'ua\', \'do\', \'lk\', \'ke\', \n                    \'bd\', \'uy\', \'au\', \'kz\', \'co\')\n*/\ngroup by 1 --,2\norder by 2 desc --, 3 desc\nlimit 20\n'}}",,table,,False,False,90,,Total first deposit and count of clients by country,,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'total_first_deposits_USD', 'display_name': 'Total First Deposits Usd', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': 68.5309525275, 'max': 11743.11169114234, 'avg': 1569.2954322895002, 'sd': 2950.604826246458, 'q1': 155.865, 'q3': 1130.6911250425}}}}, {'name': 'count_clients', 'display_name': 'Count Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 13, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 65.0, 'avg': 12.2, 'sd': 18.40937976027152, 'q1': 2.822875655532295, 'q3': 9.5}}}}]",,2019-02-20 06:14:50.353,"{'table.pivot_column': 'count_clients', 'table.cell_column': 'total_first_deposits_USD'}"
False,,"{'id': 73, 'name': ""Dwi Hadyan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 53, 'slug': 'dwi_hadyan_s_personal_collection'}",73.0,,2019-01-29 06:19:01.602,"{'email': 'dwi@binary.com', 'first_name': 'Dwi', 'last_login': '2019-06-21T06:57:40.046Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 53, 'last_name': 'Hadyan', 'date_joined': '2019-01-24T02:54:53.692Z', 'common_name': 'Dwi Hadyan'}",53,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT \ne.""date"",\nround(sum(e.new_deposit_amount*e.exchangetousd_rate),2) as ""new_deposits_USD""\nFROM\n(\n  SELECT \n  data_collection.exchangetousd_rate(raw_amount.currency_code, raw_amount.""date""), raw_amount.* \n  FROM\n  (\n    SELECT \n    cast(tf.transaction_time AS date) as ""date"", -- CAST to change dataType\n    ta.currency_code,  \n    coalesce(sum(tf.amount) filter (where tf.action_type=\'deposit\'), 0) as new_deposit_amount -- return the first non-null in the brackets\n    FROM transaction.firsts AS tf \n    LEFT JOIN \n    transaction.account AS ta\n    on tf.account_id=ta.id\n    \n    WHERE CAST(transaction_time AS date) BETWEEN CAST((NOW() - INTERVAL \'1 day\') AS date)\n          AND CAST(NOW()  AS date)\n    \n    GROUP BY 1,2 \n    ORDER BY CAST(transaction_time AS date) DESC\n\n  ) AS raw_amount\n) AS e\n\ngroup by 1\norder by 1 asc\n\n\n\n'}}",,smartscalar,,False,False,256,,Total First Deposit CR,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-06-30T00:00:00.000Z', 'latest': '2019-07-01T00:00:00.000Z'}}}}, {'name': 'new_deposits_USD', 'display_name': 'New Deposits Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 21359.59, 'max': 27068.06, 'avg': 24213.825, 'sd': 4036.4978471999716, 'q1': 21359.59, 'q3': 27068.06}}}}]",,2019-07-01 05:17:31.186,"{'column_settings': {'[""name"",""new_deposits_USD""]': {'prefix': '', 'number_style': 'currency', 'currency_style': 'symbol'}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2018-12-17 06:04:02.679,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select ""residence"", \n--""date"", \nsum(""amount"" * ""exchange_rate"") as ""total_first_deposits_USD"" --, count(1) as ""count_clients""\nfrom\n(\n    select a.*, bc.residence, data_collection.exchangetousd_rate(""currency_code"", ""date"") as ""exchange_rate""\n    from\n    (\n        select tf.amount, tf.transaction_time::date as ""date"", ta.client_loginid, ta.currency_code from transaction.firsts tf left join transaction.account ta\n        on ta.id=tf.account_id\n        where tf.action_type = \'deposit\'\n        and transaction_time >= (now() + interval \'-30 day\')::timestamp::date\n        and transaction_time < now()::timestamp::date\n    ) as a left join betonmarkets.client bc\n    on a.""client_loginid"" = bc.loginid\n) b\n/*\nwhere residence in (\'id\', \'br\', \'mx\', \'th\', \'za\', \n                    \'in\', \'ng\', \'bo\', \'tw\', \'vn\', \n                    \'ru\', \'ua\', \'do\', \'lk\', \'ke\', \n                    \'bd\', \'uy\', \'au\', \'kz\', \'co\')\n*/\ngroup by 1 --,2\norder by 2 desc --, 3 desc\nlimit 20\n'}}",,table,,False,False,96,,"total first deposits in last 30 days, by country",,native,,"[{'name': 'residence', 'display_name': 'residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'total_first_deposits_USD', 'display_name': 'total_first_deposits_USD', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 9554.850892556755, 'max': 669482.6075522057, 'avg': 80804.97914648059, 'sd': 154165.89619024974, 'q1': 11435.707864416228, 'q3': 63672.80630627673}}}}]",,2019-10-09 08:01:15.831,{}
False,,,,,2019-02-21 10:18:15.892,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select date(to_timestamp(daily.""Datetime"")) AS Date_, daily.""Group"" AS Group_, ""Login"", SUM(daily.""Balance"") AS Total_Negative_Balance\nFROM mt5_daily_2019 daily\nWhere daily.""BalancePrevDay"" > 0\nand daily.""Balance"" < 0\nand daily.""ProfitEquity"" < 0\nand daily.""Profit"" = 0\nand (daily.""Group"" LIKE \'%costarica%\' OR daily.""Group"" LIKE \'%malta\')\nGroup By date(to_timestamp(daily.""Datetime"")) , daily.""Group"", ""Login""'}}",,area,,False,False,407,,Total of accounts with negative balance per day,,native,,"[{'name': 'date_', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 45, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-03-16T00:00:00.000Z'}}}}, {'name': 'group_', 'display_name': 'Group', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 13.971428571428572}}}}, {'name': 'Login', 'display_name': 'Login', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 131, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5492.0, 'max': 192475.0, 'avg': 126844.00714285714, 'sd': 54596.70700646033, 'q1': 89094.0105961276, 'q3': 167276.66244620187}}}}, {'name': 'total_negative_balance', 'display_name': 'Total Negative Balance', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 104, 'nil%': 0.0}, 'type': {'type/Number': {'min': -46.4, 'max': -0.01, 'avg': -2.352214285714285, 'sd': 6.03561057521952, 'q1': -1.845, 'q3': -0.18444994432064302}}}}]",,2019-04-16 01:14:47.721,"{'table.pivot_column': 'Login', 'table.cell_column': 'client_with_negative_balance', 'graph.metrics': ['total_negative_balance'], 'graph.dimensions': ['date_', 'group_'], 'graph.x_axis.scale': 'timeseries'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-04-01 04:58:16.966,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'type': 'native', 'database': 2, 'native': {'query': 'select\n    binary_user_id,\n    sum(pos_usd) as pos_usd,\n    sum(neg_usd) as neg_usd,\n    sum(pos_count) as pos_count,\n    sum(neg_count) as neg_count\nfrom\n(\n    select\n        account_id,\n        payment_date,\n        pos*data_collection.exchangetousd_rate(currency_code, payment_date + interval \'1d\') as ""pos_usd"",\n        neg*data_collection.exchangetousd_rate(currency_code, payment_date + interval \'1d\') as ""neg_usd"",\n        pos_count,\n        neg_count,\n        client_loginid,\n        binary_user_id,\n        currency_code,\n        data_collection.exchangetousd_rate(currency_code, payment_date + interval \'1d\') as ""exchange_rate""\n    from\n    (\n        select\n            account_id,\n            payment_time::date as payment_date,\n            sum(amount) filter (where amount >= 0) as pos,\n            count(amount) filter (where amount >= 0) as pos_count,\n            sum(amount) filter (where amount < 0) as neg,\n            count(amount) filter (where amount < 0) as neg_count\n        from payment.payment\n        where\n            payment_time >= \'2018-01-01\' and \n            payment_gateway_code=\'payment_agent_transfer\'\n        group by 1, 2\n        --order by 2 desc, 1\n    ) tmp left join transaction.account ta\n    on ta.id=tmp.account_id\n) tmp2\ngroup by 1'}}",,table,,False,False,684,,total payment agent transfers since 2018-01-01,,native,,"[{'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10000, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4043530.0, 'max': 5561063.0, 'avg': 5123651.806899997, 'sd': 421546.98524034163, 'q1': 4899414.997294348, 'q3': 5442154.193320541}}}}, {'name': 'pos_usd', 'display_name': 'Pos Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 5756, 'nil%': 0.0238}, 'type': {'type/Number': {'min': 10.0, 'max': 11082713.421715021, 'avg': 7657.724496988015, 'sd': 173059.4009834089, 'q1': 309.20074071574146, 'q3': 2320.257431699045}}}}, {'name': 'neg_usd', 'display_name': 'Neg Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3640, 'nil%': 0.3793}, 'type': {'type/Number': {'min': -11244063.7779, 'max': -10.0, 'avg': -14034.424610518028, 'sd': 277833.62701251206, 'q1': -1920.9252458888668, 'q3': -300.6652923422809}}}}, {'name': 'pos_count', 'display_name': 'Pos Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 476, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 81311.0, 'avg': 66.6333, 'sd': 1252.3390415898664, 'q1': 4.08991645544963, 'q3': 25.41482133881864}}}}, {'name': 'neg_count', 'display_name': 'Neg Count', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 322, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 175756.0, 'avg': 87.1443, 'sd': 2649.7624556370897, 'q1': 1.69707892347704, 'q3': 12.96678497422401}}}}]",,2019-04-08 07:01:00.936,"{'table.pivot_column': 'currency_code', 'table.cell_column': 'account_id'}"
False,,"{'id': 83, 'name': 'CR', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'cr'}",83.0,,2019-02-25 07:46:51.703,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'native': {'template-tags': {'threshold': {'id': 'f4fe8b2a-e780-a6cf-cb36-1e5b4cd324d5', 'name': 'threshold', 'display-name': 'Total Buy Threshold', 'type': 'number', 'required': True, 'default': '0'}}, 'query': 'select * from\n(\n    select\n    usdder.symbol,\n    --sum(usdder.total_buy) as ""total_buy""\n    sum(usdder.company_revenue) as ""company_revenue""\n    from\n        (\n        select \n        tmp.account_id,\n        tmp.symbol,\n        round(tmp.buy*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""total_buy"",\n        round(tmp.company_revenue*data_collection.exchangetousd_rate(a.currency_code, tmp.""day""), 2) as ""company_revenue""\n        from\n            (\n            select \n                account_id,\n                bm.symbol,\n                cast(purchase_time as date) as ""day"", \n                sum(buy_price) as ""buy"",\n                sum((buy_price - sell_price)) as ""company_revenue""\n            from bet.financial_market_bet fmb\n            left join bet.market bm\n            on bm.symbol=fmb.underlying_symbol\n            where purchase_time < now()::date -- + INTERVAL \'-4 hour\'\n            and purchase_time >= (now() + interval \'-1d\')::date\n            --and market=\'forex\'    \n            --and is_sold = TRUE\n            group by 1,2,3 \n        ) tmp\n            left join transaction.account a\n            on tmp.account_id=a.id\n        --order by 3\n        --limit 1000\n        ) usdder\n    group by symbol\n) ttt\nwhere \n--total_buy >=  500 and \nabs(company_revenue) >= {{threshold}}\nand substring(symbol from 1 for 1) = \'R\'\norder by 2 desc'}, 'type': 'native', 'database': 2}",,bar,,False,False,415,,Total profit by underlying (volidx),,native,,"[{'name': 'symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 4.714285714285714}}}}, {'name': 'company_revenue', 'display_name': 'Company Revenue', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': -1212.35, 'max': 32580.05, 'avg': 11951.858571428571, 'sd': 11009.266905144697, 'q1': 3737.2375, 'q3': 15217.369999999999}}}}]",,2019-03-26 03:49:26.565,"{'table.pivot_column': 'symbol', 'table.cell_column': 'total_buy', 'graph.y_axis.scale': 'linear', 'graph.dimensions': ['symbol'], 'graph.metrics': ['company_revenue']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-20 03:59:58.061,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM(""Profit""/""RateMargin""+""Storage""/""RateMargin"")*-1 AS Company_profit\r\n\r\nFROM mt5_deals_2019\r\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\r\nwhere {{Time}}\r\nand ""Entry"" IN (0,1,3)\r\nand ""Action"" IN (0,1)\r\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\nand  {{Time}}\r\nand users.""Group"" like \'%costarica\'\r\ngroup by users.""Group""', 'template-tags': {'Time': {'widget-type': 'date/relative', 'default': 'today', 'name': 'Time', 'type': 'dimension', 'id': '6db89b0c-0696-441a-6c34-eb093a59bce0', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}}}}",Including swaps,scalar,,False,False,392,,Total Profit on closed Trades,,native,,"[{'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-03 07:49:15.232,"{'column_settings': {'[""name"",""company_profit""]': {'number_style': 'currency'}}}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-20 03:42:37.079,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM(""Profit""/""RateMargin""+""Storage""/""RateMargin"")*-1 AS Company_profit\r\n\r\nFROM mt5_deals_2019\r\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\r\nwhere {{Time}}\r\nand ""Entry"" IN (0,1,3)\r\nand ""Action"" IN (0,1)\r\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\nand  {{Time}}\r\nand users.""Group"" like \'%malta\'\r\ngroup by users.""Group""\r\n', 'template-tags': {'Time': {'id': '2d99d52b-d56b-e032-c2b9-f37b186e03b9', 'name': 'Time', 'display-name': 'Time', 'type': 'dimension', 'dimension': ['field-id', 7452], 'widget-type': 'date/relative', 'required': True, 'default': 'today'}}}}",Including swaps,scalar,,False,False,391,,Total Profit on closed Trades (Malta),,native,,"[{'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-03 07:49:15.638,"{'table.pivot_column': 'company_profit', 'table.cell_column': 'company_profit', 'column_settings': {'[""name"",""company_profit""]': {'number_style': 'currency'}}}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-03-12 07:43:45.933,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT SUM(""Profit""/""RateMargin""+""Storage""/""RateMargin"")*-1 AS Company_profit\r\n\r\nFROM mt5_deals_2019\r\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\r\nwhere ""Entry"" IN (0,1,3)\r\nand ""Action"" IN (0,1)\r\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\nand date(""Time"") >=  {{Start_Time}}\r\nand date(""Time"") <=  {{End_Time}}\r\nand users.""Group"" like \'%malta\'\r\ngroup by users.""Group""\r\n', 'template-tags': {'Start_Time': {'id': 'f8ba38fe-668b-c618-a707-c592d8aeee22', 'name': 'Start_Time', 'display-name': 'Start_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'End_Time': {'id': '3b4f4ded-8059-0579-baeb-159165baaf92', 'name': 'End_Time', 'display-name': 'End_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,scalar,,False,False,485,,Total Profit on closed Trades (Malta) - with date range,,native,,"[{'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': -424.8064341999998, 'max': -424.8064341999998, 'avg': -424.8064341999998, 'sd': None, 'q1': -424.8064341999998, 'q3': -424.8064341999998}}}}]",,2019-04-03 07:15:37.440,"{'table.pivot_column': 'company_profit', 'table.cell_column': 'company_profit', 'column_settings': {'[""name"",""company_profit""]': {'number_style': 'currency'}}}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-03-12 07:24:37.814,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'native': {'template-tags': {'Start_Time': {'id': '215d5f20-74ce-0d5b-c57a-6a2684fe6245', 'name': 'Start_Time', 'display-name': 'Start_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'End_Time': {'id': 'e7f4976a-81d8-77a1-1913-e90e9f142fb3', 'name': 'End_Time', 'display-name': 'End_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}}, 'query': 'SELECT SUM(""Profit""/""RateMargin""+""Storage""/""RateMargin"")*-1 AS Company_profit\r\n\r\nFROM mt5_deals_2019\r\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\r\nwhere ""Entry"" IN (0,1,3)\r\nand ""Action"" IN (0,1)\r\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\r\nand date(""Time"") >=  {{Start_Time}}\r\nand date(""Time"") <=  {{End_Time}}\r\nand users.""Group"" like \'%costarica\'\r\ngroup by users.""Group""'}, 'type': 'native', 'database': 9}",,scalar,,False,False,483,,Total Profit on closed Trades - with date range,,native,,"[{'name': 'company_profit', 'display_name': 'Company Profit', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 12549.639999999968, 'max': 12549.639999999968, 'avg': 12549.639999999968, 'sd': None, 'q1': 12549.639999999968, 'q3': 12549.639999999968}}}}]",,2019-04-03 07:15:35.616,"{'column_settings': {'[""name"",""company_profit""]': {'number_style': 'currency'}}}"
False,,"{'id': 88, 'name': ""Mustofa Ghaleb Amami's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 65, 'slug': 'mustofa_ghaleb_amami_s_personal_collection'}",88.0,,2019-03-06 08:57:13.082,"{'email': 'mustofa@binary.com', 'first_name': 'Mustofa Ghaleb', 'last_login': '2019-05-23T06:57:46.611Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 65, 'last_name': 'Amami', 'date_joined': '2019-03-01T07:39:44.498Z', 'common_name': 'Mustofa Ghaleb Amami'}",65,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with trades (trade_value, trade_name) as (\nvalues\n    ('CALL', 'Rise / Higher'),\n    ('PUT', 'Fall / Lower'),\n    ('ONETOUCH', 'Touches'),\n    ('NOTOUCH', 'Does not touch'),\n    ('EXPIRYMISS', 'Ends between'),\n    ('EXPIRYRANGE', 'goes outside'),\n    ('RANGE', 'Stays between'),\n    ('UPORDOWN', 'Stays outside'),\n    ('ASIANU', 'Asian up'),\n    ('ASIAND', 'Asian down'),\n    ('DIGITMATCH', 'Digit match'),\n    ('DIGITDIFF', 'Digit differ'),\n    ('DIGITEVEN', 'Digit even'),\n    ('DIGITODD', 'Digit odd'),\n    ('DIGITOVER', 'Digit over'),\n    ('DIGITUNDER', 'Digit under'),\n    ('LBFLOATPUT', 'High close'),\n    ('LBFLOATCALL', 'Close low'),\n    ('LBHIGHLOW', 'High low'),\n    ('RESETCALL', 'Reset call'),\n    ('RESETPUT', 'Reset put'),\n    ('CALLSPREAD', 'Call spread'),\n    ('PUTSPREAD', 'Put spread'),\n    ('TICKHIGH', 'High tick'),\n    ('TICKLOW', 'Low tick'),\n    ('RUNHIGH', 'Only up'),\n    ('RUNLOW', 'Only down')\n)\n\n--select * from trades limit 10\n--select * from bet.financial_market_bet_open where bet_type='ONETOUCH' limit 10\n\nselect t.trade_name, count(f.bet_type)\nfrom bet.financial_market_bet as f join trades as t on f.bet_type = t.trade_value\nwhere f.purchase_time >= now() - interval '7d'\ngroup by t.trade_name\norder by count(f.bet_type) desc, t.trade_name asc\nlimit 27""}}",pie chart,pie,,False,False,452,,trade types transaction in a week,,native,,"[{'name': 'trade_name', 'display_name': 'trade_name', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 27, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 10.25925925925926}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 27, 'nil%': 0.0}, 'type': {'type/Number': {'min': 93.0, 'max': 1357424.0, 'avg': 225092.14814814815, 'sd': 401781.3305421346, 'q1': 4272.0, 'q3': 259194.25}}}}]",,2019-10-10 05:33:08.141,{}
False,,"{'id': 88, 'name': ""Mustofa Ghaleb Amami's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 65, 'slug': 'mustofa_ghaleb_amami_s_personal_collection'}",88.0,,2019-03-06 04:24:20.537,"{'email': 'mustofa@binary.com', 'first_name': 'Mustofa Ghaleb', 'last_login': '2019-05-23T06:57:46.611Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 65, 'last_name': 'Amami', 'date_joined': '2019-03-01T07:39:44.498Z', 'common_name': 'Mustofa Ghaleb Amami'}",65,2,"{'database': 2, 'type': 'native', 'native': {'query': ""with trades (trade_value, trade_name) as (\nvalues\n    ('CALL', 'Rise / Higher'),\n    ('PUT', 'Fall / Lower'),\n    ('ONETOUCH', 'Touches'),\n    ('NOTOUCH', 'Does not touch'),\n    ('EXPIRYMISS', 'Ends between'),\n    ('EXPIRYRANGE', 'goes outside'),\n    ('RANGE', 'Stays between'),\n    ('UPORDOWN', 'Stays outside'),\n    ('ASIANU', 'Asian up'),\n    ('ASIAND', 'Asian down'),\n    ('DIGITMATCH', 'Digit match'),\n    ('DIGITDIFF', 'Digit differ'),\n    ('DIGITEVEN', 'Digit even'),\n    ('DIGITODD', 'Digit odd'),\n    ('DIGITOVER', 'Digit over'),\n    ('DIGITUNDER', 'Digit under'),\n    ('LBFLOATPUT', 'High close'),\n    ('LBFLOATCALL', 'Close low'),\n    ('LBHIGHLOW', 'High low'),\n    ('RESETCALL', 'Reset call'),\n    ('RESETPUT', 'Reset put'),\n    ('CALLSPREAD', 'Call spread'),\n    ('PUTSPREAD', 'Put spread'),\n    ('TICKHIGH', 'High tick'),\n    ('TICKLOW', 'Low tick'),\n    ('RUNHIGH', 'Only up'),\n    ('RUNLOW', 'Only down')\n)\n\n--select * from trades limit 10\n--select * from bet.financial_market_bet_open where bet_type='ONETOUCH' limit 10\n\nselect t.trade_name, count(f.bet_type)\nfrom bet.financial_market_bet as f join trades as t on f.bet_type = t.trade_value\nwhere f.purchase_time >= now() - interval '7d'\ngroup by t.trade_name\norder by count(f.bet_type) desc, t.trade_name asc\nlimit 27""}}",bar chart,bar,,False,False,440,,trade types transaction in a week,,native,,"[{'name': 'trade_name', 'display_name': 'trade_name', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 27, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 10.25925925925926}}}}, {'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 27, 'nil%': 0.0}, 'type': {'type/Number': {'min': 93.0, 'max': 1357424.0, 'avg': 225092.14814814815, 'sd': 401781.3305421346, 'q1': 4272.0, 'q3': 259194.25}}}}]",,2019-10-10 05:33:08.135,"{'graph.dimensions': ['trade_name'], 'graph.metrics': ['count']}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:19.457,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Rejected trades, Number of Buy Transactions at Requoted Price, Number of Buy Transaction at Requested Price\nWITH params AS (SELECT\n    \'2017-10-01\'::DATE AS start_date,   /* Inclusive, IE, ""date_joined >= params.start_date"" */\n    \'2018-01-01\'::DATE AS end_date,     /* Exclusive, IE, ""date_joined < params.end_date"" */\n    \'mf\'::TEXT as broker                /* <<<---- REPLACE CODE HERE */\n)\n\nSELECT t.*\nFROM params\nCROSS JOIN dblink(LOWER(params.broker), $$\n    SELECT  max(total_rejected_trades) as total_rejected_trades, \n            max(buy_tx_at_requoted_price) as buy_tx_at_requoted_price,\n            max(buy_tx_at_requested_price) as buy_tx_at_requested_price\n    FROM (\n        select count(*) AS total_rejected_trades, 0 as buy_tx_at_requoted_price, 0 as buy_tx_at_requested_price\n        from data_collection.rejected_trades\n        where action_type = \'buy\'\n        and shortcode like \'%EURUSD%\'\n        and trade_time >= $$ || quote_literal( params.start_date ) || $$::TIMESTAMP\n        and trade_time < $$ || quote_literal( params.end_date ) || $$::TIMESTAMP\n        and reason = \'SLIPPAGE\'\n        UNION ALL\n        select 0,count (*) as buy_tx_at_requoted_price,0\n        from transaction.transaction t\n        inner join bet.financial_market_bet b on t.financial_market_bet_id = b.id\n        inner join data_collection.quants_bet_variables d on t.id = d.transaction_id\n        where b.underlying_symbol = \'frxEURUSD\'\n        and t.action_type = \'buy\'\n        and t.transaction_time >= $$ || quote_literal( params.start_date ) || $$::TIMESTAMP\n        and t.transaction_time < $$ || quote_literal( params.end_date ) || $$::TIMESTAMP\n        and (d.requested_price/b.payout_price)-(d.recomputed_price/b.payout_price) > 0.0175\n        UNION ALL\n        select 0,0,count (*) as buy_tx_at_requested_price\n        from transaction.transaction t\n        inner join bet.financial_market_bet b on t.financial_market_bet_id = b.id\n        inner join data_collection.quants_bet_variables d on t.id = d.transaction_id\n        where b.underlying_symbol = \'frxEURUSD\'\n        and t.action_type = \'buy\'\n        and t.transaction_time >= $$ || quote_literal( params.start_date ) || $$::TIMESTAMP\n        and t.transaction_time < $$ || quote_literal( params.end_date ) || $$::TIMESTAMP\n        and (d.requested_price/b.payout_price)-(d.recomputed_price/b.payout_price) >= -0.0175\n        and (d.requested_price/b.payout_price)-(d.recomputed_price/b.payout_price) <= 0.0175\n    ) as x\n$$) AS t(\n    total_rejected_trades       BIGINT,\n    buy_tx_at_requoted_price    BIGINT,\n    buy_tx_at_requested_price   BIGINT\n);'}}","Rejected trades, Number of Buy Transactions at Requoted Price, Number of Buy Transaction at Requested Price",table,,False,False,633,,Trades and transaction counts,,native,,,,2019-03-22 03:27:19.457,{}
False,,"{'id': 182, 'name': 'Transaction', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'transaction'}",182.0,,2019-04-09 09:39:31.402,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Transaction > Dormant Accounts\nWITH param as (\n    SELECT\n        -- CH, CR, MX, MLT, MF, VR or any other broker_code\n        'MLT'::VARCHAR as broker_code\n)\n\n\n\n\n\n\n\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\nSELECT * FROM dormant_account_corresponding_mf_mlt(\n    (SELECT broker_code FROM param)::varchar\n    );\n\n\n\n""}}",Transaction > Dormant Accounts,table,,False,False,850,,Transaction Dormant Accounts,,native,,,,2019-04-09 09:39:31.402,{}
False,,"{'id': 182, 'name': 'Transaction', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'transaction'}",182.0,,2019-04-09 09:39:34.706,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Transaction > Payment Search\nWITH params AS (SELECT\n        \n        \'MF\'::VARCHAR AS broker_code, -- CH, CR, MX, MLT, MF, JP\n\n        \'EUR\'::VARCHAR AS currency,      -- \'\' for all currencies -or- specify one 3 letter code\n\n        \'2018-02-01\'::DATE AS start_date,\n        \'2018-02-28\'::DATE AS end_date,\n        \n    -- Leave empty to search all payments -or- specify one or more CSV terms to narrow your search like \'BANK\' or \'BANK, WIRE\'\n    -- the search term/s are case insensitive so \'BANK\' will match ""bank"" or ""BANK"" or ""Bank"", etc.\n        \'BANK\'::VARCHAR AS search_term\n)\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT\n  d.transaction_time::TIMESTAMP(0)::TEXT AS transaction_time,\n  d.client_loginid,\n  d.credit,\n  d.debit,\n  d.id::TEXT AS id,\n  d.remark,\n  d.currency_code,\n  d.staff_loginid,\n  d.residence\n\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN fdw.search_payment_on(ps.srvname,\n    params.broker_code,\n    params.currency,\n    params.start_date,\n    params.end_date,\n    params.search_term\n) AS d\nWHERE params.broker_code = ANY(ps.broker_codes)\nORDER BY 1\n'}}",Transaction > Payment Search,table,,False,False,851,,Transaction Payment Search,,native,,,,2019-04-09 09:39:34.706,{}
False,,"{'id': 182, 'name': 'Transaction', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'transaction'}",182.0,,2019-04-09 09:39:28.011,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Transaction -> Turnover & Payout by Country\n-- NOTE: this report performs USD conversions at the time the report is run, based upon the totals\n-- That means that the numbers can change with time as the exchange rate moves\nWITH params AS (SELECT\n        -- Start date\n        '2017-01-01'::DATE AS start_date,\n        \n        -- End date\n        '2017-12-31'::DATE AS end_date,\n\n        -- Use zero, one or more of the broker codes CR, JP, MF, MLT, MX like this {} -or- {CR} -or- {CR, JP, MF, MLT, MX}\n        -- Note: {} is equivalent to {CR, JP, MF, MLT, MX}\n        -- Running against CR for long intervals will probably take a rather long time\n        '{CR}'::VARCHAR[] AS p_broker,\n\n        -- Use zero, one or more lower case country codes like this {} -or- {ie} -or- {ie,pt,gb}\n        -- Note: {} is equivalent to requesting all countries\n        '{}'::VARCHAR[] AS country\n)\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT t.*\nFROM params\nCROSS JOIN betonmarkets.production_servers_v2() AS ps\nCROSS JOIN dblink(ps.srvname,\n    $$\n\n    SELECT\n        a.residence,\n        a.broker_code,\n        a.currency_code,\n        transaction.round_amount(a.currency_code, a.turnover) AS turnover,\n        transaction.round_amount('USD', a.turnover * exch.rate) AS turnover_usd,\n        transaction.round_amount(a.currency_code, a.payout) AS payout,\n        transaction.round_amount('USD', a.payout * exch.rate) AS payout_usd\n    FROM\n    (\n        SELECT\n            bc.residence,\n            bc.broker_code,\n            ta.currency_code,\n            SUM(tt.amount) FILTER (WHERE tt.action_type = 'buy') * -1 AS turnover,\n            SUM(tt.amount) FILTER (WHERE tt.action_type = 'sell') AS payout\n        FROM\n            transaction.transaction AS tt\n        JOIN\n            transaction.account AS ta ON ta.id = tt.account_id\n        JOIN\n            betonmarkets.client AS bc ON bc.loginid = ta.client_loginid\n        WHERE\n            tt.action_type IN ('buy','sell')\n            AND tt.transaction_time >= $$ || quote_literal(start_date) || $$::TIMESTAMP\n            AND tt.transaction_time < $$ || quote_literal(end_date) || $$::TIMESTAMP + INTERVAL '1 day'\n            $$ || CASE WHEN array_length(country, 1) IS NOT NULL THEN 'AND bc.residence = ANY (' || quote_literal(country) || ')' ELSE '' END || $$\n        GROUP BY 1,2,3\n        ORDER BY 1,2,3\n    ) a\n    LEFT JOIN data_collection.exchangetousd_rate(a.currency_code) exch(rate) ON TRUE\n      $$\n    ) AS t(residence VARCHAR, broker_code VARCHAR, currency_code VARCHAR, turnover NUMERIC, turnover_usd NUMERIC, payout NUMERIC, payout_usd NUMERIC)\n\nWHERE CASE WHEN array_length(p_broker, 1) IS NOT NULL THEN p_broker && ps.broker_codes ELSE TRUE END""}}",Transaction -> Turnover & Payout by Country,table,,False,False,849,,Transaction Turnover & Payout by Country,,native,,,,2019-04-09 09:39:28.011,{}
False,,"{'id': 182, 'name': 'Transaction', 'description': 'none', 'color': '#FF0000', 'archived': False, 'location': '/95/160/', 'personal_owner_id': None, 'slug': 'transaction'}",182.0,,2019-04-09 09:39:38.235,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Transaction -> Turnover by Country\nWITH params AS (SELECT\n        -- Start date\n        '2017-03-01'::DATE AS start_date,\n        \n        -- End date\n        '2017-03-31'::DATE AS end_date,\n\n        -- Use zero, one or more of the broker codes cr,jp,mf,mlt,mx,vr like this {} -or- {vr} -or- {cr,jp,mf,mlt,mx}\n        -- Note: {} is equivalent to {cr,jp,mf,mlt,mx} BUT not vr\n        '{mf}'::TEXT[] AS broker,\n\n        -- Use zero, one or more lower case country codes like this {} -or- {ie} -or- {ie,pt,gb}\n        -- Note: {} is equivalent to requesting all countries\n        '{ie}'::VARCHAR[] AS country\n)\n\n-- DO NOT TOUCH ANY CODE BELOW HERE\n\nSELECT (turnover_by_country(start_date, end_date, broker, country)).* FROM params\nORDER BY residence, currency_code""}}",Transaction -> Turnover by Country,table,,False,False,852,,Transaction Turnover by Country,,native,,,,2019-04-09 09:39:38.235,{}
False,,,,,2018-11-07 08:31:47.363,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT \n""transaction"".""transaction"".""amount"" AS ""amount"",\n""transaction"".""transaction"".""action_type"" AS ""action_type"",\n""transaction"".""transaction"".""source"" AS ""source"",\n""transaction"".""transaction"".""transaction_time"" AS ""transaction_time""\nFROM ""transaction"".""transaction""\nINNER JOIN ""transaction"".""account"" ON ""account"".id = ""transaction"".account_id\nINNER JOIN ""betonmarkets"".""client"" ON ""client"".loginid = ""account"".client_loginid\nWHERE ""client"".""residence"" = \'id\'\nLIMIT 20'}}",,table,,False,False,19,37.0,Transactions for Indonesia,fe83d61c-f6b3-48bf-89f5-a1fd75ed3524,native,,"[{'name': 'amount', 'display_name': 'amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 14, 'nil%': 0.0}, 'type': {'type/Number': {'min': -10.0, 'max': 59.74, 'avg': 2.724793777, 'sd': 14.308821707470889, 'q1': -1.0, 'q3': 0.0}}}}, {'name': 'action_type', 'display_name': 'action_type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.35}}}}, {'name': 'source', 'display_name': 'source', 'base_type': 'type/Integer', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 6829.0, 'avg': 1092.6, 'sd': 2038.58729206488, 'q1': 1.0, 'q3': 1584.1614746353748}}}}, {'name': 'transaction_time', 'display_name': 'transaction_time', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2018-09-25T17:47:39.050Z', 'latest': '2018-09-25T17:50:19.767Z'}}}}]",,2019-09-12 09:36:16.970,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:20.119,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT t.*\nFROM dblink(\'mx\', $$\nSELECT  c.loginid,\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2014-01-01 00:00:00\' AND t.transaction_time < \'2014-01-02 00:00:00\' LIMIT 1)::INTEGER as ""201401"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2014-01-02 00:00:00\' AND t.transaction_time < \'2014-01-03 00:00:00\' LIMIT 1)::INTEGER as ""201402"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2014-01-03 00:00:00\' AND t.transaction_time < \'2014-01-04 00:00:00\' LIMIT 1)::INTEGER as ""201403"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2014-01-04 00:00:00\' AND t.transaction_time < \'2014-01-05 00:00:00\' LIMIT 1)::INTEGER as ""201404"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2014-01-05 00:00:00\' AND t.transaction_time < \'2014-01-06 00:00:00\' LIMIT 1)::INTEGER as ""201405"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2014-01-06 00:00:00\' AND t.transaction_time < \'2014-01-07 00:00:00\' LIMIT 1)::INTEGER as ""201406"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2014-01-07 00:00:00\' AND t.transaction_time < \'2014-01-08 00:00:00\' LIMIT 1)::INTEGER as ""201407"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2014-01-08 00:00:00\' AND t.transaction_time < \'2014-01-09 00:00:00\' LIMIT 1)::INTEGER as ""201408"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2014-01-09 00:00:00\' AND t.transaction_time < \'2014-01-10 00:00:00\' LIMIT 1)::INTEGER as ""201409"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2014-01-10 00:00:00\' AND t.transaction_time < \'2014-01-11 00:00:00\' LIMIT 1)::INTEGER as ""201410"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2014-01-11 00:00:00\' AND t.transaction_time < \'2014-01-12 00:00:00\' LIMIT 1)::INTEGER as ""201411"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2014-01-12 00:00:00\' AND t.transaction_time < \'2015-01-01 00:00:00\' LIMIT 1)::INTEGER as ""201412"",\n\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2015-01-01 00:00:00\' AND t.transaction_time < \'2015-01-02 00:00:00\' LIMIT 1)::INTEGER as ""201501"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2015-01-02 00:00:00\' AND t.transaction_time < \'2015-01-03 00:00:00\' LIMIT 1)::INTEGER as ""201502"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2015-01-03 00:00:00\' AND t.transaction_time < \'2015-01-04 00:00:00\' LIMIT 1)::INTEGER as ""201503"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2015-01-04 00:00:00\' AND t.transaction_time < \'2015-01-05 00:00:00\' LIMIT 1)::INTEGER as ""201504"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2015-01-05 00:00:00\' AND t.transaction_time < \'2015-01-06 00:00:00\' LIMIT 1)::INTEGER as ""201505"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2015-01-06 00:00:00\' AND t.transaction_time < \'2015-01-07 00:00:00\' LIMIT 1)::INTEGER as ""201506"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2015-01-07 00:00:00\' AND t.transaction_time < \'2015-01-08 00:00:00\' LIMIT 1)::INTEGER as ""201507"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2015-01-08 00:00:00\' AND t.transaction_time < \'2015-01-09 00:00:00\' LIMIT 1)::INTEGER as ""201508"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2015-01-09 00:00:00\' AND t.transaction_time < \'2015-01-10 00:00:00\' LIMIT 1)::INTEGER as ""201509"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2015-01-10 00:00:00\' AND t.transaction_time < \'2015-01-11 00:00:00\' LIMIT 1)::INTEGER as ""201510"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2015-01-11 00:00:00\' AND t.transaction_time < \'2015-01-12 00:00:00\' LIMIT 1)::INTEGER as ""201511"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2015-01-12 00:00:00\' AND t.transaction_time < \'2016-01-01 00:00:00\' LIMIT 1)::INTEGER as ""201512"",\n\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2016-01-01 00:00:00\' AND t.transaction_time < \'2016-01-02 00:00:00\' LIMIT 1)::INTEGER as ""201601"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2016-01-02 00:00:00\' AND t.transaction_time < \'2016-01-03 00:00:00\' LIMIT 1)::INTEGER as ""201602"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2016-01-03 00:00:00\' AND t.transaction_time < \'2016-01-04 00:00:00\' LIMIT 1)::INTEGER as ""201603"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2016-01-04 00:00:00\' AND t.transaction_time < \'2016-01-05 00:00:00\' LIMIT 1)::INTEGER as ""201604"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2016-01-05 00:00:00\' AND t.transaction_time < \'2016-01-06 00:00:00\' LIMIT 1)::INTEGER as ""201605"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2016-01-06 00:00:00\' AND t.transaction_time < \'2016-01-07 00:00:00\' LIMIT 1)::INTEGER as ""201606"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2016-01-07 00:00:00\' AND t.transaction_time < \'2016-01-08 00:00:00\' LIMIT 1)::INTEGER as ""201607"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2016-01-08 00:00:00\' AND t.transaction_time < \'2016-01-09 00:00:00\' LIMIT 1)::INTEGER as ""201608"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2016-01-09 00:00:00\' AND t.transaction_time < \'2016-01-10 00:00:00\' LIMIT 1)::INTEGER as ""201609"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2016-01-10 00:00:00\' AND t.transaction_time < \'2016-01-11 00:00:00\' LIMIT 1)::INTEGER as ""201610"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2016-01-11 00:00:00\' AND t.transaction_time < \'2016-01-12 00:00:00\' LIMIT 1)::INTEGER as ""201611"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2016-01-12 00:00:00\' AND t.transaction_time < \'2017-01-01 00:00:00\' LIMIT 1)::INTEGER as ""201612"",\n\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2017-01-01 00:00:00\' AND t.transaction_time < \'2017-01-02 00:00:00\' LIMIT 1)::INTEGER as ""201701"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2017-01-02 00:00:00\' AND t.transaction_time < \'2017-01-03 00:00:00\' LIMIT 1)::INTEGER as ""201702"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2017-01-03 00:00:00\' AND t.transaction_time < \'2017-01-04 00:00:00\' LIMIT 1)::INTEGER as ""201703"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2017-01-04 00:00:00\' AND t.transaction_time < \'2017-01-05 00:00:00\' LIMIT 1)::INTEGER as ""201704"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2017-01-05 00:00:00\' AND t.transaction_time < \'2017-01-06 00:00:00\' LIMIT 1)::INTEGER as ""201705"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2017-01-06 00:00:00\' AND t.transaction_time < \'2017-01-07 00:00:00\' LIMIT 1)::INTEGER as ""201706"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2017-01-07 00:00:00\' AND t.transaction_time < \'2017-01-08 00:00:00\' LIMIT 1)::INTEGER as ""201707"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2017-01-08 00:00:00\' AND t.transaction_time < \'2017-01-09 00:00:00\' LIMIT 1)::INTEGER as ""201708"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2017-01-09 00:00:00\' AND t.transaction_time < \'2017-01-10 00:00:00\' LIMIT 1)::INTEGER as ""201709"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2017-01-10 00:00:00\' AND t.transaction_time < \'2017-01-11 00:00:00\' LIMIT 1)::INTEGER as ""201710"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2017-01-11 00:00:00\' AND t.transaction_time < \'2017-01-12 00:00:00\' LIMIT 1)::INTEGER as ""201711"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2017-01-12 00:00:00\' AND t.transaction_time < \'2018-01-01 00:00:00\' LIMIT 1)::INTEGER as ""201712"",\n\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2018-01-01 00:00:00\' AND t.transaction_time < \'2018-01-02 00:00:00\' LIMIT 1)::INTEGER as ""201801"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2018-01-02 00:00:00\' AND t.transaction_time < \'2018-01-03 00:00:00\' LIMIT 1)::INTEGER as ""201802"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2018-01-03 00:00:00\' AND t.transaction_time < \'2018-01-04 00:00:00\' LIMIT 1)::INTEGER as ""201803"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2018-01-04 00:00:00\' AND t.transaction_time < \'2018-01-05 00:00:00\' LIMIT 1)::INTEGER as ""201804"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2018-01-05 00:00:00\' AND t.transaction_time < \'2018-01-06 00:00:00\' LIMIT 1)::INTEGER as ""201805"",\n        EXISTS( SELECT t.id FROM transaction.account AS a INNER JOIN transaction.transaction AS t ON t.account_id = a.id WHERE a.client_loginid=c.loginid and a.is_default IS TRUE AND t.transaction_time >= \'2018-01-06 00:00:00\' AND t.transaction_time < \'2018-01-07 00:00:00\' LIMIT 1)::INTEGER as ""201806""\nFROM betonmarkets.client AS c\n$$) AS t(\nloginid     VARCHAR,\n""201401""    INTEGER,\n""201402""    INTEGER,\n""201403""    INTEGER,\n""201404""    INTEGER,\n""201405""    INTEGER,\n""201406""    INTEGER,\n""201407""    INTEGER,\n""201408""    INTEGER,\n""201409""    INTEGER,\n""201410""    INTEGER,\n""201411""    INTEGER,\n""201412""    INTEGER,\n""201501""    INTEGER,\n""201502""    INTEGER,\n""201503""    INTEGER,\n""201504""    INTEGER,\n""201505""    INTEGER,\n""201506""    INTEGER,\n""201507""    INTEGER,\n""201508""    INTEGER,\n""201509""    INTEGER,\n""201510""    INTEGER,\n""201511""    INTEGER,\n""201512""    INTEGER,\n""201601""    INTEGER,\n""201602""    INTEGER,\n""201603""    INTEGER,\n""201604""    INTEGER,\n""201605""    INTEGER,\n""201606""    INTEGER,\n""201607""    INTEGER,\n""201608""    INTEGER,\n""201609""    INTEGER,\n""201610""    INTEGER,\n""201611""    INTEGER,\n""201612""    INTEGER,\n""201701""    INTEGER,\n""201702""    INTEGER,\n""201703""    INTEGER,\n""201704""    INTEGER,\n""201705""    INTEGER,\n""201706""    INTEGER,\n""201707""    INTEGER,\n""201708""    INTEGER,\n""201709""    INTEGER,\n""201710""    INTEGER,\n""201711""    INTEGER,\n""201712""    INTEGER,\n""201801""    INTEGER,\n""201802""    INTEGER,\n""201803""    INTEGER,\n""201804""    INTEGER,\n""201805""    INTEGER,\n""201806""    INTEGER\n);'}}",,table,,False,False,634,,"Transactions since 2018, per loginid, per month",,native,,,,2019-03-22 03:27:20.119,{}
False,,"{'id': 83, 'name': 'CR', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'cr'}",83.0,,2019-02-25 07:15:16.320,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select t2.""day"", sum(t2.turnover_USDDER) as turnover_USD from\n    (select tmp.""day"", \n            turnover*data_collection.exchangetousd_rate(tmp.currency_code, tmp.""day"") as turnover_USDDER \n    from\n        (select \n          CAST(da.""day"" AS date) as ""day"", \n          a.currency_code,\n          sum(turnover) as ""turnover""\n          --sum(loss) as ""profit"",\n          --count(distinct account_id) as ""customer_count""\n        from bet.daily_aggregates da left join transaction.account a  \n        on da.account_id=a.id\n        WHERE CAST(da.""day"" AS date) \n            BETWEEN \n                CAST((NOW() + INTERVAL \'-2 day\') AS date) --current_date -30\n            AND CAST((NOW() + INTERVAL \'-1 day\') AS date)  --current_date \n        GROUP BY 1,2\n        ORDER BY 1 DESC, 2 DESC\n        ) tmp\n    ) t2\ngroup by 1\norder by 1 '}}",,smartscalar,,False,False,410,,Turnover (last two days),,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-03-24T00:00:00.000Z', 'latest': '2019-03-25T00:00:00.000Z'}}}}, {'name': 'turnover_usd', 'display_name': 'Turnover Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3356323.829212876, 'max': 3870301.8842279017, 'avg': 3613312.856720389, 'sd': 363437.36808219703, 'q1': 3356323.829212876, 'q3': 3870301.8842279017}}}}]",,2019-03-26 03:49:22.603,"{'table.pivot_column': 'day', 'table.cell_column': 'turnover_usd', 'column_settings': {'[""name"",""turnover_usd""]': {'prefix': '$'}}}"
False,,,,,2019-05-21 06:51:16.120,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\n    hour_of_day,\n    sum(total_buy) as total_buy,\n    sum(-1*total_profit) as total_profit\nfrom\n(\n    select \n        tmp.account_id,\n        tmp.hour_of_day,\n        tmp.total_buy*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as total_buy,\n        tmp.total_profit*data_collection.exchangetousd_rate(ta.currency_code, now()::date) as total_profit\n    from\n    (\n        select \n            account_id, \n            date_part('hour', purchase_time) as hour_of_day, \n            sum(coalesce(buy_price,0)) as total_buy, \n            sum(coalesce(buy_price,0) - coalesce(sell_price,0)) as total_profit\n        from only bet.financial_market_bet \n        where purchase_time >= {{date_string}}::date\n        and purchase_time < {{date_string}}::date + interval '1d'\n        and substr(underlying_symbol,1,1)={{first_letter}}\n        --current_date --+ interval '-2d'\n        group by 1, 2\n    ) tmp \n    left join transaction.account ta\n    on ta.id=tmp.account_id\n) tmp2\ngroup by 1\norder by 1"", 'template-tags': {'date_string': {'id': '1214e187-7e57-f9bb-bcac-518deb1ae151', 'name': 'date_string', 'display-name': 'enter a date', 'type': 'date', 'required': True, 'default': '2019-05-04'}, 'first_letter': {'id': 'd1f24ec6-de99-4b13-e182-a63c4c469861', 'name': 'first_letter', 'display-name': 'First Letter', 'type': 'text', 'required': True, 'default': 'f'}}}}",,table,,False,False,975,,Turnover and profit by hour and market,,native,,"[{'name': 'hour_of_day', 'display_name': 'Hour Of Day', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 22, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 21, 'avg': 10.5, 'sd': 6.493586579592718, 'q1': 5, 'q3': 16}}}}, {'name': 'total_buy', 'display_name': 'Total Buy', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 22, 'nil%': 0}, 'type': {'type/Number': {'min': 1.3, 'max': 16704.45521311871, 'avg': 6519.310143727364, 'sd': 4201.276185259921, 'q1': 3318.811472060437, 'q3': 8756.950092498086}}}}, {'name': 'total_profit', 'display_name': 'Total Profit', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 22, 'nil%': 0}, 'type': {'type/Number': {'min': -3303.063520595621, 'max': 546.374430309898, 'avg': -806.5016599622359, 'sd': 1096.6354205647058, 'q1': -1081.03705046589, 'q3': -144.73941713855}}}}]",,2019-05-22 06:23:06.783,"{'graph.show_goal': False, 'table.cell_column': 'hour_of_day', 'stackable.stack_display': 'bar', 'graph.y_axis.scale': 'linear', 'graph.metrics': ['total_buy', 'total_profit'], 'table.pivot_column': 'hour_of_day', 'series_settings': {'total_profit': {'axis': 'left'}}, 'graph.x_axis.scale': 'linear', 'graph.dimensions': ['hour_of_day'], 'stackable.stack_type': 'normalized'}"
False,,,,,2019-01-25 06:34:23.548,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n  purchase_date,\n  sum(""volidx_buy_USD"") as ""volidx_buy_USD"",\n  sum(""volidx_PnL_USD"") as ""volidx_PnL_USD"",\n  sum(""forex_buy_USD"") as ""forex_buy_USD"",\n  sum(""forex_PnL_USD"") as ""forex_PnL_USD"",\n  sum(""indices_buy_USD"") as ""indices_buy_USD"",\n  sum(""indices_PnL_USD"") as ""indices_PnL_USD"",\n  sum(""commodities_buy_USD"") as ""commodities_buy_USD"",\n  sum(""commodities_PnL_USD"") as ""commodities_PnL_USD""\nfrom\n(\nselect\n  ta.currency_code,\n  tmp.""purchase_date"",\n  sum(tmp.""volidx_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""volidx_buy_USD"",\n  sum(tmp.""volidx_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""volidx_PnL_USD"",\n  sum(tmp.""forex_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""forex_buy_USD"",\n  sum(tmp.""forex_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""forex_PnL_USD"",\n  sum(tmp.""indices_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""indices_buy_USD"",\n  sum(tmp.""indices_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""indices_PnL_USD"",\n  sum(tmp.""commodities_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""commodities_buy_USD"",\n  sum(tmp.""commodities_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""commodities_PnL_USD""\nfrom\n(\n    select\n      account_id,\n      purchase_time::date as ""purchase_date"",\n      sum(buy_price) filter (where bm.market=\'volidx\') as ""volidx_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'volidx\') as ""volidx_PnL"",\n      sum(buy_price) filter (where bm.market=\'forex\') as ""forex_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'forex\') as ""forex_PnL"",\n      sum(buy_price) filter (where bm.market=\'indices\') as ""indices_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'indices\') as ""indices_PnL"",\n      sum(buy_price) filter (where bm.market=\'commodities\') as ""commodities_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'commodities\') as ""commodities_PnL""\n      \n    \n    from bet.financial_market_bet fmb left join bet.market bm\n    on fmb.underlying_symbol=bm.symbol\n    where purchase_time >= (now() + interval \'-7d\')::date\n    and purchase_time < now()::date\n    group by 1,2\n) tmp left join transaction.account ta\non ta.id=tmp.account_id\ngroup by 1,2\n\n) tmp2\ngroup by 1\norder by 1 desc'}}",,line,,False,False,232,,Turnover and Profit by market (CR only),,native,,"[{'name': 'purchase_date', 'display_name': 'purchase_date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-10T00:00:00.000Z', 'latest': '2019-10-16T00:00:00.000Z'}}}}, {'name': 'volidx_buy_USD', 'display_name': 'volidx_buy_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4049293.1036596303, 'max': 5620114.832473602, 'avg': 5004800.36601526, 'sd': 540475.513849284, 'q1': 4714091.7333133295, 'q3': 5446661.589266257}}}}, {'name': 'volidx_PnL_USD', 'display_name': 'volidx_PnL_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 48554.2462782949, 'max': 275181.48440457217, 'avg': 126352.16354372448, 'sd': 77091.4621399887, 'q1': 66261.45894940183, 'q3': 152625.60023599694}}}}, {'name': 'forex_buy_USD', 'display_name': 'forex_buy_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 169.0256, 'max': 215644.12846657672, 'avg': 130501.053127635, 'sd': 91864.18444416563, 'q1': 38527.03830349379, 'q3': 200923.9987783603}}}}, {'name': 'forex_PnL_USD', 'display_name': 'forex_PnL_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 16.9776402, 'max': 21043.83755193027, 'avg': 10313.85878967373, 'sd': 9641.11949660524, 'q1': 1454.4997590297285, 'q3': 20088.8838284066}}}}, {'name': 'indices_buy_USD', 'display_name': 'indices_buy_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.28571428571428503}, 'type': {'type/Number': {'min': 824.510916, 'max': 1833.5487634, 'avg': 1295.6536809, 'sd': 427.7794907853656, 'q1': 926.01213495, 'q3': 1673.0410975}}}}, {'name': 'indices_PnL_USD', 'display_name': 'indices_PnL_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.28571428571428503}, 'type': {'type/Number': {'min': -699.608762, 'max': 647.0622225, 'avg': -132.34626994, 'sd': 491.453827368235, 'q1': -384.55383485, 'q3': 98.77370422499997}}}}, {'name': 'commodities_buy_USD', 'display_name': 'commodities_buy_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.14285714285714202}, 'type': {'type/Number': {'min': 70.0, 'max': 6242.356515360087, 'avg': 2849.0233060346095, 'sd': 2039.363485298427, 'q1': 1943.53477193492, 'q3': 3633.3161507191}}}}, {'name': 'commodities_PnL_USD', 'display_name': 'commodities_PnL_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.14285714285714202}, 'type': {'type/Number': {'min': -66.183907049, 'max': 480.752406564335, 'avg': 138.68547986571966, 'sd': 225.69813521381596, 'q1': -62.675808671407, 'q3': 349.3814889856}}}}]",,2019-10-17 00:20:59.967,"{'series_settings': {'Vol I Dx Buy Usd': {'axis': 'left', 'title': 'Volidx Buy USD'}, 'Vol I Dx Pn L Usd': {'axis': 'right', 'title': 'Volidx Pn L USD'}, 'For Ex Buy Usd': {'axis': 'left', 'title': 'Forex Buy USD'}, 'For Ex Pn L Usd': {'axis': 'right', 'title': 'Forex PnL USD'}, 'Indices Pn L Usd': {'axis': 'right', 'title': 'Indices PnL USD'}, 'Indices Buy Usd': {'axis': 'left', 'title': 'Indices Buy USD'}, 'Commodities Buy Usd': {'axis': 'left', 'title': 'Commodities Buy USD'}, 'Commodities Pn L Usd': {'axis': 'right', 'title': 'Commodities PnL USD'}}, 'graph.y_axis.scale': 'pow', 'graph.dimensions': ['purchase_date'], 'graph.metrics': ['volidx_buy_USD', 'volidx_PnL_USD', 'forex_buy_USD', 'forex_PnL_USD', 'indices_buy_USD', 'indices_PnL_USD', 'commodities_buy_USD', 'commodities_PnL_USD']}"
False,,"{'id': 57, 'name': 'Daily Report', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'daily_report'}",57.0,,2018-12-28 06:21:59.261,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'type': 'native', 'database': 2, 'native': {'query': 'select ""day"", sum(""exchange_rate""*""turnover"") as ""turnover_usd"", sum(""profit""*""exchange_rate"") as ""profit_usd"" from\n(\nselect \n  ""day"",\n  ta.""currency_code"",\n  sum(turnover) as ""turnover"",\n  sum(loss) as ""profit"",\n  data_collection.exchangetousd_rate(ta.currency_code, ""day"") as ""exchange_rate""\n  --count(distinct account_id) as ""customer_count""\nfrom bet.daily_aggregates da left join transaction.account ta\non ta.id = da.account_id\nWHERE CAST(da.""day"" AS date) BETWEEN CAST((NOW() + INTERVAL \'-30 day\') AS date)\n   AND CAST((NOW() + INTERVAL \'-1 day\') AS date)\nGROUP BY CAST(da.""day"" AS date), ta.""currency_code""\nORDER BY CAST(da.""day"" AS date) DESC\n) s\ngroup by 1\norder by 1 '}}",,line,,False,False,142,,Turnover and profit until yesterday (CR),,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-03-23T00:00:00.000Z', 'latest': '2019-04-21T00:00:00.000Z'}}}}, {'name': 'turnover_usd', 'display_name': 'Turnover Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2361260.465390534, 'max': 4173416.6275184588, 'avg': 3476712.659351503, 'sd': 473160.7610948481, 'q1': 3136135.173319072, 'q3': 3898355.6831610147}}}}, {'name': 'profit_usd', 'display_name': 'Profit Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 40704.2087397335, 'max': 221419.91728765372, 'avg': 105710.03925095905, 'sd': 43161.67484021863, 'q1': 78072.12283511672, 'q3': 127028.81287846458}}}}]",,2019-04-22 10:22:30.165,"{'graph.dimensions': ['day'], 'graph.metrics': ['turnover_usd', 'profit_usd'], 'stackable.stack_type': None, 'series_settings': {'Profit': {'axis': 'left', 'color': '#7172AD', 'line.interpolate': 'cardinal', 'display': 'area'}, 'Turnover': {'display': 'line', 'axis': 'right', 'line.interpolate': 'cardinal'}, 'Customer Count': {'axis': None, 'display': 'line'}, 'Turnover Usd': {'title': 'Turnover USD', 'display': 'line', 'line.interpolate': 'cardinal'}, 'Profit Usd': {'title': 'Profit USD', 'display': 'area'}}, 'graph.show_trendline': False, 'scalar.switch_positive_negative': False, 'graph.show_goal': False}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-20 03:01:15.156,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    residence,\n    sum(tmp3.""turnover_USD"") as ""turnover_USD"",\n    sum(tmp3.""loss_USD"") as ""revenue_USD"",\n    sum(tmp3.""num_clients"")::bigint as ""num_clients""\nfrom\n(\n    select \n        --bc.address_city,\n        bc.residence,\n        --bc.date_joined,\n        tmp2.turnover*data_collection.exchangetousd_rate(tmp2.""currency_code"", now()::date) as ""turnover_USD"",\n        --tmp2.currency_code,\n        tmp2.loss*data_collection.exchangetousd_rate(tmp2.""currency_code"", now()::date) as ""loss_USD"",\n        tmp2.""num_clients"" as ""num_clients""\n    from\n    (\n        select\n            ta.currency_code,\n            ta.binary_user_id,\n            sum(tmp.turnover) as ""turnover"",\n            sum(tmp.loss) as ""loss"",\n            count(distinct ta.id) as ""num_clients""\n        from\n        (\n            select * from bet.daily_aggregates\n            where ""day"" = (now() + interval \'-1d\')::date\n        ) tmp left join transaction.account ta\n        on ta.id=tmp.account_id\n        group by 1,2\n    ) tmp2 left join betonmarkets.client bc\n    on bc.binary_user_id=tmp2.binary_user_id\n) tmp3\ngroup by 1\norder by 2 desc, 3\nlimit 20'}}",,line,,False,False,389,,Turnover and revenue (CR; top-20 countries),,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'turnover_USD', 'display_name': 'Turnover Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 37724.0150592, 'max': 3251048.613548878, 'avg': 408693.3140643148, 'sd': 815790.6084314674, 'q1': 41117.49527166411, 'q3': 297034.5367703414}}}}, {'name': 'revenue_USD', 'display_name': 'Revenue Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': -16400.46168893428, 'max': 108311.88319289609, 'avg': 13387.822519618052, 'sd': 28824.680693380036, 'q1': 37.43526924329453, 'q3': 9537.054477156096}}}}, {'name': 'num_clients', 'display_name': 'Num Clients', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 16.0, 'max': 3393.0, 'avg': 520.75, 'sd': 931.5985059647688, 'q1': 53.5, 'q3': 294.5}}}}]",,2019-08-29 06:45:40.052,"{'graph.dimensions': ['residence'], 'graph.metrics': ['turnover_USD', 'revenue_USD', 'num_clients'], 'column_settings': {'[""name"",""num_clients""]': {'scale': 100}}, 'series_settings': {'Num Clients': {'title': 'Num Clients x 100'}, 'Revenue Usd': {'axis': 'right'}}, 'graph.y_axis.title_text': ''}"
False,,"{'id': 65, 'name': ""Parviz asoodefard's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 52, 'slug': 'parviz_asoodefard_s_personal_collection'}",65.0,,2019-01-28 05:14:33.417,"{'email': 'parviz@regentmarkets.com', 'first_name': 'Parviz', 'last_login': '2019-07-03T05:55:34.855Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 52, 'last_name': 'asoodefard', 'date_joined': '2019-01-08T07:10:52.493Z', 'common_name': 'Parviz asoodefard'}",52,2,"{'database': 2, 'type': 'native', 'native': {'query': ' with  temp1 as (\n   select purchase_date,\n      residence,\n      --sum(buy) as ""buy"",\n      sum(buy*exchange_rate) turnover \n   from \n   (\n    select \n      c.residence,\n      purchase_time::date as ""purchase_date"",\n       data_collection.exchangetousd_rate(acc.currency_code, purchase_time) exchange_rate,\n      sum(buy_price)  as ""buy""\n    from bet.financial_market_bet fmb \n    inner join transaction.account acc\n      on acc.id = fmb.account_id\n    inner join betonmarkets.client c\n      on c.loginid = acc.client_loginid\n    where purchase_time >= (current_date + interval \'-7d\')::date\n      and purchase_time < current_date\n    group by c.residence,\n      purchase_time::date,\n      data_collection.exchangetousd_rate(acc.currency_code, purchase_time) \n      order by buy desc)t\n     group by purchase_date,\n          residence\n       )\n \n select *\n    --sum(turnover)\n    --sum(buy) \n from temp1 tm \n where tm.residence in \n             (select t.residence\n             from temp1 t\n             group by t.residence\n             order by sum(t.turnover) desc\n             limit 6)\n order by residence, purchase_date\n    --   */'}}",This diagram shows the six most turnover countries in recent week.,line,,False,False,245,,Turnover by countries (CR),,native,,"[{'name': 'purchase_date', 'display_name': 'Purchase Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-02-21T00:00:00.000Z', 'latest': '2019-02-27T00:00:00.000Z'}}}}, {'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 6, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'turnover', 'display_name': 'Turnover', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 42, 'nil%': 0.0}, 'type': {'type/Number': {'min': 42299.88890845414, 'max': 1906913.901675992, 'avg': 475683.5265614191, 'sd': 588481.2019499892, 'q1': 114987.60232245765, 'q3': 694336.9583085502}}}}]",,2019-02-28 01:08:53.160,"{'graph.dimensions': ['purchase_date', 'residence'], 'graph.metrics': ['turnover'], 'graph.y_axis.scale': 'linear', 'graph.y_axis.title_text': 'Trunover'}"
False,,"{'id': 88, 'name': ""Mustofa Ghaleb Amami's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 65, 'slug': 'mustofa_ghaleb_amami_s_personal_collection'}",88.0,,2019-04-11 03:38:00.926,"{'email': 'mustofa@binary.com', 'first_name': 'Mustofa Ghaleb', 'last_login': '2019-05-23T06:57:46.611Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 65, 'last_name': 'Amami', 'date_joined': '2019-03-01T07:39:44.498Z', 'common_name': 'Mustofa Ghaleb Amami'}",65,2,"{'database': 2, 'type': 'native', 'native': {'query': 'SELECT  CAST(tmp.day AS date) AS day, \n        SUM(tmp.turnover) AS sum\nFROM \n    (SELECT day::date as ""day"", round(turnover*data_collection.exchangetousd_rate(a.currency_code,day), 2) as turnover\n    FROM bet.daily_aggregates\n    LEFT JOIN transaction.account a\n    ON bet.daily_aggregates.account_id=a.id\n    WHERE ""day"" >= (now() + interval \'-30 day\')::date and ""day"" < now()::date) as tmp      \nGROUP BY 1\nORDER BY 1 ASC'}}",,combo,,False,False,944,,Turnover Weekly (Chart),,native,,"[{'name': 'day', 'display_name': 'day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-09-10T00:00:00.000Z', 'latest': '2019-10-09T00:00:00.000Z'}}}}, {'name': 'sum', 'display_name': 'sum', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 3495151.55, 'max': 5886283.57, 'avg': 4798144.022666667, 'sd': 640071.8979550321, 'q1': 4405269.08, 'q3': 5195455.94}}}}]",,2019-10-10 05:24:09.041,"{'graph.dimensions': ['day'], 'graph.metrics': ['sum'], 'series_settings': {'Sum': {'line.interpolate': 'linear', 'display': 'area', 'color': '#7172AD'}}}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-02-18 09:11:17.899,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT ""Symbol"",\n       COUNT(Distinct(mt5_deals_2019.""Login"")) As Client_Trading_Activity_on_Vol\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\nWhere ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\', \'Volatility 50 Index\', \'Volatility 75 Index\', \'Volatility 100 Index\', \'HF Volatility 10 Index\',\'HF Volatility 50 Index\', \'HF Volatility 100 Index\')\nand {{Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\ngroup by ""Symbol""\nOrder by Client_Trading_Activity_on_Vol DESC', 'template-tags': {'Time': {'widget-type': 'date/relative', 'default': 'today', 'name': 'Time', 'type': 'dimension', 'id': 'e4690a94-9629-5765-abc3-6c62ca544f58', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}}}}",,row,,False,False,385,,Unique clients per symbol,,native,,"[{'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'client_trading_activity_on_vol', 'display_name': 'Client Trading Activity On Vol', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-04-03 07:49:14.790,"{'graph.dimensions': ['Symbol'], 'graph.metrics': ['client_trading_activity_on_vol']}"
False,,"{'id': 61, 'name': 'MT5 - 2019', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'mt5___2019'}",61.0,,2019-03-12 10:42:23.343,"{'email': 'tony@binary.com', 'first_name': 'Tony', 'last_login': '2019-09-23T14:26:16.566Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 42, 'last_name': 'Cini', 'date_joined': '2018-11-23T08:12:34.195Z', 'common_name': 'Tony Cini'}",42,9,"{'database': 9, 'type': 'native', 'native': {'query': 'SELECT ""Symbol"",\n       COUNT(Distinct(mt5_deals_2019.""Login"")) As Client_Trading_Activity_on_Vol\nFROM mt5_deals_2019\nJOIN mt5_users AS users ON users.""Login"" = mt5_deals_2019.""Login""\nWhere ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\', \'Volatility 50 Index\', \'Volatility 75 Index\', \'Volatility 100 Index\', \'HF Volatility 10 Index\',\'HF Volatility 50 Index\', \'HF Volatility 100 Index\')\nand date(""Time"") >=  {{Start_Time}}\nand date(""Time"") <=  {{End_Time}}\nand ""Entry"" IN (0,1,3)\nand ""Action"" IN (0,1)\ngroup by ""Symbol""\nOrder by Client_Trading_Activity_on_Vol DESC', 'template-tags': {'Start_Time': {'id': '2cd89cdf-f1ff-cfa3-18e8-53bc9f5bc3fa', 'name': 'Start_Time', 'display-name': 'Start_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'End_Time': {'id': '2c1ccba5-89af-259a-affc-77dc4d3e82c4', 'name': 'End_Time', 'display-name': 'End_Time', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,row,,False,False,488,,Unique clients per symbol - by date range,,native,,"[{'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.375}}}}, {'name': 'client_trading_activity_on_vol', 'display_name': 'Client Trading Activity On Vol', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 41.0, 'max': 1150.0, 'avg': 251.5, 'sd': 384.7191925844838, 'q1': 58.32590180780452, 'q3': 263.0}}}}]",,2019-03-21 04:32:30.632,"{'graph.dimensions': ['Symbol'], 'graph.metrics': ['client_trading_activity_on_vol']}"
False,,,,,2018-09-19 07:19:31.575,"{'email': 'tom@binary.com', 'first_name': 'Tom', 'last_login': '2019-07-02T09:37:40.323Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 1, 'last_name': 'M', 'date_joined': '2018-09-19T07:15:48.171Z', 'common_name': 'Tom M'}",1,2,"{'query': {'source-table': 86, 'breakout': [['field-id', 753], ['field-id', 754]], 'filter': ['and', ['time-interval', ['field-id', 748], -1, 'week', {'include-current': True}], ['=', ['fk->', ['field-id', 751], ['field-id', 1051]], 'USD']], 'aggregation': [['sum', ['field-id', 749]]]}, 'type': 'query', 'database': 2}",,table,,False,False,1,,USD payments over the last week,,query,,"[{'name': 'payment_gateway_code', 'display_name': 'payment_gateway_code', 'base_type': 'type/Text', 'special_type': 'type/FK', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}}}, {'name': 'payment_type_code', 'display_name': 'payment_type_code', 'base_type': 'type/Text', 'special_type': 'type/FK', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}}}, {'name': 'sum', 'display_name': 'Sum of amount', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 10, 'nil%': 0.0}, 'type': {'type/Number': {'min': -299712.51, 'max': 710882.44, 'avg': 85196.84, 'sd': 260802.03761357762, 'q1': 0.0, 'q3': 116128.66}}}}]",86.0,2019-10-21 05:38:21.993,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-25 06:56:01.916,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,7,"{'database': 7, 'type': 'native', 'native': {'query': 'select to_char(max(history_date), \'YYYY-MM-DD HH:mm:SS\') as ""time_of_last_login"", \nto_char(now(), \'YYYY-MM-DD HH:mm:SS\') as time_now, \nextract( epoch from now()-max(history_date))/60 as ""minutes_since_last_login"", \nextract(epoch from (now() - pg_last_xact_replay_timestamp()))/60 as ""minutes_since_last_replay""\nfrom users.login_history'}}",,table,,False,False,409,,userdb  Sync Lag,,native,,"[{'name': 'time_of_last_login', 'display_name': 'time_of_last_login', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'time_now', 'display_name': 'time_now', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'minutes_since_last_login', 'display_name': 'minutes_since_last_login', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.053918833333333006, 'max': 0.053918833333333006, 'avg': 0.053918833333333006, 'sd': None, 'q1': 0.053918833333333006, 'q3': 0.053918833333333006}}}}, {'name': 'minutes_since_last_replay', 'display_name': 'minutes_since_last_replay', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.056939516666666, 'max': 0.056939516666666, 'avg': 0.056939516666666, 'sd': None, 'q1': 0.056939516666666, 'q3': 0.056939516666666}}}}]",,2019-10-11 01:11:45.231,"{'table.pivot_column': 'time_of_last_login', 'table.cell_column': 'minutes_since_last_login'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:12.522,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""WITH params AS (\n    SELECT \n        '2016-08-27'::TIMESTAMP AS frm,                  -- search for clients that joined after this point in time\n        true AS include_virtual,                       -- true: include virtual accounts, false: only real-money accounts\n        false AS exclude_clients_without_utm_source     -- true: only look for clients having a defined utm_source, false: take all clients into account\n)\n\n\n-- please don't change anything below this line\n, cl AS (\n    SELECT s.srvname, c.loginid, c.date_joined, c.first_payment\n      FROM pg_catalog.pg_foreign_data_wrapper w\n      JOIN pg_catalog.pg_foreign_server s ON (s.srvfdw=w.oid)\n      JOIN params ON TRUE\n      JOIN dblink(s.srvname, $$\n               SELECT DISTINCT ON (c.loginid)\n                      c.loginid, c.date_joined, p.payment_time\n                 FROM betonmarkets.client c\n                 JOIN transaction.account a ON a.client_loginid=c.loginid\n                 LEFT JOIN payment.payment p on p.account_id=a.id\n                WHERE c.date_joined>='$$ || params.frm || $$'\n                ORDER BY c.loginid, p.payment_time\n           $$) c(loginid TEXT, date_joined TIMESTAMP, first_payment TIMESTAMP) ON TRUE\n     WHERE w.fdwname IN ('postgres_fdw', 'dblink_fdw')\n       AND (params.include_virtual OR s.srvname<>'vr')\n       AND EXISTS(SELECT 1 FROM dblink(s.srvname, $$\n               SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid=c.relnamespace\n                WHERE c.relname='client' AND n.nspname='betonmarkets'\n           $$) t(i int))\n)\n, u AS (\n    SELECT *\n      FROM dblink('users', $$\n               SELECT u.email, l.loginid, u.utm_source, u.utm_medium, u.utm_campaign, u.app_id\n                 FROM users.binary_user u\n                 JOIN users.loginid l ON l.binary_user_id=u.id\n                WHERE NOT $$ || (SELECT exclude_clients_without_utm_source FROM params) || $$ OR u.utm_source IS NOT NULL\n           $$) t(email text, loginid text, utm_source text, utm_medium text, utm_campaign text, app_id bigint)\n)\nSELECT u.email, u.loginid, u.utm_source, u.utm_medium, u.utm_campaign, u.app_id, cl.date_joined, cl.first_payment\n  FROM u\n  JOIN cl ON u.loginid=cl.loginid\n;\n""}}",,table,,False,False,625,,UTM report (Ashkan),,native,,,,2019-03-22 03:27:12.522,{}
False,,"{'id': 88, 'name': ""Mustofa Ghaleb Amami's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 65, 'slug': 'mustofa_ghaleb_amami_s_personal_collection'}",88.0,,2019-03-06 10:15:36.763,"{'email': 'mustofa@binary.com', 'first_name': 'Mustofa Ghaleb', 'last_login': '2019-05-23T06:57:46.611Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 65, 'last_name': 'Amami', 'date_joined': '2019-03-01T07:39:44.498Z', 'common_name': 'Mustofa Ghaleb Amami'}",65,7,"{'database': 7, 'type': 'native', 'native': {'query': ""select count(utm_source), utm_source\nfrom users.binary_user\nwhere utm_source is not null and utm_source not like 'affiliate%'\ngroup by utm_source\nhaving count(utm_source) > 500\norder by count(utm_source) desc, utm_source desc\nlimit 800""}}",,pie,,False,False,456,,utm source binary users,,native,,"[{'name': 'count', 'display_name': 'count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 44, 'nil%': 0.0}, 'type': {'type/Number': {'min': 508.0, 'max': 342476.0, 'avg': 12039.522727272728, 'sd': 51610.188456232594, 'q1': 853.0, 'q3': 4457.0}}}}, {'name': 'utm_source', 'display_name': 'utm_source', 'base_type': 'type/Text', 'special_type': 'type/Source', 'fingerprint': {'global': {'distinct-count': 44, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 13.931818181818182}}}}]",,2019-10-10 05:24:18.977,"{'pie.dimension': 'utm_source', 'pie.metric': 'count', 'pie.slice_threshold': 0.5, 'pie.show_legend': True}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:19.377,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Payments > View Backoffice MT5 credit transfers by payments\n-- this report will only display the credit transfers done by payments team \n-- after a MT5 account is disabled and the client's balance is to be credited to their CR account\n\n-- MODIFY THE CODE ACCORDINGLY\n\nWITH params as (\n  SELECT\n    'CR'::VARCHAR AS broker_code,\n    '2019-01-01'::DATE AS start_date, -- YYYY-MM-DD\n    '2019-01-31'::DATE as end_date -- YYYY-MM-DD\n)\n\n-- DO NOT TOUCH CODE BELOW\n\nSELECT\n\ndb.*\n\nFROM params\nJOIN betonmarkets.production_servers_v2() AS ps ON UPPER(params.broker_code) = ANY(ps.broker_codes)\nCROSS JOIN dblink (ps.srvname, $$\n  select acc.client_loginid, acc.currency_code, pa.amount, pa.staff_loginid, pa.remark, pa.payment_time::DATE\n  from payment.payment pa\n  join transaction.account as acc ON pa.account_id = acc.id\n  where pa.payment_type_code = 'adjustment'\n  and pa.remark like '%MT5%'\n  and pa.staff_loginid not like 'CR%'\n  and pa.payment_time::date >= $$|| quote_literal( params.start_date ) ||$$\n  and pa.payment_time::date <= $$|| quote_literal( params.end_date ) ||$$\n  ORDER by payment_time desc\n$$) db (\n\nclient_loginid VARCHAR,\ncurrency_code VARCHAR,\namount NUMERIC,\nstaff_loginid VARCHAR,\nremark VARCHAR,\npayment_time DATE\n\n)\n""}}",Payments > View Backoffice MT5 credit transfers by payments,table,,False,False,632,,View Backoffice MT5 credit transfers by payments,,native,,,,2019-03-22 03:27:19.377,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:02.897,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Payments > View MT5 manual debits by quants\n-- this report will only display the debit transfers done by quants team after a MT5 account is disabled\n\n-- MODIFY THE CODE ACCORDINGLY\n\nWITH params AS (SELECT\n  \'2019-02-01\'::DATE AS rpt_start, -- YYYY-MM-DD\n  \'2019-02-27\'::DATE AS rpt_end -- YYYY-MM-DD\n)\n\n-- Do not touch any code below here\n\nSELECT mt5_d.""Login"", mt5_d.""Profit"", mt5_g.""Currency"", mt5_d.""Time""::date, mt5_d.""Comment""\nFROM mt5.mt5_deals_2019 AS mt5_d\nJOIN mt5.mt5_users AS mt5_u ON mt5_u.""Login"" = mt5_d.""Login""\nJOIN mt5.mt5_groups AS mt5_g ON mt5_u.""Group"" = mt5_g.""Group""\nWHERE mt5_d.""Action"" = 2\nAND mt5_d.""Reason"" = 2\nAND mt5_d.""Comment"" like \'%Manual%\'\nAND ""Time"" >= (SELECT rpt_start FROM params) \nAND ""Time"" <= (SELECT rpt_end FROM params)\nORDER BY ""Time"" DESC\n'}}",Payments > View MT5 manual debits by quants,table,,False,False,620,,View MT5 manual debits by quants,,native,,,,2019-03-22 03:27:02.897,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:26:45.592,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- Vol Surfaces\n SELECT\n  * \n FROM\n  chronicle \n WHERE\n  category='volatility_surfaces' \n  AND name='HSI' \n ORDER BY\n  timestamp DESC limit 24*14""}}",Vol Surfaces,table,,False,False,613,,Vol,,native,,,,2019-03-22 03:26:45.592,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:28:17.923,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT *\n  from chronicle\n  where category = 'volatility_surfaces'\n  and name ='INTATAMOTORS'\n  order by timestamp DESC\n  limit 10""}}",,table,,False,False,650,,vol_sur_stock,,native,,,,2019-03-22 03:28:17.923,{}
False,,,,,2019-01-25 06:39:05.267,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n  purchase_date,\n  sum(""volidx_buy_USD"") as ""volidx_buy_USD"",\n  sum(""volidx_PnL_USD"") as ""volidx_PnL_USD""\n  --sum(""forex_buy_USD"") as ""forex_buy_USD"",\n  --sum(""forex_PnL_USD"") as ""forex_PnL_USD"",\n  --sum(""indices_buy_USD"") as ""indices_buy_USD"",\n  --sum(""indices_PnL_USD"") as ""indices_PnL_USD"",\n  --sum(""commodities_buy_USD"") as ""commodities_buy_USD"",\n  --sum(""commodities_PnL_USD"") as ""commodities_PnL_USD""\nfrom\n(\nselect\n  ta.currency_code,\n  tmp.""purchase_date"",\n  sum(tmp.""volidx_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""volidx_buy_USD"",\n  sum(tmp.""volidx_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""volidx_PnL_USD"",\n  sum(tmp.""forex_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""forex_buy_USD"",\n  sum(tmp.""forex_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""forex_PnL_USD"",\n  sum(tmp.""indices_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""indices_buy_USD"",\n  sum(tmp.""indices_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""indices_PnL_USD"",\n  sum(tmp.""commodities_buy"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""commodities_buy_USD"",\n  sum(tmp.""commodities_PnL"") * data_collection.exchangetousd_rate(ta.currency_code, tmp.""purchase_date""::timestamp) as ""commodities_PnL_USD""\nfrom\n(\n    select\n      account_id,\n      purchase_time::date as ""purchase_date"",\n      sum(buy_price) filter (where bm.market=\'volidx\') as ""volidx_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'volidx\') as ""volidx_PnL"",\n      sum(buy_price) filter (where bm.market=\'forex\') as ""forex_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'forex\') as ""forex_PnL"",\n      sum(buy_price) filter (where bm.market=\'indices\') as ""indices_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'indices\') as ""indices_PnL"",\n      sum(buy_price) filter (where bm.market=\'commodities\') as ""commodities_buy"",\n      sum(buy_price - sell_price) filter (where bm.market=\'commodities\') as ""commodities_PnL""\n      \n    \n    from bet.financial_market_bet fmb left join bet.market bm\n    on fmb.underlying_symbol=bm.symbol\n    where purchase_time >= (now() + interval \'-7d\')::date\n    and purchase_time < now()::date\n    group by 1,2\n) tmp left join transaction.account ta\non ta.id=tmp.account_id\ngroup by 1,2\n\n) tmp2\ngroup by 1\norder by 1 desc'}}",,table,,False,False,233,,Volidx turnover and profit (CR),,native,,"[{'name': 'purchase_date', 'display_name': 'purchase_date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-10-11T00:00:00.000Z', 'latest': '2019-10-17T00:00:00.000Z'}}}}, {'name': 'volidx_buy_USD', 'display_name': 'volidx_buy_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4049293.1036596303, 'max': 5533456.664717458, 'avg': 4893501.8372182, 'sd': 468006.69223192486, 'q1': 4708759.218383874, 'q3': 5169066.228897247}}}}, {'name': 'volidx_PnL_USD', 'display_name': 'volidx_PnL_USD', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 48554.2462782949, 'max': 275223.41440457216, 'avg': 118191.14196214393, 'sd': 75455.01067378557, 'q1': 65223.85173634485, 'q3': 117695.51714606327}}}}]",,2019-10-18 00:34:23.656,{}
False,,"{'id': 54, 'name': ""Aggelos Armenatzoglou's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 47, 'slug': 'aggelos_armenatzoglou_s_personal_collection'}",54.0,,2019-01-29 05:30:07.026,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_deals_2019.""Time""), Count(Distinct(""Login"")) As Client_Trading_Activity_on_Vol\nfrom mt5_deals_2019\nWHERE ""Action"" IN (0,1) -- In Trades only\nand ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\nand {{Time}}\ngroup by date(mt5_deals_2019.""Time"")', 'template-tags': {'Time': {'widget-type': 'date/all-options', 'default': 'past30days', 'name': 'Time', 'type': 'dimension', 'id': 'ae971572-8560-96ea-4b8b-b5744cd07d43', 'dimension': ['field-id', 7452], 'display-name': 'Time', 'required': True}}}}",,line,,False,False,255,,Vols_trading_activity,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-21T00:00:00.000Z', 'latest': '2019-02-19T00:00:00.000Z'}}}}, {'name': 'client_trading_activity_on_vol', 'display_name': 'Client Trading Activity On Vol', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1222.0, 'max': 1563.0, 'avg': 1389.0, 'sd': 100.54849576199537, 'q1': 1312.0, 'q3': 1502.0}}}}]",,2019-02-20 07:22:07.916,"{'graph.dimensions': ['date'], 'graph.metrics': ['client_trading_activity_on_vol']}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:28:23.217,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""SELECT\n  * \n FROM\n  chronicle \n WHERE\n  category='volatility_surfaces' \n  AND name='SZSECOMP' \n ORDER BY\n  timestamp DESC limit 3\n""}}",,table,,False,False,652,,volsurface,,native,,,,2019-03-22 03:28:23.217,{}
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:27:12.164,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""-- VR - real - deposits - turnover - analysis v1\nWITH params AS (SELECT\n  '2017-01-01'::DATE AS vr_start_date,  -- The earliest VR join date\n                                        -- these dates are inclusive\n  '2018-02-01'::DATE AS real_start_date,-- The earliest real money join date -and- the start of monetary aggregations\n  '2018-02-28'::DATE AS real_end_date   -- The latest VR & real money join date -and- the end of monetary aggregations\n)\n,vr AS (\n    SELECT d.*\n    FROM dblink('vr', $$\n        SELECT\n            binary_user_id,\n            MIN(date_joined) AS date_joined,\n            residence\n        FROM betonmarkets.client\n        WHERE date_joined >= $$|| quote_literal((SELECT vr_start_date FROM params)) ||$$::TIMESTAMP\n          AND date_joined  < $$|| quote_literal((SELECT real_end_date FROM params)) ||$$::TIMESTAMP + '1d'::INTERVAL\n        GROUP BY 1,3\n    $$) d (\n        buid BIGINT,\n        date_joined TIMESTAMP,\n        residence VARCHAR\n    )\n)\n,notvr AS (\n    SELECT d.* FROM betonmarkets.production_servers() AS ps CROSS JOIN dblink(ps.srvname, $$\n        SELECT\n            bc.binary_user_id AS buid,\n            bc.residence,\n            min(bc.date_joined) AS date_joined,\n            abs(transaction.round_amount('USD', SUM(tt.amount * exch.rate) FILTER (WHERE tt.action_type='deposit'))) AS deposits_usd,\n            abs(transaction.round_amount('USD', SUM(tt.amount * exch.rate) FILTER (WHERE tt.action_type='buy'))) AS turnover_usd\n        FROM betonmarkets.client AS bc\n        LEFT JOIN transaction.account AS ta\n          ON ta.client_loginid=bc.loginid\n        LEFT JOIN transaction.transaction AS tt\n          ON tt.account_id=ta.id\n                  -- these txn filters help PG use the indexes, otherwise we end up with a full scan of the txn table, a killer on CR\n          AND tt.transaction_time >= $$|| quote_literal((SELECT real_start_date FROM params)) ||$$::TIMESTAMP\n          AND tt.transaction_time  < $$|| quote_literal((SELECT real_end_date FROM params)) ||$$::TIMESTAMP + '1d'::INTERVAL\n        LEFT JOIN data_collection.exchangetousd_rate(ta.currency_code, tt.transaction_time) AS exch(rate) ON TRUE\n        \n        WHERE bc.date_joined >= $$|| quote_literal((SELECT real_start_date FROM params)) ||$$::TIMESTAMP\n          AND bc.date_joined  < $$|| quote_literal((SELECT real_end_date FROM params)) ||$$::TIMESTAMP + '1d'::INTERVAL\n\n        GROUP BY 1,2\n    $$) d (\n        buid BIGINT,\n        residence VARCHAR,\n        date_joined TIMESTAMP,\n        deposits_usd NUMERIC,\n        turnover_usd NUMERIC\n    )\n)\n\nSELECT\n    COALESCE(vr.residence, notvr.residence) AS country_code,\n    bcc.country_name,\n    COUNT(vr.*) AS vr_opened,\n    COUNT(notvr.*) AS real_opened,\n    SUM(notvr.deposits_usd) AS deposits_usd,\n    SUM(notvr.turnover_usd) AS turnover_usd,\n    AVG(notvr.date_joined - vr.date_joined) AS avg_conversion_interval,\n    'VR: '|| params.vr_start_date ||' Real: '|| params.real_start_date ||' - '|| params.real_end_date\nFROM vr\n-- This join assumes we only want real clients who are siblings to VR in this run. There are real clients who have signed up without first doing VR. These are not included in this report\nLEFT JOIN notvr\n     ON vr.buid=notvr.buid\n    AND vr.date_joined <= notvr.date_joined   -- only real clients who joined after the VR client\nLEFT JOIN brands_binary_countries AS bcc\n    ON bcc.country_code = COALESCE(vr.residence, notvr.residence)\nCROSS JOIN params\nGROUP BY 1,2,8\nORDER BY 2""}}",VR - real - deposits - turnover - analysis v1,table,,False,False,623,,VR - real - deposits - turnover - analysis v1,,native,,,,2019-03-22 03:27:12.164,{}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-05-07 08:20:23.599,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,14,"{'database': 14, 'type': 'native', 'native': {'query': 'select to_char(max(transaction_time), \'YYYY-MM-DD HH:mm:SS\') as ""last_transaction_time"", \nto_char(now(), \'YYYY-MM-DD HH:mm:SS\') as ""time_now"", extract(epoch from now()-max(transaction_time))/60 as ""minutes_since_last_transaction"",\nextract(epoch from (now() - pg_last_xact_replay_timestamp()))/60 as ""minutes_since_last_replay""\nfrom transaction.transaction'}}",,table,,False,False,958,,VR Sync Lag,,native,,"[{'name': 'last_transaction_time', 'display_name': 'Last Transaction Time', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'time_now', 'display_name': 'Time Now', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 19.0}}}}, {'name': 'minutes_since_last_transaction', 'display_name': 'Minutes Since Last Transaction', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 28749.6428471, 'max': 28749.6428471, 'avg': 28749.6428471, 'sd': None, 'q1': 28749.6428471, 'q3': 28749.6428471}}}}, {'name': 'minutes_since_last_replay', 'display_name': 'Minutes Since Last Replay', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 28749.64270015, 'max': 28749.64270015, 'avg': 28749.64270015, 'sd': None, 'q1': 28749.64270015, 'q3': 28749.64270015}}}}]",,2019-08-19 02:57:07.438,"{'table.pivot_column': 'last_transaction_time', 'table.cell_column': 'minutes_since_last_transaction', 'table.column_formatting': [{'max_value': 5, 'color': '#509EE3', 'columns': ['minutes_since_last_replay'], 'value': '', 'type': 'range', 'colors': ['#84BB4C', '#F9CF48', '#ED6E6E'], 'highlight_row': False, 'min_value': 0, 'min_type': 'custom', 'operator': '=', 'max_type': 'custom'}]}"
False,,"{'id': 76, 'name': ""Denis makagonov's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 55, 'slug': 'denis_makagonov_s_personal_collection'}",76.0,,2019-03-14 09:54:38.086,"{'email': 'denis.makagonov@binary.com', 'first_name': 'Denis', 'last_login': '2019-09-23T07:22:55.154Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 55, 'last_name': 'makagonov', 'date_joined': '2019-01-29T08:22:50.309Z', 'common_name': 'Denis makagonov'}",55,11,"{'database': 11, 'type': 'native', 'native': {'query': 'SELECT \r\nCASE WHEN length(custom_limits) > 2 then \'Watch and Limit\' ELSE \'Watch only\' END as watching_type,\r\n\r\n a.*\r\n\r\nFROM \r\n(SELECT\r\nx.loginid,\r\nv.vals->>\'reason\' AS reason,\r\nv.vals->>\'updated_by\' AS updated_by,\r\nv.vals->>\'updated_on\' AS updated_on,\r\nv.vals->>\'custom_limits\' AS custom_limits\r\nFROM \r\n    (SELECT value FROM chronicle WHERE category=\'app_settings\' AND name=\'quants.custom_client_profiles\' ORDER BY ""timestamp"" DESC LIMIT 1) AS c\r\nCROSS JOIN json_object_keys((c.value::json->>\'data\')::json) AS x(loginid)\r\nCROSS JOIN LATERAL (\r\nSELECT (((c.value::json->>\'data\')::json)->>x.loginid)::json AS vals\r\n) AS v\r\n) as a'}}",,table,,False,False,496,,Watch List,,native,,"[{'name': 'watching_type', 'display_name': 'Watching Type', 'base_type': 'type/Text', 'special_type': 'type/Category', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 12.037037037037036}}}}, {'name': 'loginid', 'display_name': 'Login ID', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 54, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 7.907407407407407}}}}, {'name': 'reason', 'display_name': 'Reason', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 38, 'nil%': 0.129629629629629}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 20.85185185185185}}}}, {'name': 'updated_by', 'display_name': 'Updated By', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 12, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 6.333333333333333}}}}, {'name': 'updated_on', 'display_name': 'Updated On', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 41, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 10}}}}, {'name': 'custom_limits', 'display_name': 'Custom Limits', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 18, 'nil%': 0.5740740740740741}, 'type': {'type/Text': {'percent-json': 0.42592592592592504, 'percent-url': 0, 'percent-email': 0, 'average-length': 93.14814814814815}}}}]",,2019-03-14 09:54:38.086,{'table.pivot_column': 'custom_limits'}
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-02-20 06:32:30.342,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select *\nfrom\n(\nselect * from bet.daily_aggregates \nwhere  day = (now() + interval '-1d')::date\n) tmp left join transaction.account ta\non ta.id = tmp.account_id\nwhere \nclient_loginid in ('CR135157',\n'CR191649',\n'CR331286',\n'CR342227',\n'CR377309',\n'CR380569',\n'CR381652',\n'CR389979',\n'CR395114',\n'CR399957',\n'CR408056',\n'CR412899',\n'CR41563',\n'CR423208',\n'CR426576',\n'CR427354',\n'CR451196',\n'CR469032',\n'CR475327',\n'CR488243',\n'CR559186',\n'CR506591',\n'CR53073',\n'CR567001',\n'CR592729',\n'CR639583',\n'CR647262',\n'CR707093',\n'CR710625',\n'CR713816',\n'CR719537',\n'CR722461',\n'CR725521',\n'CR725572',\n'CR725588',\n'CR725648',\n'CR725657',\n'CR726353',\n'CR736168',\n'CR754508',\n'CR754556',\n'CR754607',\n'CR755043',\n'CR765754',\n'CR775552',\n'MLT87187',\n'MF14198')\n""}}",,table,,False,False,402,,Watched clients' activity summary for yesterday (CR),,native,,"[{'name': 'day', 'display_name': 'Day', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-05-13T00:00:00.000Z', 'latest': '2019-05-13T00:00:00.000Z'}}}}, {'name': 'account_id', 'display_name': 'Account ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4210221.0, 'max': 11080060.999999998, 'avg': 5755518.5, 'sd': 2305211.397865714, 'q1': 4316781.0, 'q3': 6096611.0}}}}, {'name': 'turnover', 'display_name': 'Turnover', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 30.0, 'max': 6574.0, 'avg': 1444.8375, 'sd': 2232.4589713571127, 'q1': 164.86, 'q3': 1957.69}}}}, {'name': 'loss', 'display_name': 'Loss', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': -113.5, 'max': 6574.0, 'avg': 971.0237500000001, 'sd': 2282.1939263282693, 'q1': -9.11, 'q3': 618.215}}}}, {'name': 'id', 'display_name': 'ID', 'base_type': 'type/Integer', 'special_type': 'type/PK', 'fingerprint': None}, {'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'balance', 'display_name': 'Balance', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 12.53, 'max': 10001.87, 'avg': 3118.9750000000004, 'sd': 4120.423316366554, 'q1': 138.29000000000002, 'q3': 6451.3150000000005}}}}, {'name': 'is_default', 'display_name': 'Is Default', 'base_type': 'type/Boolean', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}}}, {'name': 'last_modified', 'display_name': 'Last Modified', 'base_type': 'type/DateTime', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-05-13T16:30:09.323Z', 'latest': '2019-05-14T17:04:58.051Z'}}}}, {'name': 'binary_user_id', 'display_name': 'Binary User ID', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 5312163.0, 'max': 6127414.0, 'avg': 5533502.625, 'sd': 256500.8819405264, 'q1': 5400085.5, 'q3': 5563857.5}}}}]",,2019-05-14 17:42:09.200,"{'table.pivot_column': 'day', 'table.cell_column': 'account_id'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-04-04 02:55:46.174,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\na.client_loginid,\ncurrency_code,\nsum(b.sell_price - b.buy_price) as amount, \ncount (b.sell_time) as trades_number\nfrom transaction.account a\ninner join bet.financial_market_bet b on a.id=b.account_id\n where 1=1\n    and a.client_loginid in (\n   'CR237170',\n'CR238953',\n'CR244822',\n'CR245915',\n'CR246747',\n'CR249283',\n'CR250604',\n'CR251250',\n'CR253487',\n'CR257860',\n'CR277151',\n'CR277249',\n'CR280009',\n'CR280572',\n'CR282116',\n'CR282182',\n'CR282852',\n'CR282917',\n'CR283587',\n'CR289182',\n'CR289696',\n'CR291949',\n'CR292379',\n'CR293972',\n'CR294769',\n'CR296132',\n'CR296902',\n'CR297515',\n'CR297835',\n'CR300007',\n'CR300625',\n'CR300677',\n'CR301169',\n'CR301689',\n'CR302879',\n'CR302990',\n'CR304967',\n'CR307992',\n'CR308203',\n'CR308776',\n'CR309471',\n'CR309700',\n'CR310183',\n'CR311388',\n'CR313026',\n'CR315829',\n'CR316360',\n'CR316368',\n'CR316697',\n'CR318978',\n'CR321153',\n'CR322655',\n'CR323202',\n'CR325859',\n'CR327681',\n'CR329264',\n'CR330664',\n'CR333936',\n'CR335970',\n'CR338139',\n'CR338567',\n'CR342328',\n'CR345750',\n'CR346013',\n'CR347410',\n'CR358663',\n'CR364601',\n'CR369447',\n'CR369659',\n'CR375157',\n'CR386634',\n'CR392291',\n'CR39451',\n'CR407681',\n'CR428470',\n'CR428471',\n'CR443127',\n'CR446039',\n'CR479482',\n'CR491566',\n'CR544857',\n'CR609966',\n'CR76196',\n'CR91001',\n'CR142155',\n'CR536913',\n'CR611335',\n'CR625278',\n'CR638034',\n'CR789845',\n'CR794300',\n'CR733800'\n    )\n    and sell_time > {{since1}}\n    and sell_time < {{since2}}\nGroup by a.id, b.account_id\norder by amount desc\n\n"", 'template-tags': {'since2': {'id': '7d3dcad6-0b5e-2635-e6fe-62a342acc2b4', 'name': 'since2', 'display-name': 'End date not inclusive', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'since1': {'id': '73a0877c-3cc2-dfb8-8954-28a5ff53b3c1', 'name': 'since1', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,table,,False,False,691,,Watched list: AU indices traders,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'amount', 'display_name': 'Amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': -150.0, 'max': 5.57, 'avg': -69.16, 'sd': 77.96476960781709, 'q1': -128.2625, 'q3': -11.584999999999994}}}}, {'name': 'trades_number', 'display_name': 'Trades Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 2, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 2.0, 'avg': 1.666666666666666, 'sd': 0.5773502691896251, 'q1': 1.224744871391589, 'q3': 2.0}}}}]",,2019-08-07 01:07:38.239,"{'table.column_widths': [None, None, 123], 'table.pivot_column': 'client_loginid', 'table.cell_column': 'amount'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-06 05:30:18.765,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\na.client_loginid,\ncurrency_code,\nsum(b.sell_price - b.buy_price) as amount, \ncount (b.sell_time) as trades_number\nfrom transaction.account a\ninner join bet.financial_market_bet b on a.id=b.account_id\n where 1=1\n    and a.client_loginid in ('CR559186',\n'CR707093',\n'CR710625',\n'CR713816',\n'CR719537',\n'CR722461',\n'CR725521',\n'CR725572',\n'CR725588',\n'CR725648',\n'CR725657',\n'CR726353',\n'CR736168',\n'CR755043',\n'CR765754',\n'CR670569',\n'CR782745',\n'CR782746',\n'CR803329',\n'CR814395',\n'CR837022')\n    and sell_time > {{since1}}\n    and sell_time < {{since2}}\nGroup by a.id, b.account_id\norder by amount desc\n\n"", 'template-tags': {'since2': {'id': '7d3dcad6-0b5e-2635-e6fe-62a342acc2b4', 'name': 'since2', 'display-name': 'End date not inclusive', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'since1': {'id': '73a0877c-3cc2-dfb8-8954-28a5ff53b3c1', 'name': 'since1', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",All Chinese logins from Watched list,table,,False,False,441,,Watched list: Chinese gang,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'amount', 'display_name': 'amount', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-09-10 00:42:00.551,"{'table.column_widths': [None, None, 123], 'table.pivot_column': 'client_loginid', 'table.cell_column': 'amount'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-05-29 02:24:57.468,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\na.client_loginid,\ncurrency_code,\nsum(b.sell_price - b.buy_price) as amount, \ncount (b.sell_time) as trades_number\nfrom transaction.account a\ninner join bet.financial_market_bet b on a.id=b.account_id\n \n    where a.client_loginid in (\n    'CR362993',\n'CR369550',\n'CR371790',\n'CR378679',\n'CR380569',\n'CR381652',\n'CR389024',\n'CR390920',\n'CR392991',\n'CR395633',\n'CR398297',\n'CR407814',\n'CR423580',\n'CR428847',\n'CR429336',\n'CR431144',\n'CR439896',\n'CR441548',\n'CR452333',\n'CR452768',\n'CR453395',\n'CR459473',\n'CR461392',\n'CR466348',\n'CR468640',\n'CR477660',\n'CR499296',\n'CR517105',\n'CR564740',\n'CR570808',\n'CR660949',\n'CR688684',\n'CR691694',\n'CR693625',\n'CR699368',\n'CR715619',\n'CR722237',\n'CR729311',\n'CR744836',\n'CR747251',\n'CR747252',\n'CR773458',\n'CR774352',\n'CR793925',\n'CR815915',\n'CR816734',\n'CR819084',\n'CR819456',\n'CR822970',\n'CR848735',\n'CR849139',\n'CR853355',\n'CR863556',\n'CR868403',\n'CR870816',\n'CR876650',\n'CR879729',\n'CR894836',\n'CR954835',\n'CR466334',\n'CR493313'\n    )\n    and sell_time > {{since1}}\n    and sell_time < {{since2}}\nGroup by a.id, b.account_id\norder by amount desc\n\n"", 'template-tags': {'since2': {'id': '7d3dcad6-0b5e-2635-e6fe-62a342acc2b4', 'name': 'since2', 'display-name': 'End date not inclusive', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'since1': {'id': '73a0877c-3cc2-dfb8-8954-28a5ff53b3c1', 'name': 'since1', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,table,,False,False,980,,Watched list: EOD traders,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'amount', 'display_name': 'amount', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-18 06:14:33.944,"{'table.column_widths': [None, None, 123], 'table.pivot_column': 'client_loginid', 'table.cell_column': 'amount'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-06 05:36:40.046,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\na.client_loginid,\ncurrency_code,\nsum(b.sell_price - b.buy_price) as amount, \ncount (b.sell_time) as trades_number\nfrom transaction.account a\ninner join bet.financial_market_bet b on a.id=b.account_id\n    and a.client_loginid in ('CR342227',\n'CR377309',\n'CR395114',\n'CR399957',\n'CR408056',\n'CR41563',\n'CR427354',\n'CR469032',\n'CR567001',\n'CR647262',\n'CR352826',\n'CR469032',\n'CR344701',\n'CR689340',\n'CR494254')\n    and sell_time > {{since1}}\n    and sell_time < {{since2}}\nGroup by a.id, b.account_id\norder by amount desc\n\n"", 'template-tags': {'since2': {'id': '7d3dcad6-0b5e-2635-e6fe-62a342acc2b4', 'name': 'since2', 'display-name': 'End date not inclusive', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'since1': {'id': '73a0877c-3cc2-dfb8-8954-28a5ff53b3c1', 'name': 'since1', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,table,,False,False,444,,Watched list: EOH FX pros,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.666666666666667}}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'amount', 'display_name': 'amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': -19.48, 'max': 51.96, 'avg': 11.846666666666666, 'sd': 36.521535199568675, 'q1': -13.845, 'q3': 39.735}}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 3.0, 'avg': 2.0, 'sd': 1.0, 'q1': 1.25, 'q3': 2.75}}}}]",,2019-09-10 00:42:00.554,"{'table.column_widths': [None, None, 123], 'table.pivot_column': 'client_loginid', 'table.cell_column': 'amount'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-06 05:38:29.180,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\na.client_loginid,\ncurrency_code,\nsum(b.sell_price - b.buy_price) as amount, \ncount (b.sell_time) as trades_number\nfrom transaction.account a\ninner join bet.financial_market_bet b on a.id=b.account_id\n where 1=1\n    and a.client_loginid in ('CR775552',\n'CR778347',\n'CR788731',\n'CR802310')\n    and sell_time > {{since1}}\n    and sell_time < {{since2}}\nGroup by a.id, b.account_id\norder by amount desc\n\n"", 'template-tags': {'since2': {'id': '7d3dcad6-0b5e-2635-e6fe-62a342acc2b4', 'name': 'since2', 'display-name': 'End date not inclusive', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'since1': {'id': '73a0877c-3cc2-dfb8-8954-28a5ff53b3c1', 'name': 'since1', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,table,,False,False,445,,Watched list: metal pros from RU,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'amount', 'display_name': 'amount', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-09-10 00:42:00.628,"{'table.column_widths': [None, None, 123], 'table.pivot_column': 'client_loginid', 'table.cell_column': 'amount'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-06 05:35:26.408,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\na.client_loginid,\ncurrency_code,\nsum(b.sell_price - b.buy_price) as amount, \ncount (b.sell_time) as trades_number\nfrom transaction.account a\ninner join bet.financial_market_bet b on a.id=b.account_id\n where 1=1\n    and a.client_loginid in ('CR380569',\n'CR451196',\n'CR452436',\n'CR754508',\n'CR754556')\n    and sell_time > {{since1}}\n    and sell_time < {{since2}}\nGroup by a.id, b.account_id\norder by amount desc\n\n"", 'template-tags': {'since2': {'id': '7d3dcad6-0b5e-2635-e6fe-62a342acc2b4', 'name': 'since2', 'display-name': 'End date not inclusive', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'since1': {'id': '73a0877c-3cc2-dfb8-8954-28a5ff53b3c1', 'name': 'since1', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,table,,False,False,443,,Watched list: random FX players,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'amount', 'display_name': 'amount', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-09-10 00:42:00.685,"{'table.column_widths': [None, None, 123], 'table.pivot_column': 'client_loginid', 'table.cell_column': 'amount'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-06 05:34:16.366,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\na.client_loginid,\ncurrency_code,\nsum(b.sell_price - b.buy_price) as amount, \ncount (b.sell_time) as trades_number\nfrom transaction.account a\ninner join bet.financial_market_bet b on a.id=b.account_id\n where 1=1\n    and a.client_loginid in ('CR135157',\n'CR389979',\n'CR426576',\n'CR53073',\n'CR754607')\n    and sell_time > {{since1}}\n    and sell_time < {{since2}}\nGroup by a.id, b.account_id\norder by amount desc\n\n"", 'template-tags': {'since2': {'id': '7d3dcad6-0b5e-2635-e6fe-62a342acc2b4', 'name': 'since2', 'display-name': 'End date not inclusive', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'since1': {'id': '73a0877c-3cc2-dfb8-8954-28a5ff53b3c1', 'name': 'since1', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,table,,False,False,442,,Watched list: random vol indices players,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'amount', 'display_name': 'amount', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-09-10 00:42:00.660,"{'table.column_widths': [None, None, 123], 'table.pivot_column': 'client_loginid', 'table.cell_column': 'amount'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-03-06 05:39:40.822,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\na.client_loginid,\ncurrency_code,\nsum(b.sell_price - b.buy_price) as amount, \ncount (b.sell_time) as trades_number\nfrom transaction.account a\ninner join bet.financial_market_bet b on a.id=b.account_id\n where 1=1\n    and a.client_loginid in (\n    'CR134092'\n'CR147369',\n'CR350713',\n'CR353244',\n'CR355666',\n'CR356297',\n'CR358161',\n'CR362226',\n'CR362740',\n'CR362810',\n'CR367396',\n'CR381652',\n'CR383689',\n'CR401889',\n'CR402963',\n'CR403479',\n'CR423208',\n'CR424483',\n'CR431224',\n'CR447005',\n'CR484116',\n'CR485765',\n'CR488081',\n'CR500588',\n'CR512664',\n'CR515140',\n'CR562410',\n'CR579349',\n'CR629399',\n'CR653729',\n'CR654046',\n'CR663950',\n'CR698459',\n'CR703913',\n'CR708701',\n'CR73370'\n    )\n    and sell_time > {{since1}}\n    and sell_time < {{since2}}\nGroup by a.id, b.account_id\norder by amount desc\n\n"", 'template-tags': {'since2': {'id': '7d3dcad6-0b5e-2635-e6fe-62a342acc2b4', 'name': 'since2', 'display-name': 'End date not inclusive', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'since1': {'id': '73a0877c-3cc2-dfb8-8954-28a5ff53b3c1', 'name': 'since1', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,table,,False,False,446,,Watched list: RU news traders  ,,native,,"[{'name': 'client_loginid', 'display_name': 'client_loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'currency_code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'amount', 'display_name': 'amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': -26.0, 'max': 25.98, 'avg': 4.955, 'sd': 22.2252551541409, 'q1': -10.05, 'q3': 19.96}}}}, {'name': 'trades_number', 'display_name': 'trades_number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 3.0, 'avg': 2.25, 'sd': 0.9574271077563381, 'q1': 1.5, 'q3': 3.0}}}}]",,2019-09-10 00:42:00.554,"{'table.column_widths': [None, None, 123], 'table.pivot_column': 'client_loginid', 'table.cell_column': 'amount'}"
False,,"{'id': 46, 'name': ""Olga Sidorova's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 45, 'slug': 'olga_sidorova_s_personal_collection'}",46.0,,2019-04-02 03:36:38.814,"{'email': 'olga.sidorova@binary.com', 'first_name': 'Olga', 'last_login': '2019-10-14T23:57:14.710Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 45, 'last_name': 'Sidorova', 'date_joined': '2018-12-06T08:31:02.888Z', 'common_name': 'Olga Sidorova'}",45,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select\na.client_loginid,\ncurrency_code,\nsum(b.sell_price - b.buy_price) as amount, \ncount (b.sell_time) as trades_number\nfrom transaction.account a\ninner join bet.financial_market_bet b on a.id=b.account_id\n where 1=1\n    and a.client_loginid in (\n   'CR486861',\n'CR493361',\n'CR586727',\n'CR591701',\n'CR592729',\n'CR602539',\n'CR619840',\n'CR626203',\n'CR635374',\n'CR638391',\n'CR639024',\n'CR639521',\n'CR639583',\n'CR641324',\n'CR642177',\n'CR642393',\n'CR649066',\n'CR690396',\n'CR661076',\n'CR668744',\n'CR679619',\n'CR685211',\n'CR698916',\n'CR709210',\n'CR716566',\n'CR719073',\n'CR747375',\n'CR747405',\n'CR774140',\n'CR780633',\n'CR591701',\n'CR645631',\n'CR626882',\n'CR586028'\n    )\n    and sell_time > {{since1}}\n    and sell_time < {{since2}}\nGroup by a.id, b.account_id\norder by amount desc\n\n"", 'template-tags': {'since2': {'id': '7d3dcad6-0b5e-2635-e6fe-62a342acc2b4', 'name': 'since2', 'display-name': 'End date not inclusive', 'type': 'date', 'required': True, 'default': '2019-03-01'}, 'since1': {'id': '73a0877c-3cc2-dfb8-8954-28a5ff53b3c1', 'name': 'since1', 'display-name': 'Start Date', 'type': 'date', 'required': True, 'default': '2019-03-01'}}}}",,table,,False,False,687,,Watched list: S. American news traders,,native,,"[{'name': 'client_loginid', 'display_name': 'Client Loginid', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 8.0}}}}, {'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'amount', 'display_name': 'Amount', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 26.51, 'max': 26.51, 'avg': 26.51, 'sd': None, 'q1': 26.51, 'q3': 26.51}}}}, {'name': 'trades_number', 'display_name': 'Trades Number', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 1, 'nil%': 0.0}, 'type': {'type/Number': {'min': 31.0, 'max': 31.0, 'avg': 31.0, 'sd': None, 'q1': 31.0, 'q3': 31.0}}}}]",,2019-07-17 04:59:17.722,"{'table.column_widths': [None, None, 123], 'table.pivot_column': 'client_loginid', 'table.cell_column': 'amount'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-03-04 16:30:02.483,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    --myaffiliates_token, \n    length(coalesce(myaffiliates_token,\'\')) as ""length_of_affiliate_token"",\n    count(distinct binary_user_id) as ""num_buid"",\n    count(1) as ""num_loginid""\nfrom betonmarkets.client\ngroup by 1\norder by 2 desc'}}",,table,,False,False,430,,What do MyAffiliate Tokens look like?,,native,,"[{'name': 'length_of_affiliate_token', 'display_name': 'Length Of Affiliate Token', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 32.0, 'avg': 9.25, 'sd': 10.646931147384342, 'q1': 1.5, 'q3': 13.5}}}}, {'name': 'num_buid', 'display_name': 'Num Buid', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 5, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 467756.0, 'avg': 94415.875, 'sd': 181325.06049431738, 'q1': 1.0, 'q3': 143781.0}}}}, {'name': 'num_loginid', 'display_name': 'Num Loginid', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 7, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 506661.0, 'avg': 101347.5, 'sd': 195296.43989147808, 'q1': 1.5857864376269042, 'q3': 152049.5}}}}]",,2019-04-02 07:31:32.944,"{'table.pivot_column': 'num_buid', 'table.cell_column': 'length_of_affiliate_token'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-03 05:48:54.731,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    ((date_part('hour', purchase_minute)*60 + round((date_part('minute', purchase_minute)/5)::numeric,0)*5))/60 as gmt_time_five_minute_period,\n    market,\n    sum(count_winning)/sum(count_buy) as fraction_winning\n    --sum(count_winning) as count_winning\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_buy,\n        count_winning\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy,\n            count(*) filter (where sell_price > 0) as count_winning\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2\n--where market not in ('volidx', 'r100Group')\ngroup by 1,2\norder by 1""}}",,line,,False,False,994,37.0,winning fraction by five minute period,d49cd99a-ab20-4ebb-8a79-c5dc5bb81a42,native,,"[{'name': 'gmt_time_five_minute_period', 'display_name': 'Gmt Time Five Minute Period', 'base_type': 'type/Float', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 99, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 8.25, 'avg': 4.367983963344788, 'sd': 2.352990139085454, 'q1': 2.414125402625024, 'q3': 6.466749395425815}}}}, {'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.941580756013746}}}}, {'name': 'fraction_winning', 'display_name': 'Fraction Winning', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 194, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1.0, 'avg': 0.546000830955024, 'sd': 0.267849960590183, 'q1': 0.42397933664978904, 'q3': 0.6368532436956591}}}}]",,2019-06-05 08:17:37.626,"{'graph.dimensions': ['gmt_time_five_minute_period', 'market'], 'graph.metrics': ['fraction_winning'], 'table.pivot_column': 'market', 'table.cell_column': 'five_minute_period', 'graph.show_goal': True, 'graph.goal_value': 0.5, 'series_settings': {'forex': {'line.marker_enabled': False}, 'indices': {'line.marker_enabled': False}, 'commodities': {'line.marker_enabled': False}}}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-03 05:35:28.567,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    round(((date_part('hour', purchase_minute)*60 + date_part('minute', purchase_minute))/5)::numeric,0) as five_minute_period,\n    market,\n    sum(count_winning)/sum(count_buy) as fraction_winning\n    --sum(count_winning) as count_winning\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_buy,\n        count_winning\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy,\n            count(*) filter (where sell_price > 0) as count_winning\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2\ngroup by 1,2\norder by 1""}}",,table,,False,False,993,37.0,"winning fraction, by the minute",372ef9e0-c9f7-4f74-b8f9-2282cc53191f,native,,"[{'name': 'five_minute_period', 'display_name': 'Five Minute Period', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 76, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 76.0, 'avg': 39.509433962264154, 'sd': 21.487852497610316, 'q1': 22.612965487510056, 'q3': 58.166666666666664}}}}, {'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 6.867924528301887}}}}, {'name': 'fraction_winning', 'display_name': 'Fraction Winning', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 144, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 1.0, 'avg': 0.553528445759017, 'sd': 0.260164873112447, 'q1': 0.45129928458501806, 'q3': 0.6409344045956721}}}}]",,2019-06-05 06:23:39.201,"{'graph.dimensions': ['purchase_minute', 'market'], 'graph.metrics': ['fraction_winning'], 'table.pivot_column': 'market', 'table.cell_column': 'five_minute_period'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-05 06:25:12.053,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    round(((date_part('hour', purchase_minute)*60 + date_part('minute', purchase_minute))/5)::numeric,0) as five_minute_period,\n    market,\n    sum(100*count_winning)/sum(count_buy) as percent_winning\n    --sum(count_winning) as count_winning\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_buy,\n        count_winning\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy,\n            count(*) filter (where sell_price > 0) as count_winning\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2\ngroup by 1,2\norder by 1""}}",,line,,False,False,999,,"winning percentage, by five-minute intervals",,native,,"[{'name': 'five_minute_period', 'display_name': 'Five Minute Period', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 77, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 77, 'avg': 39.85981308411215, 'sd': 21.690055900842342, 'q1': 22.818178933460317, 'q3': 58.666666666666664}}}}, {'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 6.855140186915888}}}}, {'name': 'percent_winning', 'display_name': 'Percent Winning', 'base_type': 'type/Decimal', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 145, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 100, 'avg': 55.30120880241429, 'sd': 25.887877632561548, 'q1': 44.78641745100077, 'q3': 63.94942542327496}}}}]",,2019-06-05 06:25:12.053,"{'graph.dimensions': ['five_minute_period', 'market'], 'graph.metrics': ['percent_winning'], 'table.pivot_column': 'market', 'table.cell_column': 'five_minute_period'}"
False,,"{'id': 36, 'name': ""Alok Tiwari's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 37, 'slug': 'alok_tiwari_s_personal_collection'}",36.0,,2019-06-05 06:27:52.843,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select \n    round(((date_part('hour', purchase_minute)*60 + date_part('minute', purchase_minute))/5)::numeric,0) as five_minute_period,\n    market,\n    sum(100*count_winning)/sum(count_buy) as percent_winning\n    --sum(count_winning) as count_winning\nfrom\n(\n    select \n        currency_code,\n        purchase_minute,\n        market,\n        count_buy,\n        count_winning\n        --total_buy*data_collection.exchangetousd_rate(currency_code, purchase_minute) as total_buy,\n        --profit*data_collection.exchangetousd_rate(currency_code, purchase_minute) as profit\n    from\n    (\n        select\n            ta.currency_code,\n            bm.market, \n            date_trunc('minute', purchase_time) as purchase_minute, \n            count(*) as count_buy,\n            count(*) filter (where sell_price > 0) as count_winning\n            --sum(buy_price) as total_buy,\n            --sum(buy_price - sell_price) as profit\n        from only bet.financial_market_bet fmb left join bet.market bm\n        on bm.symbol = fmb.underlying_symbol\n        left join transaction.account ta\n        on ta.id= fmb.account_id\n        where purchase_time >= current_date\n        and purchase_time < date_trunc('minute', now())\n        group by 1,2,3\n    ) tmp\n) tmp2\nwhere count_buy > 1\ngroup by 1,2\norder by 1""}}",,line,,False,False,1000,,"winning percentage, by five-minute intervals (at least two contracts)",,native,,"[{'name': 'five_minute_period', 'display_name': 'Five Minute Period', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 77, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 77, 'avg': 39.72560975609756, 'sd': 22.715289361827654, 'q1': 20.5, 'q3': 59.17157287525381}}}}, {'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 3, 'nil%': 0}, 'type': {'type/Text': {'percent-json': 0, 'percent-url': 0, 'percent-email': 0, 'average-length': 5.835365853658536}}}}, {'name': 'percent_winning', 'display_name': 'Percent Winning', 'base_type': 'type/Decimal', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 144, 'nil%': 0}, 'type': {'type/Number': {'min': 0, 'max': 100, 'avg': 55.500129786720244, 'sd': 16.564822738674977, 'q1': 50.645578113211116, 'q3': 61.917854996591416}}}}]",,2019-06-05 06:27:52.843,"{'graph.dimensions': ['five_minute_period', 'market'], 'graph.metrics': ['percent_winning'], 'table.pivot_column': 'market', 'table.cell_column': 'five_minute_period'}"
False,,,,,2019-01-18 09:23:03.448,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    ""residence"",\n    sum(""amount_deposit_USD"") as ""deposits_USD"", \n    sum(""count_deposit"")::bigint as ""count_deposits"",\n    count(distinct ""binary_user_id"")::bigint as ""count_clients""\nfrom\n(\n    select\n      tmp3_in_USD.*,\n      bc.residence,\n      bc.binary_user_id\n      from\n      (\n        select\n          tmp2_agg_acc.amount_deposit*data_collection.exchangetousd_rate(ta.""currency_code"", now()::date) as ""amount_deposit_USD"",\n          tmp2_agg_acc.count_deposit,\n          ta.client_loginid\n        from\n        (\n          select \n            account_id,\n            sum(amount) as ""amount_deposit"",\n            count(amount) as ""count_deposit""\n          from\n          (\n            select id, account_id, amount, source \n            from transaction.transaction\n            where action_type = \'deposit\'\n            and transaction_time >= (now() + interval \'-1d\')::date\n            and transaction_time < now()::date\n            \n            except \n            \n            select transaction_id, account_id, amount, source \n            from transaction.firsts\n            where action_type = \'deposit\'\n            and transaction_time >= (now() + interval \'-1d\')::date\n            and transaction_time < now()::date\n          ) tmp_except \n          group by 1\n        ) tmp2_agg_acc left join transaction.account ta\n        on tmp2_agg_acc.account_id = ta.id\n      ) tmp3_in_USD left join betonmarkets.client bc\n    on bc.loginid = tmp3_in_USD.client_loginid\n) tmp5\ngroup by 1\norder by 2 desc, 3 desc, 1\nlimit 20'}}",,table,,False,False,218,,"Yesterday's ""non-first"" deposit amounts and counts by country (CR only)",,native,,"[{'name': 'residence', 'display_name': 'residence', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'deposits_USD', 'display_name': 'deposits_USD', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'count_deposits', 'display_name': 'count_deposits', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}, {'name': 'count_clients', 'display_name': 'count_clients', 'base_type': 'type/*', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 0, 'nil%': None}}}]",,2019-10-21 00:01:51.314,"{'graph.y_axis.scale': 'pow', 'graph.dimensions': ['residence'], 'graph.metrics': ['deposits_USD', 'count_deposits', 'count_clients'], 'table.pivot_column': 'count_clients', 'table.cell_column': 'deposits_USD'}"
False,,"{'id': 65, 'name': ""Parviz asoodefard's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 52, 'slug': 'parviz_asoodefard_s_personal_collection'}",65.0,,2019-01-24 10:39:17.605,"{'email': 'parviz@regentmarkets.com', 'first_name': 'Parviz', 'last_login': '2019-07-03T05:55:34.855Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 52, 'last_name': 'asoodefard', 'date_joined': '2019-01-08T07:10:52.493Z', 'common_name': 'Parviz asoodefard'}",52,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select\n    ""residence"",\n    sum(""amount_deposit_USD"") as ""deposits_USD"", \n    sum(""count_deposit"") as ""count_deposits"",\n    count(distinct ""binary_user_id"") as ""count_clients""\nfrom\n(\n    select\n      tmp3_in_USD.*,\n      bc.residence,\n      bc.binary_user_id\n      from\n      (\n        select\n          tmp2_agg_acc.amount_deposit*data_collection.exchangetousd_rate(ta.""currency_code"", now()::date) as ""amount_deposit_USD"",\n          tmp2_agg_acc.count_deposit,\n          ta.client_loginid\n        from\n        (\n          select \n            account_id,\n            sum(amount) as ""amount_deposit"",\n            count(amount) as ""count_deposit""\n          from\n          (\n            select id, account_id, amount, source \n            from transaction.transaction\n            where action_type = \'deposit\'\n            and transaction_time >= (now() + interval \'-1d\')::date\n            and transaction_time < now()::date\n            \n            except \n            \n            select transaction_id, account_id, amount, source \n            from transaction.firsts\n            where action_type = \'deposit\'\n            and transaction_time >= (now() + interval \'-1d\')::date\n            and transaction_time < now()::date\n          ) tmp_except \n          group by 1\n        ) tmp2_agg_acc left join transaction.account ta\n        on tmp2_agg_acc.account_id = ta.id\n      ) tmp3_in_USD left join betonmarkets.client bc\n    on bc.loginid = tmp3_in_USD.client_loginid\n) tmp5\ngroup by 1\norder by 2 desc, 3 desc, 1\nlimit 20'}}",,table,,False,False,223,,"Yesterday's ""non-first"" deposit amounts and counts by country (CR only) - review",,native,,"[{'name': 'residence', 'display_name': 'Residence', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 2.0}}}}, {'name': 'deposits_USD', 'display_name': 'Deposits Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1180.895111336027, 'max': 388203.6138225024, 'avg': 29219.4091615726, 'sd': 86929.23780672932, 'q1': 1685.895, 'q3': 9141.392073715579}}}}, {'name': 'count_deposits', 'display_name': 'Count Deposits', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 20, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 3070.0, 'avg': 229.3, 'sd': 675.1928457465825, 'q1': 17.0, 'q3': 107.5}}}}, {'name': 'count_clients', 'display_name': 'Count Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 19, 'nil%': 0.0}, 'type': {'type/Number': {'min': 2.0, 'max': 1451.0, 'avg': 127.1, 'sd': 318.8832322174901, 'q1': 12.17157287525381, 'q3': 74.0}}}}]",,2019-02-13 07:41:12.380,"{'table.pivot_column': 'count_clients', 'table.cell_column': 'deposits_USD'}"
False,,"{'id': 57, 'name': 'Daily Report', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'daily_report'}",57.0,,2018-12-28 07:13:50.280,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select ""market"", count(1) as ""contract_count"" from bet.financial_market_bet fmb left join bet.market bm\non fmb.underlying_symbol=bm.symbol\nwhere purchase_time between (now() + interval \'-2d\') and (now() + interval \'-1d\')\ngroup by 1'}}",,table,,False,False,145,,Yesterday's contract counts by market (CR),,native,,"[{'name': 'market', 'display_name': 'Market', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 7.25}}}}, {'name': 'contract_count', 'display_name': 'Contract Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 4, 'nil%': 0.0}, 'type': {'type/Number': {'min': 50.0, 'max': 656894.0, 'avg': 170018.75, 'sd': 324758.71681950276, 'q1': 185.0, 'q3': 339852.5}}}}]",,2019-03-01 02:24:15.674,"{'table.pivot_column': 'market', 'table.cell_column': 'contract_count'}"
False,,"{'id': 57, 'name': 'Daily Report', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/36/', 'personal_owner_id': None, 'slug': 'daily_report'}",57.0,,2018-12-28 07:27:33.032,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': 'select \n*,\ndata_collection.exchangetousd_rate(""currency_code"", now()::timestamp) as ""exchange_rate"",\ndata_collection.exchangetousd_rate(""currency_code"", now()::timestamp)*""withdrawal"" as ""withdrawal_usd"",\ndata_collection.exchangetousd_rate(""currency_code"", now()::timestamp)*""deposit"" as ""deposit_usd""\nfrom\n(\nselect ""currency_code"",\ncount(""amount"") filter (where action_type=\'deposit\') as ""deposit_count"",\ncount(""amount"") filter (where action_type=\'withdrawal\') as ""withdrawal_count"",\nsum(""amount"") filter (where action_type=\'deposit\') as ""deposit"",\nsum(""amount"") filter (where action_type=\'withdrawal\') as ""withdrawal""\nfrom transaction.transaction tt left join transaction.account ta\non tt.account_id=ta.id\nwhere action_type in (\'deposit\', \'withdrawal\')\nand transaction_time between (now()+interval \'-2d\') and (now()+interval \'-1d\')\ngroup by 1\n) blah\norder by ""deposit_usd"" desc'}}",,table,,False,False,146,,Yesterday's withdrawals and deposits (CR),,native,,"[{'name': 'currency_code', 'display_name': 'Currency Code', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 3.0}}}}, {'name': 'deposit_count', 'display_name': 'Deposit Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.0, 'max': 5082.0, 'avg': 601.6666666666666, 'sd': 1680.7600215378757, 'q1': 5.0, 'q3': 81.75}}}}, {'name': 'withdrawal_count', 'display_name': 'Withdrawal Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': 1.0, 'max': 4184.0, 'avg': 488.0, 'sd': 1386.3882933723871, 'q1': 3.75, 'q3': 63.75}}}}, {'name': 'deposit', 'display_name': 'Deposit', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.11111111111111101}, 'type': {'type/Number': {'min': 3.323894, 'max': 548345.03, 'avg': 69256.77693363125, 'sd': 193583.1554928747, 'q1': 53.995787525, 'q3': 2211.285}}}}, {'name': 'withdrawal', 'display_name': 'Withdrawal', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': -481030.3, 'max': -0.07441887, 'avg': -53781.564444168886, 'sd': 160219.08664425794, 'q1': -1083.775, 'q3': -12.301961944999999}}}}, {'name': 'exchange_rate', 'display_name': 'Exchange Rate', 'base_type': 'type/Decimal', 'special_type': 'type/Share', 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': 0.7103700000000001, 'max': 3904.95, 'avg': 470.0046611111111, 'sd': 1289.3803127379308, 'q1': 1.017719719841175, 'q3': 135.5675}}}}, {'name': 'withdrawal_usd', 'display_name': 'Withdrawal Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.0}, 'type': {'type/Number': {'min': -481030.3, 'max': -10.0115705811, 'avg': -57424.918090405255, 'sd': 159082.73623745752, 'q1': -9294.736636302121, 'q3': -255.37479750000003}}}}, {'name': 'deposit_usd', 'display_name': 'Deposit Usd', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 9, 'nil%': 0.11111111111111101}, 'type': {'type/Number': {'min': 186.57, 'max': 548345.03, 'avg': 75840.45095961765, 'sd': 191580.95735218696, 'q1': 581.66087501, 'q3': 25793.916322960562}}}}]",,2019-03-01 02:24:24.402,"{'table.columns': [{'name': 'currency_code', 'enabled': True}, {'name': 'deposit_usd', 'enabled': True}, {'name': 'deposit_count', 'enabled': True}, {'name': 'withdrawal_usd', 'enabled': True}, {'name': 'withdrawal_count', 'enabled': True}, {'name': 'deposit', 'enabled': False}, {'name': 'withdrawal', 'enabled': False}, {'name': 'exchange_rate', 'enabled': True}], 'column_settings': {'[""name"",""deposit_usd""]': {'column_title': 'Deposit USD'}, '[""name"",""withdrawal_usd""]': {'column_title': 'Withdrawal USD'}}, 'table.pivot_column': 'deposit_count', 'table.cell_column': 'deposit_count'}"
False,,"{'id': 95, 'name': 'All Snippets from JackDB', 'description': None, 'color': '#509EE3', 'archived': False, 'location': '/', 'personal_owner_id': None, 'slug': 'all_snippets_from_jackdb'}",95.0,,2019-03-22 03:26:45.640,"{'email': 'alok@binary.com', 'first_name': 'Alok', 'last_login': '2019-10-21T06:47:00.318Z', 'is_qbnewb': False, 'is_superuser': True, 'id': 37, 'last_name': 'Tiwari', 'date_joined': '2018-11-14T06:14:10.139Z', 'common_name': 'Alok Tiwari'}",37,2,"{'database': 2, 'type': 'native', 'native': {'query': '-- Yng Shan analysis\nWITH params AS (SELECT\n  \'2017-11-15\'::DATE AS report_day\n)\n\nSELECT t.* FROM params, dblink(\'dc\',\n            $$\n                SELECT DISTINCT ON (op.financial_market_bet_id)\n                        op.financial_market_bet_id,\n                        op.marked_to_market_value\n                   FROM accounting.end_of_day_open_positions AS op\n                   JOIN accounting.end_of_day_balances       AS eod\n                     ON eod.id = op.end_of_day_balance_id\n           -- As of 11/24/17, in practice it looks like the values in here always fall on a day boundary 00:00:00\n           -- i.e. 2017-11-24 00:00:00 reflects the pricing at the open of the day and so the close of the previous day (we\'ll call the reporting day)\n           --\n           -- However, since the field is a timestamp instead of a simple date, we cannot make the assumption that this will hold true in the future,\n           -- nor can we safely assume that some anomaly will not introduce multiple entries for a given ""date"" since there is no constraint to prevent this.\n                WHERE eod.effective_date >= $$|| quote_literal( params.report_day ) ||$$::TIMESTAMP\n                  AND eod.effective_date < $$|| quote_literal( params.report_day ) ||$$::TIMESTAMP + \'1 day\'::INTERVAL\n-- for MF only, we can look for a pattern on the fmb.id.. they end in the digit zero\nAND right(substring(op.financial_market_bet_id::text from \'\\d+\'),1) = \'0\'\n                ORDER BY op.financial_market_bet_id, eod.effective_date\n        \n            $$\n            ) AS t(fmb_id TEXT, mtm NUMERIC)'}}",Yng Shan analysis,table,,False,False,617,,Yng Shan analysis,,native,,,,2019-03-22 03:26:45.640,{}
False,,"{'id': 54, 'name': ""Aggelos Armenatzoglou's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 47, 'slug': 'aggelos_armenatzoglou_s_personal_collection'}",54.0,,2019-01-29 03:37:09.598,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'Select  deals.""Symbol"",\n       Count(Distinct(users.""Login""))   AS Total_Clients,\n             Count(Distinct(users.""Login"")) FILTER (Where users.""Agent"" != 0)  AS Agent_Linked_Clients,\n              \n\n       SUM(""Volume""/10000) FILTER (Where users.""Agent"" != 0) AS Total_Volume,\n       SUM((""Profit"")*-1)  FILTER (Where users.""Agent"" != 0) AS Total_Profit,\n       SUM((""Storage"")*-1) FILTER (Where users.""Agent"" != 0) AS Total_Storage,\n       CASE WHEN ""Symbol"" = \'Volatility 10 Index\' THEN SUM((ROUND(((""Volume""/10000)*(0.25/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       WHEN ""Symbol"" = \'Volatility 25 Index\' THEN SUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       WHEN ""Symbol"" = \'Volatility 50 Index\' THEN SUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       WHEN ""Symbol"" = \'Volatility 75 Index\' THEN SUM((ROUND(((""Volume""/10000)*(2.25/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       WHEN ""Symbol"" = \'Volatility 100 Index\' THEN SUM((ROUND(((""Volume""/10000)*(0.75/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       WHEN ""Symbol"" = \'HF Volatility 10 Index\' THEN SUM((ROUND(((""Volume""/10000)*(0.25/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       WHEN ""Symbol"" = \'HF Volatility 50 Index\' THEN SUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       WHEN ""Symbol"" = \'HF Volatility 100 Index\' THEN SUM((ROUND(((""Volume""/10000)*(0.10/-2)),2))) FILTER (Where users.""Agent"" != 0)\n       ELSE \'0\' END AS Agent_Commissions\n   FROM mt5_deals_2019 AS deals\n   JOIN mt5_users AS users ON users.""Login"" = deals.""Login""\n    \n \n  and date_part(\'year\',deals.""Time"")=\'2019\'\n   and ""Symbol"" IN (\'Volatility 10 Index\', \'Volatility 25 Index\',\'Volatility 50 Index\',\'Volatility 75 Index\', \'Volatility 100 Index\',\'HF Volatility 10 Index\',\'HF Volatility 50 Index\',\'HF Volatility 100 Index\')\n   and ""Entry"" IN (0,1,3)\n   and ""Action"" IN (0,1)\n \n   and users.""Group"" LIKE \'%costarica%\'\ngroup by deals.""Symbol""'}}",,table,,False,False,253,,YtD agent comms,,native,,"[{'name': 'Symbol', 'display_name': 'Symbol', 'base_type': 'type/Text', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Text': {'percent-json': 0.0, 'percent-url': 0.0, 'percent-email': 0.0, 'average-length': 20.375}}}}, {'name': 'total_clients', 'display_name': 'Total Clients', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 402.0, 'max': 4680.0, 'avg': 1480.125, 'sd': 1544.9565354496453, 'q1': 591.0, 'q3': 1973.0}}}}, {'name': 'agent_linked_clients', 'display_name': 'Agent Linked Clients', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 45.0, 'max': 602.0, 'avg': 190.5, 'sd': 203.89072703639215, 'q1': 71.5, 'q3': 274.0}}}}, {'name': 'total_volume', 'display_name': 'Total Volume', 'base_type': 'type/Decimal', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 4295.7, 'max': 75687.68, 'avg': 25746.734999999997, 'sd': 26523.301600270548, 'q1': 7116.254999999999, 'q3': 40666.64}}}}, {'name': 'total_profit', 'display_name': 'Total Profit', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': -25562.87999999998, 'max': 19658.789999999768, 'avg': -6195.720000000006, 'sd': 15037.058128520723, 'q1': -15664.459999999892, 'q3': 5076.744999999938}}}}, {'name': 'total_storage', 'display_name': 'Total Storage', 'base_type': 'type/Float', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': 41.73000000000021, 'max': 14313.930000000115, 'avg': 2056.797500000015, 'sd': 4956.7575938417185, 'q1': 179.88499999999942, 'q3': 549.7349999999996}}}}, {'name': 'agent_commissions', 'display_name': 'Agent Commissions', 'base_type': 'type/Decimal', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 8, 'nil%': 0.0}, 'type': {'type/Number': {'min': -4605.17, 'max': -559.88, 'avg': -2456.2200000000003, 'sd': 1588.5698661644424, 'q1': -3977.05, 'q3': -1189.01}}}}]",,2019-02-20 07:22:18.258,"{'table.pivot_column': 'total_clients', 'table.cell_column': 'total_clients'}"
False,,"{'id': 54, 'name': ""Aggelos Armenatzoglou's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 47, 'slug': 'aggelos_armenatzoglou_s_personal_collection'}",54.0,,2019-01-29 05:20:36.876,"{'email': 'aggelos@binary.com', 'first_name': 'Aggelos', 'last_login': '2019-08-26T09:03:21.572Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 47, 'last_name': 'Armenatzoglou', 'date_joined': '2018-12-31T08:35:18.786Z', 'common_name': 'Aggelos Armenatzoglou'}",47,9,"{'database': 9, 'type': 'native', 'native': {'query': 'select date(mt5_users.""Registration""), \nCount(Distinct(mt5_users.""Login"")) As Total_MT5_Signups,\nCount(Distinct(mt5_users.""Login"")) FILTER (Where mt5_users.""Country"" = \'Indonesia\') As Indonesia\n\nFrom mt5_users\nwhere date(mt5_users.""Registration"") >= \'2019-01-01\'\ngroup by date(mt5_users.""Registration"")\nOrder by date(mt5_users.""Registration"") DESC'}}",,line,,False,False,254,,YtD_MT5_signups,,native,,"[{'name': 'date', 'display_name': 'Date', 'base_type': 'type/Date', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 51, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-01T00:00:00.000Z', 'latest': '2019-02-20T00:00:00.000Z'}}}}, {'name': 'total_mt5_signups', 'display_name': 'Total Mt5 Sign Ups', 'base_type': 'type/Integer', 'special_type': 'type/Income', 'fingerprint': {'global': {'distinct-count': 37, 'nil%': 0.0}, 'type': {'type/Number': {'min': 24.0, 'max': 146.0, 'avg': 111.68627450980392, 'sd': 19.872081115050264, 'q1': 101.72474487139161, 'q3': 126.5}}}}, {'name': 'indonesia', 'display_name': 'Indonesia', 'base_type': 'type/Integer', 'special_type': None, 'fingerprint': {'global': {'distinct-count': 30, 'nil%': 0.0}, 'type': {'type/Number': {'min': 19.0, 'max': 67.0, 'avg': 39.294117647058826, 'sd': 11.20944979496685, 'q1': 29.870828693386972, 'q3': 46.54950975679639}}}}]",,2019-02-20 07:22:05.305,"{'graph.dimensions': ['date'], 'graph.metrics': ['total_mt5_signups', 'indonesia']}"
False,,"{'id': 73, 'name': ""Dwi Hadyan's Personal Collection"", 'description': None, 'color': '#31698A', 'archived': False, 'location': '/', 'personal_owner_id': 53, 'slug': 'dwi_hadyan_s_personal_collection'}",73.0,,2019-01-25 03:45:43.093,"{'email': 'dwi@binary.com', 'first_name': 'Dwi', 'last_login': '2019-06-21T06:57:40.046Z', 'is_qbnewb': False, 'is_superuser': False, 'id': 53, 'last_name': 'Hadyan', 'date_joined': '2019-01-24T02:54:53.692Z', 'common_name': 'Dwi Hadyan'}",53,2,"{'database': 2, 'type': 'native', 'native': {'query': ""select  date_joined::timestamp::date, count(loginid) from betonmarkets.client\nwhere date_joined::timestamp::date >= (now() - interval '10 days')::timestamp::date \nGROUP BY 1\nORDER BY 1 desc;""}}",From the past 10 days to Today,line,,False,False,226,,zz OLD CR Client Sign up,,native,,"[{'name': 'date_joined', 'display_name': 'Date Joined', 'base_type': 'type/Date', 'special_type': 'type/JoinDate', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/DateTime': {'earliest': '2019-01-18T00:00:00.000Z', 'latest': '2019-01-28T00:00:00.000Z'}}}}, {'name': 'count', 'display_name': 'Count', 'base_type': 'type/Integer', 'special_type': 'type/Quantity', 'fingerprint': {'global': {'distinct-count': 11, 'nil%': 0.0}, 'type': {'type/Number': {'min': 168.0, 'max': 644.0, 'avg': 518.0909090909091, 'sd': 127.87920436525602, 'q1': 509.5, 'q3': 580.75}}}}]",,2019-01-28 09:48:50.548,"{'series_settings': {'Count': {'color': '#EF8C8C'}}, 'graph.dimensions': ['date_joined'], 'graph.metrics': ['count']}"
